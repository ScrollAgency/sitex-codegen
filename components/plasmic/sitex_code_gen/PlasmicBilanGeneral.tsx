/* eslint-disable */
/* tslint:disable */
// @ts-nocheck
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: 341WB3S6fAjbZggAzyKhr1
// Component: _ocpplg0OoTw

import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";
import { useRouter } from "next/router";

import {
  Flex as Flex__,
  MultiChoiceArg,
  PlasmicDataSourceContextProvider as PlasmicDataSourceContextProvider__,
  PlasmicIcon as PlasmicIcon__,
  PlasmicImg as PlasmicImg__,
  PlasmicLink as PlasmicLink__,
  PlasmicPageGuard as PlasmicPageGuard__,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  Stack as Stack__,
  StrictProps,
  Trans as Trans__,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants,
  generateOnMutateForSpec,
  generateStateOnChangeProp,
  generateStateOnChangePropForCodeComponents,
  generateStateValueProp,
  get as $stateGet,
  hasVariant,
  initializeCodeComponentStates,
  initializePlasmicStates,
  makeFragment,
  omit,
  pick,
  renderPlasmicSlot,
  set as $stateSet,
  useCurrentUser,
  useDollarState,
  usePlasmicTranslator,
  useTrigger,
  wrapWithClassName
} from "@plasmicapp/react-web";
import {
  DataCtxReader as DataCtxReader__,
  useDataEnv,
  useGlobalActions
} from "@plasmicapp/react-web/lib/host";

import {
  executePlasmicDataOp,
  usePlasmicDataOp,
  usePlasmicInvalidate
} from "@plasmicapp/react-web/lib/data-sources";

import LeftMenu from "../../LeftMenu"; // plasmic-import: P7MLNCNmfe0b/component
import { TabsContainer } from "@plasmicpkgs/plasmic-tabs";
import Header from "../../Header"; // plasmic-import: 2eAt6bzh0iAt/component
import Button from "../../Button"; // plasmic-import: lcnlii-Mi9bF/component
import RetexMenu from "../../RetexMenu"; // plasmic-import: eOKvLoQY8qlH/component
import { TabContent } from "@plasmicpkgs/plasmic-tabs";
import { DataGrid } from "../../../plasmic-library/ui/data_grid"; // plasmic-import: UgPv5Wh-TKEv/codeComponent
import { BarChartMultiple } from "../../../plasmic-library/graphs/BarChartMultiple"; // plasmic-import: V_d7oFN3x1-d/codeComponent
import { RadialChart } from "../../../plasmic-library/graphs/RadialChart"; // plasmic-import: _d8f9T5hB7Rm/codeComponent
import Modal from "../../Modal"; // plasmic-import: 2dhqWpUZxzEb/component
import { FormWrapper } from "@plasmicpkgs/antd5/skinny/Form";
import { formHelpers as FormWrapper_Helpers } from "@plasmicpkgs/antd5/skinny/Form";
import { TextInput } from "../../../plasmic-library/forms/TextInput"; // plasmic-import: L-RrflTRMMhf/codeComponent
import { SitexTextInput } from "../../../plasmic-library/forms/SitexTextInput"; // plasmic-import: FXhuSzutgVdR/codeComponent
import { AntdDatePicker } from "@plasmicpkgs/antd5/skinny/registerDatePicker";
import { datePickerHelpers as AntdDatePicker_Helpers } from "@plasmicpkgs/antd5/skinny/registerDatePicker";
import { DropDown } from "../../../plasmic-library/forms/DropDown"; // plasmic-import: iAtbmaEieqny/codeComponent
import BottomMenu from "../../BottomMenu"; // plasmic-import: x-phPVP8sWsV/component
import { Fetcher } from "@plasmicapp/react-web/lib/data-sources";

import { useScreenVariants as useScreenVariantsjdkNhxaWnKvk } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: JdkNHXAWnKVK/globalVariant

import "@plasmicapp/react-web/lib/plasmic.css";

import plasmic_antd_5_hostless_css from "../antd_5_hostless/plasmic.module.css"; // plasmic-import: ohDidvG9XsCeFumugENU3J/projectcss
import projectcss from "./plasmic.module.css"; // plasmic-import: 341WB3S6fAjbZggAzyKhr1/projectcss
import sty from "./PlasmicBilanGeneral.module.css"; // plasmic-import: _ocpplg0OoTw/css

import SlidersHorizontalIcon from "./icons/PlasmicIcon__SlidersHorizontal"; // plasmic-import: yp2q2x7jxhyF/icon
import PlusIcon from "./icons/PlasmicIcon__Plus"; // plasmic-import: 7-eqbUfgKU33/icon
import ArrowUpIcon from "./icons/PlasmicIcon__ArrowUp"; // plasmic-import: S1C6ovH1DyOg/icon
import LinkSimpleIcon from "./icons/PlasmicIcon__LinkSimple"; // plasmic-import: j1hFSwL8QFW8/icon
import XIcon from "./icons/PlasmicIcon__X"; // plasmic-import: Ciiq3-41nfH3/icon
import CircleIcon from "./icons/PlasmicIcon__Circle"; // plasmic-import: GXxwbmvNEgwq/icon
import ChevronDownIcon from "./icons/PlasmicIcon__ChevronDown"; // plasmic-import: t_DMhjzzg7u-/icon
import OutlinedIcon from "./icons/PlasmicIcon__Outlined"; // plasmic-import: KSDVg8pxipFP/icon
import FilledIcon from "./icons/PlasmicIcon__Filled"; // plasmic-import: hf9VaFZryDjW/icon
import Outlined2Icon from "./icons/PlasmicIcon__Outlined2"; // plasmic-import: KUj1hb82lL9p/icon
import Filled2Icon from "./icons/PlasmicIcon__Filled2"; // plasmic-import: bV2Rhoi89Nbo/icon
import Outlined3Icon from "./icons/PlasmicIcon__Outlined3"; // plasmic-import: F-p0hJ-0w6np/icon
import Outlined4Icon from "./icons/PlasmicIcon__Outlined4"; // plasmic-import: 0betudEa-qOp/icon
import Filled3Icon from "./icons/PlasmicIcon__Filled3"; // plasmic-import: 0fyEdXS8b5qB/icon
import Outlined5Icon from "./icons/PlasmicIcon__Outlined5"; // plasmic-import: KELtri34ORgp/icon
import Filled4Icon from "./icons/PlasmicIcon__Filled4"; // plasmic-import: 8jxFG1oHtkw2/icon
import Outlined6Icon from "./icons/PlasmicIcon__Outlined6"; // plasmic-import: vsSe2R3hqp-H/icon
import Outlined7Icon from "./icons/PlasmicIcon__Outlined7"; // plasmic-import: 9CfLC5ZQ7veK/icon
import Outlined8Icon from "./icons/PlasmicIcon__Outlined8"; // plasmic-import: 4UmaWISAaqWp/icon
import Outlined9Icon from "./icons/PlasmicIcon__Outlined9"; // plasmic-import: PWnzGUKO-rFw/icon
import IcRoundPlusIcon from "./icons/PlasmicIcon__IcRoundPlus"; // plasmic-import: 8J79OcNmiVuF/icon
import Line9Icon from "./icons/PlasmicIcon__Line9"; // plasmic-import: IdP8XmyKAA75/icon
import IcTwotoneAppleIcon from "./icons/PlasmicIcon__IcTwotoneApple"; // plasmic-import: EW8lvp8Rllk4/icon
import MdiFacebookIcon from "./icons/PlasmicIcon__MdiFacebook"; // plasmic-import: b-hWlWAZSFUh/icon

createPlasmicElementProxy;

export type PlasmicBilanGeneral__VariantMembers = {};
export type PlasmicBilanGeneral__VariantsArgs = {};
type VariantPropType = keyof PlasmicBilanGeneral__VariantsArgs;
export const PlasmicBilanGeneral__VariantProps = new Array<VariantPropType>();

export type PlasmicBilanGeneral__ArgsType = {};
type ArgPropType = keyof PlasmicBilanGeneral__ArgsType;
export const PlasmicBilanGeneral__ArgProps = new Array<ArgPropType>();

export type PlasmicBilanGeneral__OverridesType = {
  root?: Flex__<"div">;
  accueilDashboard?: Flex__<"div">;
  leftMenu?: Flex__<typeof LeftMenu>;
  tabsContainer?: Flex__<typeof TabsContainer>;
  main?: Flex__<"div">;
  header?: Flex__<typeof Header>;
  frame1437253918?: Flex__<"div">;
  filters2?: Flex__<"div">;
  buttonFilter2?: Flex__<typeof Button>;
  retexMenu?: Flex__<typeof RetexMenu>;
  _1?: Flex__<typeof TabContent>;
  table3?: Flex__<"div">;
  dataGrid?: Flex__<typeof DataGrid>;
  kpIs?: Flex__<"div">;
  metricItem?: Flex__<"div">;
  headingAndDropdown?: Flex__<"div">;
  heading?: Flex__<"div">;
  numberAndChart?: Flex__<"div">;
  numberAndBadge?: Flex__<"div">;
  number?: Flex__<"div">;
  changeAndText?: Flex__<"div">;
  change?: Flex__<"div">;
  change2?: Flex__<"div">;
  text?: Flex__<"div">;
  metricItem2?: Flex__<"div">;
  headingAndDropdown2?: Flex__<"div">;
  heading2?: Flex__<"div">;
  numberAndChart2?: Flex__<"div">;
  numberAndBadge2?: Flex__<"div">;
  number2?: Flex__<"div">;
  changeAndText2?: Flex__<"div">;
  change3?: Flex__<"div">;
  change4?: Flex__<"div">;
  text2?: Flex__<"div">;
  metricItem3?: Flex__<"div">;
  headingAndDropdown3?: Flex__<"div">;
  heading3?: Flex__<"div">;
  numberAndChart3?: Flex__<"div">;
  numberAndBadge3?: Flex__<"div">;
  number3?: Flex__<"div">;
  changeAndText3?: Flex__<"div">;
  change5?: Flex__<"div">;
  change6?: Flex__<"div">;
  text3?: Flex__<"div">;
  metricItem4?: Flex__<"div">;
  headingAndDropdown4?: Flex__<"div">;
  heading4?: Flex__<"div">;
  numberAndChart4?: Flex__<"div">;
  numberAndBadge4?: Flex__<"div">;
  number4?: Flex__<"div">;
  changeAndText4?: Flex__<"div">;
  change7?: Flex__<"div">;
  change8?: Flex__<"div">;
  text4?: Flex__<"div">;
  metricItem5?: Flex__<"div">;
  headingAndDropdown5?: Flex__<"div">;
  heading5?: Flex__<"div">;
  numberAndChart5?: Flex__<"div">;
  numberAndBadge5?: Flex__<"div">;
  number5?: Flex__<"div">;
  changeAndText5?: Flex__<"div">;
  change9?: Flex__<"div">;
  change10?: Flex__<"div">;
  text105?: Flex__<"div">;
  metricItem6?: Flex__<"div">;
  headingAndDropdown6?: Flex__<"div">;
  heading6?: Flex__<"div">;
  numberAndChart6?: Flex__<"div">;
  numberAndBadge6?: Flex__<"div">;
  number6?: Flex__<"div">;
  changeAndText6?: Flex__<"div">;
  change11?: Flex__<"div">;
  change12?: Flex__<"div">;
  text106?: Flex__<"div">;
  barChartMultiple?: Flex__<typeof BarChartMultiple>;
  duplicate?: Flex__<typeof Modal>;
  frame1437254022?: Flex__<"div">;
  name9?: Flex__<"div">;
  frame1437254023?: Flex__<"div">;
  formDuplicateModel?: Flex__<typeof FormWrapper>;
  button?: Flex__<typeof Button>;
  content4?: Flex__<"div">;
  titre6?: Flex__<typeof TextInput>;
  texinput24?: Flex__<typeof SitexTextInput>;
  date4?: Flex__<"div">;
  label9?: Flex__<"div">;
  timePicker10?: Flex__<typeof AntdDatePicker>;
  type6?: Flex__<typeof DropDown>;
  budget6?: Flex__<typeof TextInput>;
  comments4?: Flex__<typeof TextInput>;
  input10?: Flex__<"div">;
  name8?: Flex__<"div">;
  datePickerWeb4?: Flex__<"div">;
  inputSelect4?: Flex__<"div">;
  signedByBaseFieldGroupSmall4?: Flex__<"div">;
  endDateCalendar4?: Flex__<"div">;
  inputElementTextField7?: Flex__<"div">;
  signedByBaseInputElementTextFieldSmallEnabled4?: Flex__<"div">;
  leadingArtworkContainer13?: Flex__<"div">;
  leadingArtwork7?: Flex__<"div">;
  leadingLabelContainer13?: Flex__<"div">;
  leadingLabel13?: Flex__<"div">;
  signedByBaseTypographyLabelSmall7?: Flex__<"div">;
  text80?: Flex__<"div">;
  spacer73?: Flex__<"div">;
  inputElementContentText13?: Flex__<"div">;
  signedByBaseInputElementContentTextSmallOff4?: Flex__<"div">;
  text81?: Flex__<"div">;
  trailingLabelEnhancer13?: Flex__<"div">;
  trailingLabel13?: Flex__<"div">;
  signedByBaseTypographyLabelSmall8?: Flex__<"div">;
  text82?: Flex__<"div">;
  spacer74?: Flex__<"div">;
  trailingArtworkContainer13?: Flex__<"div">;
  trailingArtwork13?: Flex__<"div">;
  calendar4?: Flex__<"div">;
  signedByBaseInputElementSelectXSmallWebSingleDefaultEnabled4?: Flex__<"div">;
  leadingArtworkContainer14?: Flex__<"div">;
  text83?: Flex__<"div">;
  leadingLabelContainer14?: Flex__<"div">;
  leadingLabel14?: Flex__<"div">;
  signedByBaseTypographyLabelXSmall7?: Flex__<"div">;
  text84?: Flex__<"div">;
  spacer75?: Flex__<"div">;
  inputElementContentText14?: Flex__<"div">;
  signedByBaseInputElementContentTextXSmallWebOff4?: Flex__<"div">;
  text85?: Flex__<"div">;
  trailingLabelEnhancer14?: Flex__<"div">;
  trailingLabel14?: Flex__<"div">;
  signedByBaseTypographyLabelXSmall8?: Flex__<"div">;
  text86?: Flex__<"div">;
  spacer76?: Flex__<"div">;
  trailingArtworkContainer14?: Flex__<"div">;
  trailingArtwork14?: Flex__<"div">;
  selectIndicatorContainer7?: Flex__<"div">;
  chevronIcon7?: Flex__<"div">;
  inputElementHint7?: Flex__<"div">;
  heart31?: Flex__<"div">;
  hint7?: Flex__<"div">;
  signedByBaseTypographyParagraphSmall7?: Flex__<"div">;
  text87?: Flex__<"div">;
  spacer77?: Flex__<"div">;
  inputElementSelect4?: Flex__<"div">;
  signedByBaseInputElementSelectMediumSingleDefaultActive4?: Flex__<"div">;
  selectFrame4?: Flex__<"div">;
  leadingArtworkContainer15?: Flex__<"div">;
  leadingArtwork8?: Flex__<"div">;
  leadingLabelContainer15?: Flex__<"div">;
  leadingLabel15?: Flex__<"div">;
  signedByBaseTypographyLabelMedium19?: Flex__<"div">;
  text88?: Flex__<"div">;
  spacer78?: Flex__<"div">;
  inputElementContentText15?: Flex__<"div">;
  signedByBaseInputElementContentTextMediumOff7?: Flex__<"div">;
  text89?: Flex__<"div">;
  trailingLabelEnhancer15?: Flex__<"div">;
  trailingLabel15?: Flex__<"div">;
  signedByBaseTypographyLabelMedium20?: Flex__<"div">;
  text90?: Flex__<"div">;
  spacer79?: Flex__<"div">;
  trailingArtworkContainer15?: Flex__<"div">;
  trailingArtwork15?: Flex__<"div">;
  selectIndicatorContainer8?: Flex__<"div">;
  chevronIcon8?: Flex__<"div">;
  menu4?: Flex__<"div">;
  signedByBaseMenuListMedium4?: Flex__<"div">;
  menuItem16?: Flex__<"div">;
  signedByBaseMenuItemSearchMediumNoneEnabled4?: Flex__<"div">;
  searchField4?: Flex__<"div">;
  signedByBaseSearchFieldMediumEnabled4?: Flex__<"div">;
  inputElementLabel4?: Flex__<"div">;
  signedByBaseInputElementLabelMedium4?: Flex__<"div">;
  typography43?: Flex__<"div">;
  signedByBaseTypographyLabelMedium21?: Flex__<"div">;
  text91?: Flex__<"div">;
  spacer80?: Flex__<"div">;
  characterCountFrame4?: Flex__<"div">;
  heart32?: Flex__<"div">;
  typography44?: Flex__<"div">;
  signedByBaseTypographyLabelMedium22?: Flex__<"div">;
  text92?: Flex__<"div">;
  spacer81?: Flex__<"div">;
  inputElementTextField8?: Flex__<"div">;
  signedByBaseInputElementTextFieldMediumEnabled4?: Flex__<"div">;
  leadingArtworkContainer16?: Flex__<"div">;
  search4?: Flex__<"div">;
  leadingLabelContainer16?: Flex__<"div">;
  leadingLabel16?: Flex__<"div">;
  signedByBaseTypographyLabelMedium23?: Flex__<"div">;
  text93?: Flex__<"div">;
  spacer82?: Flex__<"div">;
  inputElementContentText16?: Flex__<"div">;
  signedByBaseInputElementContentTextMediumOff8?: Flex__<"div">;
  text94?: Flex__<"div">;
  trailingLabelEnhancer16?: Flex__<"div">;
  trailingLabel16?: Flex__<"div">;
  signedByBaseTypographyLabelMedium24?: Flex__<"div">;
  text95?: Flex__<"div">;
  spacer83?: Flex__<"div">;
  trailingArtworkContainer16?: Flex__<"div">;
  trailingArtwork16?: Flex__<"div">;
  inputElementHint8?: Flex__<"div">;
  heart33?: Flex__<"div">;
  hint8?: Flex__<"div">;
  signedByBaseTypographyParagraphSmall8?: Flex__<"div">;
  text96?: Flex__<"div">;
  spacer84?: Flex__<"div">;
  menuItem17?: Flex__<"div">;
  signedByBaseMenuItemOptionMediumStandardEnabled13?: Flex__<"div">;
  menuItemControlMediumCheckboxUnchecked13?: Flex__<"div">;
  signedByBaseMenuItemControlMediumCheckboxUnchecked13?: Flex__<"div">;
  icon13?: Flex__<"div">;
  leadingEnhancer13?: Flex__<"div">;
  heart34?: Flex__<"div">;
  textFrame13?: Flex__<"div">;
  leadingText13?: Flex__<"div">;
  typography45?: Flex__<"div">;
  signedByBaseTypographyParagraphMedium37?: Flex__<"div">;
  text97?: Flex__<"div">;
  spacer85?: Flex__<"div">;
  typography46?: Flex__<"div">;
  signedByBaseTypographyParagraphMedium38?: Flex__<"div">;
  text98?: Flex__<"div">;
  spacer86?: Flex__<"div">;
  typography47?: Flex__<"div">;
  signedByBaseTypographyParagraphMedium39?: Flex__<"div">;
  spacer87?: Flex__<"div">;
  trailingEnhancer13?: Flex__<"div">;
  heart35?: Flex__<"div">;
  menuItem18?: Flex__<"div">;
  signedByBaseMenuItemOptionMediumStandardEnabled14?: Flex__<"div">;
  menuItemControlMediumCheckboxUnchecked14?: Flex__<"div">;
  signedByBaseMenuItemControlMediumCheckboxUnchecked14?: Flex__<"div">;
  icon14?: Flex__<"div">;
  leadingEnhancer14?: Flex__<"div">;
  heart36?: Flex__<"div">;
  textFrame14?: Flex__<"div">;
  leadingText14?: Flex__<"div">;
  typography48?: Flex__<"div">;
  signedByBaseTypographyParagraphMedium40?: Flex__<"div">;
  text99?: Flex__<"div">;
  spacer88?: Flex__<"div">;
  typography49?: Flex__<"div">;
  signedByBaseTypographyParagraphMedium41?: Flex__<"div">;
  text100?: Flex__<"div">;
  spacer89?: Flex__<"div">;
  typography50?: Flex__<"div">;
  signedByBaseTypographyParagraphMedium42?: Flex__<"div">;
  spacer90?: Flex__<"div">;
  trailingEnhancer14?: Flex__<"div">;
  checkmarkSmall4?: Flex__<"div">;
  menuItem19?: Flex__<"div">;
  signedByBaseMenuItemOptionMediumStandardEnabled15?: Flex__<"div">;
  menuItemControlMediumCheckboxUnchecked15?: Flex__<"div">;
  signedByBaseMenuItemControlMediumCheckboxUnchecked15?: Flex__<"div">;
  icon15?: Flex__<"div">;
  leadingEnhancer15?: Flex__<"div">;
  heart37?: Flex__<"div">;
  textFrame15?: Flex__<"div">;
  leadingText15?: Flex__<"div">;
  typography51?: Flex__<"div">;
  signedByBaseTypographyParagraphMedium43?: Flex__<"div">;
  text101?: Flex__<"div">;
  spacer91?: Flex__<"div">;
  typography52?: Flex__<"div">;
  signedByBaseTypographyParagraphMedium44?: Flex__<"div">;
  text102?: Flex__<"div">;
  spacer92?: Flex__<"div">;
  typography53?: Flex__<"div">;
  signedByBaseTypographyParagraphMedium45?: Flex__<"div">;
  spacer93?: Flex__<"div">;
  trailingEnhancer15?: Flex__<"div">;
  heart38?: Flex__<"div">;
  menuItem20?: Flex__<"div">;
  signedByBaseMenuItemOptionMediumStandardEnabled16?: Flex__<"div">;
  menuItemControlMediumCheckboxUnchecked16?: Flex__<"div">;
  signedByBaseMenuItemControlMediumCheckboxUnchecked16?: Flex__<"div">;
  icon16?: Flex__<"div">;
  leadingEnhancer16?: Flex__<"div">;
  heart39?: Flex__<"div">;
  textFrame16?: Flex__<"div">;
  leadingText16?: Flex__<"div">;
  typography54?: Flex__<"div">;
  signedByBaseTypographyParagraphMedium46?: Flex__<"div">;
  text103?: Flex__<"div">;
  spacer94?: Flex__<"div">;
  typography55?: Flex__<"div">;
  signedByBaseTypographyParagraphMedium47?: Flex__<"div">;
  text104?: Flex__<"div">;
  spacer95?: Flex__<"div">;
  typography56?: Flex__<"div">;
  signedByBaseTypographyParagraphMedium48?: Flex__<"div">;
  spacer96?: Flex__<"div">;
  trailingEnhancer16?: Flex__<"div">;
  heart40?: Flex__<"div">;
  scrollBar4?: Flex__<"div">;
  model6?: Flex__<typeof DropDown>;
  buttons4?: Flex__<"div">;
  button13?: Flex__<typeof Button>;
  frame1073713927?: Flex__<"div">;
  frame1073713933?: Flex__<"div">;
  button14?: Flex__<typeof Button>;
  button15?: Flex__<"div">;
  button16?: Flex__<"div">;
  _2?: Flex__<typeof TabContent>;
  bottomMenu?: Flex__<typeof BottomMenu>;
};

export interface DefaultBilanGeneralProps {}

const $$ = {};

function useNextRouter() {
  try {
    return useRouter();
  } catch {}
  return undefined;
}

function PlasmicBilanGeneral__RenderFunc(props: {
  variants: PlasmicBilanGeneral__VariantsArgs;
  args: PlasmicBilanGeneral__ArgsType;
  overrides: PlasmicBilanGeneral__OverridesType;
  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;

  const args = React.useMemo(
    () =>
      Object.assign(
        {},
        Object.fromEntries(
          Object.entries(props.args).filter(([_, v]) => v !== undefined)
        )
      ),
    [props.args]
  );

  const $props = {
    ...args,
    ...variants
  };

  const __nextRouter = useNextRouter();

  const $ctx = useDataEnv?.() || {};
  const refsRef = React.useRef({});
  const $refs = refsRef.current;

  let [$queries, setDollarQueries] = React.useState<
    Record<string, ReturnType<typeof usePlasmicDataOp>>
  >({});
  const stateSpecs: Parameters<typeof useDollarState>[0] = React.useMemo(
    () => [
      {
        path: "newRetex",
        type: "private",
        variableType: "boolean",
        initFunc: ({ $props, $state, $queries, $ctx }) => false
      },
      {
        path: "editRetex",
        type: "private",
        variableType: "boolean",
        initFunc: ({ $props, $state, $queries, $ctx }) => false
      },
      {
        path: "retexId",
        type: "private",
        variableType: "number",
        initFunc: ({ $props, $state, $queries, $ctx }) => 0
      },
      {
        path: "deleteRetex2",
        type: "private",
        variableType: "boolean",
        initFunc: ({ $props, $state, $queries, $ctx }) => false
      },
      {
        path: "header.operationId",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => 0
      },
      {
        path: "header.runsheet",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => "Runsheet"
      },
      {
        path: "leftMenu.subMenuParams",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined
      },
      {
        path: "duplicate.isOpen",
        type: "private",
        variableType: "boolean",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined
      },
      {
        path: "formDuplicateModel.value",
        type: "private",
        variableType: "object",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined,

        refName: "formDuplicateModel",
        onMutate: generateOnMutateForSpec("value", FormWrapper_Helpers)
      },
      {
        path: "formDuplicateModel.isSubmitting",
        type: "private",
        variableType: "boolean",
        initFunc: ({ $props, $state, $queries, $ctx }) => false,

        refName: "formDuplicateModel",
        onMutate: generateOnMutateForSpec("isSubmitting", FormWrapper_Helpers)
      },
      {
        path: "texinput24.value",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined
      },
      {
        path: "texinput24.isInputValid",
        type: "private",
        variableType: "boolean",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined
      },
      {
        path: "timePicker10.value",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined,

        onMutate: generateOnMutateForSpec("value", AntdDatePicker_Helpers)
      },
      {
        path: "header.mois",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) =>
          (() => {
            try {
              return $ctx.currentTabKey == 1 ? "Général" : "Opérations";
            } catch (e) {
              if (
                e instanceof TypeError ||
                e?.plasmicType === "PlasmicUndefinedDataError"
              ) {
                return undefined;
              }
              throw e;
            }
          })()
      },
      {
        path: "retexDate",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) =>
          (() => {
            try {
              return $state.header.mois === "Opérations"
                ? new Date().toISOString().slice(0, 7)
                : $state.header.mois;
            } catch (e) {
              if (
                e instanceof TypeError ||
                e?.plasmicType === "PlasmicUndefinedDataError"
              ) {
                return undefined;
              }
              throw e;
            }
          })()
      },
      {
        path: "header.userClientId",
        type: "private",
        variableType: "number",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined
      }
    ],
    [$props, $ctx, $refs]
  );
  const $state = useDollarState(stateSpecs, {
    $props,
    $ctx,
    $queries: $queries,
    $refs
  });

  const new$Queries: Record<string, ReturnType<typeof usePlasmicDataOp>> = {
    rtxOperations: usePlasmicDataOp(() => {
      return {
        sourceId: "v6umJuHyep6kPNyCAJjouT",
        opId: "f9688e88-d1d0-4858-9b87-dcc33f8a3ac7",
        userArgs: {
          filters: [$state.header.userClientId]
        },
        cacheKey: `plasmic.$.f9688e88-d1d0-4858-9b87-dcc33f8a3ac7.$.`,
        invalidatedKeys: null,
        roleId: null
      };
    }),
    rtxFeedbacks: usePlasmicDataOp(() => {
      return {
        sourceId: "v6umJuHyep6kPNyCAJjouT",
        opId: "16653eb4-1aa1-4678-bdc7-71d44b9511a8",
        userArgs: {
          query: [$state.header.userClientId]
        },
        cacheKey: `plasmic.$.16653eb4-1aa1-4678-bdc7-71d44b9511a8.$.`,
        invalidatedKeys: null,
        roleId: null
      };
    }),
    retex: usePlasmicDataOp(() => {
      return {
        sourceId: "8BDg6iB9tWhTHhLhnaXBWU",
        opId: "9c826d13-e97f-4cce-930c-3b9e67f25bbc",
        userArgs: {
          params: [$state.retexDate]
        },
        cacheKey: `plasmic.$.9c826d13-e97f-4cce-930c-3b9e67f25bbc.$.`,
        invalidatedKeys: null,
        roleId: null
      };
    })
  };
  if (Object.keys(new$Queries).some(k => new$Queries[k] !== $queries[k])) {
    setDollarQueries(new$Queries);

    $queries = new$Queries;
  }

  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariantsjdkNhxaWnKvk()
  });

  return (
    <React.Fragment>
      <Head>
        <meta name="twitter:card" content="summary" />
        <title key="title">{PlasmicBilanGeneral.pageMetadata.title}</title>
        <meta
          key="og:title"
          property="og:title"
          content={PlasmicBilanGeneral.pageMetadata.title}
        />
        <meta
          key="twitter:title"
          name="twitter:title"
          content={PlasmicBilanGeneral.pageMetadata.title}
        />
      </Head>

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div
        data-plasmic-name={"root"}
        data-plasmic-override={overrides.root}
        data-plasmic-root={true}
        data-plasmic-for-node={forNode}
        className={classNames(
          projectcss.all,
          projectcss.root_reset,
          projectcss.plasmic_default_styles,
          projectcss.plasmic_mixins,
          projectcss.plasmic_tokens,
          plasmic_antd_5_hostless_css.plasmic_tokens,
          sty.root
        )}
      >
        <div
          data-plasmic-name={"accueilDashboard"}
          data-plasmic-override={overrides.accueilDashboard}
          className={classNames(projectcss.all, sty.accueilDashboard)}
        >
          <LeftMenu
            data-plasmic-name={"leftMenu"}
            data-plasmic-override={overrides.leftMenu}
            className={classNames("__wab_instance", sty.leftMenu)}
            onSubMenuParamsChange={async (...eventArgs: any) => {
              generateStateOnChangeProp($state, [
                "leftMenu",
                "subMenuParams"
              ]).apply(null, eventArgs);

              if (
                eventArgs.length > 1 &&
                eventArgs[1] &&
                eventArgs[1]._plasmic_state_init_
              ) {
                return;
              }
            }}
          />

          <TabsContainer
            data-plasmic-name={"tabsContainer"}
            data-plasmic-override={overrides.tabsContainer}
            initialKey={(() => {
              try {
                return 1;
              } catch (e) {
                if (
                  e instanceof TypeError ||
                  e?.plasmicType === "PlasmicUndefinedDataError"
                ) {
                  return undefined;
                }
                throw e;
              }
            })()}
            previewKey={(() => {
              try {
                return 1;
              } catch (e) {
                if (
                  e instanceof TypeError ||
                  e?.plasmicType === "PlasmicUndefinedDataError"
                ) {
                  return undefined;
                }
                throw e;
              }
            })()}
          >
            <DataCtxReader__>
              {$ctx => (
                <div
                  data-plasmic-name={"main"}
                  data-plasmic-override={overrides.main}
                  className={classNames(projectcss.all, sty.main)}
                >
                  <Header
                    data-plasmic-name={"header"}
                    data-plasmic-override={overrides.header}
                    className={classNames("__wab_instance", sty.header)}
                    onMoisChange={async (...eventArgs: any) => {
                      generateStateOnChangeProp($state, [
                        "header",
                        "mois"
                      ]).apply(null, eventArgs);

                      if (
                        eventArgs.length > 1 &&
                        eventArgs[1] &&
                        eventArgs[1]._plasmic_state_init_
                      ) {
                        return;
                      }
                    }}
                    onOperationIdChange2={async (...eventArgs: any) => {
                      generateStateOnChangeProp($state, [
                        "header",
                        "operationId"
                      ]).apply(null, eventArgs);

                      if (
                        eventArgs.length > 1 &&
                        eventArgs[1] &&
                        eventArgs[1]._plasmic_state_init_
                      ) {
                        return;
                      }
                    }}
                    onRunsheetChange={async (...eventArgs: any) => {
                      generateStateOnChangeProp($state, [
                        "header",
                        "runsheet"
                      ]).apply(null, eventArgs);

                      if (
                        eventArgs.length > 1 &&
                        eventArgs[1] &&
                        eventArgs[1]._plasmic_state_init_
                      ) {
                        return;
                      }
                    }}
                    onUserClientIdChange={async (...eventArgs: any) => {
                      generateStateOnChangeProp($state, [
                        "header",
                        "userClientId"
                      ]).apply(null, eventArgs);

                      if (
                        eventArgs.length > 1 &&
                        eventArgs[1] &&
                        eventArgs[1]._plasmic_state_init_
                      ) {
                        return;
                      }
                    }}
                    operationId={generateStateValueProp($state, [
                      "header",
                      "operationId"
                    ])}
                    runsheet={generateStateValueProp($state, [
                      "header",
                      "runsheet"
                    ])}
                  />

                  <Stack__
                    as={"div"}
                    data-plasmic-name={"frame1437253918"}
                    data-plasmic-override={overrides.frame1437253918}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.frame1437253918)}
                  >
                    <Stack__
                      as={"div"}
                      data-plasmic-name={"filters2"}
                      data-plasmic-override={overrides.filters2}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.filters2)}
                    >
                      <Button
                        data-plasmic-name={"buttonFilter2"}
                        data-plasmic-override={overrides.buttonFilter2}
                        className={classNames(
                          "__wab_instance",
                          sty.buttonFilter2
                        )}
                        disabled={true}
                        end={
                          <PlusIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg___6Af4H
                            )}
                            role={"img"}
                          />
                        }
                        iconStart={true}
                        label={
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text___8HBlc
                            )}
                          >
                            {"Configurer"}
                          </div>
                        }
                        start={
                          <SlidersHorizontalIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg__hfR9
                            )}
                            role={"img"}
                          />
                        }
                        type={"secondary"}
                      />
                    </Stack__>
                    <RetexMenu
                      data-plasmic-name={"retexMenu"}
                      data-plasmic-override={overrides.retexMenu}
                      className={classNames("__wab_instance", sty.retexMenu)}
                      submenu={"general"}
                    />

                    <TabContent
                      data-plasmic-name={"_1"}
                      data-plasmic-override={overrides._1}
                      className={classNames("__wab_instance", sty._1)}
                      tabKey={(() => {
                        try {
                          return 1;
                        } catch (e) {
                          if (
                            e instanceof TypeError ||
                            e?.plasmicType === "PlasmicUndefinedDataError"
                          ) {
                            return undefined;
                          }
                          throw e;
                        }
                      })()}
                    >
                      <Stack__
                        as={"div"}
                        data-plasmic-name={"table3"}
                        data-plasmic-override={overrides.table3}
                        hasGap={true}
                        className={classNames(projectcss.all, sty.table3)}
                      >
                        <DataGrid
                          data-plasmic-name={"dataGrid"}
                          data-plasmic-override={overrides.dataGrid}
                          className={classNames("__wab_instance", sty.dataGrid)}
                          columnLabels={{}}
                          currentPage={1}
                          emptyStateMessage={"Aucune donnée disponible"}
                          enableColumnReordering={true}
                          enableExport={false}
                          enablePrint={false}
                          exportFormats={"excel"}
                          monetaryColumns={["budget"]}
                          numericColumns={["budget"]}
                          onDeleteClick={async taskId => {
                            const $steps = {};

                            $steps["updateDeleteRetex2"] = true
                              ? (() => {
                                  const actionArgs = {
                                    variable: {
                                      objRoot: $state,
                                      variablePath: ["deleteRetex2"]
                                    },
                                    operation: 0,
                                    value: true
                                  };
                                  return (({
                                    variable,
                                    value,
                                    startIndex,
                                    deleteCount
                                  }) => {
                                    if (!variable) {
                                      return;
                                    }
                                    const { objRoot, variablePath } = variable;

                                    $stateSet(objRoot, variablePath, value);
                                    return value;
                                  })?.apply(null, [actionArgs]);
                                })()
                              : undefined;
                            if (
                              $steps["updateDeleteRetex2"] != null &&
                              typeof $steps["updateDeleteRetex2"] ===
                                "object" &&
                              typeof $steps["updateDeleteRetex2"].then ===
                                "function"
                            ) {
                              $steps["updateDeleteRetex2"] = await $steps[
                                "updateDeleteRetex2"
                              ];
                            }

                            $steps["updateRetexId"] = true
                              ? (() => {
                                  const actionArgs = {
                                    variable: {
                                      objRoot: $state,
                                      variablePath: ["retexId"]
                                    },
                                    operation: 0,
                                    value: taskId
                                  };
                                  return (({
                                    variable,
                                    value,
                                    startIndex,
                                    deleteCount
                                  }) => {
                                    if (!variable) {
                                      return;
                                    }
                                    const { objRoot, variablePath } = variable;

                                    $stateSet(objRoot, variablePath, value);
                                    return value;
                                  })?.apply(null, [actionArgs]);
                                })()
                              : undefined;
                            if (
                              $steps["updateRetexId"] != null &&
                              typeof $steps["updateRetexId"] === "object" &&
                              typeof $steps["updateRetexId"].then === "function"
                            ) {
                              $steps["updateRetexId"] = await $steps[
                                "updateRetexId"
                              ];
                            }
                          }}
                          onEditClick={async taskId => {
                            const $steps = {};

                            $steps["updateEditRetex"] = true
                              ? (() => {
                                  const actionArgs = {
                                    variable: {
                                      objRoot: $state,
                                      variablePath: ["editRetex"]
                                    },
                                    operation: 0,
                                    value: true
                                  };
                                  return (({
                                    variable,
                                    value,
                                    startIndex,
                                    deleteCount
                                  }) => {
                                    if (!variable) {
                                      return;
                                    }
                                    const { objRoot, variablePath } = variable;

                                    $stateSet(objRoot, variablePath, value);
                                    return value;
                                  })?.apply(null, [actionArgs]);
                                })()
                              : undefined;
                            if (
                              $steps["updateEditRetex"] != null &&
                              typeof $steps["updateEditRetex"] === "object" &&
                              typeof $steps["updateEditRetex"].then ===
                                "function"
                            ) {
                              $steps["updateEditRetex"] = await $steps[
                                "updateEditRetex"
                              ];
                            }

                            $steps["updateRetexId"] = true
                              ? (() => {
                                  const actionArgs = {
                                    variable: {
                                      objRoot: $state,
                                      variablePath: ["retexId"]
                                    },
                                    operation: 0,
                                    value: taskId
                                  };
                                  return (({
                                    variable,
                                    value,
                                    startIndex,
                                    deleteCount
                                  }) => {
                                    if (!variable) {
                                      return;
                                    }
                                    const { objRoot, variablePath } = variable;

                                    $stateSet(objRoot, variablePath, value);
                                    return value;
                                  })?.apply(null, [actionArgs]);
                                })()
                              : undefined;
                            if (
                              $steps["updateRetexId"] != null &&
                              typeof $steps["updateRetexId"] === "object" &&
                              typeof $steps["updateRetexId"].then === "function"
                            ) {
                              $steps["updateRetexId"] = await $steps[
                                "updateRetexId"
                              ];
                            }
                          }}
                          pageSize={10}
                          pdfTitle={"Sitex - Commande"}
                          responsive={{
                            minWidth: "100%",
                            horizontalOverflow: "auto",
                            verticalOverflow: "auto",
                            stickyHeader: true,
                            compactOnMobile: true,
                            breakpoint: 768
                          }}
                          showActions={true}
                          tasks={(() => {
                            try {
                              return $queries.rtxFeedbacks.data.map(
                                ({ id, title, operation_id, feedback }) => ({
                                  id: Number(id),
                                  Opération: title,
                                  "Opération ID": operation_id,
                                  Retour: feedback
                                })
                              );
                            } catch (e) {
                              if (
                                e instanceof TypeError ||
                                e?.plasmicType === "PlasmicUndefinedDataError"
                              ) {
                                return [];
                              }
                              throw e;
                            }
                          })()}
                          theme={{
                            headerBgColor: "#ECE6DF",
                            rowBgColor: "#ffffff",
                            hoverBgColor: "#f9f5ff",
                            borderColor: "#d9cdbf",
                            textColor: "#333333",
                            fontSize: "14px",
                            dragHandleColor: "#6B21A8"
                          }}
                        />
                      </Stack__>
                      <Stack__
                        as={"div"}
                        data-plasmic-name={"kpIs"}
                        data-plasmic-override={overrides.kpIs}
                        hasGap={true}
                        className={classNames(projectcss.all, sty.kpIs)}
                      >
                        <Stack__
                          as={"div"}
                          data-plasmic-name={"metricItem"}
                          data-plasmic-override={overrides.metricItem}
                          hasGap={true}
                          className={classNames(projectcss.all, sty.metricItem)}
                        >
                          <Stack__
                            as={"div"}
                            data-plasmic-name={"headingAndDropdown"}
                            data-plasmic-override={overrides.headingAndDropdown}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.headingAndDropdown
                            )}
                          >
                            <div
                              data-plasmic-name={"heading"}
                              data-plasmic-override={overrides.heading}
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.heading
                              )}
                            >
                              {"Total Entr\u00e9es"}
                            </div>
                          </Stack__>
                          <Stack__
                            as={"div"}
                            data-plasmic-name={"numberAndChart"}
                            data-plasmic-override={overrides.numberAndChart}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.numberAndChart
                            )}
                          >
                            <Stack__
                              as={"div"}
                              data-plasmic-name={"numberAndBadge"}
                              data-plasmic-override={overrides.numberAndBadge}
                              hasGap={true}
                              className={classNames(
                                projectcss.all,
                                sty.numberAndBadge
                              )}
                            >
                              <div
                                data-plasmic-name={"number"}
                                data-plasmic-override={overrides.number}
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.number
                                )}
                              >
                                <React.Fragment>
                                  {(() => {
                                    try {
                                      return $queries.retex.data.response
                                        .current.total_entries;
                                    } catch (e) {
                                      if (
                                        e instanceof TypeError ||
                                        e?.plasmicType ===
                                          "PlasmicUndefinedDataError"
                                      ) {
                                        return "2,420";
                                      }
                                      throw e;
                                    }
                                  })()}
                                </React.Fragment>
                              </div>
                              <Stack__
                                as={"div"}
                                data-plasmic-name={"changeAndText"}
                                data-plasmic-override={overrides.changeAndText}
                                hasGap={true}
                                className={classNames(
                                  projectcss.all,
                                  sty.changeAndText
                                )}
                              >
                                <Stack__
                                  as={"div"}
                                  data-plasmic-name={"change"}
                                  data-plasmic-override={overrides.change}
                                  hasGap={true}
                                  className={classNames(
                                    projectcss.all,
                                    sty.change
                                  )}
                                >
                                  <ArrowUpIcon
                                    className={classNames(
                                      projectcss.all,
                                      sty.svg__laPiJ
                                    )}
                                    role={"img"}
                                    style={(() => {
                                      try {
                                        return {
                                          color:
                                            $queries.retex.data.response
                                              .evolution.total_entries > 0
                                              ? "#027A48" // vert
                                              : $queries.retex.data.response
                                                  .evolution.total_entries < 0
                                              ? "#B42318" // rouge
                                              : "#475467", // gris foncé
                                          transform:
                                            $queries.retex.data.response
                                              .evolution.total_entries > 0
                                              ? "rotate(0deg)"
                                              : $queries.retex.data.response
                                                  .evolution.total_entries < 0
                                              ? "rotate(180deg)"
                                              : "rotate(90deg)",
                                          display: "inline-block"
                                        };
                                      } catch (e) {
                                        if (
                                          e instanceof TypeError ||
                                          e?.plasmicType ===
                                            "PlasmicUndefinedDataError"
                                        ) {
                                          return undefined;
                                        }
                                        throw e;
                                      }
                                    })()}
                                  />

                                  <div
                                    data-plasmic-name={"change2"}
                                    data-plasmic-override={overrides.change2}
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.__wab_text,
                                      sty.change2
                                    )}
                                    style={(() => {
                                      try {
                                        return {
                                          color:
                                            $queries.retex.data.response
                                              .evolution.total_entries > 0
                                              ? "#027A48" // vert
                                              : $queries.retex.data.response
                                                  .evolution.total_entries < 0
                                              ? "#B42318" // rouge
                                              : "#475467" // gris foncé
                                        };
                                      } catch (e) {
                                        if (
                                          e instanceof TypeError ||
                                          e?.plasmicType ===
                                            "PlasmicUndefinedDataError"
                                        ) {
                                          return undefined;
                                        }
                                        throw e;
                                      }
                                    })()}
                                  >
                                    <React.Fragment>
                                      {(() => {
                                        try {
                                          return (
                                            Math.abs(
                                              $queries.retex.data.response
                                                .evolution.total_entries
                                            ) + "%"
                                          );
                                        } catch (e) {
                                          if (
                                            e instanceof TypeError ||
                                            e?.plasmicType ===
                                              "PlasmicUndefinedDataError"
                                          ) {
                                            return "40%";
                                          }
                                          throw e;
                                        }
                                      })()}
                                    </React.Fragment>
                                  </div>
                                </Stack__>
                                <div
                                  data-plasmic-name={"text"}
                                  data-plasmic-override={overrides.text}
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.__wab_text,
                                    sty.text
                                  )}
                                >
                                  {"vs mois dernier"}
                                </div>
                              </Stack__>
                            </Stack__>
                          </Stack__>
                        </Stack__>
                        <Stack__
                          as={"div"}
                          data-plasmic-name={"metricItem2"}
                          data-plasmic-override={overrides.metricItem2}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.metricItem2
                          )}
                        >
                          <Stack__
                            as={"div"}
                            data-plasmic-name={"headingAndDropdown2"}
                            data-plasmic-override={
                              overrides.headingAndDropdown2
                            }
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.headingAndDropdown2
                            )}
                          >
                            <div
                              data-plasmic-name={"heading2"}
                              data-plasmic-override={overrides.heading2}
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.heading2
                              )}
                            >
                              {"Total Codes Rouges & Noirs"}
                            </div>
                          </Stack__>
                          <Stack__
                            as={"div"}
                            data-plasmic-name={"numberAndChart2"}
                            data-plasmic-override={overrides.numberAndChart2}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.numberAndChart2
                            )}
                          >
                            <Stack__
                              as={"div"}
                              data-plasmic-name={"numberAndBadge2"}
                              data-plasmic-override={overrides.numberAndBadge2}
                              hasGap={true}
                              className={classNames(
                                projectcss.all,
                                sty.numberAndBadge2
                              )}
                            >
                              <div
                                data-plasmic-name={"number2"}
                                data-plasmic-override={overrides.number2}
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.number2
                                )}
                              >
                                <React.Fragment>
                                  {(() => {
                                    try {
                                      return $queries.retex.data.response
                                        .current.code_rouges_noirs;
                                    } catch (e) {
                                      if (
                                        e instanceof TypeError ||
                                        e?.plasmicType ===
                                          "PlasmicUndefinedDataError"
                                      ) {
                                        return "2,420";
                                      }
                                      throw e;
                                    }
                                  })()}
                                </React.Fragment>
                              </div>
                              <Stack__
                                as={"div"}
                                data-plasmic-name={"changeAndText2"}
                                data-plasmic-override={overrides.changeAndText2}
                                hasGap={true}
                                className={classNames(
                                  projectcss.all,
                                  sty.changeAndText2
                                )}
                              >
                                <Stack__
                                  as={"div"}
                                  data-plasmic-name={"change3"}
                                  data-plasmic-override={overrides.change3}
                                  hasGap={true}
                                  className={classNames(
                                    projectcss.all,
                                    sty.change3
                                  )}
                                >
                                  <ArrowUpIcon
                                    className={classNames(
                                      projectcss.all,
                                      sty.svg__eqzC
                                    )}
                                    role={"img"}
                                    style={(() => {
                                      try {
                                        return {
                                          color:
                                            $queries.retex.data.response
                                              .evolution.code_rouges_noirs > 0
                                              ? "#027A48" // vert
                                              : $queries.retex.data.response
                                                  .evolution.code_rouges_noirs <
                                                0
                                              ? "#B42318" // rouge
                                              : "#475467", // gris foncé
                                          transform:
                                            $queries.retex.data.response
                                              .evolution.code_rouges_noirs > 0
                                              ? "rotate(0deg)"
                                              : $queries.retex.data.response
                                                  .evolution.code_rouges_noirs <
                                                0
                                              ? "rotate(180deg)"
                                              : "rotate(90deg)",
                                          display: "inline-block"
                                        };
                                      } catch (e) {
                                        if (
                                          e instanceof TypeError ||
                                          e?.plasmicType ===
                                            "PlasmicUndefinedDataError"
                                        ) {
                                          return undefined;
                                        }
                                        throw e;
                                      }
                                    })()}
                                  />

                                  <div
                                    data-plasmic-name={"change4"}
                                    data-plasmic-override={overrides.change4}
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.__wab_text,
                                      sty.change4
                                    )}
                                    style={(() => {
                                      try {
                                        return {
                                          color:
                                            $queries.retex.data.response
                                              .evolution.code_rouges_noirs > 0
                                              ? "#027A48" // vert
                                              : $queries.retex.data.response
                                                  .evolution.code_rouges_noirs <
                                                0
                                              ? "#B42318" // rouge
                                              : "#475467" // gris foncé
                                        };
                                      } catch (e) {
                                        if (
                                          e instanceof TypeError ||
                                          e?.plasmicType ===
                                            "PlasmicUndefinedDataError"
                                        ) {
                                          return undefined;
                                        }
                                        throw e;
                                      }
                                    })()}
                                  >
                                    <React.Fragment>
                                      {(() => {
                                        try {
                                          return (
                                            Math.abs(
                                              $queries.retex.data.response
                                                .evolution.code_rouges_noirs
                                            ) + "%"
                                          );
                                        } catch (e) {
                                          if (
                                            e instanceof TypeError ||
                                            e?.plasmicType ===
                                              "PlasmicUndefinedDataError"
                                          ) {
                                            return "40%";
                                          }
                                          throw e;
                                        }
                                      })()}
                                    </React.Fragment>
                                  </div>
                                </Stack__>
                                <div
                                  data-plasmic-name={"text2"}
                                  data-plasmic-override={overrides.text2}
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.__wab_text,
                                    sty.text2
                                  )}
                                >
                                  {"vs mois dernier"}
                                </div>
                              </Stack__>
                            </Stack__>
                          </Stack__>
                        </Stack__>
                        <Stack__
                          as={"div"}
                          data-plasmic-name={"metricItem3"}
                          data-plasmic-override={overrides.metricItem3}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.metricItem3
                          )}
                        >
                          <Stack__
                            as={"div"}
                            data-plasmic-name={"headingAndDropdown3"}
                            data-plasmic-override={
                              overrides.headingAndDropdown3
                            }
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.headingAndDropdown3
                            )}
                          >
                            <div
                              data-plasmic-name={"heading3"}
                              data-plasmic-override={overrides.heading3}
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.heading3
                              )}
                            >
                              {"Total Regards Particuliers"}
                            </div>
                          </Stack__>
                          <Stack__
                            as={"div"}
                            data-plasmic-name={"numberAndChart3"}
                            data-plasmic-override={overrides.numberAndChart3}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.numberAndChart3
                            )}
                          >
                            <Stack__
                              as={"div"}
                              data-plasmic-name={"numberAndBadge3"}
                              data-plasmic-override={overrides.numberAndBadge3}
                              hasGap={true}
                              className={classNames(
                                projectcss.all,
                                sty.numberAndBadge3
                              )}
                            >
                              <div
                                data-plasmic-name={"number3"}
                                data-plasmic-override={overrides.number3}
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.number3
                                )}
                              >
                                <React.Fragment>
                                  {(() => {
                                    try {
                                      return $queries.retex.data.response
                                        .current.regards_particuliers;
                                    } catch (e) {
                                      if (
                                        e instanceof TypeError ||
                                        e?.plasmicType ===
                                          "PlasmicUndefinedDataError"
                                      ) {
                                        return "2,420";
                                      }
                                      throw e;
                                    }
                                  })()}
                                </React.Fragment>
                              </div>
                              <Stack__
                                as={"div"}
                                data-plasmic-name={"changeAndText3"}
                                data-plasmic-override={overrides.changeAndText3}
                                hasGap={true}
                                className={classNames(
                                  projectcss.all,
                                  sty.changeAndText3
                                )}
                              >
                                <Stack__
                                  as={"div"}
                                  data-plasmic-name={"change5"}
                                  data-plasmic-override={overrides.change5}
                                  hasGap={true}
                                  className={classNames(
                                    projectcss.all,
                                    sty.change5
                                  )}
                                >
                                  <ArrowUpIcon
                                    className={classNames(
                                      projectcss.all,
                                      sty.svg__p9Qw5
                                    )}
                                    role={"img"}
                                    style={(() => {
                                      try {
                                        return {
                                          color:
                                            $queries.retex.data.response
                                              .evolution.regards_particuliers >
                                            0
                                              ? "#027A48" // vert
                                              : $queries.retex.data.response
                                                  .evolution
                                                  .regards_particuliers < 0
                                              ? "#B42318" // rouge
                                              : "#475467", // gris foncé
                                          transform:
                                            $queries.retex.data.response
                                              .evolution.regards_particuliers >
                                            0
                                              ? "rotate(0deg)"
                                              : $queries.retex.data.response
                                                  .evolution
                                                  .regards_particuliers < 0
                                              ? "rotate(180deg)"
                                              : "rotate(90deg)",
                                          display: "inline-block"
                                        };
                                      } catch (e) {
                                        if (
                                          e instanceof TypeError ||
                                          e?.plasmicType ===
                                            "PlasmicUndefinedDataError"
                                        ) {
                                          return undefined;
                                        }
                                        throw e;
                                      }
                                    })()}
                                  />

                                  <div
                                    data-plasmic-name={"change6"}
                                    data-plasmic-override={overrides.change6}
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.__wab_text,
                                      sty.change6
                                    )}
                                    style={(() => {
                                      try {
                                        return {
                                          color:
                                            $queries.retex.data.response
                                              .evolution.regards_particuliers >
                                            0
                                              ? "#027A48" // vert
                                              : $queries.retex.data.response
                                                  .evolution
                                                  .regards_particuliers < 0
                                              ? "#B42318" // rouge
                                              : "#475467" // gris foncé
                                        };
                                      } catch (e) {
                                        if (
                                          e instanceof TypeError ||
                                          e?.plasmicType ===
                                            "PlasmicUndefinedDataError"
                                        ) {
                                          return undefined;
                                        }
                                        throw e;
                                      }
                                    })()}
                                  >
                                    <React.Fragment>
                                      {(() => {
                                        try {
                                          return (
                                            Math.abs(
                                              $queries.retex.data.response
                                                .evolution.regards_particuliers
                                            ) + "%"
                                          );
                                        } catch (e) {
                                          if (
                                            e instanceof TypeError ||
                                            e?.plasmicType ===
                                              "PlasmicUndefinedDataError"
                                          ) {
                                            return "40%";
                                          }
                                          throw e;
                                        }
                                      })()}
                                    </React.Fragment>
                                  </div>
                                </Stack__>
                                <div
                                  data-plasmic-name={"text3"}
                                  data-plasmic-override={overrides.text3}
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.__wab_text,
                                    sty.text3
                                  )}
                                >
                                  {"vs mois dernier"}
                                </div>
                              </Stack__>
                            </Stack__>
                          </Stack__>
                        </Stack__>
                        <Stack__
                          as={"div"}
                          data-plasmic-name={"metricItem4"}
                          data-plasmic-override={overrides.metricItem4}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.metricItem4
                          )}
                        >
                          <Stack__
                            as={"div"}
                            data-plasmic-name={"headingAndDropdown4"}
                            data-plasmic-override={
                              overrides.headingAndDropdown4
                            }
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.headingAndDropdown4
                            )}
                          >
                            <div
                              data-plasmic-name={"heading4"}
                              data-plasmic-override={overrides.heading4}
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.heading4
                              )}
                            >
                              {"Total Suivi"}
                            </div>
                          </Stack__>
                          <Stack__
                            as={"div"}
                            data-plasmic-name={"numberAndChart4"}
                            data-plasmic-override={overrides.numberAndChart4}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.numberAndChart4
                            )}
                          >
                            <Stack__
                              as={"div"}
                              data-plasmic-name={"numberAndBadge4"}
                              data-plasmic-override={overrides.numberAndBadge4}
                              hasGap={true}
                              className={classNames(
                                projectcss.all,
                                sty.numberAndBadge4
                              )}
                            >
                              <div
                                data-plasmic-name={"number4"}
                                data-plasmic-override={overrides.number4}
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.number4
                                )}
                              >
                                <React.Fragment>
                                  {(() => {
                                    try {
                                      return $queries.retex.data.response
                                        .current.suivi;
                                    } catch (e) {
                                      if (
                                        e instanceof TypeError ||
                                        e?.plasmicType ===
                                          "PlasmicUndefinedDataError"
                                      ) {
                                        return "2,420";
                                      }
                                      throw e;
                                    }
                                  })()}
                                </React.Fragment>
                              </div>
                              <Stack__
                                as={"div"}
                                data-plasmic-name={"changeAndText4"}
                                data-plasmic-override={overrides.changeAndText4}
                                hasGap={true}
                                className={classNames(
                                  projectcss.all,
                                  sty.changeAndText4
                                )}
                              >
                                <Stack__
                                  as={"div"}
                                  data-plasmic-name={"change7"}
                                  data-plasmic-override={overrides.change7}
                                  hasGap={true}
                                  className={classNames(
                                    projectcss.all,
                                    sty.change7
                                  )}
                                >
                                  <ArrowUpIcon
                                    className={classNames(
                                      projectcss.all,
                                      sty.svg__rfZy0
                                    )}
                                    role={"img"}
                                    style={(() => {
                                      try {
                                        return {
                                          color:
                                            $queries.retex.data.response
                                              .evolution.suivi > 0
                                              ? "#027A48" // vert
                                              : $queries.retex.data.response
                                                  .evolution.suivi < 0
                                              ? "#B42318" // rouge
                                              : "#475467", // gris foncé
                                          transform:
                                            $queries.retex.data.response
                                              .evolution.suivi > 0
                                              ? "rotate(0deg)"
                                              : $queries.retex.data.response
                                                  .evolution.suivi < 0
                                              ? "rotate(180deg)"
                                              : "rotate(90deg)",
                                          display: "inline-block"
                                        };
                                      } catch (e) {
                                        if (
                                          e instanceof TypeError ||
                                          e?.plasmicType ===
                                            "PlasmicUndefinedDataError"
                                        ) {
                                          return undefined;
                                        }
                                        throw e;
                                      }
                                    })()}
                                  />

                                  <div
                                    data-plasmic-name={"change8"}
                                    data-plasmic-override={overrides.change8}
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.__wab_text,
                                      sty.change8
                                    )}
                                    sty={(() => {
                                      try {
                                        return {
                                          color:
                                            $queries.retex.data.response
                                              .evolution.suivi > 0
                                              ? "#027A48" // vert
                                              : $queries.retex.data.response
                                                  .evolution.suivi < 0
                                              ? "#B42318" // rouge
                                              : "#475467" // gris foncé
                                        };
                                      } catch (e) {
                                        if (
                                          e instanceof TypeError ||
                                          e?.plasmicType ===
                                            "PlasmicUndefinedDataError"
                                        ) {
                                          return undefined;
                                        }
                                        throw e;
                                      }
                                    })()}
                                  >
                                    <React.Fragment>
                                      {(() => {
                                        try {
                                          return (
                                            Math.abs(
                                              $queries.retex.data.response
                                                .evolution.suivi
                                            ) + "%"
                                          );
                                        } catch (e) {
                                          if (
                                            e instanceof TypeError ||
                                            e?.plasmicType ===
                                              "PlasmicUndefinedDataError"
                                          ) {
                                            return "40%";
                                          }
                                          throw e;
                                        }
                                      })()}
                                    </React.Fragment>
                                  </div>
                                </Stack__>
                                <div
                                  data-plasmic-name={"text4"}
                                  data-plasmic-override={overrides.text4}
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.__wab_text,
                                    sty.text4
                                  )}
                                >
                                  {"vs mois dernier"}
                                </div>
                              </Stack__>
                            </Stack__>
                          </Stack__>
                        </Stack__>
                        <Stack__
                          as={"div"}
                          data-plasmic-name={"metricItem5"}
                          data-plasmic-override={overrides.metricItem5}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.metricItem5
                          )}
                        >
                          <Stack__
                            as={"div"}
                            data-plasmic-name={"headingAndDropdown5"}
                            data-plasmic-override={
                              overrides.headingAndDropdown5
                            }
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.headingAndDropdown5
                            )}
                          >
                            <div
                              data-plasmic-name={"heading5"}
                              data-plasmic-override={overrides.heading5}
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.heading5
                              )}
                            >
                              {"Total Interventions"}
                            </div>
                          </Stack__>
                          <Stack__
                            as={"div"}
                            data-plasmic-name={"numberAndChart5"}
                            data-plasmic-override={overrides.numberAndChart5}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.numberAndChart5
                            )}
                          >
                            <Stack__
                              as={"div"}
                              data-plasmic-name={"numberAndBadge5"}
                              data-plasmic-override={overrides.numberAndBadge5}
                              hasGap={true}
                              className={classNames(
                                projectcss.all,
                                sty.numberAndBadge5
                              )}
                            >
                              <div
                                data-plasmic-name={"number5"}
                                data-plasmic-override={overrides.number5}
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.number5
                                )}
                              >
                                <React.Fragment>
                                  {(() => {
                                    try {
                                      return $queries.retex.data.response
                                        .current.interventions;
                                    } catch (e) {
                                      if (
                                        e instanceof TypeError ||
                                        e?.plasmicType ===
                                          "PlasmicUndefinedDataError"
                                      ) {
                                        return "2,420";
                                      }
                                      throw e;
                                    }
                                  })()}
                                </React.Fragment>
                              </div>
                              <Stack__
                                as={"div"}
                                data-plasmic-name={"changeAndText5"}
                                data-plasmic-override={overrides.changeAndText5}
                                hasGap={true}
                                className={classNames(
                                  projectcss.all,
                                  sty.changeAndText5
                                )}
                              >
                                <Stack__
                                  as={"div"}
                                  data-plasmic-name={"change9"}
                                  data-plasmic-override={overrides.change9}
                                  hasGap={true}
                                  className={classNames(
                                    projectcss.all,
                                    sty.change9
                                  )}
                                >
                                  <ArrowUpIcon
                                    className={classNames(
                                      projectcss.all,
                                      sty.svg__lnabV
                                    )}
                                    role={"img"}
                                    style={(() => {
                                      try {
                                        return {
                                          color:
                                            $queries.retex.data.response
                                              .evolution.interventions > 0
                                              ? "#027A48" // vert
                                              : $queries.retex.data.response
                                                  .evolution.interventions < 0
                                              ? "#B42318" // rouge
                                              : "#475467", // gris foncé
                                          transform:
                                            $queries.retex.data.response
                                              .evolution.interventions > 0
                                              ? "rotate(0deg)"
                                              : $queries.retex.data.response
                                                  .evolution.interventions < 0
                                              ? "rotate(180deg)"
                                              : "rotate(90deg)",
                                          display: "inline-block"
                                        };
                                      } catch (e) {
                                        if (
                                          e instanceof TypeError ||
                                          e?.plasmicType ===
                                            "PlasmicUndefinedDataError"
                                        ) {
                                          return undefined;
                                        }
                                        throw e;
                                      }
                                    })()}
                                  />

                                  <div
                                    data-plasmic-name={"change10"}
                                    data-plasmic-override={overrides.change10}
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.__wab_text,
                                      sty.change10
                                    )}
                                    style={(() => {
                                      try {
                                        return {
                                          color:
                                            $queries.retex.data.response
                                              .evolution.interventions > 0
                                              ? "#027A48" // vert
                                              : $queries.retex.data.response
                                                  .evolution.interventions < 0
                                              ? "#B42318" // rouge
                                              : "#475467" // gris foncé
                                        };
                                      } catch (e) {
                                        if (
                                          e instanceof TypeError ||
                                          e?.plasmicType ===
                                            "PlasmicUndefinedDataError"
                                        ) {
                                          return undefined;
                                        }
                                        throw e;
                                      }
                                    })()}
                                  >
                                    <React.Fragment>
                                      {(() => {
                                        try {
                                          return (
                                            Math.abs(
                                              $queries.retex.data.response
                                                .evolution.interventions
                                            ) + "%"
                                          );
                                        } catch (e) {
                                          if (
                                            e instanceof TypeError ||
                                            e?.plasmicType ===
                                              "PlasmicUndefinedDataError"
                                          ) {
                                            return "40%";
                                          }
                                          throw e;
                                        }
                                      })()}
                                    </React.Fragment>
                                  </div>
                                </Stack__>
                                <div
                                  data-plasmic-name={"text105"}
                                  data-plasmic-override={overrides.text105}
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.__wab_text,
                                    sty.text105
                                  )}
                                >
                                  {"vs mois dernier"}
                                </div>
                              </Stack__>
                            </Stack__>
                          </Stack__>
                        </Stack__>
                        <Stack__
                          as={"div"}
                          data-plasmic-name={"metricItem6"}
                          data-plasmic-override={overrides.metricItem6}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.metricItem6
                          )}
                        >
                          <Stack__
                            as={"div"}
                            data-plasmic-name={"headingAndDropdown6"}
                            data-plasmic-override={
                              overrides.headingAndDropdown6
                            }
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.headingAndDropdown6
                            )}
                          >
                            <div
                              data-plasmic-name={"heading6"}
                              data-plasmic-override={overrides.heading6}
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.heading6
                              )}
                            >
                              {"Total code 51"}
                            </div>
                          </Stack__>
                          <Stack__
                            as={"div"}
                            data-plasmic-name={"numberAndChart6"}
                            data-plasmic-override={overrides.numberAndChart6}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.numberAndChart6
                            )}
                          >
                            <Stack__
                              as={"div"}
                              data-plasmic-name={"numberAndBadge6"}
                              data-plasmic-override={overrides.numberAndBadge6}
                              hasGap={true}
                              className={classNames(
                                projectcss.all,
                                sty.numberAndBadge6
                              )}
                            >
                              <div
                                data-plasmic-name={"number6"}
                                data-plasmic-override={overrides.number6}
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.number6
                                )}
                              >
                                <React.Fragment>
                                  {(() => {
                                    try {
                                      return $queries.retex.data.response
                                        .current.code_51;
                                    } catch (e) {
                                      if (
                                        e instanceof TypeError ||
                                        e?.plasmicType ===
                                          "PlasmicUndefinedDataError"
                                      ) {
                                        return "2,420";
                                      }
                                      throw e;
                                    }
                                  })()}
                                </React.Fragment>
                              </div>
                              <Stack__
                                as={"div"}
                                data-plasmic-name={"changeAndText6"}
                                data-plasmic-override={overrides.changeAndText6}
                                hasGap={true}
                                className={classNames(
                                  projectcss.all,
                                  sty.changeAndText6
                                )}
                              >
                                <Stack__
                                  as={"div"}
                                  data-plasmic-name={"change11"}
                                  data-plasmic-override={overrides.change11}
                                  hasGap={true}
                                  className={classNames(
                                    projectcss.all,
                                    sty.change11
                                  )}
                                >
                                  <ArrowUpIcon
                                    className={classNames(
                                      projectcss.all,
                                      sty.svg__tItfB
                                    )}
                                    role={"img"}
                                    style={(() => {
                                      try {
                                        return {
                                          color:
                                            $queries.retex.data.response
                                              .evolution.code_51 > 0
                                              ? "#027A48" // vert
                                              : $queries.retex.data.response
                                                  .evolution.code_51 < 0
                                              ? "#B42318" // rouge
                                              : "#475467", // gris foncé
                                          transform:
                                            $queries.retex.data.response
                                              .evolution.code_51 > 0
                                              ? "rotate(0deg)"
                                              : $queries.retex.data.response
                                                  .evolution.code_51 < 0
                                              ? "rotate(180deg)"
                                              : "rotate(90deg)",
                                          display: "inline-block"
                                        };
                                      } catch (e) {
                                        if (
                                          e instanceof TypeError ||
                                          e?.plasmicType ===
                                            "PlasmicUndefinedDataError"
                                        ) {
                                          return undefined;
                                        }
                                        throw e;
                                      }
                                    })()}
                                  />

                                  <div
                                    data-plasmic-name={"change12"}
                                    data-plasmic-override={overrides.change12}
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.__wab_text,
                                      sty.change12
                                    )}
                                    style={(() => {
                                      try {
                                        return {
                                          color:
                                            $queries.retex.data.response
                                              .evolution.code_51 > 0
                                              ? "#027A48" // vert
                                              : $queries.retex.data.response
                                                  .evolution.code_51 < 0
                                              ? "#B42318" // rouge
                                              : "#475467" // gris foncé
                                        };
                                      } catch (e) {
                                        if (
                                          e instanceof TypeError ||
                                          e?.plasmicType ===
                                            "PlasmicUndefinedDataError"
                                        ) {
                                          return undefined;
                                        }
                                        throw e;
                                      }
                                    })()}
                                  >
                                    <React.Fragment>
                                      {(() => {
                                        try {
                                          return (
                                            Math.abs(
                                              $queries.retex.data.response
                                                .evolution.code_51
                                            ) + "%"
                                          );
                                        } catch (e) {
                                          if (
                                            e instanceof TypeError ||
                                            e?.plasmicType ===
                                              "PlasmicUndefinedDataError"
                                          ) {
                                            return "40%";
                                          }
                                          throw e;
                                        }
                                      })()}
                                    </React.Fragment>
                                  </div>
                                </Stack__>
                                <div
                                  data-plasmic-name={"text106"}
                                  data-plasmic-override={overrides.text106}
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.__wab_text,
                                    sty.text106
                                  )}
                                >
                                  {"vs mois dernier"}
                                </div>
                              </Stack__>
                            </Stack__>
                          </Stack__>
                        </Stack__>
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__v5NEy
                          )}
                        >
                          <BarChartMultiple
                            data-plasmic-name={"barChartMultiple"}
                            data-plasmic-override={overrides.barChartMultiple}
                            data={{
                              xAxisKey: "month",
                              datasets: [
                                {
                                  key: "desktop",
                                  label: "Desktop",
                                  color: "#6366F1"
                                },
                                {
                                  key: "mobile",
                                  label: "Mobile",
                                  color: "#22C55E"
                                }
                              ],
                              items: [
                                { month: "January", desktop: 186, mobile: 80 },
                                {
                                  month: "February",
                                  desktop: 305,
                                  mobile: 200
                                },
                                { month: "March", desktop: 237, mobile: 120 },
                                { month: "April", desktop: 73, mobile: 190 },
                                { month: "May", desktop: 209, mobile: 130 },
                                { month: "June", desktop: 214, mobile: 140 }
                              ]
                            }}
                            description={"Depuis le d\u00e9but"}
                            height={400}
                            title={"Total clients"}
                            width={600}
                          />
                        </div>
                        <RadialChart
                          data={(() => {
                            try {
                              return Object.entries(
                                $queries.retex.data.response.dominantes || {}
                              )
                                .filter(([label, value]) => value > 0)
                                .slice(0, 5)
                                .map(([label, value], index) => ({
                                  label,
                                  value,
                                  color: `hsl(${(index * 60) % 360}, 60%, 50%)`
                                }));
                            } catch (e) {
                              if (
                                e instanceof TypeError ||
                                e?.plasmicType === "PlasmicUndefinedDataError"
                              ) {
                                return [
                                  {
                                    label: "Chrome",
                                    value: 275,
                                    color: "hsl(240, 60%, 50%)"
                                  },
                                  {
                                    label: "Safari",
                                    value: 200,
                                    color: "hsl(120, 60%, 45%)"
                                  },
                                  {
                                    label: "Firefox",
                                    value: 187,
                                    color: "hsl(30, 80%, 55%)"
                                  },
                                  {
                                    label: "Edge",
                                    value: 173,
                                    color: "hsl(270, 60%, 50%)"
                                  },
                                  {
                                    label: "Other",
                                    value: 90,
                                    color: "hsl(200, 60%, 50%)"
                                  }
                                ];
                              }
                              throw e;
                            }
                          })()}
                          description={``}
                          height={400}
                          mode={"radial"}
                          title={"Dominantes"}
                          width={400}
                        />

                        <RadialChart
                          data={(() => {
                            try {
                              return (() => {
                                const impactCounts =
                                  $queries.retex.data.response.impact || {};
                                const impactOrdered = [
                                  {
                                    label: "Noir",
                                    value:
                                      (impactCounts.true ||
                                        impactCounts["true"] ||
                                        0) +
                                      Object.entries(impactCounts)
                                        .filter(
                                          ([key]) =>
                                            typeof key === "string" &&
                                            key.startsWith("5")
                                        )
                                        .reduce((sum, [, val]) => sum + val, 0),
                                    color: "#43454D"
                                  },
                                  {
                                    label: "Rouge",
                                    value: Object.entries(impactCounts)
                                      .filter(
                                        ([key]) =>
                                          typeof key === "string" &&
                                          key.startsWith("4")
                                      )
                                      .reduce((sum, [, val]) => sum + val, 0),
                                    color: "#E20A37"
                                  },
                                  {
                                    label: "Orange",
                                    value: Object.entries(impactCounts)
                                      .filter(
                                        ([key]) =>
                                          typeof key === "string" &&
                                          key.startsWith("3")
                                      )
                                      .reduce((sum, [, val]) => sum + val, 0),
                                    color: "#FF7F37"
                                  },
                                  {
                                    label: "Jaune",
                                    value: Object.entries(impactCounts)
                                      .filter(
                                        ([key]) =>
                                          typeof key === "string" &&
                                          key.startsWith("2")
                                      )
                                      .reduce((sum, [, val]) => sum + val, 0),
                                    color: "#FFD66B"
                                  },
                                  {
                                    label: "Blanc",
                                    value: Object.entries(impactCounts)
                                      .filter(
                                        ([key]) =>
                                          typeof key === "string" &&
                                          !["2", "3", "4", "5"].some(prefix =>
                                            key.startsWith(prefix)
                                          ) &&
                                          key !== "true"
                                      )
                                      .reduce((sum, [, val]) => sum + val, 0),
                                    color: "#EAEAEC"
                                  }
                                ].filter(item => item.value > 0);
                                return impactOrdered;
                              })();
                            } catch (e) {
                              if (
                                e instanceof TypeError ||
                                e?.plasmicType === "PlasmicUndefinedDataError"
                              ) {
                                return [
                                  {
                                    label: "Chrome",
                                    value: 275,
                                    color: "hsl(240, 60%, 50%)"
                                  },
                                  {
                                    label: "Safari",
                                    value: 200,
                                    color: "hsl(120, 60%, 45%)"
                                  },
                                  {
                                    label: "Firefox",
                                    value: 187,
                                    color: "hsl(30, 80%, 55%)"
                                  },
                                  {
                                    label: "Edge",
                                    value: 173,
                                    color: "hsl(270, 60%, 50%)"
                                  },
                                  {
                                    label: "Other",
                                    value: 90,
                                    color: "hsl(200, 60%, 50%)"
                                  }
                                ];
                              }
                              throw e;
                            }
                          })()}
                          description={``}
                          height={400}
                          mode={"pie"}
                          title={"Impact/Priorit\u00e9"}
                          width={400}
                        />
                      </Stack__>
                      <Modal
                        data-plasmic-name={"duplicate"}
                        data-plasmic-override={overrides.duplicate}
                        className={classNames("__wab_instance", sty.duplicate)}
                        closeOnBackdropClick={true}
                        content={
                          <React.Fragment>
                            {(() => {
                              const child$Props = {
                                className: classNames(
                                  "__wab_instance",
                                  sty.formDuplicateModel
                                ),
                                extendedOnValuesChange: async (
                                  ...eventArgs: any
                                ) => {
                                  generateStateOnChangePropForCodeComponents(
                                    $state,
                                    "value",
                                    ["formDuplicateModel", "value"],
                                    FormWrapper_Helpers
                                  ).apply(null, eventArgs);
                                },
                                formItems: [
                                  {
                                    label: "Name",
                                    name: "name",
                                    inputType: "Text"
                                  },
                                  {
                                    label: "Message",
                                    name: "message",
                                    inputType: "Text Area"
                                  }
                                ],
                                labelCol: { span: 8, horizontalOnly: true },
                                layout: "vertical",
                                mode: "advanced",
                                onIsSubmittingChange: async (
                                  ...eventArgs: any
                                ) => {
                                  generateStateOnChangePropForCodeComponents(
                                    $state,
                                    "isSubmitting",
                                    ["formDuplicateModel", "isSubmitting"],
                                    FormWrapper_Helpers
                                  ).apply(null, eventArgs);
                                },
                                ref: ref => {
                                  $refs["formDuplicateModel"] = ref;
                                },
                                submitSlot: null,
                                wrapperCol: { span: 16, horizontalOnly: true }
                              };
                              initializeCodeComponentStates(
                                $state,
                                [
                                  {
                                    name: "value",
                                    plasmicStateName: "formDuplicateModel.value"
                                  },
                                  {
                                    name: "isSubmitting",
                                    plasmicStateName:
                                      "formDuplicateModel.isSubmitting"
                                  }
                                ],
                                [],
                                FormWrapper_Helpers ?? {},
                                child$Props
                              );

                              return (
                                <FormWrapper
                                  data-plasmic-name={"formDuplicateModel"}
                                  data-plasmic-override={
                                    overrides.formDuplicateModel
                                  }
                                  {...child$Props}
                                >
                                  <Button
                                    data-plasmic-name={"button"}
                                    data-plasmic-override={overrides.button}
                                    className={classNames(
                                      "__wab_instance",
                                      sty.button
                                    )}
                                    label={
                                      <div
                                        className={classNames(
                                          projectcss.all,
                                          projectcss.__wab_text,
                                          sty.text__taq4
                                        )}
                                      >
                                        {"Dupliquer"}
                                      </div>
                                    }
                                    submitsForm={true}
                                  />
                                </FormWrapper>
                              );
                            })()}
                            <Stack__
                              as={"div"}
                              data-plasmic-name={"content4"}
                              data-plasmic-override={overrides.content4}
                              hasGap={true}
                              className={classNames(
                                projectcss.all,
                                sty.content4
                              )}
                            >
                              <TextInput
                                data-plasmic-name={"titre6"}
                                data-plasmic-override={overrides.titre6}
                                className={classNames(
                                  "__wab_instance",
                                  sty.titre6
                                )}
                                isMulti={false}
                                label={"Titre*"}
                                placeholder={"Titre*"}
                                showIcon={false}
                                showLabel={true}
                                state={"default"}
                                text={``}
                                type={"text"}
                              />

                              <SitexTextInput
                                data-plasmic-name={"texinput24"}
                                data-plasmic-override={overrides.texinput24}
                                className={classNames(
                                  "__wab_instance",
                                  sty.texinput24
                                )}
                                initialValue={generateStateValueProp($state, [
                                  "texinput24",
                                  "value"
                                ])}
                                onTextChange={async (...eventArgs: any) => {
                                  generateStateOnChangeProp($state, [
                                    "texinput24",
                                    "value"
                                  ]).apply(null, eventArgs);
                                }}
                                onValidationChange={async (
                                  ...eventArgs: any
                                ) => {
                                  generateStateOnChangeProp($state, [
                                    "texinput24",
                                    "isInputValid"
                                  ]).apply(null, eventArgs);
                                }}
                                placeholder={"Titre*"}
                                prefixedText={"Titre*"}
                                required={true}
                                type={"text"}
                              />

                              <Stack__
                                as={"div"}
                                data-plasmic-name={"date4"}
                                data-plasmic-override={overrides.date4}
                                hasGap={true}
                                className={classNames(
                                  projectcss.all,
                                  sty.date4
                                )}
                              >
                                <div
                                  data-plasmic-name={"label9"}
                                  data-plasmic-override={overrides.label9}
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.__wab_text,
                                    sty.label9
                                  )}
                                >
                                  {"Date et heure de d\u00e9but"}
                                </div>
                                {(() => {
                                  const child$Props = {
                                    allowClear: true,
                                    className: classNames(
                                      "__wab_instance",
                                      sty.timePicker10
                                    ),
                                    onChange: async (...eventArgs: any) => {
                                      generateStateOnChangePropForCodeComponents(
                                        $state,
                                        "value",
                                        ["timePicker10", "value"],
                                        AntdDatePicker_Helpers
                                      ).apply(null, eventArgs);
                                    },
                                    popupScopeClassName:
                                      sty["timePicker10__datePickerPopup"],
                                    showTime: true,
                                    value: generateStateValueProp($state, [
                                      "timePicker10",
                                      "value"
                                    ])
                                  };
                                  initializeCodeComponentStates(
                                    $state,
                                    [
                                      {
                                        name: "value",
                                        plasmicStateName: "timePicker10.value"
                                      }
                                    ],
                                    [],
                                    AntdDatePicker_Helpers ?? {},
                                    child$Props
                                  );

                                  return (
                                    <AntdDatePicker
                                      data-plasmic-name={"timePicker10"}
                                      data-plasmic-override={
                                        overrides.timePicker10
                                      }
                                      {...child$Props}
                                    />
                                  );
                                })()}
                              </Stack__>
                              <DropDown
                                data-plasmic-name={"type6"}
                                data-plasmic-override={overrides.type6}
                                check={false}
                                className={classNames(
                                  "__wab_instance",
                                  sty.type6
                                )}
                                label={"Type"}
                                options={["Default", "Special"]}
                                showLabel={true}
                                state={"default"}
                                type={"default"}
                              />

                              <TextInput
                                data-plasmic-name={"budget6"}
                                data-plasmic-override={overrides.budget6}
                                className={classNames(
                                  "__wab_instance",
                                  sty.budget6
                                )}
                                isMulti={false}
                                label={"Budget"}
                                placeholder={"\u20ac"}
                                showIcon={false}
                                showLabel={true}
                                state={"default"}
                                text={""}
                                type={"text"}
                              />

                              <TextInput
                                data-plasmic-name={"comments4"}
                                data-plasmic-override={overrides.comments4}
                                className={classNames(
                                  "__wab_instance",
                                  sty.comments4
                                )}
                                isMulti={false}
                                label={"Commentaires"}
                                placeholder={"Commentaires"}
                                showIcon={false}
                                showLabel={true}
                                state={"Placeholder"}
                                text={""}
                                type={"TextArea"}
                              />

                              {false ? (
                                <Stack__
                                  as={"div"}
                                  data-plasmic-name={"input10"}
                                  data-plasmic-override={overrides.input10}
                                  hasGap={true}
                                  className={classNames(
                                    projectcss.all,
                                    sty.input10
                                  )}
                                >
                                  <div
                                    data-plasmic-name={"name8"}
                                    data-plasmic-override={overrides.name8}
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.__wab_text,
                                      sty.name8
                                    )}
                                  >
                                    {"Dispositif"}
                                  </div>
                                  <Stack__
                                    as={"div"}
                                    data-plasmic-name={"datePickerWeb4"}
                                    data-plasmic-override={
                                      overrides.datePickerWeb4
                                    }
                                    hasGap={true}
                                    className={classNames(
                                      projectcss.all,
                                      sty.datePickerWeb4
                                    )}
                                  >
                                    <Stack__
                                      as={"div"}
                                      data-plasmic-name={"inputSelect4"}
                                      data-plasmic-override={
                                        overrides.inputSelect4
                                      }
                                      hasGap={true}
                                      className={classNames(
                                        projectcss.all,
                                        sty.inputSelect4
                                      )}
                                    >
                                      {false ? (
                                        <div
                                          data-plasmic-name={
                                            "signedByBaseFieldGroupSmall4"
                                          }
                                          data-plasmic-override={
                                            overrides.signedByBaseFieldGroupSmall4
                                          }
                                          className={classNames(
                                            projectcss.all,
                                            sty.signedByBaseFieldGroupSmall4
                                          )}
                                        />
                                      ) : null}
                                      <Stack__
                                        as={"div"}
                                        data-plasmic-name={"endDateCalendar4"}
                                        data-plasmic-override={
                                          overrides.endDateCalendar4
                                        }
                                        hasGap={true}
                                        className={classNames(
                                          projectcss.all,
                                          sty.endDateCalendar4
                                        )}
                                      >
                                        {false ? (
                                          <div
                                            data-plasmic-name={
                                              "inputElementTextField7"
                                            }
                                            data-plasmic-override={
                                              overrides.inputElementTextField7
                                            }
                                            className={classNames(
                                              projectcss.all,
                                              sty.inputElementTextField7
                                            )}
                                          >
                                            {false ? (
                                              <div
                                                data-plasmic-name={
                                                  "signedByBaseInputElementTextFieldSmallEnabled4"
                                                }
                                                data-plasmic-override={
                                                  overrides.signedByBaseInputElementTextFieldSmallEnabled4
                                                }
                                                className={classNames(
                                                  projectcss.all,
                                                  sty.signedByBaseInputElementTextFieldSmallEnabled4
                                                )}
                                              />
                                            ) : null}
                                            {false ? (
                                              <div
                                                data-plasmic-name={
                                                  "leadingArtworkContainer13"
                                                }
                                                data-plasmic-override={
                                                  overrides.leadingArtworkContainer13
                                                }
                                                className={classNames(
                                                  projectcss.all,
                                                  sty.leadingArtworkContainer13
                                                )}
                                              >
                                                <div
                                                  data-plasmic-name={
                                                    "leadingArtwork7"
                                                  }
                                                  data-plasmic-override={
                                                    overrides.leadingArtwork7
                                                  }
                                                  className={classNames(
                                                    projectcss.all,
                                                    sty.leadingArtwork7
                                                  )}
                                                >
                                                  {false ? (
                                                    <OutlinedIcon
                                                      className={classNames(
                                                        projectcss.all,
                                                        sty.svg___9T7Sg
                                                      )}
                                                      role={"img"}
                                                    />
                                                  ) : null}
                                                  <FilledIcon
                                                    className={classNames(
                                                      projectcss.all,
                                                      sty.svg___7MMec
                                                    )}
                                                    role={"img"}
                                                  />
                                                </div>
                                              </div>
                                            ) : null}
                                            {false ? (
                                              <div
                                                data-plasmic-name={
                                                  "leadingLabelContainer13"
                                                }
                                                data-plasmic-override={
                                                  overrides.leadingLabelContainer13
                                                }
                                                className={classNames(
                                                  projectcss.all,
                                                  sty.leadingLabelContainer13
                                                )}
                                              >
                                                <div
                                                  data-plasmic-name={
                                                    "leadingLabel13"
                                                  }
                                                  data-plasmic-override={
                                                    overrides.leadingLabel13
                                                  }
                                                  className={classNames(
                                                    projectcss.all,
                                                    sty.leadingLabel13
                                                  )}
                                                >
                                                  {false ? (
                                                    <div
                                                      data-plasmic-name={
                                                        "signedByBaseTypographyLabelSmall7"
                                                      }
                                                      data-plasmic-override={
                                                        overrides.signedByBaseTypographyLabelSmall7
                                                      }
                                                      className={classNames(
                                                        projectcss.all,
                                                        sty.signedByBaseTypographyLabelSmall7
                                                      )}
                                                    />
                                                  ) : null}
                                                  <div
                                                    data-plasmic-name={"text80"}
                                                    data-plasmic-override={
                                                      overrides.text80
                                                    }
                                                    className={classNames(
                                                      projectcss.all,
                                                      projectcss.__wab_text,
                                                      sty.text80
                                                    )}
                                                  >
                                                    {"$"}
                                                  </div>
                                                  {false ? (
                                                    <div
                                                      data-plasmic-name={
                                                        "spacer73"
                                                      }
                                                      data-plasmic-override={
                                                        overrides.spacer73
                                                      }
                                                      className={classNames(
                                                        projectcss.all,
                                                        sty.spacer73
                                                      )}
                                                    />
                                                  ) : null}
                                                </div>
                                              </div>
                                            ) : null}
                                            <div
                                              data-plasmic-name={
                                                "inputElementContentText13"
                                              }
                                              data-plasmic-override={
                                                overrides.inputElementContentText13
                                              }
                                              className={classNames(
                                                projectcss.all,
                                                sty.inputElementContentText13
                                              )}
                                            >
                                              {false ? (
                                                <div
                                                  data-plasmic-name={
                                                    "signedByBaseInputElementContentTextSmallOff4"
                                                  }
                                                  data-plasmic-override={
                                                    overrides.signedByBaseInputElementContentTextSmallOff4
                                                  }
                                                  className={classNames(
                                                    projectcss.all,
                                                    sty.signedByBaseInputElementContentTextSmallOff4
                                                  )}
                                                />
                                              ) : null}
                                              <div
                                                data-plasmic-name={"text81"}
                                                data-plasmic-override={
                                                  overrides.text81
                                                }
                                                className={classNames(
                                                  projectcss.all,
                                                  projectcss.__wab_text,
                                                  sty.text81
                                                )}
                                              >
                                                {"MM/DD/YYYY"}
                                              </div>
                                            </div>
                                            {false ? (
                                              <div
                                                data-plasmic-name={
                                                  "trailingLabelEnhancer13"
                                                }
                                                data-plasmic-override={
                                                  overrides.trailingLabelEnhancer13
                                                }
                                                className={classNames(
                                                  projectcss.all,
                                                  sty.trailingLabelEnhancer13
                                                )}
                                              >
                                                {false ? (
                                                  <div
                                                    data-plasmic-name={
                                                      "trailingLabel13"
                                                    }
                                                    data-plasmic-override={
                                                      overrides.trailingLabel13
                                                    }
                                                    className={classNames(
                                                      projectcss.all,
                                                      sty.trailingLabel13
                                                    )}
                                                  >
                                                    {false ? (
                                                      <div
                                                        data-plasmic-name={
                                                          "signedByBaseTypographyLabelSmall8"
                                                        }
                                                        data-plasmic-override={
                                                          overrides.signedByBaseTypographyLabelSmall8
                                                        }
                                                        className={classNames(
                                                          projectcss.all,
                                                          sty.signedByBaseTypographyLabelSmall8
                                                        )}
                                                      />
                                                    ) : null}
                                                    <div
                                                      data-plasmic-name={
                                                        "text82"
                                                      }
                                                      data-plasmic-override={
                                                        overrides.text82
                                                      }
                                                      className={classNames(
                                                        projectcss.all,
                                                        projectcss.__wab_text,
                                                        sty.text82
                                                      )}
                                                    >
                                                      {"USD"}
                                                    </div>
                                                    {false ? (
                                                      <div
                                                        data-plasmic-name={
                                                          "spacer74"
                                                        }
                                                        data-plasmic-override={
                                                          overrides.spacer74
                                                        }
                                                        className={classNames(
                                                          projectcss.all,
                                                          sty.spacer74
                                                        )}
                                                      />
                                                    ) : null}
                                                  </div>
                                                ) : null}
                                              </div>
                                            ) : null}
                                            {false ? (
                                              <div
                                                data-plasmic-name={
                                                  "trailingArtworkContainer13"
                                                }
                                                data-plasmic-override={
                                                  overrides.trailingArtworkContainer13
                                                }
                                                className={classNames(
                                                  projectcss.all,
                                                  sty.trailingArtworkContainer13
                                                )}
                                              >
                                                <div
                                                  data-plasmic-name={
                                                    "trailingArtwork13"
                                                  }
                                                  data-plasmic-override={
                                                    overrides.trailingArtwork13
                                                  }
                                                  className={classNames(
                                                    projectcss.all,
                                                    sty.trailingArtwork13
                                                  )}
                                                >
                                                  {false ? (
                                                    <OutlinedIcon
                                                      className={classNames(
                                                        projectcss.all,
                                                        sty.svg__pMo7S
                                                      )}
                                                      role={"img"}
                                                    />
                                                  ) : null}
                                                  <FilledIcon
                                                    className={classNames(
                                                      projectcss.all,
                                                      sty.svg__tBwla
                                                    )}
                                                    role={"img"}
                                                  />
                                                </div>
                                              </div>
                                            ) : null}
                                          </div>
                                        ) : null}
                                        <div
                                          data-plasmic-name={"calendar4"}
                                          data-plasmic-override={
                                            overrides.calendar4
                                          }
                                          className={classNames(
                                            projectcss.all,
                                            sty.calendar4
                                          )}
                                        >
                                          {false ? (
                                            <div
                                              data-plasmic-name={
                                                "signedByBaseInputElementSelectXSmallWebSingleDefaultEnabled4"
                                              }
                                              data-plasmic-override={
                                                overrides.signedByBaseInputElementSelectXSmallWebSingleDefaultEnabled4
                                              }
                                              className={classNames(
                                                projectcss.all,
                                                sty.signedByBaseInputElementSelectXSmallWebSingleDefaultEnabled4
                                              )}
                                            />
                                          ) : null}
                                          <Stack__
                                            as={"div"}
                                            data-plasmic-name={
                                              "leadingArtworkContainer14"
                                            }
                                            data-plasmic-override={
                                              overrides.leadingArtworkContainer14
                                            }
                                            hasGap={true}
                                            className={classNames(
                                              projectcss.all,
                                              sty.leadingArtworkContainer14
                                            )}
                                          >
                                            <div
                                              data-plasmic-name={"text83"}
                                              data-plasmic-override={
                                                overrides.text83
                                              }
                                              className={classNames(
                                                projectcss.all,
                                                projectcss.__wab_text,
                                                sty.text83
                                              )}
                                            >
                                              {"S\u00e9lectionner..."}
                                            </div>
                                          </Stack__>
                                          {false ? (
                                            <div
                                              data-plasmic-name={
                                                "leadingLabelContainer14"
                                              }
                                              data-plasmic-override={
                                                overrides.leadingLabelContainer14
                                              }
                                              className={classNames(
                                                projectcss.all,
                                                sty.leadingLabelContainer14
                                              )}
                                            >
                                              <div
                                                data-plasmic-name={
                                                  "leadingLabel14"
                                                }
                                                data-plasmic-override={
                                                  overrides.leadingLabel14
                                                }
                                                className={classNames(
                                                  projectcss.all,
                                                  sty.leadingLabel14
                                                )}
                                              >
                                                {false ? (
                                                  <div
                                                    data-plasmic-name={
                                                      "signedByBaseTypographyLabelXSmall7"
                                                    }
                                                    data-plasmic-override={
                                                      overrides.signedByBaseTypographyLabelXSmall7
                                                    }
                                                    className={classNames(
                                                      projectcss.all,
                                                      sty.signedByBaseTypographyLabelXSmall7
                                                    )}
                                                  />
                                                ) : null}
                                                <div
                                                  data-plasmic-name={"text84"}
                                                  data-plasmic-override={
                                                    overrides.text84
                                                  }
                                                  className={classNames(
                                                    projectcss.all,
                                                    projectcss.__wab_text,
                                                    sty.text84
                                                  )}
                                                >
                                                  {"$"}
                                                </div>
                                                {false ? (
                                                  <div
                                                    data-plasmic-name={
                                                      "spacer75"
                                                    }
                                                    data-plasmic-override={
                                                      overrides.spacer75
                                                    }
                                                    className={classNames(
                                                      projectcss.all,
                                                      sty.spacer75
                                                    )}
                                                  />
                                                ) : null}
                                              </div>
                                            </div>
                                          ) : null}
                                          {false ? (
                                            <div
                                              data-plasmic-name={
                                                "inputElementContentText14"
                                              }
                                              data-plasmic-override={
                                                overrides.inputElementContentText14
                                              }
                                              className={classNames(
                                                projectcss.all,
                                                sty.inputElementContentText14
                                              )}
                                            >
                                              {false ? (
                                                <div
                                                  data-plasmic-name={
                                                    "signedByBaseInputElementContentTextXSmallWebOff4"
                                                  }
                                                  data-plasmic-override={
                                                    overrides.signedByBaseInputElementContentTextXSmallWebOff4
                                                  }
                                                  className={classNames(
                                                    projectcss.all,
                                                    sty.signedByBaseInputElementContentTextXSmallWebOff4
                                                  )}
                                                />
                                              ) : null}
                                              <div
                                                data-plasmic-name={"text85"}
                                                data-plasmic-override={
                                                  overrides.text85
                                                }
                                                className={classNames(
                                                  projectcss.all,
                                                  projectcss.__wab_text,
                                                  sty.text85
                                                )}
                                              >
                                                {"Jr"}
                                              </div>
                                            </div>
                                          ) : null}
                                          {false ? (
                                            <div
                                              data-plasmic-name={
                                                "trailingLabelEnhancer14"
                                              }
                                              data-plasmic-override={
                                                overrides.trailingLabelEnhancer14
                                              }
                                              className={classNames(
                                                projectcss.all,
                                                sty.trailingLabelEnhancer14
                                              )}
                                            >
                                              {false ? (
                                                <div
                                                  data-plasmic-name={
                                                    "trailingLabel14"
                                                  }
                                                  data-plasmic-override={
                                                    overrides.trailingLabel14
                                                  }
                                                  className={classNames(
                                                    projectcss.all,
                                                    sty.trailingLabel14
                                                  )}
                                                >
                                                  {false ? (
                                                    <div
                                                      data-plasmic-name={
                                                        "signedByBaseTypographyLabelXSmall8"
                                                      }
                                                      data-plasmic-override={
                                                        overrides.signedByBaseTypographyLabelXSmall8
                                                      }
                                                      className={classNames(
                                                        projectcss.all,
                                                        sty.signedByBaseTypographyLabelXSmall8
                                                      )}
                                                    />
                                                  ) : null}
                                                  <div
                                                    data-plasmic-name={"text86"}
                                                    data-plasmic-override={
                                                      overrides.text86
                                                    }
                                                    className={classNames(
                                                      projectcss.all,
                                                      projectcss.__wab_text,
                                                      sty.text86
                                                    )}
                                                  >
                                                    {"USD"}
                                                  </div>
                                                  {false ? (
                                                    <div
                                                      data-plasmic-name={
                                                        "spacer76"
                                                      }
                                                      data-plasmic-override={
                                                        overrides.spacer76
                                                      }
                                                      className={classNames(
                                                        projectcss.all,
                                                        sty.spacer76
                                                      )}
                                                    />
                                                  ) : null}
                                                </div>
                                              ) : null}
                                            </div>
                                          ) : null}
                                          {false ? (
                                            <div
                                              data-plasmic-name={
                                                "trailingArtworkContainer14"
                                              }
                                              data-plasmic-override={
                                                overrides.trailingArtworkContainer14
                                              }
                                              className={classNames(
                                                projectcss.all,
                                                sty.trailingArtworkContainer14
                                              )}
                                            >
                                              <div
                                                data-plasmic-name={
                                                  "trailingArtwork14"
                                                }
                                                data-plasmic-override={
                                                  overrides.trailingArtwork14
                                                }
                                                className={classNames(
                                                  projectcss.all,
                                                  sty.trailingArtwork14
                                                )}
                                              >
                                                {false ? (
                                                  <Outlined2Icon
                                                    className={classNames(
                                                      projectcss.all,
                                                      sty.svg__eu51A
                                                    )}
                                                    role={"img"}
                                                  />
                                                ) : null}
                                                <Filled2Icon
                                                  className={classNames(
                                                    projectcss.all,
                                                    sty.svg__j9Ift
                                                  )}
                                                  role={"img"}
                                                />
                                              </div>
                                            </div>
                                          ) : null}
                                          <div
                                            data-plasmic-name={
                                              "selectIndicatorContainer7"
                                            }
                                            data-plasmic-override={
                                              overrides.selectIndicatorContainer7
                                            }
                                            className={classNames(
                                              projectcss.all,
                                              sty.selectIndicatorContainer7
                                            )}
                                          >
                                            <div
                                              data-plasmic-name={"chevronIcon7"}
                                              data-plasmic-override={
                                                overrides.chevronIcon7
                                              }
                                              className={classNames(
                                                projectcss.all,
                                                sty.chevronIcon7
                                              )}
                                            >
                                              {false ? (
                                                <Outlined3Icon
                                                  className={classNames(
                                                    projectcss.all,
                                                    sty.svg__dwXy
                                                  )}
                                                  role={"img"}
                                                />
                                              ) : null}
                                              <Outlined3Icon
                                                className={classNames(
                                                  projectcss.all,
                                                  sty.svg___17Haj
                                                )}
                                                role={"img"}
                                              />
                                            </div>
                                          </div>
                                        </div>
                                      </Stack__>
                                      {false ? (
                                        <Stack__
                                          as={"div"}
                                          data-plasmic-name={
                                            "inputElementHint7"
                                          }
                                          data-plasmic-override={
                                            overrides.inputElementHint7
                                          }
                                          hasGap={true}
                                          className={classNames(
                                            projectcss.all,
                                            sty.inputElementHint7
                                          )}
                                        >
                                          {false ? (
                                            <div
                                              data-plasmic-name={"heart31"}
                                              data-plasmic-override={
                                                overrides.heart31
                                              }
                                              className={classNames(
                                                projectcss.all,
                                                sty.heart31
                                              )}
                                            >
                                              {false ? (
                                                <Outlined4Icon
                                                  className={classNames(
                                                    projectcss.all,
                                                    sty.svg__yYkh4
                                                  )}
                                                  role={"img"}
                                                />
                                              ) : null}
                                              <Filled3Icon
                                                className={classNames(
                                                  projectcss.all,
                                                  sty.svg__jcDrS
                                                )}
                                                role={"img"}
                                              />
                                            </div>
                                          ) : null}
                                          <div
                                            data-plasmic-name={"hint7"}
                                            data-plasmic-override={
                                              overrides.hint7
                                            }
                                            className={classNames(
                                              projectcss.all,
                                              sty.hint7
                                            )}
                                          >
                                            {false ? (
                                              <div
                                                data-plasmic-name={
                                                  "signedByBaseTypographyParagraphSmall7"
                                                }
                                                data-plasmic-override={
                                                  overrides.signedByBaseTypographyParagraphSmall7
                                                }
                                                className={classNames(
                                                  projectcss.all,
                                                  sty.signedByBaseTypographyParagraphSmall7
                                                )}
                                              />
                                            ) : null}
                                            <div
                                              data-plasmic-name={"text87"}
                                              data-plasmic-override={
                                                overrides.text87
                                              }
                                              className={classNames(
                                                projectcss.all,
                                                projectcss.__wab_text,
                                                sty.text87
                                              )}
                                            >
                                              {"MM/DD/YYYY"}
                                            </div>
                                            {false ? (
                                              <div
                                                data-plasmic-name={"spacer77"}
                                                data-plasmic-override={
                                                  overrides.spacer77
                                                }
                                                className={classNames(
                                                  projectcss.all,
                                                  sty.spacer77
                                                )}
                                              />
                                            ) : null}
                                          </div>
                                        </Stack__>
                                      ) : null}
                                    </Stack__>
                                  </Stack__>
                                  <div
                                    data-plasmic-name={"inputElementSelect4"}
                                    data-plasmic-override={
                                      overrides.inputElementSelect4
                                    }
                                    className={classNames(
                                      projectcss.all,
                                      sty.inputElementSelect4
                                    )}
                                  >
                                    {false ? (
                                      <div
                                        data-plasmic-name={
                                          "signedByBaseInputElementSelectMediumSingleDefaultActive4"
                                        }
                                        data-plasmic-override={
                                          overrides.signedByBaseInputElementSelectMediumSingleDefaultActive4
                                        }
                                        className={classNames(
                                          projectcss.all,
                                          sty.signedByBaseInputElementSelectMediumSingleDefaultActive4
                                        )}
                                      />
                                    ) : null}
                                    {false ? (
                                      <div
                                        data-plasmic-name={"selectFrame4"}
                                        data-plasmic-override={
                                          overrides.selectFrame4
                                        }
                                        className={classNames(
                                          projectcss.all,
                                          sty.selectFrame4
                                        )}
                                      >
                                        {false ? (
                                          <div
                                            data-plasmic-name={
                                              "leadingArtworkContainer15"
                                            }
                                            data-plasmic-override={
                                              overrides.leadingArtworkContainer15
                                            }
                                            className={classNames(
                                              projectcss.all,
                                              sty.leadingArtworkContainer15
                                            )}
                                          >
                                            <div
                                              data-plasmic-name={
                                                "leadingArtwork8"
                                              }
                                              data-plasmic-override={
                                                overrides.leadingArtwork8
                                              }
                                              className={classNames(
                                                projectcss.all,
                                                sty.leadingArtwork8
                                              )}
                                            >
                                              {false ? (
                                                <Outlined5Icon
                                                  className={classNames(
                                                    projectcss.all,
                                                    sty.svg___1MQvC
                                                  )}
                                                  role={"img"}
                                                />
                                              ) : null}
                                              <Filled4Icon
                                                className={classNames(
                                                  projectcss.all,
                                                  sty.svg___1YtAa
                                                )}
                                                role={"img"}
                                              />
                                            </div>
                                          </div>
                                        ) : null}
                                        {false ? (
                                          <div
                                            data-plasmic-name={
                                              "leadingLabelContainer15"
                                            }
                                            data-plasmic-override={
                                              overrides.leadingLabelContainer15
                                            }
                                            className={classNames(
                                              projectcss.all,
                                              sty.leadingLabelContainer15
                                            )}
                                          >
                                            <div
                                              data-plasmic-name={
                                                "leadingLabel15"
                                              }
                                              data-plasmic-override={
                                                overrides.leadingLabel15
                                              }
                                              className={classNames(
                                                projectcss.all,
                                                sty.leadingLabel15
                                              )}
                                            >
                                              {false ? (
                                                <div
                                                  data-plasmic-name={
                                                    "signedByBaseTypographyLabelMedium19"
                                                  }
                                                  data-plasmic-override={
                                                    overrides.signedByBaseTypographyLabelMedium19
                                                  }
                                                  className={classNames(
                                                    projectcss.all,
                                                    sty.signedByBaseTypographyLabelMedium19
                                                  )}
                                                />
                                              ) : null}
                                              <div
                                                data-plasmic-name={"text88"}
                                                data-plasmic-override={
                                                  overrides.text88
                                                }
                                                className={classNames(
                                                  projectcss.all,
                                                  projectcss.__wab_text,
                                                  sty.text88
                                                )}
                                              >
                                                {"$"}
                                              </div>
                                              {false ? (
                                                <div
                                                  data-plasmic-name={"spacer78"}
                                                  data-plasmic-override={
                                                    overrides.spacer78
                                                  }
                                                  className={classNames(
                                                    projectcss.all,
                                                    sty.spacer78
                                                  )}
                                                />
                                              ) : null}
                                            </div>
                                          </div>
                                        ) : null}
                                        <div
                                          data-plasmic-name={
                                            "inputElementContentText15"
                                          }
                                          data-plasmic-override={
                                            overrides.inputElementContentText15
                                          }
                                          className={classNames(
                                            projectcss.all,
                                            sty.inputElementContentText15
                                          )}
                                        >
                                          {false ? (
                                            <div
                                              data-plasmic-name={
                                                "signedByBaseInputElementContentTextMediumOff7"
                                              }
                                              data-plasmic-override={
                                                overrides.signedByBaseInputElementContentTextMediumOff7
                                              }
                                              className={classNames(
                                                projectcss.all,
                                                sty.signedByBaseInputElementContentTextMediumOff7
                                              )}
                                            />
                                          ) : null}
                                          {false ? (
                                            <div
                                              data-plasmic-name={"text89"}
                                              data-plasmic-override={
                                                overrides.text89
                                              }
                                              className={classNames(
                                                projectcss.all,
                                                projectcss.__wab_text,
                                                sty.text89
                                              )}
                                            >
                                              {"S\u00e9lectionner..."}
                                            </div>
                                          ) : null}
                                        </div>
                                        {false ? (
                                          <div
                                            data-plasmic-name={
                                              "trailingLabelEnhancer15"
                                            }
                                            data-plasmic-override={
                                              overrides.trailingLabelEnhancer15
                                            }
                                            className={classNames(
                                              projectcss.all,
                                              sty.trailingLabelEnhancer15
                                            )}
                                          >
                                            {false ? (
                                              <div
                                                data-plasmic-name={
                                                  "trailingLabel15"
                                                }
                                                data-plasmic-override={
                                                  overrides.trailingLabel15
                                                }
                                                className={classNames(
                                                  projectcss.all,
                                                  sty.trailingLabel15
                                                )}
                                              >
                                                {false ? (
                                                  <div
                                                    data-plasmic-name={
                                                      "signedByBaseTypographyLabelMedium20"
                                                    }
                                                    data-plasmic-override={
                                                      overrides.signedByBaseTypographyLabelMedium20
                                                    }
                                                    className={classNames(
                                                      projectcss.all,
                                                      sty.signedByBaseTypographyLabelMedium20
                                                    )}
                                                  />
                                                ) : null}
                                                <div
                                                  data-plasmic-name={"text90"}
                                                  data-plasmic-override={
                                                    overrides.text90
                                                  }
                                                  className={classNames(
                                                    projectcss.all,
                                                    projectcss.__wab_text,
                                                    sty.text90
                                                  )}
                                                >
                                                  {"USD"}
                                                </div>
                                                {false ? (
                                                  <div
                                                    data-plasmic-name={
                                                      "spacer79"
                                                    }
                                                    data-plasmic-override={
                                                      overrides.spacer79
                                                    }
                                                    className={classNames(
                                                      projectcss.all,
                                                      sty.spacer79
                                                    )}
                                                  />
                                                ) : null}
                                              </div>
                                            ) : null}
                                          </div>
                                        ) : null}
                                        {false ? (
                                          <div
                                            data-plasmic-name={
                                              "trailingArtworkContainer15"
                                            }
                                            data-plasmic-override={
                                              overrides.trailingArtworkContainer15
                                            }
                                            className={classNames(
                                              projectcss.all,
                                              sty.trailingArtworkContainer15
                                            )}
                                          >
                                            <div
                                              data-plasmic-name={
                                                "trailingArtwork15"
                                              }
                                              data-plasmic-override={
                                                overrides.trailingArtwork15
                                              }
                                              className={classNames(
                                                projectcss.all,
                                                sty.trailingArtwork15
                                              )}
                                            >
                                              {false ? (
                                                <Outlined5Icon
                                                  className={classNames(
                                                    projectcss.all,
                                                    sty.svg__jUy2X
                                                  )}
                                                  role={"img"}
                                                />
                                              ) : null}
                                              <Filled4Icon
                                                className={classNames(
                                                  projectcss.all,
                                                  sty.svg__g6MMv
                                                )}
                                                role={"img"}
                                              />
                                            </div>
                                          </div>
                                        ) : null}
                                        {false ? (
                                          <div
                                            data-plasmic-name={
                                              "selectIndicatorContainer8"
                                            }
                                            data-plasmic-override={
                                              overrides.selectIndicatorContainer8
                                            }
                                            className={classNames(
                                              projectcss.all,
                                              sty.selectIndicatorContainer8
                                            )}
                                          >
                                            <div
                                              data-plasmic-name={"chevronIcon8"}
                                              data-plasmic-override={
                                                overrides.chevronIcon8
                                              }
                                              className={classNames(
                                                projectcss.all,
                                                sty.chevronIcon8
                                              )}
                                            >
                                              {false ? (
                                                <Outlined6Icon
                                                  className={classNames(
                                                    projectcss.all,
                                                    sty.svg__cfld
                                                  )}
                                                  role={"img"}
                                                />
                                              ) : null}
                                              <Outlined6Icon
                                                className={classNames(
                                                  projectcss.all,
                                                  sty.svg___5H83
                                                )}
                                                role={"img"}
                                              />
                                            </div>
                                          </div>
                                        ) : null}
                                      </div>
                                    ) : null}
                                    <div
                                      data-plasmic-name={"menu4"}
                                      data-plasmic-override={overrides.menu4}
                                      className={classNames(
                                        projectcss.all,
                                        sty.menu4
                                      )}
                                    >
                                      {false ? (
                                        <div
                                          data-plasmic-name={
                                            "signedByBaseMenuListMedium4"
                                          }
                                          data-plasmic-override={
                                            overrides.signedByBaseMenuListMedium4
                                          }
                                          className={classNames(
                                            projectcss.all,
                                            sty.signedByBaseMenuListMedium4
                                          )}
                                        />
                                      ) : null}
                                      {false ? (
                                        <Stack__
                                          as={"div"}
                                          data-plasmic-name={"menuItem16"}
                                          data-plasmic-override={
                                            overrides.menuItem16
                                          }
                                          hasGap={true}
                                          className={classNames(
                                            projectcss.all,
                                            sty.menuItem16
                                          )}
                                        >
                                          {false ? (
                                            <div
                                              data-plasmic-name={
                                                "signedByBaseMenuItemSearchMediumNoneEnabled4"
                                              }
                                              data-plasmic-override={
                                                overrides.signedByBaseMenuItemSearchMediumNoneEnabled4
                                              }
                                              className={classNames(
                                                projectcss.all,
                                                sty.signedByBaseMenuItemSearchMediumNoneEnabled4
                                              )}
                                            />
                                          ) : null}
                                          <Stack__
                                            as={"div"}
                                            data-plasmic-name={"searchField4"}
                                            data-plasmic-override={
                                              overrides.searchField4
                                            }
                                            hasGap={true}
                                            className={classNames(
                                              projectcss.all,
                                              sty.searchField4
                                            )}
                                          >
                                            {false ? (
                                              <div
                                                data-plasmic-name={
                                                  "signedByBaseSearchFieldMediumEnabled4"
                                                }
                                                data-plasmic-override={
                                                  overrides.signedByBaseSearchFieldMediumEnabled4
                                                }
                                                className={classNames(
                                                  projectcss.all,
                                                  sty.signedByBaseSearchFieldMediumEnabled4
                                                )}
                                              />
                                            ) : null}
                                            {false ? (
                                              <Stack__
                                                as={"div"}
                                                data-plasmic-name={
                                                  "inputElementLabel4"
                                                }
                                                data-plasmic-override={
                                                  overrides.inputElementLabel4
                                                }
                                                hasGap={true}
                                                className={classNames(
                                                  projectcss.all,
                                                  sty.inputElementLabel4
                                                )}
                                              >
                                                {false ? (
                                                  <div
                                                    data-plasmic-name={
                                                      "signedByBaseInputElementLabelMedium4"
                                                    }
                                                    data-plasmic-override={
                                                      overrides.signedByBaseInputElementLabelMedium4
                                                    }
                                                    className={classNames(
                                                      projectcss.all,
                                                      sty.signedByBaseInputElementLabelMedium4
                                                    )}
                                                  />
                                                ) : null}
                                                <div
                                                  data-plasmic-name={
                                                    "typography43"
                                                  }
                                                  data-plasmic-override={
                                                    overrides.typography43
                                                  }
                                                  className={classNames(
                                                    projectcss.all,
                                                    sty.typography43
                                                  )}
                                                >
                                                  {false ? (
                                                    <div
                                                      data-plasmic-name={
                                                        "signedByBaseTypographyLabelMedium21"
                                                      }
                                                      data-plasmic-override={
                                                        overrides.signedByBaseTypographyLabelMedium21
                                                      }
                                                      className={classNames(
                                                        projectcss.all,
                                                        sty.signedByBaseTypographyLabelMedium21
                                                      )}
                                                    />
                                                  ) : null}
                                                  <div
                                                    data-plasmic-name={"text91"}
                                                    data-plasmic-override={
                                                      overrides.text91
                                                    }
                                                    className={classNames(
                                                      projectcss.all,
                                                      projectcss.__wab_text,
                                                      sty.text91
                                                    )}
                                                  >
                                                    {"Label"}
                                                  </div>
                                                  {false ? (
                                                    <div
                                                      data-plasmic-name={
                                                        "spacer80"
                                                      }
                                                      data-plasmic-override={
                                                        overrides.spacer80
                                                      }
                                                      className={classNames(
                                                        projectcss.all,
                                                        sty.spacer80
                                                      )}
                                                    />
                                                  ) : null}
                                                </div>
                                                {false ? (
                                                  <Stack__
                                                    as={"div"}
                                                    data-plasmic-name={
                                                      "characterCountFrame4"
                                                    }
                                                    data-plasmic-override={
                                                      overrides.characterCountFrame4
                                                    }
                                                    hasGap={true}
                                                    className={classNames(
                                                      projectcss.all,
                                                      sty.characterCountFrame4
                                                    )}
                                                  >
                                                    {false ? (
                                                      <div
                                                        data-plasmic-name={
                                                          "heart32"
                                                        }
                                                        data-plasmic-override={
                                                          overrides.heart32
                                                        }
                                                        className={classNames(
                                                          projectcss.all,
                                                          sty.heart32
                                                        )}
                                                      >
                                                        {false ? (
                                                          <OutlinedIcon
                                                            className={classNames(
                                                              projectcss.all,
                                                              sty.svg__rdwZh
                                                            )}
                                                            role={"img"}
                                                          />
                                                        ) : null}
                                                        <FilledIcon
                                                          className={classNames(
                                                            projectcss.all,
                                                            sty.svg__oZJvS
                                                          )}
                                                          role={"img"}
                                                        />
                                                      </div>
                                                    ) : null}
                                                    <div
                                                      data-plasmic-name={
                                                        "typography44"
                                                      }
                                                      data-plasmic-override={
                                                        overrides.typography44
                                                      }
                                                      className={classNames(
                                                        projectcss.all,
                                                        sty.typography44
                                                      )}
                                                    >
                                                      {false ? (
                                                        <div
                                                          data-plasmic-name={
                                                            "signedByBaseTypographyLabelMedium22"
                                                          }
                                                          data-plasmic-override={
                                                            overrides.signedByBaseTypographyLabelMedium22
                                                          }
                                                          className={classNames(
                                                            projectcss.all,
                                                            sty.signedByBaseTypographyLabelMedium22
                                                          )}
                                                        />
                                                      ) : null}
                                                      <div
                                                        data-plasmic-name={
                                                          "text92"
                                                        }
                                                        data-plasmic-override={
                                                          overrides.text92
                                                        }
                                                        className={classNames(
                                                          projectcss.all,
                                                          projectcss.__wab_text,
                                                          sty.text92
                                                        )}
                                                      >
                                                        {"0/100"}
                                                      </div>
                                                      {false ? (
                                                        <div
                                                          data-plasmic-name={
                                                            "spacer81"
                                                          }
                                                          data-plasmic-override={
                                                            overrides.spacer81
                                                          }
                                                          className={classNames(
                                                            projectcss.all,
                                                            sty.spacer81
                                                          )}
                                                        />
                                                      ) : null}
                                                    </div>
                                                  </Stack__>
                                                ) : null}
                                              </Stack__>
                                            ) : null}
                                            <div
                                              data-plasmic-name={
                                                "inputElementTextField8"
                                              }
                                              data-plasmic-override={
                                                overrides.inputElementTextField8
                                              }
                                              className={classNames(
                                                projectcss.all,
                                                sty.inputElementTextField8
                                              )}
                                            >
                                              {false ? (
                                                <div
                                                  data-plasmic-name={
                                                    "signedByBaseInputElementTextFieldMediumEnabled4"
                                                  }
                                                  data-plasmic-override={
                                                    overrides.signedByBaseInputElementTextFieldMediumEnabled4
                                                  }
                                                  className={classNames(
                                                    projectcss.all,
                                                    sty.signedByBaseInputElementTextFieldMediumEnabled4
                                                  )}
                                                />
                                              ) : null}
                                              <div
                                                data-plasmic-name={
                                                  "leadingArtworkContainer16"
                                                }
                                                data-plasmic-override={
                                                  overrides.leadingArtworkContainer16
                                                }
                                                className={classNames(
                                                  projectcss.all,
                                                  sty.leadingArtworkContainer16
                                                )}
                                              >
                                                <div
                                                  data-plasmic-name={"search4"}
                                                  data-plasmic-override={
                                                    overrides.search4
                                                  }
                                                  className={classNames(
                                                    projectcss.all,
                                                    sty.search4
                                                  )}
                                                >
                                                  {false ? (
                                                    <Outlined7Icon
                                                      className={classNames(
                                                        projectcss.all,
                                                        sty.svg__gBiGt
                                                      )}
                                                      role={"img"}
                                                    />
                                                  ) : null}
                                                  <Outlined7Icon
                                                    className={classNames(
                                                      projectcss.all,
                                                      sty.svg__yFcXk
                                                    )}
                                                    role={"img"}
                                                  />
                                                </div>
                                              </div>
                                              {false ? (
                                                <div
                                                  data-plasmic-name={
                                                    "leadingLabelContainer16"
                                                  }
                                                  data-plasmic-override={
                                                    overrides.leadingLabelContainer16
                                                  }
                                                  className={classNames(
                                                    projectcss.all,
                                                    sty.leadingLabelContainer16
                                                  )}
                                                >
                                                  {false ? (
                                                    <div
                                                      data-plasmic-name={
                                                        "leadingLabel16"
                                                      }
                                                      data-plasmic-override={
                                                        overrides.leadingLabel16
                                                      }
                                                      className={classNames(
                                                        projectcss.all,
                                                        sty.leadingLabel16
                                                      )}
                                                    >
                                                      {false ? (
                                                        <div
                                                          data-plasmic-name={
                                                            "signedByBaseTypographyLabelMedium23"
                                                          }
                                                          data-plasmic-override={
                                                            overrides.signedByBaseTypographyLabelMedium23
                                                          }
                                                          className={classNames(
                                                            projectcss.all,
                                                            sty.signedByBaseTypographyLabelMedium23
                                                          )}
                                                        />
                                                      ) : null}
                                                      <div
                                                        data-plasmic-name={
                                                          "text93"
                                                        }
                                                        data-plasmic-override={
                                                          overrides.text93
                                                        }
                                                        className={classNames(
                                                          projectcss.all,
                                                          projectcss.__wab_text,
                                                          sty.text93
                                                        )}
                                                      >
                                                        {"$"}
                                                      </div>
                                                      {false ? (
                                                        <div
                                                          data-plasmic-name={
                                                            "spacer82"
                                                          }
                                                          data-plasmic-override={
                                                            overrides.spacer82
                                                          }
                                                          className={classNames(
                                                            projectcss.all,
                                                            sty.spacer82
                                                          )}
                                                        />
                                                      ) : null}
                                                    </div>
                                                  ) : null}
                                                </div>
                                              ) : null}
                                              <div
                                                data-plasmic-name={
                                                  "inputElementContentText16"
                                                }
                                                data-plasmic-override={
                                                  overrides.inputElementContentText16
                                                }
                                                className={classNames(
                                                  projectcss.all,
                                                  sty.inputElementContentText16
                                                )}
                                              >
                                                {false ? (
                                                  <div
                                                    data-plasmic-name={
                                                      "signedByBaseInputElementContentTextMediumOff8"
                                                    }
                                                    data-plasmic-override={
                                                      overrides.signedByBaseInputElementContentTextMediumOff8
                                                    }
                                                    className={classNames(
                                                      projectcss.all,
                                                      sty.signedByBaseInputElementContentTextMediumOff8
                                                    )}
                                                  />
                                                ) : null}
                                                <div
                                                  data-plasmic-name={"text94"}
                                                  data-plasmic-override={
                                                    overrides.text94
                                                  }
                                                  className={classNames(
                                                    projectcss.all,
                                                    projectcss.__wab_text,
                                                    sty.text94
                                                  )}
                                                >
                                                  {"Placeholder"}
                                                </div>
                                              </div>
                                              {false ? (
                                                <div
                                                  data-plasmic-name={
                                                    "trailingLabelEnhancer16"
                                                  }
                                                  data-plasmic-override={
                                                    overrides.trailingLabelEnhancer16
                                                  }
                                                  className={classNames(
                                                    projectcss.all,
                                                    sty.trailingLabelEnhancer16
                                                  )}
                                                >
                                                  {false ? (
                                                    <div
                                                      data-plasmic-name={
                                                        "trailingLabel16"
                                                      }
                                                      data-plasmic-override={
                                                        overrides.trailingLabel16
                                                      }
                                                      className={classNames(
                                                        projectcss.all,
                                                        sty.trailingLabel16
                                                      )}
                                                    >
                                                      {false ? (
                                                        <div
                                                          data-plasmic-name={
                                                            "signedByBaseTypographyLabelMedium24"
                                                          }
                                                          data-plasmic-override={
                                                            overrides.signedByBaseTypographyLabelMedium24
                                                          }
                                                          className={classNames(
                                                            projectcss.all,
                                                            sty.signedByBaseTypographyLabelMedium24
                                                          )}
                                                        />
                                                      ) : null}
                                                      <div
                                                        data-plasmic-name={
                                                          "text95"
                                                        }
                                                        data-plasmic-override={
                                                          overrides.text95
                                                        }
                                                        className={classNames(
                                                          projectcss.all,
                                                          projectcss.__wab_text,
                                                          sty.text95
                                                        )}
                                                      >
                                                        {"USD"}
                                                      </div>
                                                      {false ? (
                                                        <div
                                                          data-plasmic-name={
                                                            "spacer83"
                                                          }
                                                          data-plasmic-override={
                                                            overrides.spacer83
                                                          }
                                                          className={classNames(
                                                            projectcss.all,
                                                            sty.spacer83
                                                          )}
                                                        />
                                                      ) : null}
                                                    </div>
                                                  ) : null}
                                                </div>
                                              ) : null}
                                              {false ? (
                                                <div
                                                  data-plasmic-name={
                                                    "trailingArtworkContainer16"
                                                  }
                                                  data-plasmic-override={
                                                    overrides.trailingArtworkContainer16
                                                  }
                                                  className={classNames(
                                                    projectcss.all,
                                                    sty.trailingArtworkContainer16
                                                  )}
                                                >
                                                  {false ? (
                                                    <div
                                                      data-plasmic-name={
                                                        "trailingArtwork16"
                                                      }
                                                      data-plasmic-override={
                                                        overrides.trailingArtwork16
                                                      }
                                                      className={classNames(
                                                        projectcss.all,
                                                        sty.trailingArtwork16
                                                      )}
                                                    >
                                                      {false ? (
                                                        <Outlined5Icon
                                                          className={classNames(
                                                            projectcss.all,
                                                            sty.svg__y8Lrs
                                                          )}
                                                          role={"img"}
                                                        />
                                                      ) : null}
                                                      <Filled4Icon
                                                        className={classNames(
                                                          projectcss.all,
                                                          sty.svg__b6Zvo
                                                        )}
                                                        role={"img"}
                                                      />
                                                    </div>
                                                  ) : null}
                                                </div>
                                              ) : null}
                                            </div>
                                            {false ? (
                                              <Stack__
                                                as={"div"}
                                                data-plasmic-name={
                                                  "inputElementHint8"
                                                }
                                                data-plasmic-override={
                                                  overrides.inputElementHint8
                                                }
                                                hasGap={true}
                                                className={classNames(
                                                  projectcss.all,
                                                  sty.inputElementHint8
                                                )}
                                              >
                                                {false ? (
                                                  <div
                                                    data-plasmic-name={
                                                      "heart33"
                                                    }
                                                    data-plasmic-override={
                                                      overrides.heart33
                                                    }
                                                    className={classNames(
                                                      projectcss.all,
                                                      sty.heart33
                                                    )}
                                                  >
                                                    {false ? (
                                                      <Outlined4Icon
                                                        className={classNames(
                                                          projectcss.all,
                                                          sty.svg__vfYcQ
                                                        )}
                                                        role={"img"}
                                                      />
                                                    ) : null}
                                                    <Filled3Icon
                                                      className={classNames(
                                                        projectcss.all,
                                                        sty.svg___6SjS
                                                      )}
                                                      role={"img"}
                                                    />
                                                  </div>
                                                ) : null}
                                                <div
                                                  data-plasmic-name={"hint8"}
                                                  data-plasmic-override={
                                                    overrides.hint8
                                                  }
                                                  className={classNames(
                                                    projectcss.all,
                                                    sty.hint8
                                                  )}
                                                >
                                                  {false ? (
                                                    <div
                                                      data-plasmic-name={
                                                        "signedByBaseTypographyParagraphSmall8"
                                                      }
                                                      data-plasmic-override={
                                                        overrides.signedByBaseTypographyParagraphSmall8
                                                      }
                                                      className={classNames(
                                                        projectcss.all,
                                                        sty.signedByBaseTypographyParagraphSmall8
                                                      )}
                                                    />
                                                  ) : null}
                                                  <div
                                                    data-plasmic-name={"text96"}
                                                    data-plasmic-override={
                                                      overrides.text96
                                                    }
                                                    className={classNames(
                                                      projectcss.all,
                                                      projectcss.__wab_text,
                                                      sty.text96
                                                    )}
                                                  >
                                                    {"Hint"}
                                                  </div>
                                                  {false ? (
                                                    <div
                                                      data-plasmic-name={
                                                        "spacer84"
                                                      }
                                                      data-plasmic-override={
                                                        overrides.spacer84
                                                      }
                                                      className={classNames(
                                                        projectcss.all,
                                                        sty.spacer84
                                                      )}
                                                    />
                                                  ) : null}
                                                </div>
                                              </Stack__>
                                            ) : null}
                                          </Stack__>
                                        </Stack__>
                                      ) : null}
                                      <Stack__
                                        as={"div"}
                                        data-plasmic-name={"menuItem17"}
                                        data-plasmic-override={
                                          overrides.menuItem17
                                        }
                                        hasGap={true}
                                        className={classNames(
                                          projectcss.all,
                                          sty.menuItem17
                                        )}
                                      >
                                        {false ? (
                                          <div
                                            data-plasmic-name={
                                              "signedByBaseMenuItemOptionMediumStandardEnabled13"
                                            }
                                            data-plasmic-override={
                                              overrides.signedByBaseMenuItemOptionMediumStandardEnabled13
                                            }
                                            className={classNames(
                                              projectcss.all,
                                              sty.signedByBaseMenuItemOptionMediumStandardEnabled13
                                            )}
                                          />
                                        ) : null}
                                        {false ? (
                                          <Stack__
                                            as={"div"}
                                            data-plasmic-name={
                                              "menuItemControlMediumCheckboxUnchecked13"
                                            }
                                            data-plasmic-override={
                                              overrides.menuItemControlMediumCheckboxUnchecked13
                                            }
                                            hasGap={true}
                                            className={classNames(
                                              projectcss.all,
                                              sty.menuItemControlMediumCheckboxUnchecked13
                                            )}
                                          >
                                            {false ? (
                                              <div
                                                data-plasmic-name={
                                                  "signedByBaseMenuItemControlMediumCheckboxUnchecked13"
                                                }
                                                data-plasmic-override={
                                                  overrides.signedByBaseMenuItemControlMediumCheckboxUnchecked13
                                                }
                                                className={classNames(
                                                  projectcss.all,
                                                  sty.signedByBaseMenuItemControlMediumCheckboxUnchecked13
                                                )}
                                              />
                                            ) : null}
                                            <div
                                              data-plasmic-name={"icon13"}
                                              data-plasmic-override={
                                                overrides.icon13
                                              }
                                              className={classNames(
                                                projectcss.all,
                                                sty.icon13
                                              )}
                                            >
                                              {false ? (
                                                <Outlined8Icon
                                                  className={classNames(
                                                    projectcss.all,
                                                    sty.svg__ewXjk
                                                  )}
                                                  role={"img"}
                                                />
                                              ) : null}
                                              <Outlined8Icon
                                                className={classNames(
                                                  projectcss.all,
                                                  sty.svg__vqNrv
                                                )}
                                                role={"img"}
                                              />
                                            </div>
                                          </Stack__>
                                        ) : null}
                                        {false ? (
                                          <Stack__
                                            as={"div"}
                                            data-plasmic-name={
                                              "leadingEnhancer13"
                                            }
                                            data-plasmic-override={
                                              overrides.leadingEnhancer13
                                            }
                                            hasGap={true}
                                            className={classNames(
                                              projectcss.all,
                                              sty.leadingEnhancer13
                                            )}
                                          >
                                            <div
                                              data-plasmic-name={"heart34"}
                                              data-plasmic-override={
                                                overrides.heart34
                                              }
                                              className={classNames(
                                                projectcss.all,
                                                sty.heart34
                                              )}
                                            >
                                              {false ? (
                                                <Outlined5Icon
                                                  className={classNames(
                                                    projectcss.all,
                                                    sty.svg__dQos
                                                  )}
                                                  role={"img"}
                                                />
                                              ) : null}
                                              <Filled4Icon
                                                className={classNames(
                                                  projectcss.all,
                                                  sty.svg__p9B7D
                                                )}
                                                role={"img"}
                                              />
                                            </div>
                                          </Stack__>
                                        ) : null}
                                        <Stack__
                                          as={"div"}
                                          data-plasmic-name={"textFrame13"}
                                          data-plasmic-override={
                                            overrides.textFrame13
                                          }
                                          hasGap={true}
                                          className={classNames(
                                            projectcss.all,
                                            sty.textFrame13
                                          )}
                                        >
                                          <div
                                            data-plasmic-name={"leadingText13"}
                                            data-plasmic-override={
                                              overrides.leadingText13
                                            }
                                            className={classNames(
                                              projectcss.all,
                                              sty.leadingText13
                                            )}
                                          >
                                            <div
                                              data-plasmic-name={"typography45"}
                                              data-plasmic-override={
                                                overrides.typography45
                                              }
                                              className={classNames(
                                                projectcss.all,
                                                sty.typography45
                                              )}
                                            >
                                              {false ? (
                                                <div
                                                  data-plasmic-name={
                                                    "signedByBaseTypographyParagraphMedium37"
                                                  }
                                                  data-plasmic-override={
                                                    overrides.signedByBaseTypographyParagraphMedium37
                                                  }
                                                  className={classNames(
                                                    projectcss.all,
                                                    sty.signedByBaseTypographyParagraphMedium37
                                                  )}
                                                />
                                              ) : null}
                                              <div
                                                data-plasmic-name={"text97"}
                                                data-plasmic-override={
                                                  overrides.text97
                                                }
                                                className={classNames(
                                                  projectcss.all,
                                                  projectcss.__wab_text,
                                                  sty.text97
                                                )}
                                              >
                                                {"Mod\u00e8le de concert 20h"}
                                              </div>
                                              {false ? (
                                                <div
                                                  data-plasmic-name={"spacer85"}
                                                  data-plasmic-override={
                                                    overrides.spacer85
                                                  }
                                                  className={classNames(
                                                    projectcss.all,
                                                    sty.spacer85
                                                  )}
                                                />
                                              ) : null}
                                            </div>
                                            {false ? (
                                              <div
                                                data-plasmic-name={
                                                  "typography46"
                                                }
                                                data-plasmic-override={
                                                  overrides.typography46
                                                }
                                                className={classNames(
                                                  projectcss.all,
                                                  sty.typography46
                                                )}
                                              >
                                                {false ? (
                                                  <div
                                                    data-plasmic-name={
                                                      "signedByBaseTypographyParagraphMedium38"
                                                    }
                                                    data-plasmic-override={
                                                      overrides.signedByBaseTypographyParagraphMedium38
                                                    }
                                                    className={classNames(
                                                      projectcss.all,
                                                      sty.signedByBaseTypographyParagraphMedium38
                                                    )}
                                                  />
                                                ) : null}
                                                <div
                                                  data-plasmic-name={"text98"}
                                                  data-plasmic-override={
                                                    overrides.text98
                                                  }
                                                  className={classNames(
                                                    projectcss.all,
                                                    projectcss.__wab_text,
                                                    sty.text98
                                                  )}
                                                >
                                                  {"Supporting text"}
                                                </div>
                                                {false ? (
                                                  <div
                                                    data-plasmic-name={
                                                      "spacer86"
                                                    }
                                                    data-plasmic-override={
                                                      overrides.spacer86
                                                    }
                                                    className={classNames(
                                                      projectcss.all,
                                                      sty.spacer86
                                                    )}
                                                  />
                                                ) : null}
                                              </div>
                                            ) : null}
                                          </div>
                                          {false ? (
                                            <div
                                              data-plasmic-name={"typography47"}
                                              data-plasmic-override={
                                                overrides.typography47
                                              }
                                              className={classNames(
                                                projectcss.all,
                                                sty.typography47
                                              )}
                                            >
                                              {false ? (
                                                <div
                                                  data-plasmic-name={
                                                    "signedByBaseTypographyParagraphMedium39"
                                                  }
                                                  data-plasmic-override={
                                                    overrides.signedByBaseTypographyParagraphMedium39
                                                  }
                                                  className={classNames(
                                                    projectcss.all,
                                                    sty.signedByBaseTypographyParagraphMedium39
                                                  )}
                                                />
                                              ) : null}
                                              <div
                                                className={classNames(
                                                  projectcss.all,
                                                  projectcss.__wab_text,
                                                  sty.text__u9UTa
                                                )}
                                              >
                                                {"Text"}
                                              </div>
                                              {false ? (
                                                <div
                                                  data-plasmic-name={"spacer87"}
                                                  data-plasmic-override={
                                                    overrides.spacer87
                                                  }
                                                  className={classNames(
                                                    projectcss.all,
                                                    sty.spacer87
                                                  )}
                                                />
                                              ) : null}
                                            </div>
                                          ) : null}
                                        </Stack__>
                                        {false ? (
                                          <Stack__
                                            as={"div"}
                                            data-plasmic-name={
                                              "trailingEnhancer13"
                                            }
                                            data-plasmic-override={
                                              overrides.trailingEnhancer13
                                            }
                                            hasGap={true}
                                            className={classNames(
                                              projectcss.all,
                                              sty.trailingEnhancer13
                                            )}
                                          >
                                            <div
                                              data-plasmic-name={"heart35"}
                                              data-plasmic-override={
                                                overrides.heart35
                                              }
                                              className={classNames(
                                                projectcss.all,
                                                sty.heart35
                                              )}
                                            >
                                              {false ? (
                                                <Outlined5Icon
                                                  className={classNames(
                                                    projectcss.all,
                                                    sty.svg__nBmot
                                                  )}
                                                  role={"img"}
                                                />
                                              ) : null}
                                              <Filled4Icon
                                                className={classNames(
                                                  projectcss.all,
                                                  sty.svg__lxhX
                                                )}
                                                role={"img"}
                                              />
                                            </div>
                                          </Stack__>
                                        ) : null}
                                      </Stack__>
                                      <Stack__
                                        as={"div"}
                                        data-plasmic-name={"menuItem18"}
                                        data-plasmic-override={
                                          overrides.menuItem18
                                        }
                                        hasGap={true}
                                        className={classNames(
                                          projectcss.all,
                                          sty.menuItem18
                                        )}
                                      >
                                        {false ? (
                                          <div
                                            data-plasmic-name={
                                              "signedByBaseMenuItemOptionMediumStandardEnabled14"
                                            }
                                            data-plasmic-override={
                                              overrides.signedByBaseMenuItemOptionMediumStandardEnabled14
                                            }
                                            className={classNames(
                                              projectcss.all,
                                              sty.signedByBaseMenuItemOptionMediumStandardEnabled14
                                            )}
                                          />
                                        ) : null}
                                        {false ? (
                                          <Stack__
                                            as={"div"}
                                            data-plasmic-name={
                                              "menuItemControlMediumCheckboxUnchecked14"
                                            }
                                            data-plasmic-override={
                                              overrides.menuItemControlMediumCheckboxUnchecked14
                                            }
                                            hasGap={true}
                                            className={classNames(
                                              projectcss.all,
                                              sty.menuItemControlMediumCheckboxUnchecked14
                                            )}
                                          >
                                            {false ? (
                                              <div
                                                data-plasmic-name={
                                                  "signedByBaseMenuItemControlMediumCheckboxUnchecked14"
                                                }
                                                data-plasmic-override={
                                                  overrides.signedByBaseMenuItemControlMediumCheckboxUnchecked14
                                                }
                                                className={classNames(
                                                  projectcss.all,
                                                  sty.signedByBaseMenuItemControlMediumCheckboxUnchecked14
                                                )}
                                              />
                                            ) : null}
                                            <div
                                              data-plasmic-name={"icon14"}
                                              data-plasmic-override={
                                                overrides.icon14
                                              }
                                              className={classNames(
                                                projectcss.all,
                                                sty.icon14
                                              )}
                                            >
                                              {false ? (
                                                <Outlined8Icon
                                                  className={classNames(
                                                    projectcss.all,
                                                    sty.svg__jZgxP
                                                  )}
                                                  role={"img"}
                                                />
                                              ) : null}
                                              <Outlined8Icon
                                                className={classNames(
                                                  projectcss.all,
                                                  sty.svg__fVBdn
                                                )}
                                                role={"img"}
                                              />
                                            </div>
                                          </Stack__>
                                        ) : null}
                                        {false ? (
                                          <Stack__
                                            as={"div"}
                                            data-plasmic-name={
                                              "leadingEnhancer14"
                                            }
                                            data-plasmic-override={
                                              overrides.leadingEnhancer14
                                            }
                                            hasGap={true}
                                            className={classNames(
                                              projectcss.all,
                                              sty.leadingEnhancer14
                                            )}
                                          >
                                            <div
                                              data-plasmic-name={"heart36"}
                                              data-plasmic-override={
                                                overrides.heart36
                                              }
                                              className={classNames(
                                                projectcss.all,
                                                sty.heart36
                                              )}
                                            >
                                              {false ? (
                                                <Outlined5Icon
                                                  className={classNames(
                                                    projectcss.all,
                                                    sty.svg__pfd0K
                                                  )}
                                                  role={"img"}
                                                />
                                              ) : null}
                                              <Filled4Icon
                                                className={classNames(
                                                  projectcss.all,
                                                  sty.svg___7VShV
                                                )}
                                                role={"img"}
                                              />
                                            </div>
                                          </Stack__>
                                        ) : null}
                                        <Stack__
                                          as={"div"}
                                          data-plasmic-name={"textFrame14"}
                                          data-plasmic-override={
                                            overrides.textFrame14
                                          }
                                          hasGap={true}
                                          className={classNames(
                                            projectcss.all,
                                            sty.textFrame14
                                          )}
                                        >
                                          <div
                                            data-plasmic-name={"leadingText14"}
                                            data-plasmic-override={
                                              overrides.leadingText14
                                            }
                                            className={classNames(
                                              projectcss.all,
                                              sty.leadingText14
                                            )}
                                          >
                                            <div
                                              data-plasmic-name={"typography48"}
                                              data-plasmic-override={
                                                overrides.typography48
                                              }
                                              className={classNames(
                                                projectcss.all,
                                                sty.typography48
                                              )}
                                            >
                                              {false ? (
                                                <div
                                                  data-plasmic-name={
                                                    "signedByBaseTypographyParagraphMedium40"
                                                  }
                                                  data-plasmic-override={
                                                    overrides.signedByBaseTypographyParagraphMedium40
                                                  }
                                                  className={classNames(
                                                    projectcss.all,
                                                    sty.signedByBaseTypographyParagraphMedium40
                                                  )}
                                                />
                                              ) : null}
                                              <div
                                                data-plasmic-name={"text99"}
                                                data-plasmic-override={
                                                  overrides.text99
                                                }
                                                className={classNames(
                                                  projectcss.all,
                                                  projectcss.__wab_text,
                                                  sty.text99
                                                )}
                                              >
                                                {"Mod\u00e8le de match 21h"}
                                              </div>
                                              {false ? (
                                                <div
                                                  data-plasmic-name={"spacer88"}
                                                  data-plasmic-override={
                                                    overrides.spacer88
                                                  }
                                                  className={classNames(
                                                    projectcss.all,
                                                    sty.spacer88
                                                  )}
                                                />
                                              ) : null}
                                            </div>
                                            {false ? (
                                              <div
                                                data-plasmic-name={
                                                  "typography49"
                                                }
                                                data-plasmic-override={
                                                  overrides.typography49
                                                }
                                                className={classNames(
                                                  projectcss.all,
                                                  sty.typography49
                                                )}
                                              >
                                                {false ? (
                                                  <div
                                                    data-plasmic-name={
                                                      "signedByBaseTypographyParagraphMedium41"
                                                    }
                                                    data-plasmic-override={
                                                      overrides.signedByBaseTypographyParagraphMedium41
                                                    }
                                                    className={classNames(
                                                      projectcss.all,
                                                      sty.signedByBaseTypographyParagraphMedium41
                                                    )}
                                                  />
                                                ) : null}
                                                <div
                                                  data-plasmic-name={"text100"}
                                                  data-plasmic-override={
                                                    overrides.text100
                                                  }
                                                  className={classNames(
                                                    projectcss.all,
                                                    projectcss.__wab_text,
                                                    sty.text100
                                                  )}
                                                >
                                                  {"Supporting text"}
                                                </div>
                                                {false ? (
                                                  <div
                                                    data-plasmic-name={
                                                      "spacer89"
                                                    }
                                                    data-plasmic-override={
                                                      overrides.spacer89
                                                    }
                                                    className={classNames(
                                                      projectcss.all,
                                                      sty.spacer89
                                                    )}
                                                  />
                                                ) : null}
                                              </div>
                                            ) : null}
                                          </div>
                                          {false ? (
                                            <div
                                              data-plasmic-name={"typography50"}
                                              data-plasmic-override={
                                                overrides.typography50
                                              }
                                              className={classNames(
                                                projectcss.all,
                                                sty.typography50
                                              )}
                                            >
                                              {false ? (
                                                <div
                                                  data-plasmic-name={
                                                    "signedByBaseTypographyParagraphMedium42"
                                                  }
                                                  data-plasmic-override={
                                                    overrides.signedByBaseTypographyParagraphMedium42
                                                  }
                                                  className={classNames(
                                                    projectcss.all,
                                                    sty.signedByBaseTypographyParagraphMedium42
                                                  )}
                                                />
                                              ) : null}
                                              <div
                                                className={classNames(
                                                  projectcss.all,
                                                  projectcss.__wab_text,
                                                  sty.text__gtEx6
                                                )}
                                              >
                                                {"Text"}
                                              </div>
                                              {false ? (
                                                <div
                                                  data-plasmic-name={"spacer90"}
                                                  data-plasmic-override={
                                                    overrides.spacer90
                                                  }
                                                  className={classNames(
                                                    projectcss.all,
                                                    sty.spacer90
                                                  )}
                                                />
                                              ) : null}
                                            </div>
                                          ) : null}
                                        </Stack__>
                                        {false ? (
                                          <Stack__
                                            as={"div"}
                                            data-plasmic-name={
                                              "trailingEnhancer14"
                                            }
                                            data-plasmic-override={
                                              overrides.trailingEnhancer14
                                            }
                                            hasGap={true}
                                            className={classNames(
                                              projectcss.all,
                                              sty.trailingEnhancer14
                                            )}
                                          >
                                            <div
                                              data-plasmic-name={
                                                "checkmarkSmall4"
                                              }
                                              data-plasmic-override={
                                                overrides.checkmarkSmall4
                                              }
                                              className={classNames(
                                                projectcss.all,
                                                sty.checkmarkSmall4
                                              )}
                                            >
                                              {false ? (
                                                <Outlined9Icon
                                                  className={classNames(
                                                    projectcss.all,
                                                    sty.svg__q4H3O
                                                  )}
                                                  role={"img"}
                                                />
                                              ) : null}
                                              <Outlined9Icon
                                                className={classNames(
                                                  projectcss.all,
                                                  sty.svg___1Tdcy
                                                )}
                                                role={"img"}
                                              />
                                            </div>
                                          </Stack__>
                                        ) : null}
                                      </Stack__>
                                      <Stack__
                                        as={"div"}
                                        data-plasmic-name={"menuItem19"}
                                        data-plasmic-override={
                                          overrides.menuItem19
                                        }
                                        hasGap={true}
                                        className={classNames(
                                          projectcss.all,
                                          sty.menuItem19
                                        )}
                                      >
                                        {false ? (
                                          <div
                                            data-plasmic-name={
                                              "signedByBaseMenuItemOptionMediumStandardEnabled15"
                                            }
                                            data-plasmic-override={
                                              overrides.signedByBaseMenuItemOptionMediumStandardEnabled15
                                            }
                                            className={classNames(
                                              projectcss.all,
                                              sty.signedByBaseMenuItemOptionMediumStandardEnabled15
                                            )}
                                          />
                                        ) : null}
                                        {false ? (
                                          <Stack__
                                            as={"div"}
                                            data-plasmic-name={
                                              "menuItemControlMediumCheckboxUnchecked15"
                                            }
                                            data-plasmic-override={
                                              overrides.menuItemControlMediumCheckboxUnchecked15
                                            }
                                            hasGap={true}
                                            className={classNames(
                                              projectcss.all,
                                              sty.menuItemControlMediumCheckboxUnchecked15
                                            )}
                                          >
                                            {false ? (
                                              <div
                                                data-plasmic-name={
                                                  "signedByBaseMenuItemControlMediumCheckboxUnchecked15"
                                                }
                                                data-plasmic-override={
                                                  overrides.signedByBaseMenuItemControlMediumCheckboxUnchecked15
                                                }
                                                className={classNames(
                                                  projectcss.all,
                                                  sty.signedByBaseMenuItemControlMediumCheckboxUnchecked15
                                                )}
                                              />
                                            ) : null}
                                            <div
                                              data-plasmic-name={"icon15"}
                                              data-plasmic-override={
                                                overrides.icon15
                                              }
                                              className={classNames(
                                                projectcss.all,
                                                sty.icon15
                                              )}
                                            >
                                              {false ? (
                                                <Outlined8Icon
                                                  className={classNames(
                                                    projectcss.all,
                                                    sty.svg___8IHaY
                                                  )}
                                                  role={"img"}
                                                />
                                              ) : null}
                                              <Outlined8Icon
                                                className={classNames(
                                                  projectcss.all,
                                                  sty.svg__scZz5
                                                )}
                                                role={"img"}
                                              />
                                            </div>
                                          </Stack__>
                                        ) : null}
                                        {false ? (
                                          <Stack__
                                            as={"div"}
                                            data-plasmic-name={
                                              "leadingEnhancer15"
                                            }
                                            data-plasmic-override={
                                              overrides.leadingEnhancer15
                                            }
                                            hasGap={true}
                                            className={classNames(
                                              projectcss.all,
                                              sty.leadingEnhancer15
                                            )}
                                          >
                                            <div
                                              data-plasmic-name={"heart37"}
                                              data-plasmic-override={
                                                overrides.heart37
                                              }
                                              className={classNames(
                                                projectcss.all,
                                                sty.heart37
                                              )}
                                            >
                                              {false ? (
                                                <Outlined5Icon
                                                  className={classNames(
                                                    projectcss.all,
                                                    sty.svg___03S0B
                                                  )}
                                                  role={"img"}
                                                />
                                              ) : null}
                                              <Filled4Icon
                                                className={classNames(
                                                  projectcss.all,
                                                  sty.svg__mYqsI
                                                )}
                                                role={"img"}
                                              />
                                            </div>
                                          </Stack__>
                                        ) : null}
                                        <IcRoundPlusIcon
                                          className={classNames(
                                            projectcss.all,
                                            sty.svg__sBnV
                                          )}
                                          role={"img"}
                                        />

                                        <Stack__
                                          as={"div"}
                                          data-plasmic-name={"textFrame15"}
                                          data-plasmic-override={
                                            overrides.textFrame15
                                          }
                                          hasGap={true}
                                          className={classNames(
                                            projectcss.all,
                                            sty.textFrame15
                                          )}
                                        >
                                          <div
                                            data-plasmic-name={"leadingText15"}
                                            data-plasmic-override={
                                              overrides.leadingText15
                                            }
                                            className={classNames(
                                              projectcss.all,
                                              sty.leadingText15
                                            )}
                                          >
                                            <div
                                              data-plasmic-name={"typography51"}
                                              data-plasmic-override={
                                                overrides.typography51
                                              }
                                              className={classNames(
                                                projectcss.all,
                                                sty.typography51
                                              )}
                                            >
                                              {false ? (
                                                <div
                                                  data-plasmic-name={
                                                    "signedByBaseTypographyParagraphMedium43"
                                                  }
                                                  data-plasmic-override={
                                                    overrides.signedByBaseTypographyParagraphMedium43
                                                  }
                                                  className={classNames(
                                                    projectcss.all,
                                                    sty.signedByBaseTypographyParagraphMedium43
                                                  )}
                                                />
                                              ) : null}
                                              <div
                                                data-plasmic-name={"text101"}
                                                data-plasmic-override={
                                                  overrides.text101
                                                }
                                                className={classNames(
                                                  projectcss.all,
                                                  projectcss.__wab_text,
                                                  sty.text101
                                                )}
                                              >
                                                {"Dispositif vierge"}
                                              </div>
                                              {false ? (
                                                <div
                                                  data-plasmic-name={"spacer91"}
                                                  data-plasmic-override={
                                                    overrides.spacer91
                                                  }
                                                  className={classNames(
                                                    projectcss.all,
                                                    sty.spacer91
                                                  )}
                                                />
                                              ) : null}
                                            </div>
                                            {false ? (
                                              <div
                                                data-plasmic-name={
                                                  "typography52"
                                                }
                                                data-plasmic-override={
                                                  overrides.typography52
                                                }
                                                className={classNames(
                                                  projectcss.all,
                                                  sty.typography52
                                                )}
                                              >
                                                {false ? (
                                                  <div
                                                    data-plasmic-name={
                                                      "signedByBaseTypographyParagraphMedium44"
                                                    }
                                                    data-plasmic-override={
                                                      overrides.signedByBaseTypographyParagraphMedium44
                                                    }
                                                    className={classNames(
                                                      projectcss.all,
                                                      sty.signedByBaseTypographyParagraphMedium44
                                                    )}
                                                  />
                                                ) : null}
                                                <div
                                                  data-plasmic-name={"text102"}
                                                  data-plasmic-override={
                                                    overrides.text102
                                                  }
                                                  className={classNames(
                                                    projectcss.all,
                                                    projectcss.__wab_text,
                                                    sty.text102
                                                  )}
                                                >
                                                  {"Supporting text"}
                                                </div>
                                                {false ? (
                                                  <div
                                                    data-plasmic-name={
                                                      "spacer92"
                                                    }
                                                    data-plasmic-override={
                                                      overrides.spacer92
                                                    }
                                                    className={classNames(
                                                      projectcss.all,
                                                      sty.spacer92
                                                    )}
                                                  />
                                                ) : null}
                                              </div>
                                            ) : null}
                                          </div>
                                          {false ? (
                                            <div
                                              data-plasmic-name={"typography53"}
                                              data-plasmic-override={
                                                overrides.typography53
                                              }
                                              className={classNames(
                                                projectcss.all,
                                                sty.typography53
                                              )}
                                            >
                                              {false ? (
                                                <div
                                                  data-plasmic-name={
                                                    "signedByBaseTypographyParagraphMedium45"
                                                  }
                                                  data-plasmic-override={
                                                    overrides.signedByBaseTypographyParagraphMedium45
                                                  }
                                                  className={classNames(
                                                    projectcss.all,
                                                    sty.signedByBaseTypographyParagraphMedium45
                                                  )}
                                                />
                                              ) : null}
                                              <div
                                                className={classNames(
                                                  projectcss.all,
                                                  projectcss.__wab_text,
                                                  sty.text__r6BLo
                                                )}
                                              >
                                                {"Text"}
                                              </div>
                                              {false ? (
                                                <div
                                                  data-plasmic-name={"spacer93"}
                                                  data-plasmic-override={
                                                    overrides.spacer93
                                                  }
                                                  className={classNames(
                                                    projectcss.all,
                                                    sty.spacer93
                                                  )}
                                                />
                                              ) : null}
                                            </div>
                                          ) : null}
                                        </Stack__>
                                        {false ? (
                                          <Stack__
                                            as={"div"}
                                            data-plasmic-name={
                                              "trailingEnhancer15"
                                            }
                                            data-plasmic-override={
                                              overrides.trailingEnhancer15
                                            }
                                            hasGap={true}
                                            className={classNames(
                                              projectcss.all,
                                              sty.trailingEnhancer15
                                            )}
                                          >
                                            <div
                                              data-plasmic-name={"heart38"}
                                              data-plasmic-override={
                                                overrides.heart38
                                              }
                                              className={classNames(
                                                projectcss.all,
                                                sty.heart38
                                              )}
                                            >
                                              {false ? (
                                                <Outlined5Icon
                                                  className={classNames(
                                                    projectcss.all,
                                                    sty.svg___7G67A
                                                  )}
                                                  role={"img"}
                                                />
                                              ) : null}
                                              <Filled4Icon
                                                className={classNames(
                                                  projectcss.all,
                                                  sty.svg__mDC7
                                                )}
                                                role={"img"}
                                              />
                                            </div>
                                          </Stack__>
                                        ) : null}
                                      </Stack__>
                                      {false ? (
                                        <Stack__
                                          as={"div"}
                                          data-plasmic-name={"menuItem20"}
                                          data-plasmic-override={
                                            overrides.menuItem20
                                          }
                                          hasGap={true}
                                          className={classNames(
                                            projectcss.all,
                                            sty.menuItem20
                                          )}
                                        >
                                          {false ? (
                                            <div
                                              data-plasmic-name={
                                                "signedByBaseMenuItemOptionMediumStandardEnabled16"
                                              }
                                              data-plasmic-override={
                                                overrides.signedByBaseMenuItemOptionMediumStandardEnabled16
                                              }
                                              className={classNames(
                                                projectcss.all,
                                                sty.signedByBaseMenuItemOptionMediumStandardEnabled16
                                              )}
                                            />
                                          ) : null}
                                          {false ? (
                                            <Stack__
                                              as={"div"}
                                              data-plasmic-name={
                                                "menuItemControlMediumCheckboxUnchecked16"
                                              }
                                              data-plasmic-override={
                                                overrides.menuItemControlMediumCheckboxUnchecked16
                                              }
                                              hasGap={true}
                                              className={classNames(
                                                projectcss.all,
                                                sty.menuItemControlMediumCheckboxUnchecked16
                                              )}
                                            >
                                              {false ? (
                                                <div
                                                  data-plasmic-name={
                                                    "signedByBaseMenuItemControlMediumCheckboxUnchecked16"
                                                  }
                                                  data-plasmic-override={
                                                    overrides.signedByBaseMenuItemControlMediumCheckboxUnchecked16
                                                  }
                                                  className={classNames(
                                                    projectcss.all,
                                                    sty.signedByBaseMenuItemControlMediumCheckboxUnchecked16
                                                  )}
                                                />
                                              ) : null}
                                              <div
                                                data-plasmic-name={"icon16"}
                                                data-plasmic-override={
                                                  overrides.icon16
                                                }
                                                className={classNames(
                                                  projectcss.all,
                                                  sty.icon16
                                                )}
                                              >
                                                {false ? (
                                                  <Outlined8Icon
                                                    className={classNames(
                                                      projectcss.all,
                                                      sty.svg__e82XP
                                                    )}
                                                    role={"img"}
                                                  />
                                                ) : null}
                                                <Outlined8Icon
                                                  className={classNames(
                                                    projectcss.all,
                                                    sty.svg__gL
                                                  )}
                                                  role={"img"}
                                                />
                                              </div>
                                            </Stack__>
                                          ) : null}
                                          {false ? (
                                            <Stack__
                                              as={"div"}
                                              data-plasmic-name={
                                                "leadingEnhancer16"
                                              }
                                              data-plasmic-override={
                                                overrides.leadingEnhancer16
                                              }
                                              hasGap={true}
                                              className={classNames(
                                                projectcss.all,
                                                sty.leadingEnhancer16
                                              )}
                                            >
                                              <div
                                                data-plasmic-name={"heart39"}
                                                data-plasmic-override={
                                                  overrides.heart39
                                                }
                                                className={classNames(
                                                  projectcss.all,
                                                  sty.heart39
                                                )}
                                              >
                                                {false ? (
                                                  <Outlined5Icon
                                                    className={classNames(
                                                      projectcss.all,
                                                      sty.svg__dKePw
                                                    )}
                                                    role={"img"}
                                                  />
                                                ) : null}
                                                <Filled4Icon
                                                  className={classNames(
                                                    projectcss.all,
                                                    sty.svg__nersb
                                                  )}
                                                  role={"img"}
                                                />
                                              </div>
                                            </Stack__>
                                          ) : null}
                                          <Stack__
                                            as={"div"}
                                            data-plasmic-name={"textFrame16"}
                                            data-plasmic-override={
                                              overrides.textFrame16
                                            }
                                            hasGap={true}
                                            className={classNames(
                                              projectcss.all,
                                              sty.textFrame16
                                            )}
                                          >
                                            <div
                                              data-plasmic-name={
                                                "leadingText16"
                                              }
                                              data-plasmic-override={
                                                overrides.leadingText16
                                              }
                                              className={classNames(
                                                projectcss.all,
                                                sty.leadingText16
                                              )}
                                            >
                                              <div
                                                data-plasmic-name={
                                                  "typography54"
                                                }
                                                data-plasmic-override={
                                                  overrides.typography54
                                                }
                                                className={classNames(
                                                  projectcss.all,
                                                  sty.typography54
                                                )}
                                              >
                                                {false ? (
                                                  <div
                                                    data-plasmic-name={
                                                      "signedByBaseTypographyParagraphMedium46"
                                                    }
                                                    data-plasmic-override={
                                                      overrides.signedByBaseTypographyParagraphMedium46
                                                    }
                                                    className={classNames(
                                                      projectcss.all,
                                                      sty.signedByBaseTypographyParagraphMedium46
                                                    )}
                                                  />
                                                ) : null}
                                                <div
                                                  data-plasmic-name={"text103"}
                                                  data-plasmic-override={
                                                    overrides.text103
                                                  }
                                                  className={classNames(
                                                    projectcss.all,
                                                    projectcss.__wab_text,
                                                    sty.text103
                                                  )}
                                                >
                                                  {"Options"}
                                                </div>
                                                {false ? (
                                                  <div
                                                    data-plasmic-name={
                                                      "spacer94"
                                                    }
                                                    data-plasmic-override={
                                                      overrides.spacer94
                                                    }
                                                    className={classNames(
                                                      projectcss.all,
                                                      sty.spacer94
                                                    )}
                                                  />
                                                ) : null}
                                              </div>
                                              {false ? (
                                                <div
                                                  data-plasmic-name={
                                                    "typography55"
                                                  }
                                                  data-plasmic-override={
                                                    overrides.typography55
                                                  }
                                                  className={classNames(
                                                    projectcss.all,
                                                    sty.typography55
                                                  )}
                                                >
                                                  {false ? (
                                                    <div
                                                      data-plasmic-name={
                                                        "signedByBaseTypographyParagraphMedium47"
                                                      }
                                                      data-plasmic-override={
                                                        overrides.signedByBaseTypographyParagraphMedium47
                                                      }
                                                      className={classNames(
                                                        projectcss.all,
                                                        sty.signedByBaseTypographyParagraphMedium47
                                                      )}
                                                    />
                                                  ) : null}
                                                  <div
                                                    data-plasmic-name={
                                                      "text104"
                                                    }
                                                    data-plasmic-override={
                                                      overrides.text104
                                                    }
                                                    className={classNames(
                                                      projectcss.all,
                                                      projectcss.__wab_text,
                                                      sty.text104
                                                    )}
                                                  >
                                                    {"Supporting text"}
                                                  </div>
                                                  {false ? (
                                                    <div
                                                      data-plasmic-name={
                                                        "spacer95"
                                                      }
                                                      data-plasmic-override={
                                                        overrides.spacer95
                                                      }
                                                      className={classNames(
                                                        projectcss.all,
                                                        sty.spacer95
                                                      )}
                                                    />
                                                  ) : null}
                                                </div>
                                              ) : null}
                                            </div>
                                            {false ? (
                                              <div
                                                data-plasmic-name={
                                                  "typography56"
                                                }
                                                data-plasmic-override={
                                                  overrides.typography56
                                                }
                                                className={classNames(
                                                  projectcss.all,
                                                  sty.typography56
                                                )}
                                              >
                                                {false ? (
                                                  <div
                                                    data-plasmic-name={
                                                      "signedByBaseTypographyParagraphMedium48"
                                                    }
                                                    data-plasmic-override={
                                                      overrides.signedByBaseTypographyParagraphMedium48
                                                    }
                                                    className={classNames(
                                                      projectcss.all,
                                                      sty.signedByBaseTypographyParagraphMedium48
                                                    )}
                                                  />
                                                ) : null}
                                                <div
                                                  className={classNames(
                                                    projectcss.all,
                                                    projectcss.__wab_text,
                                                    sty.text__pMUd5
                                                  )}
                                                >
                                                  {"Text"}
                                                </div>
                                                {false ? (
                                                  <div
                                                    data-plasmic-name={
                                                      "spacer96"
                                                    }
                                                    data-plasmic-override={
                                                      overrides.spacer96
                                                    }
                                                    className={classNames(
                                                      projectcss.all,
                                                      sty.spacer96
                                                    )}
                                                  />
                                                ) : null}
                                              </div>
                                            ) : null}
                                          </Stack__>
                                          {false ? (
                                            <Stack__
                                              as={"div"}
                                              data-plasmic-name={
                                                "trailingEnhancer16"
                                              }
                                              data-plasmic-override={
                                                overrides.trailingEnhancer16
                                              }
                                              hasGap={true}
                                              className={classNames(
                                                projectcss.all,
                                                sty.trailingEnhancer16
                                              )}
                                            >
                                              <div
                                                data-plasmic-name={"heart40"}
                                                data-plasmic-override={
                                                  overrides.heart40
                                                }
                                                className={classNames(
                                                  projectcss.all,
                                                  sty.heart40
                                                )}
                                              >
                                                {false ? (
                                                  <Outlined5Icon
                                                    className={classNames(
                                                      projectcss.all,
                                                      sty.svg__w9S6
                                                    )}
                                                    role={"img"}
                                                  />
                                                ) : null}
                                                <Filled4Icon
                                                  className={classNames(
                                                    projectcss.all,
                                                    sty.svg__mj4Zs
                                                  )}
                                                  role={"img"}
                                                />
                                              </div>
                                            </Stack__>
                                          ) : null}
                                        </Stack__>
                                      ) : null}
                                      <div
                                        data-plasmic-name={"scrollBar4"}
                                        data-plasmic-override={
                                          overrides.scrollBar4
                                        }
                                        className={classNames(
                                          projectcss.all,
                                          sty.scrollBar4
                                        )}
                                      />
                                    </div>
                                  </div>
                                </Stack__>
                              ) : null}
                              <DropDown
                                data-plasmic-name={"model6"}
                                data-plasmic-override={overrides.model6}
                                check={false}
                                className={classNames(
                                  "__wab_instance",
                                  sty.model6
                                )}
                                label={"Mod\u00e8le de Runsheet & Dispositif*"}
                                options={["Default", "Special"]}
                                showLabel={true}
                                state={"default"}
                                type={"default"}
                              />

                              <Stack__
                                as={"div"}
                                data-plasmic-name={"buttons4"}
                                data-plasmic-override={overrides.buttons4}
                                hasGap={true}
                                className={classNames(
                                  projectcss.all,
                                  sty.buttons4
                                )}
                              >
                                <Button
                                  data-plasmic-name={"button13"}
                                  data-plasmic-override={overrides.button13}
                                  className={classNames(
                                    "__wab_instance",
                                    sty.button13
                                  )}
                                  label={
                                    <div
                                      className={classNames(
                                        projectcss.all,
                                        projectcss.__wab_text,
                                        sty.text___5XEHf
                                      )}
                                    >
                                      {"Cr\u00e9er"}
                                    </div>
                                  }
                                />

                                {false ? (
                                  <Stack__
                                    as={"div"}
                                    data-plasmic-name={"frame1073713927"}
                                    data-plasmic-override={
                                      overrides.frame1073713927
                                    }
                                    hasGap={true}
                                    className={classNames(
                                      projectcss.all,
                                      sty.frame1073713927
                                    )}
                                  >
                                    <div
                                      className={classNames(
                                        projectcss.all,
                                        sty.freeBox__n7Dje
                                      )}
                                    >
                                      <Line9Icon
                                        className={classNames(
                                          projectcss.all,
                                          sty.svg__hKue9
                                        )}
                                        role={"img"}
                                      />
                                    </div>
                                    <div
                                      className={classNames(
                                        projectcss.all,
                                        projectcss.__wab_text,
                                        sty.text__hay4V
                                      )}
                                    >
                                      {"OU"}
                                    </div>
                                    <div
                                      className={classNames(
                                        projectcss.all,
                                        sty.freeBox__sE7H
                                      )}
                                    >
                                      <Line9Icon
                                        className={classNames(
                                          projectcss.all,
                                          sty.svg__hNmRx
                                        )}
                                        role={"img"}
                                      />
                                    </div>
                                  </Stack__>
                                ) : null}
                                {false ? (
                                  <Stack__
                                    as={"div"}
                                    data-plasmic-name={"frame1073713933"}
                                    data-plasmic-override={
                                      overrides.frame1073713933
                                    }
                                    hasGap={true}
                                    className={classNames(
                                      projectcss.all,
                                      sty.frame1073713933
                                    )}
                                  >
                                    <Button
                                      data-plasmic-name={"button14"}
                                      data-plasmic-override={overrides.button14}
                                      className={classNames(
                                        "__wab_instance",
                                        sty.button14
                                      )}
                                    />

                                    <Stack__
                                      as={"div"}
                                      data-plasmic-name={"button15"}
                                      data-plasmic-override={overrides.button15}
                                      hasGap={true}
                                      className={classNames(
                                        projectcss.all,
                                        sty.button15
                                      )}
                                    >
                                      <IcTwotoneAppleIcon
                                        className={classNames(
                                          projectcss.all,
                                          sty.svg__x2Wwh
                                        )}
                                        role={"img"}
                                      />

                                      <div
                                        className={classNames(
                                          projectcss.all,
                                          projectcss.__wab_text,
                                          sty.text__a0GN
                                        )}
                                      >
                                        {"Apple"}
                                      </div>
                                    </Stack__>
                                    <Stack__
                                      as={"div"}
                                      data-plasmic-name={"button16"}
                                      data-plasmic-override={overrides.button16}
                                      hasGap={true}
                                      className={classNames(
                                        projectcss.all,
                                        sty.button16
                                      )}
                                    >
                                      <MdiFacebookIcon
                                        className={classNames(
                                          projectcss.all,
                                          sty.svg__ey3Ge
                                        )}
                                        role={"img"}
                                      />

                                      <div
                                        className={classNames(
                                          projectcss.all,
                                          projectcss.__wab_text,
                                          sty.text___7Kbp1
                                        )}
                                      >
                                        {"Facebook"}
                                      </div>
                                    </Stack__>
                                  </Stack__>
                                ) : null}
                              </Stack__>
                            </Stack__>
                          </React.Fragment>
                        }
                        footer={
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__g5FcY
                            )}
                          />
                        }
                        heading={
                          <div
                            data-plasmic-name={"frame1437254022"}
                            data-plasmic-override={overrides.frame1437254022}
                            className={classNames(
                              projectcss.all,
                              sty.frame1437254022
                            )}
                          >
                            <div
                              data-plasmic-name={"name9"}
                              data-plasmic-override={overrides.name9}
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.name9
                              )}
                            >
                              {"Dupliquer cet \u00e9l\u00e9ment ?"}
                            </div>
                            <Stack__
                              as={"div"}
                              data-plasmic-name={"frame1437254023"}
                              data-plasmic-override={overrides.frame1437254023}
                              hasGap={true}
                              className={classNames(
                                projectcss.all,
                                sty.frame1437254023
                              )}
                            >
                              <LinkSimpleIcon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__czUdw
                                )}
                                role={"img"}
                              />

                              <XIcon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__urpii
                                )}
                                role={"img"}
                              />
                            </Stack__>
                          </div>
                        }
                        isOpen={generateStateValueProp($state, [
                          "duplicate",
                          "isOpen"
                        ])}
                        noTrigger={true}
                        onOpenChange={async (...eventArgs: any) => {
                          generateStateOnChangeProp($state, [
                            "duplicate",
                            "isOpen"
                          ]).apply(null, eventArgs);

                          if (
                            eventArgs.length > 1 &&
                            eventArgs[1] &&
                            eventArgs[1]._plasmic_state_init_
                          ) {
                            return;
                          }
                        }}
                        showFooter={false}
                        trigger={null}
                      />
                    </TabContent>
                    <TabContent
                      data-plasmic-name={"_2"}
                      data-plasmic-override={overrides._2}
                      children={null}
                      className={classNames("__wab_instance", sty._2)}
                      tabKey={(() => {
                        try {
                          return 2;
                        } catch (e) {
                          if (
                            e instanceof TypeError ||
                            e?.plasmicType === "PlasmicUndefinedDataError"
                          ) {
                            return undefined;
                          }
                          throw e;
                        }
                      })()}
                    />
                  </Stack__>
                </div>
              )}
            </DataCtxReader__>
          </TabsContainer>
        </div>
        <BottomMenu
          data-plasmic-name={"bottomMenu"}
          data-plasmic-override={overrides.bottomMenu}
          className={classNames("__wab_instance", sty.bottomMenu)}
        />
      </div>
    </React.Fragment>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: [
    "root",
    "accueilDashboard",
    "leftMenu",
    "tabsContainer",
    "main",
    "header",
    "frame1437253918",
    "filters2",
    "buttonFilter2",
    "retexMenu",
    "_1",
    "table3",
    "dataGrid",
    "kpIs",
    "metricItem",
    "headingAndDropdown",
    "heading",
    "numberAndChart",
    "numberAndBadge",
    "number",
    "changeAndText",
    "change",
    "change2",
    "text",
    "metricItem2",
    "headingAndDropdown2",
    "heading2",
    "numberAndChart2",
    "numberAndBadge2",
    "number2",
    "changeAndText2",
    "change3",
    "change4",
    "text2",
    "metricItem3",
    "headingAndDropdown3",
    "heading3",
    "numberAndChart3",
    "numberAndBadge3",
    "number3",
    "changeAndText3",
    "change5",
    "change6",
    "text3",
    "metricItem4",
    "headingAndDropdown4",
    "heading4",
    "numberAndChart4",
    "numberAndBadge4",
    "number4",
    "changeAndText4",
    "change7",
    "change8",
    "text4",
    "metricItem5",
    "headingAndDropdown5",
    "heading5",
    "numberAndChart5",
    "numberAndBadge5",
    "number5",
    "changeAndText5",
    "change9",
    "change10",
    "text105",
    "metricItem6",
    "headingAndDropdown6",
    "heading6",
    "numberAndChart6",
    "numberAndBadge6",
    "number6",
    "changeAndText6",
    "change11",
    "change12",
    "text106",
    "barChartMultiple",
    "duplicate",
    "frame1437254022",
    "name9",
    "frame1437254023",
    "formDuplicateModel",
    "button",
    "content4",
    "titre6",
    "texinput24",
    "date4",
    "label9",
    "timePicker10",
    "type6",
    "budget6",
    "comments4",
    "input10",
    "name8",
    "datePickerWeb4",
    "inputSelect4",
    "signedByBaseFieldGroupSmall4",
    "endDateCalendar4",
    "inputElementTextField7",
    "signedByBaseInputElementTextFieldSmallEnabled4",
    "leadingArtworkContainer13",
    "leadingArtwork7",
    "leadingLabelContainer13",
    "leadingLabel13",
    "signedByBaseTypographyLabelSmall7",
    "text80",
    "spacer73",
    "inputElementContentText13",
    "signedByBaseInputElementContentTextSmallOff4",
    "text81",
    "trailingLabelEnhancer13",
    "trailingLabel13",
    "signedByBaseTypographyLabelSmall8",
    "text82",
    "spacer74",
    "trailingArtworkContainer13",
    "trailingArtwork13",
    "calendar4",
    "signedByBaseInputElementSelectXSmallWebSingleDefaultEnabled4",
    "leadingArtworkContainer14",
    "text83",
    "leadingLabelContainer14",
    "leadingLabel14",
    "signedByBaseTypographyLabelXSmall7",
    "text84",
    "spacer75",
    "inputElementContentText14",
    "signedByBaseInputElementContentTextXSmallWebOff4",
    "text85",
    "trailingLabelEnhancer14",
    "trailingLabel14",
    "signedByBaseTypographyLabelXSmall8",
    "text86",
    "spacer76",
    "trailingArtworkContainer14",
    "trailingArtwork14",
    "selectIndicatorContainer7",
    "chevronIcon7",
    "inputElementHint7",
    "heart31",
    "hint7",
    "signedByBaseTypographyParagraphSmall7",
    "text87",
    "spacer77",
    "inputElementSelect4",
    "signedByBaseInputElementSelectMediumSingleDefaultActive4",
    "selectFrame4",
    "leadingArtworkContainer15",
    "leadingArtwork8",
    "leadingLabelContainer15",
    "leadingLabel15",
    "signedByBaseTypographyLabelMedium19",
    "text88",
    "spacer78",
    "inputElementContentText15",
    "signedByBaseInputElementContentTextMediumOff7",
    "text89",
    "trailingLabelEnhancer15",
    "trailingLabel15",
    "signedByBaseTypographyLabelMedium20",
    "text90",
    "spacer79",
    "trailingArtworkContainer15",
    "trailingArtwork15",
    "selectIndicatorContainer8",
    "chevronIcon8",
    "menu4",
    "signedByBaseMenuListMedium4",
    "menuItem16",
    "signedByBaseMenuItemSearchMediumNoneEnabled4",
    "searchField4",
    "signedByBaseSearchFieldMediumEnabled4",
    "inputElementLabel4",
    "signedByBaseInputElementLabelMedium4",
    "typography43",
    "signedByBaseTypographyLabelMedium21",
    "text91",
    "spacer80",
    "characterCountFrame4",
    "heart32",
    "typography44",
    "signedByBaseTypographyLabelMedium22",
    "text92",
    "spacer81",
    "inputElementTextField8",
    "signedByBaseInputElementTextFieldMediumEnabled4",
    "leadingArtworkContainer16",
    "search4",
    "leadingLabelContainer16",
    "leadingLabel16",
    "signedByBaseTypographyLabelMedium23",
    "text93",
    "spacer82",
    "inputElementContentText16",
    "signedByBaseInputElementContentTextMediumOff8",
    "text94",
    "trailingLabelEnhancer16",
    "trailingLabel16",
    "signedByBaseTypographyLabelMedium24",
    "text95",
    "spacer83",
    "trailingArtworkContainer16",
    "trailingArtwork16",
    "inputElementHint8",
    "heart33",
    "hint8",
    "signedByBaseTypographyParagraphSmall8",
    "text96",
    "spacer84",
    "menuItem17",
    "signedByBaseMenuItemOptionMediumStandardEnabled13",
    "menuItemControlMediumCheckboxUnchecked13",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked13",
    "icon13",
    "leadingEnhancer13",
    "heart34",
    "textFrame13",
    "leadingText13",
    "typography45",
    "signedByBaseTypographyParagraphMedium37",
    "text97",
    "spacer85",
    "typography46",
    "signedByBaseTypographyParagraphMedium38",
    "text98",
    "spacer86",
    "typography47",
    "signedByBaseTypographyParagraphMedium39",
    "spacer87",
    "trailingEnhancer13",
    "heart35",
    "menuItem18",
    "signedByBaseMenuItemOptionMediumStandardEnabled14",
    "menuItemControlMediumCheckboxUnchecked14",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked14",
    "icon14",
    "leadingEnhancer14",
    "heart36",
    "textFrame14",
    "leadingText14",
    "typography48",
    "signedByBaseTypographyParagraphMedium40",
    "text99",
    "spacer88",
    "typography49",
    "signedByBaseTypographyParagraphMedium41",
    "text100",
    "spacer89",
    "typography50",
    "signedByBaseTypographyParagraphMedium42",
    "spacer90",
    "trailingEnhancer14",
    "checkmarkSmall4",
    "menuItem19",
    "signedByBaseMenuItemOptionMediumStandardEnabled15",
    "menuItemControlMediumCheckboxUnchecked15",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked15",
    "icon15",
    "leadingEnhancer15",
    "heart37",
    "textFrame15",
    "leadingText15",
    "typography51",
    "signedByBaseTypographyParagraphMedium43",
    "text101",
    "spacer91",
    "typography52",
    "signedByBaseTypographyParagraphMedium44",
    "text102",
    "spacer92",
    "typography53",
    "signedByBaseTypographyParagraphMedium45",
    "spacer93",
    "trailingEnhancer15",
    "heart38",
    "menuItem20",
    "signedByBaseMenuItemOptionMediumStandardEnabled16",
    "menuItemControlMediumCheckboxUnchecked16",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked16",
    "icon16",
    "leadingEnhancer16",
    "heart39",
    "textFrame16",
    "leadingText16",
    "typography54",
    "signedByBaseTypographyParagraphMedium46",
    "text103",
    "spacer94",
    "typography55",
    "signedByBaseTypographyParagraphMedium47",
    "text104",
    "spacer95",
    "typography56",
    "signedByBaseTypographyParagraphMedium48",
    "spacer96",
    "trailingEnhancer16",
    "heart40",
    "scrollBar4",
    "model6",
    "buttons4",
    "button13",
    "frame1073713927",
    "frame1073713933",
    "button14",
    "button15",
    "button16",
    "_2",
    "bottomMenu"
  ],
  accueilDashboard: [
    "accueilDashboard",
    "leftMenu",
    "tabsContainer",
    "main",
    "header",
    "frame1437253918",
    "filters2",
    "buttonFilter2",
    "retexMenu",
    "_1",
    "table3",
    "dataGrid",
    "kpIs",
    "metricItem",
    "headingAndDropdown",
    "heading",
    "numberAndChart",
    "numberAndBadge",
    "number",
    "changeAndText",
    "change",
    "change2",
    "text",
    "metricItem2",
    "headingAndDropdown2",
    "heading2",
    "numberAndChart2",
    "numberAndBadge2",
    "number2",
    "changeAndText2",
    "change3",
    "change4",
    "text2",
    "metricItem3",
    "headingAndDropdown3",
    "heading3",
    "numberAndChart3",
    "numberAndBadge3",
    "number3",
    "changeAndText3",
    "change5",
    "change6",
    "text3",
    "metricItem4",
    "headingAndDropdown4",
    "heading4",
    "numberAndChart4",
    "numberAndBadge4",
    "number4",
    "changeAndText4",
    "change7",
    "change8",
    "text4",
    "metricItem5",
    "headingAndDropdown5",
    "heading5",
    "numberAndChart5",
    "numberAndBadge5",
    "number5",
    "changeAndText5",
    "change9",
    "change10",
    "text105",
    "metricItem6",
    "headingAndDropdown6",
    "heading6",
    "numberAndChart6",
    "numberAndBadge6",
    "number6",
    "changeAndText6",
    "change11",
    "change12",
    "text106",
    "barChartMultiple",
    "duplicate",
    "frame1437254022",
    "name9",
    "frame1437254023",
    "formDuplicateModel",
    "button",
    "content4",
    "titre6",
    "texinput24",
    "date4",
    "label9",
    "timePicker10",
    "type6",
    "budget6",
    "comments4",
    "input10",
    "name8",
    "datePickerWeb4",
    "inputSelect4",
    "signedByBaseFieldGroupSmall4",
    "endDateCalendar4",
    "inputElementTextField7",
    "signedByBaseInputElementTextFieldSmallEnabled4",
    "leadingArtworkContainer13",
    "leadingArtwork7",
    "leadingLabelContainer13",
    "leadingLabel13",
    "signedByBaseTypographyLabelSmall7",
    "text80",
    "spacer73",
    "inputElementContentText13",
    "signedByBaseInputElementContentTextSmallOff4",
    "text81",
    "trailingLabelEnhancer13",
    "trailingLabel13",
    "signedByBaseTypographyLabelSmall8",
    "text82",
    "spacer74",
    "trailingArtworkContainer13",
    "trailingArtwork13",
    "calendar4",
    "signedByBaseInputElementSelectXSmallWebSingleDefaultEnabled4",
    "leadingArtworkContainer14",
    "text83",
    "leadingLabelContainer14",
    "leadingLabel14",
    "signedByBaseTypographyLabelXSmall7",
    "text84",
    "spacer75",
    "inputElementContentText14",
    "signedByBaseInputElementContentTextXSmallWebOff4",
    "text85",
    "trailingLabelEnhancer14",
    "trailingLabel14",
    "signedByBaseTypographyLabelXSmall8",
    "text86",
    "spacer76",
    "trailingArtworkContainer14",
    "trailingArtwork14",
    "selectIndicatorContainer7",
    "chevronIcon7",
    "inputElementHint7",
    "heart31",
    "hint7",
    "signedByBaseTypographyParagraphSmall7",
    "text87",
    "spacer77",
    "inputElementSelect4",
    "signedByBaseInputElementSelectMediumSingleDefaultActive4",
    "selectFrame4",
    "leadingArtworkContainer15",
    "leadingArtwork8",
    "leadingLabelContainer15",
    "leadingLabel15",
    "signedByBaseTypographyLabelMedium19",
    "text88",
    "spacer78",
    "inputElementContentText15",
    "signedByBaseInputElementContentTextMediumOff7",
    "text89",
    "trailingLabelEnhancer15",
    "trailingLabel15",
    "signedByBaseTypographyLabelMedium20",
    "text90",
    "spacer79",
    "trailingArtworkContainer15",
    "trailingArtwork15",
    "selectIndicatorContainer8",
    "chevronIcon8",
    "menu4",
    "signedByBaseMenuListMedium4",
    "menuItem16",
    "signedByBaseMenuItemSearchMediumNoneEnabled4",
    "searchField4",
    "signedByBaseSearchFieldMediumEnabled4",
    "inputElementLabel4",
    "signedByBaseInputElementLabelMedium4",
    "typography43",
    "signedByBaseTypographyLabelMedium21",
    "text91",
    "spacer80",
    "characterCountFrame4",
    "heart32",
    "typography44",
    "signedByBaseTypographyLabelMedium22",
    "text92",
    "spacer81",
    "inputElementTextField8",
    "signedByBaseInputElementTextFieldMediumEnabled4",
    "leadingArtworkContainer16",
    "search4",
    "leadingLabelContainer16",
    "leadingLabel16",
    "signedByBaseTypographyLabelMedium23",
    "text93",
    "spacer82",
    "inputElementContentText16",
    "signedByBaseInputElementContentTextMediumOff8",
    "text94",
    "trailingLabelEnhancer16",
    "trailingLabel16",
    "signedByBaseTypographyLabelMedium24",
    "text95",
    "spacer83",
    "trailingArtworkContainer16",
    "trailingArtwork16",
    "inputElementHint8",
    "heart33",
    "hint8",
    "signedByBaseTypographyParagraphSmall8",
    "text96",
    "spacer84",
    "menuItem17",
    "signedByBaseMenuItemOptionMediumStandardEnabled13",
    "menuItemControlMediumCheckboxUnchecked13",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked13",
    "icon13",
    "leadingEnhancer13",
    "heart34",
    "textFrame13",
    "leadingText13",
    "typography45",
    "signedByBaseTypographyParagraphMedium37",
    "text97",
    "spacer85",
    "typography46",
    "signedByBaseTypographyParagraphMedium38",
    "text98",
    "spacer86",
    "typography47",
    "signedByBaseTypographyParagraphMedium39",
    "spacer87",
    "trailingEnhancer13",
    "heart35",
    "menuItem18",
    "signedByBaseMenuItemOptionMediumStandardEnabled14",
    "menuItemControlMediumCheckboxUnchecked14",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked14",
    "icon14",
    "leadingEnhancer14",
    "heart36",
    "textFrame14",
    "leadingText14",
    "typography48",
    "signedByBaseTypographyParagraphMedium40",
    "text99",
    "spacer88",
    "typography49",
    "signedByBaseTypographyParagraphMedium41",
    "text100",
    "spacer89",
    "typography50",
    "signedByBaseTypographyParagraphMedium42",
    "spacer90",
    "trailingEnhancer14",
    "checkmarkSmall4",
    "menuItem19",
    "signedByBaseMenuItemOptionMediumStandardEnabled15",
    "menuItemControlMediumCheckboxUnchecked15",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked15",
    "icon15",
    "leadingEnhancer15",
    "heart37",
    "textFrame15",
    "leadingText15",
    "typography51",
    "signedByBaseTypographyParagraphMedium43",
    "text101",
    "spacer91",
    "typography52",
    "signedByBaseTypographyParagraphMedium44",
    "text102",
    "spacer92",
    "typography53",
    "signedByBaseTypographyParagraphMedium45",
    "spacer93",
    "trailingEnhancer15",
    "heart38",
    "menuItem20",
    "signedByBaseMenuItemOptionMediumStandardEnabled16",
    "menuItemControlMediumCheckboxUnchecked16",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked16",
    "icon16",
    "leadingEnhancer16",
    "heart39",
    "textFrame16",
    "leadingText16",
    "typography54",
    "signedByBaseTypographyParagraphMedium46",
    "text103",
    "spacer94",
    "typography55",
    "signedByBaseTypographyParagraphMedium47",
    "text104",
    "spacer95",
    "typography56",
    "signedByBaseTypographyParagraphMedium48",
    "spacer96",
    "trailingEnhancer16",
    "heart40",
    "scrollBar4",
    "model6",
    "buttons4",
    "button13",
    "frame1073713927",
    "frame1073713933",
    "button14",
    "button15",
    "button16",
    "_2"
  ],
  leftMenu: ["leftMenu"],
  tabsContainer: [
    "tabsContainer",
    "main",
    "header",
    "frame1437253918",
    "filters2",
    "buttonFilter2",
    "retexMenu",
    "_1",
    "table3",
    "dataGrid",
    "kpIs",
    "metricItem",
    "headingAndDropdown",
    "heading",
    "numberAndChart",
    "numberAndBadge",
    "number",
    "changeAndText",
    "change",
    "change2",
    "text",
    "metricItem2",
    "headingAndDropdown2",
    "heading2",
    "numberAndChart2",
    "numberAndBadge2",
    "number2",
    "changeAndText2",
    "change3",
    "change4",
    "text2",
    "metricItem3",
    "headingAndDropdown3",
    "heading3",
    "numberAndChart3",
    "numberAndBadge3",
    "number3",
    "changeAndText3",
    "change5",
    "change6",
    "text3",
    "metricItem4",
    "headingAndDropdown4",
    "heading4",
    "numberAndChart4",
    "numberAndBadge4",
    "number4",
    "changeAndText4",
    "change7",
    "change8",
    "text4",
    "metricItem5",
    "headingAndDropdown5",
    "heading5",
    "numberAndChart5",
    "numberAndBadge5",
    "number5",
    "changeAndText5",
    "change9",
    "change10",
    "text105",
    "metricItem6",
    "headingAndDropdown6",
    "heading6",
    "numberAndChart6",
    "numberAndBadge6",
    "number6",
    "changeAndText6",
    "change11",
    "change12",
    "text106",
    "barChartMultiple",
    "duplicate",
    "frame1437254022",
    "name9",
    "frame1437254023",
    "formDuplicateModel",
    "button",
    "content4",
    "titre6",
    "texinput24",
    "date4",
    "label9",
    "timePicker10",
    "type6",
    "budget6",
    "comments4",
    "input10",
    "name8",
    "datePickerWeb4",
    "inputSelect4",
    "signedByBaseFieldGroupSmall4",
    "endDateCalendar4",
    "inputElementTextField7",
    "signedByBaseInputElementTextFieldSmallEnabled4",
    "leadingArtworkContainer13",
    "leadingArtwork7",
    "leadingLabelContainer13",
    "leadingLabel13",
    "signedByBaseTypographyLabelSmall7",
    "text80",
    "spacer73",
    "inputElementContentText13",
    "signedByBaseInputElementContentTextSmallOff4",
    "text81",
    "trailingLabelEnhancer13",
    "trailingLabel13",
    "signedByBaseTypographyLabelSmall8",
    "text82",
    "spacer74",
    "trailingArtworkContainer13",
    "trailingArtwork13",
    "calendar4",
    "signedByBaseInputElementSelectXSmallWebSingleDefaultEnabled4",
    "leadingArtworkContainer14",
    "text83",
    "leadingLabelContainer14",
    "leadingLabel14",
    "signedByBaseTypographyLabelXSmall7",
    "text84",
    "spacer75",
    "inputElementContentText14",
    "signedByBaseInputElementContentTextXSmallWebOff4",
    "text85",
    "trailingLabelEnhancer14",
    "trailingLabel14",
    "signedByBaseTypographyLabelXSmall8",
    "text86",
    "spacer76",
    "trailingArtworkContainer14",
    "trailingArtwork14",
    "selectIndicatorContainer7",
    "chevronIcon7",
    "inputElementHint7",
    "heart31",
    "hint7",
    "signedByBaseTypographyParagraphSmall7",
    "text87",
    "spacer77",
    "inputElementSelect4",
    "signedByBaseInputElementSelectMediumSingleDefaultActive4",
    "selectFrame4",
    "leadingArtworkContainer15",
    "leadingArtwork8",
    "leadingLabelContainer15",
    "leadingLabel15",
    "signedByBaseTypographyLabelMedium19",
    "text88",
    "spacer78",
    "inputElementContentText15",
    "signedByBaseInputElementContentTextMediumOff7",
    "text89",
    "trailingLabelEnhancer15",
    "trailingLabel15",
    "signedByBaseTypographyLabelMedium20",
    "text90",
    "spacer79",
    "trailingArtworkContainer15",
    "trailingArtwork15",
    "selectIndicatorContainer8",
    "chevronIcon8",
    "menu4",
    "signedByBaseMenuListMedium4",
    "menuItem16",
    "signedByBaseMenuItemSearchMediumNoneEnabled4",
    "searchField4",
    "signedByBaseSearchFieldMediumEnabled4",
    "inputElementLabel4",
    "signedByBaseInputElementLabelMedium4",
    "typography43",
    "signedByBaseTypographyLabelMedium21",
    "text91",
    "spacer80",
    "characterCountFrame4",
    "heart32",
    "typography44",
    "signedByBaseTypographyLabelMedium22",
    "text92",
    "spacer81",
    "inputElementTextField8",
    "signedByBaseInputElementTextFieldMediumEnabled4",
    "leadingArtworkContainer16",
    "search4",
    "leadingLabelContainer16",
    "leadingLabel16",
    "signedByBaseTypographyLabelMedium23",
    "text93",
    "spacer82",
    "inputElementContentText16",
    "signedByBaseInputElementContentTextMediumOff8",
    "text94",
    "trailingLabelEnhancer16",
    "trailingLabel16",
    "signedByBaseTypographyLabelMedium24",
    "text95",
    "spacer83",
    "trailingArtworkContainer16",
    "trailingArtwork16",
    "inputElementHint8",
    "heart33",
    "hint8",
    "signedByBaseTypographyParagraphSmall8",
    "text96",
    "spacer84",
    "menuItem17",
    "signedByBaseMenuItemOptionMediumStandardEnabled13",
    "menuItemControlMediumCheckboxUnchecked13",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked13",
    "icon13",
    "leadingEnhancer13",
    "heart34",
    "textFrame13",
    "leadingText13",
    "typography45",
    "signedByBaseTypographyParagraphMedium37",
    "text97",
    "spacer85",
    "typography46",
    "signedByBaseTypographyParagraphMedium38",
    "text98",
    "spacer86",
    "typography47",
    "signedByBaseTypographyParagraphMedium39",
    "spacer87",
    "trailingEnhancer13",
    "heart35",
    "menuItem18",
    "signedByBaseMenuItemOptionMediumStandardEnabled14",
    "menuItemControlMediumCheckboxUnchecked14",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked14",
    "icon14",
    "leadingEnhancer14",
    "heart36",
    "textFrame14",
    "leadingText14",
    "typography48",
    "signedByBaseTypographyParagraphMedium40",
    "text99",
    "spacer88",
    "typography49",
    "signedByBaseTypographyParagraphMedium41",
    "text100",
    "spacer89",
    "typography50",
    "signedByBaseTypographyParagraphMedium42",
    "spacer90",
    "trailingEnhancer14",
    "checkmarkSmall4",
    "menuItem19",
    "signedByBaseMenuItemOptionMediumStandardEnabled15",
    "menuItemControlMediumCheckboxUnchecked15",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked15",
    "icon15",
    "leadingEnhancer15",
    "heart37",
    "textFrame15",
    "leadingText15",
    "typography51",
    "signedByBaseTypographyParagraphMedium43",
    "text101",
    "spacer91",
    "typography52",
    "signedByBaseTypographyParagraphMedium44",
    "text102",
    "spacer92",
    "typography53",
    "signedByBaseTypographyParagraphMedium45",
    "spacer93",
    "trailingEnhancer15",
    "heart38",
    "menuItem20",
    "signedByBaseMenuItemOptionMediumStandardEnabled16",
    "menuItemControlMediumCheckboxUnchecked16",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked16",
    "icon16",
    "leadingEnhancer16",
    "heart39",
    "textFrame16",
    "leadingText16",
    "typography54",
    "signedByBaseTypographyParagraphMedium46",
    "text103",
    "spacer94",
    "typography55",
    "signedByBaseTypographyParagraphMedium47",
    "text104",
    "spacer95",
    "typography56",
    "signedByBaseTypographyParagraphMedium48",
    "spacer96",
    "trailingEnhancer16",
    "heart40",
    "scrollBar4",
    "model6",
    "buttons4",
    "button13",
    "frame1073713927",
    "frame1073713933",
    "button14",
    "button15",
    "button16",
    "_2"
  ],
  main: [
    "main",
    "header",
    "frame1437253918",
    "filters2",
    "buttonFilter2",
    "retexMenu",
    "_1",
    "table3",
    "dataGrid",
    "kpIs",
    "metricItem",
    "headingAndDropdown",
    "heading",
    "numberAndChart",
    "numberAndBadge",
    "number",
    "changeAndText",
    "change",
    "change2",
    "text",
    "metricItem2",
    "headingAndDropdown2",
    "heading2",
    "numberAndChart2",
    "numberAndBadge2",
    "number2",
    "changeAndText2",
    "change3",
    "change4",
    "text2",
    "metricItem3",
    "headingAndDropdown3",
    "heading3",
    "numberAndChart3",
    "numberAndBadge3",
    "number3",
    "changeAndText3",
    "change5",
    "change6",
    "text3",
    "metricItem4",
    "headingAndDropdown4",
    "heading4",
    "numberAndChart4",
    "numberAndBadge4",
    "number4",
    "changeAndText4",
    "change7",
    "change8",
    "text4",
    "metricItem5",
    "headingAndDropdown5",
    "heading5",
    "numberAndChart5",
    "numberAndBadge5",
    "number5",
    "changeAndText5",
    "change9",
    "change10",
    "text105",
    "metricItem6",
    "headingAndDropdown6",
    "heading6",
    "numberAndChart6",
    "numberAndBadge6",
    "number6",
    "changeAndText6",
    "change11",
    "change12",
    "text106",
    "barChartMultiple",
    "duplicate",
    "frame1437254022",
    "name9",
    "frame1437254023",
    "formDuplicateModel",
    "button",
    "content4",
    "titre6",
    "texinput24",
    "date4",
    "label9",
    "timePicker10",
    "type6",
    "budget6",
    "comments4",
    "input10",
    "name8",
    "datePickerWeb4",
    "inputSelect4",
    "signedByBaseFieldGroupSmall4",
    "endDateCalendar4",
    "inputElementTextField7",
    "signedByBaseInputElementTextFieldSmallEnabled4",
    "leadingArtworkContainer13",
    "leadingArtwork7",
    "leadingLabelContainer13",
    "leadingLabel13",
    "signedByBaseTypographyLabelSmall7",
    "text80",
    "spacer73",
    "inputElementContentText13",
    "signedByBaseInputElementContentTextSmallOff4",
    "text81",
    "trailingLabelEnhancer13",
    "trailingLabel13",
    "signedByBaseTypographyLabelSmall8",
    "text82",
    "spacer74",
    "trailingArtworkContainer13",
    "trailingArtwork13",
    "calendar4",
    "signedByBaseInputElementSelectXSmallWebSingleDefaultEnabled4",
    "leadingArtworkContainer14",
    "text83",
    "leadingLabelContainer14",
    "leadingLabel14",
    "signedByBaseTypographyLabelXSmall7",
    "text84",
    "spacer75",
    "inputElementContentText14",
    "signedByBaseInputElementContentTextXSmallWebOff4",
    "text85",
    "trailingLabelEnhancer14",
    "trailingLabel14",
    "signedByBaseTypographyLabelXSmall8",
    "text86",
    "spacer76",
    "trailingArtworkContainer14",
    "trailingArtwork14",
    "selectIndicatorContainer7",
    "chevronIcon7",
    "inputElementHint7",
    "heart31",
    "hint7",
    "signedByBaseTypographyParagraphSmall7",
    "text87",
    "spacer77",
    "inputElementSelect4",
    "signedByBaseInputElementSelectMediumSingleDefaultActive4",
    "selectFrame4",
    "leadingArtworkContainer15",
    "leadingArtwork8",
    "leadingLabelContainer15",
    "leadingLabel15",
    "signedByBaseTypographyLabelMedium19",
    "text88",
    "spacer78",
    "inputElementContentText15",
    "signedByBaseInputElementContentTextMediumOff7",
    "text89",
    "trailingLabelEnhancer15",
    "trailingLabel15",
    "signedByBaseTypographyLabelMedium20",
    "text90",
    "spacer79",
    "trailingArtworkContainer15",
    "trailingArtwork15",
    "selectIndicatorContainer8",
    "chevronIcon8",
    "menu4",
    "signedByBaseMenuListMedium4",
    "menuItem16",
    "signedByBaseMenuItemSearchMediumNoneEnabled4",
    "searchField4",
    "signedByBaseSearchFieldMediumEnabled4",
    "inputElementLabel4",
    "signedByBaseInputElementLabelMedium4",
    "typography43",
    "signedByBaseTypographyLabelMedium21",
    "text91",
    "spacer80",
    "characterCountFrame4",
    "heart32",
    "typography44",
    "signedByBaseTypographyLabelMedium22",
    "text92",
    "spacer81",
    "inputElementTextField8",
    "signedByBaseInputElementTextFieldMediumEnabled4",
    "leadingArtworkContainer16",
    "search4",
    "leadingLabelContainer16",
    "leadingLabel16",
    "signedByBaseTypographyLabelMedium23",
    "text93",
    "spacer82",
    "inputElementContentText16",
    "signedByBaseInputElementContentTextMediumOff8",
    "text94",
    "trailingLabelEnhancer16",
    "trailingLabel16",
    "signedByBaseTypographyLabelMedium24",
    "text95",
    "spacer83",
    "trailingArtworkContainer16",
    "trailingArtwork16",
    "inputElementHint8",
    "heart33",
    "hint8",
    "signedByBaseTypographyParagraphSmall8",
    "text96",
    "spacer84",
    "menuItem17",
    "signedByBaseMenuItemOptionMediumStandardEnabled13",
    "menuItemControlMediumCheckboxUnchecked13",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked13",
    "icon13",
    "leadingEnhancer13",
    "heart34",
    "textFrame13",
    "leadingText13",
    "typography45",
    "signedByBaseTypographyParagraphMedium37",
    "text97",
    "spacer85",
    "typography46",
    "signedByBaseTypographyParagraphMedium38",
    "text98",
    "spacer86",
    "typography47",
    "signedByBaseTypographyParagraphMedium39",
    "spacer87",
    "trailingEnhancer13",
    "heart35",
    "menuItem18",
    "signedByBaseMenuItemOptionMediumStandardEnabled14",
    "menuItemControlMediumCheckboxUnchecked14",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked14",
    "icon14",
    "leadingEnhancer14",
    "heart36",
    "textFrame14",
    "leadingText14",
    "typography48",
    "signedByBaseTypographyParagraphMedium40",
    "text99",
    "spacer88",
    "typography49",
    "signedByBaseTypographyParagraphMedium41",
    "text100",
    "spacer89",
    "typography50",
    "signedByBaseTypographyParagraphMedium42",
    "spacer90",
    "trailingEnhancer14",
    "checkmarkSmall4",
    "menuItem19",
    "signedByBaseMenuItemOptionMediumStandardEnabled15",
    "menuItemControlMediumCheckboxUnchecked15",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked15",
    "icon15",
    "leadingEnhancer15",
    "heart37",
    "textFrame15",
    "leadingText15",
    "typography51",
    "signedByBaseTypographyParagraphMedium43",
    "text101",
    "spacer91",
    "typography52",
    "signedByBaseTypographyParagraphMedium44",
    "text102",
    "spacer92",
    "typography53",
    "signedByBaseTypographyParagraphMedium45",
    "spacer93",
    "trailingEnhancer15",
    "heart38",
    "menuItem20",
    "signedByBaseMenuItemOptionMediumStandardEnabled16",
    "menuItemControlMediumCheckboxUnchecked16",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked16",
    "icon16",
    "leadingEnhancer16",
    "heart39",
    "textFrame16",
    "leadingText16",
    "typography54",
    "signedByBaseTypographyParagraphMedium46",
    "text103",
    "spacer94",
    "typography55",
    "signedByBaseTypographyParagraphMedium47",
    "text104",
    "spacer95",
    "typography56",
    "signedByBaseTypographyParagraphMedium48",
    "spacer96",
    "trailingEnhancer16",
    "heart40",
    "scrollBar4",
    "model6",
    "buttons4",
    "button13",
    "frame1073713927",
    "frame1073713933",
    "button14",
    "button15",
    "button16",
    "_2"
  ],
  header: ["header"],
  frame1437253918: [
    "frame1437253918",
    "filters2",
    "buttonFilter2",
    "retexMenu",
    "_1",
    "table3",
    "dataGrid",
    "kpIs",
    "metricItem",
    "headingAndDropdown",
    "heading",
    "numberAndChart",
    "numberAndBadge",
    "number",
    "changeAndText",
    "change",
    "change2",
    "text",
    "metricItem2",
    "headingAndDropdown2",
    "heading2",
    "numberAndChart2",
    "numberAndBadge2",
    "number2",
    "changeAndText2",
    "change3",
    "change4",
    "text2",
    "metricItem3",
    "headingAndDropdown3",
    "heading3",
    "numberAndChart3",
    "numberAndBadge3",
    "number3",
    "changeAndText3",
    "change5",
    "change6",
    "text3",
    "metricItem4",
    "headingAndDropdown4",
    "heading4",
    "numberAndChart4",
    "numberAndBadge4",
    "number4",
    "changeAndText4",
    "change7",
    "change8",
    "text4",
    "metricItem5",
    "headingAndDropdown5",
    "heading5",
    "numberAndChart5",
    "numberAndBadge5",
    "number5",
    "changeAndText5",
    "change9",
    "change10",
    "text105",
    "metricItem6",
    "headingAndDropdown6",
    "heading6",
    "numberAndChart6",
    "numberAndBadge6",
    "number6",
    "changeAndText6",
    "change11",
    "change12",
    "text106",
    "barChartMultiple",
    "duplicate",
    "frame1437254022",
    "name9",
    "frame1437254023",
    "formDuplicateModel",
    "button",
    "content4",
    "titre6",
    "texinput24",
    "date4",
    "label9",
    "timePicker10",
    "type6",
    "budget6",
    "comments4",
    "input10",
    "name8",
    "datePickerWeb4",
    "inputSelect4",
    "signedByBaseFieldGroupSmall4",
    "endDateCalendar4",
    "inputElementTextField7",
    "signedByBaseInputElementTextFieldSmallEnabled4",
    "leadingArtworkContainer13",
    "leadingArtwork7",
    "leadingLabelContainer13",
    "leadingLabel13",
    "signedByBaseTypographyLabelSmall7",
    "text80",
    "spacer73",
    "inputElementContentText13",
    "signedByBaseInputElementContentTextSmallOff4",
    "text81",
    "trailingLabelEnhancer13",
    "trailingLabel13",
    "signedByBaseTypographyLabelSmall8",
    "text82",
    "spacer74",
    "trailingArtworkContainer13",
    "trailingArtwork13",
    "calendar4",
    "signedByBaseInputElementSelectXSmallWebSingleDefaultEnabled4",
    "leadingArtworkContainer14",
    "text83",
    "leadingLabelContainer14",
    "leadingLabel14",
    "signedByBaseTypographyLabelXSmall7",
    "text84",
    "spacer75",
    "inputElementContentText14",
    "signedByBaseInputElementContentTextXSmallWebOff4",
    "text85",
    "trailingLabelEnhancer14",
    "trailingLabel14",
    "signedByBaseTypographyLabelXSmall8",
    "text86",
    "spacer76",
    "trailingArtworkContainer14",
    "trailingArtwork14",
    "selectIndicatorContainer7",
    "chevronIcon7",
    "inputElementHint7",
    "heart31",
    "hint7",
    "signedByBaseTypographyParagraphSmall7",
    "text87",
    "spacer77",
    "inputElementSelect4",
    "signedByBaseInputElementSelectMediumSingleDefaultActive4",
    "selectFrame4",
    "leadingArtworkContainer15",
    "leadingArtwork8",
    "leadingLabelContainer15",
    "leadingLabel15",
    "signedByBaseTypographyLabelMedium19",
    "text88",
    "spacer78",
    "inputElementContentText15",
    "signedByBaseInputElementContentTextMediumOff7",
    "text89",
    "trailingLabelEnhancer15",
    "trailingLabel15",
    "signedByBaseTypographyLabelMedium20",
    "text90",
    "spacer79",
    "trailingArtworkContainer15",
    "trailingArtwork15",
    "selectIndicatorContainer8",
    "chevronIcon8",
    "menu4",
    "signedByBaseMenuListMedium4",
    "menuItem16",
    "signedByBaseMenuItemSearchMediumNoneEnabled4",
    "searchField4",
    "signedByBaseSearchFieldMediumEnabled4",
    "inputElementLabel4",
    "signedByBaseInputElementLabelMedium4",
    "typography43",
    "signedByBaseTypographyLabelMedium21",
    "text91",
    "spacer80",
    "characterCountFrame4",
    "heart32",
    "typography44",
    "signedByBaseTypographyLabelMedium22",
    "text92",
    "spacer81",
    "inputElementTextField8",
    "signedByBaseInputElementTextFieldMediumEnabled4",
    "leadingArtworkContainer16",
    "search4",
    "leadingLabelContainer16",
    "leadingLabel16",
    "signedByBaseTypographyLabelMedium23",
    "text93",
    "spacer82",
    "inputElementContentText16",
    "signedByBaseInputElementContentTextMediumOff8",
    "text94",
    "trailingLabelEnhancer16",
    "trailingLabel16",
    "signedByBaseTypographyLabelMedium24",
    "text95",
    "spacer83",
    "trailingArtworkContainer16",
    "trailingArtwork16",
    "inputElementHint8",
    "heart33",
    "hint8",
    "signedByBaseTypographyParagraphSmall8",
    "text96",
    "spacer84",
    "menuItem17",
    "signedByBaseMenuItemOptionMediumStandardEnabled13",
    "menuItemControlMediumCheckboxUnchecked13",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked13",
    "icon13",
    "leadingEnhancer13",
    "heart34",
    "textFrame13",
    "leadingText13",
    "typography45",
    "signedByBaseTypographyParagraphMedium37",
    "text97",
    "spacer85",
    "typography46",
    "signedByBaseTypographyParagraphMedium38",
    "text98",
    "spacer86",
    "typography47",
    "signedByBaseTypographyParagraphMedium39",
    "spacer87",
    "trailingEnhancer13",
    "heart35",
    "menuItem18",
    "signedByBaseMenuItemOptionMediumStandardEnabled14",
    "menuItemControlMediumCheckboxUnchecked14",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked14",
    "icon14",
    "leadingEnhancer14",
    "heart36",
    "textFrame14",
    "leadingText14",
    "typography48",
    "signedByBaseTypographyParagraphMedium40",
    "text99",
    "spacer88",
    "typography49",
    "signedByBaseTypographyParagraphMedium41",
    "text100",
    "spacer89",
    "typography50",
    "signedByBaseTypographyParagraphMedium42",
    "spacer90",
    "trailingEnhancer14",
    "checkmarkSmall4",
    "menuItem19",
    "signedByBaseMenuItemOptionMediumStandardEnabled15",
    "menuItemControlMediumCheckboxUnchecked15",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked15",
    "icon15",
    "leadingEnhancer15",
    "heart37",
    "textFrame15",
    "leadingText15",
    "typography51",
    "signedByBaseTypographyParagraphMedium43",
    "text101",
    "spacer91",
    "typography52",
    "signedByBaseTypographyParagraphMedium44",
    "text102",
    "spacer92",
    "typography53",
    "signedByBaseTypographyParagraphMedium45",
    "spacer93",
    "trailingEnhancer15",
    "heart38",
    "menuItem20",
    "signedByBaseMenuItemOptionMediumStandardEnabled16",
    "menuItemControlMediumCheckboxUnchecked16",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked16",
    "icon16",
    "leadingEnhancer16",
    "heart39",
    "textFrame16",
    "leadingText16",
    "typography54",
    "signedByBaseTypographyParagraphMedium46",
    "text103",
    "spacer94",
    "typography55",
    "signedByBaseTypographyParagraphMedium47",
    "text104",
    "spacer95",
    "typography56",
    "signedByBaseTypographyParagraphMedium48",
    "spacer96",
    "trailingEnhancer16",
    "heart40",
    "scrollBar4",
    "model6",
    "buttons4",
    "button13",
    "frame1073713927",
    "frame1073713933",
    "button14",
    "button15",
    "button16",
    "_2"
  ],
  filters2: ["filters2", "buttonFilter2"],
  buttonFilter2: ["buttonFilter2"],
  retexMenu: ["retexMenu"],
  _1: [
    "_1",
    "table3",
    "dataGrid",
    "kpIs",
    "metricItem",
    "headingAndDropdown",
    "heading",
    "numberAndChart",
    "numberAndBadge",
    "number",
    "changeAndText",
    "change",
    "change2",
    "text",
    "metricItem2",
    "headingAndDropdown2",
    "heading2",
    "numberAndChart2",
    "numberAndBadge2",
    "number2",
    "changeAndText2",
    "change3",
    "change4",
    "text2",
    "metricItem3",
    "headingAndDropdown3",
    "heading3",
    "numberAndChart3",
    "numberAndBadge3",
    "number3",
    "changeAndText3",
    "change5",
    "change6",
    "text3",
    "metricItem4",
    "headingAndDropdown4",
    "heading4",
    "numberAndChart4",
    "numberAndBadge4",
    "number4",
    "changeAndText4",
    "change7",
    "change8",
    "text4",
    "metricItem5",
    "headingAndDropdown5",
    "heading5",
    "numberAndChart5",
    "numberAndBadge5",
    "number5",
    "changeAndText5",
    "change9",
    "change10",
    "text105",
    "metricItem6",
    "headingAndDropdown6",
    "heading6",
    "numberAndChart6",
    "numberAndBadge6",
    "number6",
    "changeAndText6",
    "change11",
    "change12",
    "text106",
    "barChartMultiple",
    "duplicate",
    "frame1437254022",
    "name9",
    "frame1437254023",
    "formDuplicateModel",
    "button",
    "content4",
    "titre6",
    "texinput24",
    "date4",
    "label9",
    "timePicker10",
    "type6",
    "budget6",
    "comments4",
    "input10",
    "name8",
    "datePickerWeb4",
    "inputSelect4",
    "signedByBaseFieldGroupSmall4",
    "endDateCalendar4",
    "inputElementTextField7",
    "signedByBaseInputElementTextFieldSmallEnabled4",
    "leadingArtworkContainer13",
    "leadingArtwork7",
    "leadingLabelContainer13",
    "leadingLabel13",
    "signedByBaseTypographyLabelSmall7",
    "text80",
    "spacer73",
    "inputElementContentText13",
    "signedByBaseInputElementContentTextSmallOff4",
    "text81",
    "trailingLabelEnhancer13",
    "trailingLabel13",
    "signedByBaseTypographyLabelSmall8",
    "text82",
    "spacer74",
    "trailingArtworkContainer13",
    "trailingArtwork13",
    "calendar4",
    "signedByBaseInputElementSelectXSmallWebSingleDefaultEnabled4",
    "leadingArtworkContainer14",
    "text83",
    "leadingLabelContainer14",
    "leadingLabel14",
    "signedByBaseTypographyLabelXSmall7",
    "text84",
    "spacer75",
    "inputElementContentText14",
    "signedByBaseInputElementContentTextXSmallWebOff4",
    "text85",
    "trailingLabelEnhancer14",
    "trailingLabel14",
    "signedByBaseTypographyLabelXSmall8",
    "text86",
    "spacer76",
    "trailingArtworkContainer14",
    "trailingArtwork14",
    "selectIndicatorContainer7",
    "chevronIcon7",
    "inputElementHint7",
    "heart31",
    "hint7",
    "signedByBaseTypographyParagraphSmall7",
    "text87",
    "spacer77",
    "inputElementSelect4",
    "signedByBaseInputElementSelectMediumSingleDefaultActive4",
    "selectFrame4",
    "leadingArtworkContainer15",
    "leadingArtwork8",
    "leadingLabelContainer15",
    "leadingLabel15",
    "signedByBaseTypographyLabelMedium19",
    "text88",
    "spacer78",
    "inputElementContentText15",
    "signedByBaseInputElementContentTextMediumOff7",
    "text89",
    "trailingLabelEnhancer15",
    "trailingLabel15",
    "signedByBaseTypographyLabelMedium20",
    "text90",
    "spacer79",
    "trailingArtworkContainer15",
    "trailingArtwork15",
    "selectIndicatorContainer8",
    "chevronIcon8",
    "menu4",
    "signedByBaseMenuListMedium4",
    "menuItem16",
    "signedByBaseMenuItemSearchMediumNoneEnabled4",
    "searchField4",
    "signedByBaseSearchFieldMediumEnabled4",
    "inputElementLabel4",
    "signedByBaseInputElementLabelMedium4",
    "typography43",
    "signedByBaseTypographyLabelMedium21",
    "text91",
    "spacer80",
    "characterCountFrame4",
    "heart32",
    "typography44",
    "signedByBaseTypographyLabelMedium22",
    "text92",
    "spacer81",
    "inputElementTextField8",
    "signedByBaseInputElementTextFieldMediumEnabled4",
    "leadingArtworkContainer16",
    "search4",
    "leadingLabelContainer16",
    "leadingLabel16",
    "signedByBaseTypographyLabelMedium23",
    "text93",
    "spacer82",
    "inputElementContentText16",
    "signedByBaseInputElementContentTextMediumOff8",
    "text94",
    "trailingLabelEnhancer16",
    "trailingLabel16",
    "signedByBaseTypographyLabelMedium24",
    "text95",
    "spacer83",
    "trailingArtworkContainer16",
    "trailingArtwork16",
    "inputElementHint8",
    "heart33",
    "hint8",
    "signedByBaseTypographyParagraphSmall8",
    "text96",
    "spacer84",
    "menuItem17",
    "signedByBaseMenuItemOptionMediumStandardEnabled13",
    "menuItemControlMediumCheckboxUnchecked13",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked13",
    "icon13",
    "leadingEnhancer13",
    "heart34",
    "textFrame13",
    "leadingText13",
    "typography45",
    "signedByBaseTypographyParagraphMedium37",
    "text97",
    "spacer85",
    "typography46",
    "signedByBaseTypographyParagraphMedium38",
    "text98",
    "spacer86",
    "typography47",
    "signedByBaseTypographyParagraphMedium39",
    "spacer87",
    "trailingEnhancer13",
    "heart35",
    "menuItem18",
    "signedByBaseMenuItemOptionMediumStandardEnabled14",
    "menuItemControlMediumCheckboxUnchecked14",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked14",
    "icon14",
    "leadingEnhancer14",
    "heart36",
    "textFrame14",
    "leadingText14",
    "typography48",
    "signedByBaseTypographyParagraphMedium40",
    "text99",
    "spacer88",
    "typography49",
    "signedByBaseTypographyParagraphMedium41",
    "text100",
    "spacer89",
    "typography50",
    "signedByBaseTypographyParagraphMedium42",
    "spacer90",
    "trailingEnhancer14",
    "checkmarkSmall4",
    "menuItem19",
    "signedByBaseMenuItemOptionMediumStandardEnabled15",
    "menuItemControlMediumCheckboxUnchecked15",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked15",
    "icon15",
    "leadingEnhancer15",
    "heart37",
    "textFrame15",
    "leadingText15",
    "typography51",
    "signedByBaseTypographyParagraphMedium43",
    "text101",
    "spacer91",
    "typography52",
    "signedByBaseTypographyParagraphMedium44",
    "text102",
    "spacer92",
    "typography53",
    "signedByBaseTypographyParagraphMedium45",
    "spacer93",
    "trailingEnhancer15",
    "heart38",
    "menuItem20",
    "signedByBaseMenuItemOptionMediumStandardEnabled16",
    "menuItemControlMediumCheckboxUnchecked16",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked16",
    "icon16",
    "leadingEnhancer16",
    "heart39",
    "textFrame16",
    "leadingText16",
    "typography54",
    "signedByBaseTypographyParagraphMedium46",
    "text103",
    "spacer94",
    "typography55",
    "signedByBaseTypographyParagraphMedium47",
    "text104",
    "spacer95",
    "typography56",
    "signedByBaseTypographyParagraphMedium48",
    "spacer96",
    "trailingEnhancer16",
    "heart40",
    "scrollBar4",
    "model6",
    "buttons4",
    "button13",
    "frame1073713927",
    "frame1073713933",
    "button14",
    "button15",
    "button16"
  ],
  table3: ["table3", "dataGrid"],
  dataGrid: ["dataGrid"],
  kpIs: [
    "kpIs",
    "metricItem",
    "headingAndDropdown",
    "heading",
    "numberAndChart",
    "numberAndBadge",
    "number",
    "changeAndText",
    "change",
    "change2",
    "text",
    "metricItem2",
    "headingAndDropdown2",
    "heading2",
    "numberAndChart2",
    "numberAndBadge2",
    "number2",
    "changeAndText2",
    "change3",
    "change4",
    "text2",
    "metricItem3",
    "headingAndDropdown3",
    "heading3",
    "numberAndChart3",
    "numberAndBadge3",
    "number3",
    "changeAndText3",
    "change5",
    "change6",
    "text3",
    "metricItem4",
    "headingAndDropdown4",
    "heading4",
    "numberAndChart4",
    "numberAndBadge4",
    "number4",
    "changeAndText4",
    "change7",
    "change8",
    "text4",
    "metricItem5",
    "headingAndDropdown5",
    "heading5",
    "numberAndChart5",
    "numberAndBadge5",
    "number5",
    "changeAndText5",
    "change9",
    "change10",
    "text105",
    "metricItem6",
    "headingAndDropdown6",
    "heading6",
    "numberAndChart6",
    "numberAndBadge6",
    "number6",
    "changeAndText6",
    "change11",
    "change12",
    "text106",
    "barChartMultiple"
  ],
  metricItem: [
    "metricItem",
    "headingAndDropdown",
    "heading",
    "numberAndChart",
    "numberAndBadge",
    "number",
    "changeAndText",
    "change",
    "change2",
    "text"
  ],
  headingAndDropdown: ["headingAndDropdown", "heading"],
  heading: ["heading"],
  numberAndChart: [
    "numberAndChart",
    "numberAndBadge",
    "number",
    "changeAndText",
    "change",
    "change2",
    "text"
  ],
  numberAndBadge: [
    "numberAndBadge",
    "number",
    "changeAndText",
    "change",
    "change2",
    "text"
  ],
  number: ["number"],
  changeAndText: ["changeAndText", "change", "change2", "text"],
  change: ["change", "change2"],
  change2: ["change2"],
  text: ["text"],
  metricItem2: [
    "metricItem2",
    "headingAndDropdown2",
    "heading2",
    "numberAndChart2",
    "numberAndBadge2",
    "number2",
    "changeAndText2",
    "change3",
    "change4",
    "text2"
  ],
  headingAndDropdown2: ["headingAndDropdown2", "heading2"],
  heading2: ["heading2"],
  numberAndChart2: [
    "numberAndChart2",
    "numberAndBadge2",
    "number2",
    "changeAndText2",
    "change3",
    "change4",
    "text2"
  ],
  numberAndBadge2: [
    "numberAndBadge2",
    "number2",
    "changeAndText2",
    "change3",
    "change4",
    "text2"
  ],
  number2: ["number2"],
  changeAndText2: ["changeAndText2", "change3", "change4", "text2"],
  change3: ["change3", "change4"],
  change4: ["change4"],
  text2: ["text2"],
  metricItem3: [
    "metricItem3",
    "headingAndDropdown3",
    "heading3",
    "numberAndChart3",
    "numberAndBadge3",
    "number3",
    "changeAndText3",
    "change5",
    "change6",
    "text3"
  ],
  headingAndDropdown3: ["headingAndDropdown3", "heading3"],
  heading3: ["heading3"],
  numberAndChart3: [
    "numberAndChart3",
    "numberAndBadge3",
    "number3",
    "changeAndText3",
    "change5",
    "change6",
    "text3"
  ],
  numberAndBadge3: [
    "numberAndBadge3",
    "number3",
    "changeAndText3",
    "change5",
    "change6",
    "text3"
  ],
  number3: ["number3"],
  changeAndText3: ["changeAndText3", "change5", "change6", "text3"],
  change5: ["change5", "change6"],
  change6: ["change6"],
  text3: ["text3"],
  metricItem4: [
    "metricItem4",
    "headingAndDropdown4",
    "heading4",
    "numberAndChart4",
    "numberAndBadge4",
    "number4",
    "changeAndText4",
    "change7",
    "change8",
    "text4"
  ],
  headingAndDropdown4: ["headingAndDropdown4", "heading4"],
  heading4: ["heading4"],
  numberAndChart4: [
    "numberAndChart4",
    "numberAndBadge4",
    "number4",
    "changeAndText4",
    "change7",
    "change8",
    "text4"
  ],
  numberAndBadge4: [
    "numberAndBadge4",
    "number4",
    "changeAndText4",
    "change7",
    "change8",
    "text4"
  ],
  number4: ["number4"],
  changeAndText4: ["changeAndText4", "change7", "change8", "text4"],
  change7: ["change7", "change8"],
  change8: ["change8"],
  text4: ["text4"],
  metricItem5: [
    "metricItem5",
    "headingAndDropdown5",
    "heading5",
    "numberAndChart5",
    "numberAndBadge5",
    "number5",
    "changeAndText5",
    "change9",
    "change10",
    "text105"
  ],
  headingAndDropdown5: ["headingAndDropdown5", "heading5"],
  heading5: ["heading5"],
  numberAndChart5: [
    "numberAndChart5",
    "numberAndBadge5",
    "number5",
    "changeAndText5",
    "change9",
    "change10",
    "text105"
  ],
  numberAndBadge5: [
    "numberAndBadge5",
    "number5",
    "changeAndText5",
    "change9",
    "change10",
    "text105"
  ],
  number5: ["number5"],
  changeAndText5: ["changeAndText5", "change9", "change10", "text105"],
  change9: ["change9", "change10"],
  change10: ["change10"],
  text105: ["text105"],
  metricItem6: [
    "metricItem6",
    "headingAndDropdown6",
    "heading6",
    "numberAndChart6",
    "numberAndBadge6",
    "number6",
    "changeAndText6",
    "change11",
    "change12",
    "text106"
  ],
  headingAndDropdown6: ["headingAndDropdown6", "heading6"],
  heading6: ["heading6"],
  numberAndChart6: [
    "numberAndChart6",
    "numberAndBadge6",
    "number6",
    "changeAndText6",
    "change11",
    "change12",
    "text106"
  ],
  numberAndBadge6: [
    "numberAndBadge6",
    "number6",
    "changeAndText6",
    "change11",
    "change12",
    "text106"
  ],
  number6: ["number6"],
  changeAndText6: ["changeAndText6", "change11", "change12", "text106"],
  change11: ["change11", "change12"],
  change12: ["change12"],
  text106: ["text106"],
  barChartMultiple: ["barChartMultiple"],
  duplicate: [
    "duplicate",
    "frame1437254022",
    "name9",
    "frame1437254023",
    "formDuplicateModel",
    "button",
    "content4",
    "titre6",
    "texinput24",
    "date4",
    "label9",
    "timePicker10",
    "type6",
    "budget6",
    "comments4",
    "input10",
    "name8",
    "datePickerWeb4",
    "inputSelect4",
    "signedByBaseFieldGroupSmall4",
    "endDateCalendar4",
    "inputElementTextField7",
    "signedByBaseInputElementTextFieldSmallEnabled4",
    "leadingArtworkContainer13",
    "leadingArtwork7",
    "leadingLabelContainer13",
    "leadingLabel13",
    "signedByBaseTypographyLabelSmall7",
    "text80",
    "spacer73",
    "inputElementContentText13",
    "signedByBaseInputElementContentTextSmallOff4",
    "text81",
    "trailingLabelEnhancer13",
    "trailingLabel13",
    "signedByBaseTypographyLabelSmall8",
    "text82",
    "spacer74",
    "trailingArtworkContainer13",
    "trailingArtwork13",
    "calendar4",
    "signedByBaseInputElementSelectXSmallWebSingleDefaultEnabled4",
    "leadingArtworkContainer14",
    "text83",
    "leadingLabelContainer14",
    "leadingLabel14",
    "signedByBaseTypographyLabelXSmall7",
    "text84",
    "spacer75",
    "inputElementContentText14",
    "signedByBaseInputElementContentTextXSmallWebOff4",
    "text85",
    "trailingLabelEnhancer14",
    "trailingLabel14",
    "signedByBaseTypographyLabelXSmall8",
    "text86",
    "spacer76",
    "trailingArtworkContainer14",
    "trailingArtwork14",
    "selectIndicatorContainer7",
    "chevronIcon7",
    "inputElementHint7",
    "heart31",
    "hint7",
    "signedByBaseTypographyParagraphSmall7",
    "text87",
    "spacer77",
    "inputElementSelect4",
    "signedByBaseInputElementSelectMediumSingleDefaultActive4",
    "selectFrame4",
    "leadingArtworkContainer15",
    "leadingArtwork8",
    "leadingLabelContainer15",
    "leadingLabel15",
    "signedByBaseTypographyLabelMedium19",
    "text88",
    "spacer78",
    "inputElementContentText15",
    "signedByBaseInputElementContentTextMediumOff7",
    "text89",
    "trailingLabelEnhancer15",
    "trailingLabel15",
    "signedByBaseTypographyLabelMedium20",
    "text90",
    "spacer79",
    "trailingArtworkContainer15",
    "trailingArtwork15",
    "selectIndicatorContainer8",
    "chevronIcon8",
    "menu4",
    "signedByBaseMenuListMedium4",
    "menuItem16",
    "signedByBaseMenuItemSearchMediumNoneEnabled4",
    "searchField4",
    "signedByBaseSearchFieldMediumEnabled4",
    "inputElementLabel4",
    "signedByBaseInputElementLabelMedium4",
    "typography43",
    "signedByBaseTypographyLabelMedium21",
    "text91",
    "spacer80",
    "characterCountFrame4",
    "heart32",
    "typography44",
    "signedByBaseTypographyLabelMedium22",
    "text92",
    "spacer81",
    "inputElementTextField8",
    "signedByBaseInputElementTextFieldMediumEnabled4",
    "leadingArtworkContainer16",
    "search4",
    "leadingLabelContainer16",
    "leadingLabel16",
    "signedByBaseTypographyLabelMedium23",
    "text93",
    "spacer82",
    "inputElementContentText16",
    "signedByBaseInputElementContentTextMediumOff8",
    "text94",
    "trailingLabelEnhancer16",
    "trailingLabel16",
    "signedByBaseTypographyLabelMedium24",
    "text95",
    "spacer83",
    "trailingArtworkContainer16",
    "trailingArtwork16",
    "inputElementHint8",
    "heart33",
    "hint8",
    "signedByBaseTypographyParagraphSmall8",
    "text96",
    "spacer84",
    "menuItem17",
    "signedByBaseMenuItemOptionMediumStandardEnabled13",
    "menuItemControlMediumCheckboxUnchecked13",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked13",
    "icon13",
    "leadingEnhancer13",
    "heart34",
    "textFrame13",
    "leadingText13",
    "typography45",
    "signedByBaseTypographyParagraphMedium37",
    "text97",
    "spacer85",
    "typography46",
    "signedByBaseTypographyParagraphMedium38",
    "text98",
    "spacer86",
    "typography47",
    "signedByBaseTypographyParagraphMedium39",
    "spacer87",
    "trailingEnhancer13",
    "heart35",
    "menuItem18",
    "signedByBaseMenuItemOptionMediumStandardEnabled14",
    "menuItemControlMediumCheckboxUnchecked14",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked14",
    "icon14",
    "leadingEnhancer14",
    "heart36",
    "textFrame14",
    "leadingText14",
    "typography48",
    "signedByBaseTypographyParagraphMedium40",
    "text99",
    "spacer88",
    "typography49",
    "signedByBaseTypographyParagraphMedium41",
    "text100",
    "spacer89",
    "typography50",
    "signedByBaseTypographyParagraphMedium42",
    "spacer90",
    "trailingEnhancer14",
    "checkmarkSmall4",
    "menuItem19",
    "signedByBaseMenuItemOptionMediumStandardEnabled15",
    "menuItemControlMediumCheckboxUnchecked15",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked15",
    "icon15",
    "leadingEnhancer15",
    "heart37",
    "textFrame15",
    "leadingText15",
    "typography51",
    "signedByBaseTypographyParagraphMedium43",
    "text101",
    "spacer91",
    "typography52",
    "signedByBaseTypographyParagraphMedium44",
    "text102",
    "spacer92",
    "typography53",
    "signedByBaseTypographyParagraphMedium45",
    "spacer93",
    "trailingEnhancer15",
    "heart38",
    "menuItem20",
    "signedByBaseMenuItemOptionMediumStandardEnabled16",
    "menuItemControlMediumCheckboxUnchecked16",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked16",
    "icon16",
    "leadingEnhancer16",
    "heart39",
    "textFrame16",
    "leadingText16",
    "typography54",
    "signedByBaseTypographyParagraphMedium46",
    "text103",
    "spacer94",
    "typography55",
    "signedByBaseTypographyParagraphMedium47",
    "text104",
    "spacer95",
    "typography56",
    "signedByBaseTypographyParagraphMedium48",
    "spacer96",
    "trailingEnhancer16",
    "heart40",
    "scrollBar4",
    "model6",
    "buttons4",
    "button13",
    "frame1073713927",
    "frame1073713933",
    "button14",
    "button15",
    "button16"
  ],
  frame1437254022: ["frame1437254022", "name9", "frame1437254023"],
  name9: ["name9"],
  frame1437254023: ["frame1437254023"],
  formDuplicateModel: ["formDuplicateModel", "button"],
  button: ["button"],
  content4: [
    "content4",
    "titre6",
    "texinput24",
    "date4",
    "label9",
    "timePicker10",
    "type6",
    "budget6",
    "comments4",
    "input10",
    "name8",
    "datePickerWeb4",
    "inputSelect4",
    "signedByBaseFieldGroupSmall4",
    "endDateCalendar4",
    "inputElementTextField7",
    "signedByBaseInputElementTextFieldSmallEnabled4",
    "leadingArtworkContainer13",
    "leadingArtwork7",
    "leadingLabelContainer13",
    "leadingLabel13",
    "signedByBaseTypographyLabelSmall7",
    "text80",
    "spacer73",
    "inputElementContentText13",
    "signedByBaseInputElementContentTextSmallOff4",
    "text81",
    "trailingLabelEnhancer13",
    "trailingLabel13",
    "signedByBaseTypographyLabelSmall8",
    "text82",
    "spacer74",
    "trailingArtworkContainer13",
    "trailingArtwork13",
    "calendar4",
    "signedByBaseInputElementSelectXSmallWebSingleDefaultEnabled4",
    "leadingArtworkContainer14",
    "text83",
    "leadingLabelContainer14",
    "leadingLabel14",
    "signedByBaseTypographyLabelXSmall7",
    "text84",
    "spacer75",
    "inputElementContentText14",
    "signedByBaseInputElementContentTextXSmallWebOff4",
    "text85",
    "trailingLabelEnhancer14",
    "trailingLabel14",
    "signedByBaseTypographyLabelXSmall8",
    "text86",
    "spacer76",
    "trailingArtworkContainer14",
    "trailingArtwork14",
    "selectIndicatorContainer7",
    "chevronIcon7",
    "inputElementHint7",
    "heart31",
    "hint7",
    "signedByBaseTypographyParagraphSmall7",
    "text87",
    "spacer77",
    "inputElementSelect4",
    "signedByBaseInputElementSelectMediumSingleDefaultActive4",
    "selectFrame4",
    "leadingArtworkContainer15",
    "leadingArtwork8",
    "leadingLabelContainer15",
    "leadingLabel15",
    "signedByBaseTypographyLabelMedium19",
    "text88",
    "spacer78",
    "inputElementContentText15",
    "signedByBaseInputElementContentTextMediumOff7",
    "text89",
    "trailingLabelEnhancer15",
    "trailingLabel15",
    "signedByBaseTypographyLabelMedium20",
    "text90",
    "spacer79",
    "trailingArtworkContainer15",
    "trailingArtwork15",
    "selectIndicatorContainer8",
    "chevronIcon8",
    "menu4",
    "signedByBaseMenuListMedium4",
    "menuItem16",
    "signedByBaseMenuItemSearchMediumNoneEnabled4",
    "searchField4",
    "signedByBaseSearchFieldMediumEnabled4",
    "inputElementLabel4",
    "signedByBaseInputElementLabelMedium4",
    "typography43",
    "signedByBaseTypographyLabelMedium21",
    "text91",
    "spacer80",
    "characterCountFrame4",
    "heart32",
    "typography44",
    "signedByBaseTypographyLabelMedium22",
    "text92",
    "spacer81",
    "inputElementTextField8",
    "signedByBaseInputElementTextFieldMediumEnabled4",
    "leadingArtworkContainer16",
    "search4",
    "leadingLabelContainer16",
    "leadingLabel16",
    "signedByBaseTypographyLabelMedium23",
    "text93",
    "spacer82",
    "inputElementContentText16",
    "signedByBaseInputElementContentTextMediumOff8",
    "text94",
    "trailingLabelEnhancer16",
    "trailingLabel16",
    "signedByBaseTypographyLabelMedium24",
    "text95",
    "spacer83",
    "trailingArtworkContainer16",
    "trailingArtwork16",
    "inputElementHint8",
    "heart33",
    "hint8",
    "signedByBaseTypographyParagraphSmall8",
    "text96",
    "spacer84",
    "menuItem17",
    "signedByBaseMenuItemOptionMediumStandardEnabled13",
    "menuItemControlMediumCheckboxUnchecked13",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked13",
    "icon13",
    "leadingEnhancer13",
    "heart34",
    "textFrame13",
    "leadingText13",
    "typography45",
    "signedByBaseTypographyParagraphMedium37",
    "text97",
    "spacer85",
    "typography46",
    "signedByBaseTypographyParagraphMedium38",
    "text98",
    "spacer86",
    "typography47",
    "signedByBaseTypographyParagraphMedium39",
    "spacer87",
    "trailingEnhancer13",
    "heart35",
    "menuItem18",
    "signedByBaseMenuItemOptionMediumStandardEnabled14",
    "menuItemControlMediumCheckboxUnchecked14",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked14",
    "icon14",
    "leadingEnhancer14",
    "heart36",
    "textFrame14",
    "leadingText14",
    "typography48",
    "signedByBaseTypographyParagraphMedium40",
    "text99",
    "spacer88",
    "typography49",
    "signedByBaseTypographyParagraphMedium41",
    "text100",
    "spacer89",
    "typography50",
    "signedByBaseTypographyParagraphMedium42",
    "spacer90",
    "trailingEnhancer14",
    "checkmarkSmall4",
    "menuItem19",
    "signedByBaseMenuItemOptionMediumStandardEnabled15",
    "menuItemControlMediumCheckboxUnchecked15",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked15",
    "icon15",
    "leadingEnhancer15",
    "heart37",
    "textFrame15",
    "leadingText15",
    "typography51",
    "signedByBaseTypographyParagraphMedium43",
    "text101",
    "spacer91",
    "typography52",
    "signedByBaseTypographyParagraphMedium44",
    "text102",
    "spacer92",
    "typography53",
    "signedByBaseTypographyParagraphMedium45",
    "spacer93",
    "trailingEnhancer15",
    "heart38",
    "menuItem20",
    "signedByBaseMenuItemOptionMediumStandardEnabled16",
    "menuItemControlMediumCheckboxUnchecked16",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked16",
    "icon16",
    "leadingEnhancer16",
    "heart39",
    "textFrame16",
    "leadingText16",
    "typography54",
    "signedByBaseTypographyParagraphMedium46",
    "text103",
    "spacer94",
    "typography55",
    "signedByBaseTypographyParagraphMedium47",
    "text104",
    "spacer95",
    "typography56",
    "signedByBaseTypographyParagraphMedium48",
    "spacer96",
    "trailingEnhancer16",
    "heart40",
    "scrollBar4",
    "model6",
    "buttons4",
    "button13",
    "frame1073713927",
    "frame1073713933",
    "button14",
    "button15",
    "button16"
  ],
  titre6: ["titre6"],
  texinput24: ["texinput24"],
  date4: ["date4", "label9", "timePicker10"],
  label9: ["label9"],
  timePicker10: ["timePicker10"],
  type6: ["type6"],
  budget6: ["budget6"],
  comments4: ["comments4"],
  input10: [
    "input10",
    "name8",
    "datePickerWeb4",
    "inputSelect4",
    "signedByBaseFieldGroupSmall4",
    "endDateCalendar4",
    "inputElementTextField7",
    "signedByBaseInputElementTextFieldSmallEnabled4",
    "leadingArtworkContainer13",
    "leadingArtwork7",
    "leadingLabelContainer13",
    "leadingLabel13",
    "signedByBaseTypographyLabelSmall7",
    "text80",
    "spacer73",
    "inputElementContentText13",
    "signedByBaseInputElementContentTextSmallOff4",
    "text81",
    "trailingLabelEnhancer13",
    "trailingLabel13",
    "signedByBaseTypographyLabelSmall8",
    "text82",
    "spacer74",
    "trailingArtworkContainer13",
    "trailingArtwork13",
    "calendar4",
    "signedByBaseInputElementSelectXSmallWebSingleDefaultEnabled4",
    "leadingArtworkContainer14",
    "text83",
    "leadingLabelContainer14",
    "leadingLabel14",
    "signedByBaseTypographyLabelXSmall7",
    "text84",
    "spacer75",
    "inputElementContentText14",
    "signedByBaseInputElementContentTextXSmallWebOff4",
    "text85",
    "trailingLabelEnhancer14",
    "trailingLabel14",
    "signedByBaseTypographyLabelXSmall8",
    "text86",
    "spacer76",
    "trailingArtworkContainer14",
    "trailingArtwork14",
    "selectIndicatorContainer7",
    "chevronIcon7",
    "inputElementHint7",
    "heart31",
    "hint7",
    "signedByBaseTypographyParagraphSmall7",
    "text87",
    "spacer77",
    "inputElementSelect4",
    "signedByBaseInputElementSelectMediumSingleDefaultActive4",
    "selectFrame4",
    "leadingArtworkContainer15",
    "leadingArtwork8",
    "leadingLabelContainer15",
    "leadingLabel15",
    "signedByBaseTypographyLabelMedium19",
    "text88",
    "spacer78",
    "inputElementContentText15",
    "signedByBaseInputElementContentTextMediumOff7",
    "text89",
    "trailingLabelEnhancer15",
    "trailingLabel15",
    "signedByBaseTypographyLabelMedium20",
    "text90",
    "spacer79",
    "trailingArtworkContainer15",
    "trailingArtwork15",
    "selectIndicatorContainer8",
    "chevronIcon8",
    "menu4",
    "signedByBaseMenuListMedium4",
    "menuItem16",
    "signedByBaseMenuItemSearchMediumNoneEnabled4",
    "searchField4",
    "signedByBaseSearchFieldMediumEnabled4",
    "inputElementLabel4",
    "signedByBaseInputElementLabelMedium4",
    "typography43",
    "signedByBaseTypographyLabelMedium21",
    "text91",
    "spacer80",
    "characterCountFrame4",
    "heart32",
    "typography44",
    "signedByBaseTypographyLabelMedium22",
    "text92",
    "spacer81",
    "inputElementTextField8",
    "signedByBaseInputElementTextFieldMediumEnabled4",
    "leadingArtworkContainer16",
    "search4",
    "leadingLabelContainer16",
    "leadingLabel16",
    "signedByBaseTypographyLabelMedium23",
    "text93",
    "spacer82",
    "inputElementContentText16",
    "signedByBaseInputElementContentTextMediumOff8",
    "text94",
    "trailingLabelEnhancer16",
    "trailingLabel16",
    "signedByBaseTypographyLabelMedium24",
    "text95",
    "spacer83",
    "trailingArtworkContainer16",
    "trailingArtwork16",
    "inputElementHint8",
    "heart33",
    "hint8",
    "signedByBaseTypographyParagraphSmall8",
    "text96",
    "spacer84",
    "menuItem17",
    "signedByBaseMenuItemOptionMediumStandardEnabled13",
    "menuItemControlMediumCheckboxUnchecked13",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked13",
    "icon13",
    "leadingEnhancer13",
    "heart34",
    "textFrame13",
    "leadingText13",
    "typography45",
    "signedByBaseTypographyParagraphMedium37",
    "text97",
    "spacer85",
    "typography46",
    "signedByBaseTypographyParagraphMedium38",
    "text98",
    "spacer86",
    "typography47",
    "signedByBaseTypographyParagraphMedium39",
    "spacer87",
    "trailingEnhancer13",
    "heart35",
    "menuItem18",
    "signedByBaseMenuItemOptionMediumStandardEnabled14",
    "menuItemControlMediumCheckboxUnchecked14",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked14",
    "icon14",
    "leadingEnhancer14",
    "heart36",
    "textFrame14",
    "leadingText14",
    "typography48",
    "signedByBaseTypographyParagraphMedium40",
    "text99",
    "spacer88",
    "typography49",
    "signedByBaseTypographyParagraphMedium41",
    "text100",
    "spacer89",
    "typography50",
    "signedByBaseTypographyParagraphMedium42",
    "spacer90",
    "trailingEnhancer14",
    "checkmarkSmall4",
    "menuItem19",
    "signedByBaseMenuItemOptionMediumStandardEnabled15",
    "menuItemControlMediumCheckboxUnchecked15",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked15",
    "icon15",
    "leadingEnhancer15",
    "heart37",
    "textFrame15",
    "leadingText15",
    "typography51",
    "signedByBaseTypographyParagraphMedium43",
    "text101",
    "spacer91",
    "typography52",
    "signedByBaseTypographyParagraphMedium44",
    "text102",
    "spacer92",
    "typography53",
    "signedByBaseTypographyParagraphMedium45",
    "spacer93",
    "trailingEnhancer15",
    "heart38",
    "menuItem20",
    "signedByBaseMenuItemOptionMediumStandardEnabled16",
    "menuItemControlMediumCheckboxUnchecked16",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked16",
    "icon16",
    "leadingEnhancer16",
    "heart39",
    "textFrame16",
    "leadingText16",
    "typography54",
    "signedByBaseTypographyParagraphMedium46",
    "text103",
    "spacer94",
    "typography55",
    "signedByBaseTypographyParagraphMedium47",
    "text104",
    "spacer95",
    "typography56",
    "signedByBaseTypographyParagraphMedium48",
    "spacer96",
    "trailingEnhancer16",
    "heart40",
    "scrollBar4"
  ],
  name8: ["name8"],
  datePickerWeb4: [
    "datePickerWeb4",
    "inputSelect4",
    "signedByBaseFieldGroupSmall4",
    "endDateCalendar4",
    "inputElementTextField7",
    "signedByBaseInputElementTextFieldSmallEnabled4",
    "leadingArtworkContainer13",
    "leadingArtwork7",
    "leadingLabelContainer13",
    "leadingLabel13",
    "signedByBaseTypographyLabelSmall7",
    "text80",
    "spacer73",
    "inputElementContentText13",
    "signedByBaseInputElementContentTextSmallOff4",
    "text81",
    "trailingLabelEnhancer13",
    "trailingLabel13",
    "signedByBaseTypographyLabelSmall8",
    "text82",
    "spacer74",
    "trailingArtworkContainer13",
    "trailingArtwork13",
    "calendar4",
    "signedByBaseInputElementSelectXSmallWebSingleDefaultEnabled4",
    "leadingArtworkContainer14",
    "text83",
    "leadingLabelContainer14",
    "leadingLabel14",
    "signedByBaseTypographyLabelXSmall7",
    "text84",
    "spacer75",
    "inputElementContentText14",
    "signedByBaseInputElementContentTextXSmallWebOff4",
    "text85",
    "trailingLabelEnhancer14",
    "trailingLabel14",
    "signedByBaseTypographyLabelXSmall8",
    "text86",
    "spacer76",
    "trailingArtworkContainer14",
    "trailingArtwork14",
    "selectIndicatorContainer7",
    "chevronIcon7",
    "inputElementHint7",
    "heart31",
    "hint7",
    "signedByBaseTypographyParagraphSmall7",
    "text87",
    "spacer77"
  ],
  inputSelect4: [
    "inputSelect4",
    "signedByBaseFieldGroupSmall4",
    "endDateCalendar4",
    "inputElementTextField7",
    "signedByBaseInputElementTextFieldSmallEnabled4",
    "leadingArtworkContainer13",
    "leadingArtwork7",
    "leadingLabelContainer13",
    "leadingLabel13",
    "signedByBaseTypographyLabelSmall7",
    "text80",
    "spacer73",
    "inputElementContentText13",
    "signedByBaseInputElementContentTextSmallOff4",
    "text81",
    "trailingLabelEnhancer13",
    "trailingLabel13",
    "signedByBaseTypographyLabelSmall8",
    "text82",
    "spacer74",
    "trailingArtworkContainer13",
    "trailingArtwork13",
    "calendar4",
    "signedByBaseInputElementSelectXSmallWebSingleDefaultEnabled4",
    "leadingArtworkContainer14",
    "text83",
    "leadingLabelContainer14",
    "leadingLabel14",
    "signedByBaseTypographyLabelXSmall7",
    "text84",
    "spacer75",
    "inputElementContentText14",
    "signedByBaseInputElementContentTextXSmallWebOff4",
    "text85",
    "trailingLabelEnhancer14",
    "trailingLabel14",
    "signedByBaseTypographyLabelXSmall8",
    "text86",
    "spacer76",
    "trailingArtworkContainer14",
    "trailingArtwork14",
    "selectIndicatorContainer7",
    "chevronIcon7",
    "inputElementHint7",
    "heart31",
    "hint7",
    "signedByBaseTypographyParagraphSmall7",
    "text87",
    "spacer77"
  ],
  signedByBaseFieldGroupSmall4: ["signedByBaseFieldGroupSmall4"],
  endDateCalendar4: [
    "endDateCalendar4",
    "inputElementTextField7",
    "signedByBaseInputElementTextFieldSmallEnabled4",
    "leadingArtworkContainer13",
    "leadingArtwork7",
    "leadingLabelContainer13",
    "leadingLabel13",
    "signedByBaseTypographyLabelSmall7",
    "text80",
    "spacer73",
    "inputElementContentText13",
    "signedByBaseInputElementContentTextSmallOff4",
    "text81",
    "trailingLabelEnhancer13",
    "trailingLabel13",
    "signedByBaseTypographyLabelSmall8",
    "text82",
    "spacer74",
    "trailingArtworkContainer13",
    "trailingArtwork13",
    "calendar4",
    "signedByBaseInputElementSelectXSmallWebSingleDefaultEnabled4",
    "leadingArtworkContainer14",
    "text83",
    "leadingLabelContainer14",
    "leadingLabel14",
    "signedByBaseTypographyLabelXSmall7",
    "text84",
    "spacer75",
    "inputElementContentText14",
    "signedByBaseInputElementContentTextXSmallWebOff4",
    "text85",
    "trailingLabelEnhancer14",
    "trailingLabel14",
    "signedByBaseTypographyLabelXSmall8",
    "text86",
    "spacer76",
    "trailingArtworkContainer14",
    "trailingArtwork14",
    "selectIndicatorContainer7",
    "chevronIcon7"
  ],
  inputElementTextField7: [
    "inputElementTextField7",
    "signedByBaseInputElementTextFieldSmallEnabled4",
    "leadingArtworkContainer13",
    "leadingArtwork7",
    "leadingLabelContainer13",
    "leadingLabel13",
    "signedByBaseTypographyLabelSmall7",
    "text80",
    "spacer73",
    "inputElementContentText13",
    "signedByBaseInputElementContentTextSmallOff4",
    "text81",
    "trailingLabelEnhancer13",
    "trailingLabel13",
    "signedByBaseTypographyLabelSmall8",
    "text82",
    "spacer74",
    "trailingArtworkContainer13",
    "trailingArtwork13"
  ],
  signedByBaseInputElementTextFieldSmallEnabled4: [
    "signedByBaseInputElementTextFieldSmallEnabled4"
  ],
  leadingArtworkContainer13: ["leadingArtworkContainer13", "leadingArtwork7"],
  leadingArtwork7: ["leadingArtwork7"],
  leadingLabelContainer13: [
    "leadingLabelContainer13",
    "leadingLabel13",
    "signedByBaseTypographyLabelSmall7",
    "text80",
    "spacer73"
  ],
  leadingLabel13: [
    "leadingLabel13",
    "signedByBaseTypographyLabelSmall7",
    "text80",
    "spacer73"
  ],
  signedByBaseTypographyLabelSmall7: ["signedByBaseTypographyLabelSmall7"],
  text80: ["text80"],
  spacer73: ["spacer73"],
  inputElementContentText13: [
    "inputElementContentText13",
    "signedByBaseInputElementContentTextSmallOff4",
    "text81"
  ],
  signedByBaseInputElementContentTextSmallOff4: [
    "signedByBaseInputElementContentTextSmallOff4"
  ],
  text81: ["text81"],
  trailingLabelEnhancer13: [
    "trailingLabelEnhancer13",
    "trailingLabel13",
    "signedByBaseTypographyLabelSmall8",
    "text82",
    "spacer74"
  ],
  trailingLabel13: [
    "trailingLabel13",
    "signedByBaseTypographyLabelSmall8",
    "text82",
    "spacer74"
  ],
  signedByBaseTypographyLabelSmall8: ["signedByBaseTypographyLabelSmall8"],
  text82: ["text82"],
  spacer74: ["spacer74"],
  trailingArtworkContainer13: [
    "trailingArtworkContainer13",
    "trailingArtwork13"
  ],
  trailingArtwork13: ["trailingArtwork13"],
  calendar4: [
    "calendar4",
    "signedByBaseInputElementSelectXSmallWebSingleDefaultEnabled4",
    "leadingArtworkContainer14",
    "text83",
    "leadingLabelContainer14",
    "leadingLabel14",
    "signedByBaseTypographyLabelXSmall7",
    "text84",
    "spacer75",
    "inputElementContentText14",
    "signedByBaseInputElementContentTextXSmallWebOff4",
    "text85",
    "trailingLabelEnhancer14",
    "trailingLabel14",
    "signedByBaseTypographyLabelXSmall8",
    "text86",
    "spacer76",
    "trailingArtworkContainer14",
    "trailingArtwork14",
    "selectIndicatorContainer7",
    "chevronIcon7"
  ],
  signedByBaseInputElementSelectXSmallWebSingleDefaultEnabled4: [
    "signedByBaseInputElementSelectXSmallWebSingleDefaultEnabled4"
  ],
  leadingArtworkContainer14: ["leadingArtworkContainer14", "text83"],
  text83: ["text83"],
  leadingLabelContainer14: [
    "leadingLabelContainer14",
    "leadingLabel14",
    "signedByBaseTypographyLabelXSmall7",
    "text84",
    "spacer75"
  ],
  leadingLabel14: [
    "leadingLabel14",
    "signedByBaseTypographyLabelXSmall7",
    "text84",
    "spacer75"
  ],
  signedByBaseTypographyLabelXSmall7: ["signedByBaseTypographyLabelXSmall7"],
  text84: ["text84"],
  spacer75: ["spacer75"],
  inputElementContentText14: [
    "inputElementContentText14",
    "signedByBaseInputElementContentTextXSmallWebOff4",
    "text85"
  ],
  signedByBaseInputElementContentTextXSmallWebOff4: [
    "signedByBaseInputElementContentTextXSmallWebOff4"
  ],
  text85: ["text85"],
  trailingLabelEnhancer14: [
    "trailingLabelEnhancer14",
    "trailingLabel14",
    "signedByBaseTypographyLabelXSmall8",
    "text86",
    "spacer76"
  ],
  trailingLabel14: [
    "trailingLabel14",
    "signedByBaseTypographyLabelXSmall8",
    "text86",
    "spacer76"
  ],
  signedByBaseTypographyLabelXSmall8: ["signedByBaseTypographyLabelXSmall8"],
  text86: ["text86"],
  spacer76: ["spacer76"],
  trailingArtworkContainer14: [
    "trailingArtworkContainer14",
    "trailingArtwork14"
  ],
  trailingArtwork14: ["trailingArtwork14"],
  selectIndicatorContainer7: ["selectIndicatorContainer7", "chevronIcon7"],
  chevronIcon7: ["chevronIcon7"],
  inputElementHint7: [
    "inputElementHint7",
    "heart31",
    "hint7",
    "signedByBaseTypographyParagraphSmall7",
    "text87",
    "spacer77"
  ],
  heart31: ["heart31"],
  hint7: [
    "hint7",
    "signedByBaseTypographyParagraphSmall7",
    "text87",
    "spacer77"
  ],
  signedByBaseTypographyParagraphSmall7: [
    "signedByBaseTypographyParagraphSmall7"
  ],
  text87: ["text87"],
  spacer77: ["spacer77"],
  inputElementSelect4: [
    "inputElementSelect4",
    "signedByBaseInputElementSelectMediumSingleDefaultActive4",
    "selectFrame4",
    "leadingArtworkContainer15",
    "leadingArtwork8",
    "leadingLabelContainer15",
    "leadingLabel15",
    "signedByBaseTypographyLabelMedium19",
    "text88",
    "spacer78",
    "inputElementContentText15",
    "signedByBaseInputElementContentTextMediumOff7",
    "text89",
    "trailingLabelEnhancer15",
    "trailingLabel15",
    "signedByBaseTypographyLabelMedium20",
    "text90",
    "spacer79",
    "trailingArtworkContainer15",
    "trailingArtwork15",
    "selectIndicatorContainer8",
    "chevronIcon8",
    "menu4",
    "signedByBaseMenuListMedium4",
    "menuItem16",
    "signedByBaseMenuItemSearchMediumNoneEnabled4",
    "searchField4",
    "signedByBaseSearchFieldMediumEnabled4",
    "inputElementLabel4",
    "signedByBaseInputElementLabelMedium4",
    "typography43",
    "signedByBaseTypographyLabelMedium21",
    "text91",
    "spacer80",
    "characterCountFrame4",
    "heart32",
    "typography44",
    "signedByBaseTypographyLabelMedium22",
    "text92",
    "spacer81",
    "inputElementTextField8",
    "signedByBaseInputElementTextFieldMediumEnabled4",
    "leadingArtworkContainer16",
    "search4",
    "leadingLabelContainer16",
    "leadingLabel16",
    "signedByBaseTypographyLabelMedium23",
    "text93",
    "spacer82",
    "inputElementContentText16",
    "signedByBaseInputElementContentTextMediumOff8",
    "text94",
    "trailingLabelEnhancer16",
    "trailingLabel16",
    "signedByBaseTypographyLabelMedium24",
    "text95",
    "spacer83",
    "trailingArtworkContainer16",
    "trailingArtwork16",
    "inputElementHint8",
    "heart33",
    "hint8",
    "signedByBaseTypographyParagraphSmall8",
    "text96",
    "spacer84",
    "menuItem17",
    "signedByBaseMenuItemOptionMediumStandardEnabled13",
    "menuItemControlMediumCheckboxUnchecked13",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked13",
    "icon13",
    "leadingEnhancer13",
    "heart34",
    "textFrame13",
    "leadingText13",
    "typography45",
    "signedByBaseTypographyParagraphMedium37",
    "text97",
    "spacer85",
    "typography46",
    "signedByBaseTypographyParagraphMedium38",
    "text98",
    "spacer86",
    "typography47",
    "signedByBaseTypographyParagraphMedium39",
    "spacer87",
    "trailingEnhancer13",
    "heart35",
    "menuItem18",
    "signedByBaseMenuItemOptionMediumStandardEnabled14",
    "menuItemControlMediumCheckboxUnchecked14",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked14",
    "icon14",
    "leadingEnhancer14",
    "heart36",
    "textFrame14",
    "leadingText14",
    "typography48",
    "signedByBaseTypographyParagraphMedium40",
    "text99",
    "spacer88",
    "typography49",
    "signedByBaseTypographyParagraphMedium41",
    "text100",
    "spacer89",
    "typography50",
    "signedByBaseTypographyParagraphMedium42",
    "spacer90",
    "trailingEnhancer14",
    "checkmarkSmall4",
    "menuItem19",
    "signedByBaseMenuItemOptionMediumStandardEnabled15",
    "menuItemControlMediumCheckboxUnchecked15",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked15",
    "icon15",
    "leadingEnhancer15",
    "heart37",
    "textFrame15",
    "leadingText15",
    "typography51",
    "signedByBaseTypographyParagraphMedium43",
    "text101",
    "spacer91",
    "typography52",
    "signedByBaseTypographyParagraphMedium44",
    "text102",
    "spacer92",
    "typography53",
    "signedByBaseTypographyParagraphMedium45",
    "spacer93",
    "trailingEnhancer15",
    "heart38",
    "menuItem20",
    "signedByBaseMenuItemOptionMediumStandardEnabled16",
    "menuItemControlMediumCheckboxUnchecked16",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked16",
    "icon16",
    "leadingEnhancer16",
    "heart39",
    "textFrame16",
    "leadingText16",
    "typography54",
    "signedByBaseTypographyParagraphMedium46",
    "text103",
    "spacer94",
    "typography55",
    "signedByBaseTypographyParagraphMedium47",
    "text104",
    "spacer95",
    "typography56",
    "signedByBaseTypographyParagraphMedium48",
    "spacer96",
    "trailingEnhancer16",
    "heart40",
    "scrollBar4"
  ],
  signedByBaseInputElementSelectMediumSingleDefaultActive4: [
    "signedByBaseInputElementSelectMediumSingleDefaultActive4"
  ],
  selectFrame4: [
    "selectFrame4",
    "leadingArtworkContainer15",
    "leadingArtwork8",
    "leadingLabelContainer15",
    "leadingLabel15",
    "signedByBaseTypographyLabelMedium19",
    "text88",
    "spacer78",
    "inputElementContentText15",
    "signedByBaseInputElementContentTextMediumOff7",
    "text89",
    "trailingLabelEnhancer15",
    "trailingLabel15",
    "signedByBaseTypographyLabelMedium20",
    "text90",
    "spacer79",
    "trailingArtworkContainer15",
    "trailingArtwork15",
    "selectIndicatorContainer8",
    "chevronIcon8"
  ],
  leadingArtworkContainer15: ["leadingArtworkContainer15", "leadingArtwork8"],
  leadingArtwork8: ["leadingArtwork8"],
  leadingLabelContainer15: [
    "leadingLabelContainer15",
    "leadingLabel15",
    "signedByBaseTypographyLabelMedium19",
    "text88",
    "spacer78"
  ],
  leadingLabel15: [
    "leadingLabel15",
    "signedByBaseTypographyLabelMedium19",
    "text88",
    "spacer78"
  ],
  signedByBaseTypographyLabelMedium19: ["signedByBaseTypographyLabelMedium19"],
  text88: ["text88"],
  spacer78: ["spacer78"],
  inputElementContentText15: [
    "inputElementContentText15",
    "signedByBaseInputElementContentTextMediumOff7",
    "text89"
  ],
  signedByBaseInputElementContentTextMediumOff7: [
    "signedByBaseInputElementContentTextMediumOff7"
  ],
  text89: ["text89"],
  trailingLabelEnhancer15: [
    "trailingLabelEnhancer15",
    "trailingLabel15",
    "signedByBaseTypographyLabelMedium20",
    "text90",
    "spacer79"
  ],
  trailingLabel15: [
    "trailingLabel15",
    "signedByBaseTypographyLabelMedium20",
    "text90",
    "spacer79"
  ],
  signedByBaseTypographyLabelMedium20: ["signedByBaseTypographyLabelMedium20"],
  text90: ["text90"],
  spacer79: ["spacer79"],
  trailingArtworkContainer15: [
    "trailingArtworkContainer15",
    "trailingArtwork15"
  ],
  trailingArtwork15: ["trailingArtwork15"],
  selectIndicatorContainer8: ["selectIndicatorContainer8", "chevronIcon8"],
  chevronIcon8: ["chevronIcon8"],
  menu4: [
    "menu4",
    "signedByBaseMenuListMedium4",
    "menuItem16",
    "signedByBaseMenuItemSearchMediumNoneEnabled4",
    "searchField4",
    "signedByBaseSearchFieldMediumEnabled4",
    "inputElementLabel4",
    "signedByBaseInputElementLabelMedium4",
    "typography43",
    "signedByBaseTypographyLabelMedium21",
    "text91",
    "spacer80",
    "characterCountFrame4",
    "heart32",
    "typography44",
    "signedByBaseTypographyLabelMedium22",
    "text92",
    "spacer81",
    "inputElementTextField8",
    "signedByBaseInputElementTextFieldMediumEnabled4",
    "leadingArtworkContainer16",
    "search4",
    "leadingLabelContainer16",
    "leadingLabel16",
    "signedByBaseTypographyLabelMedium23",
    "text93",
    "spacer82",
    "inputElementContentText16",
    "signedByBaseInputElementContentTextMediumOff8",
    "text94",
    "trailingLabelEnhancer16",
    "trailingLabel16",
    "signedByBaseTypographyLabelMedium24",
    "text95",
    "spacer83",
    "trailingArtworkContainer16",
    "trailingArtwork16",
    "inputElementHint8",
    "heart33",
    "hint8",
    "signedByBaseTypographyParagraphSmall8",
    "text96",
    "spacer84",
    "menuItem17",
    "signedByBaseMenuItemOptionMediumStandardEnabled13",
    "menuItemControlMediumCheckboxUnchecked13",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked13",
    "icon13",
    "leadingEnhancer13",
    "heart34",
    "textFrame13",
    "leadingText13",
    "typography45",
    "signedByBaseTypographyParagraphMedium37",
    "text97",
    "spacer85",
    "typography46",
    "signedByBaseTypographyParagraphMedium38",
    "text98",
    "spacer86",
    "typography47",
    "signedByBaseTypographyParagraphMedium39",
    "spacer87",
    "trailingEnhancer13",
    "heart35",
    "menuItem18",
    "signedByBaseMenuItemOptionMediumStandardEnabled14",
    "menuItemControlMediumCheckboxUnchecked14",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked14",
    "icon14",
    "leadingEnhancer14",
    "heart36",
    "textFrame14",
    "leadingText14",
    "typography48",
    "signedByBaseTypographyParagraphMedium40",
    "text99",
    "spacer88",
    "typography49",
    "signedByBaseTypographyParagraphMedium41",
    "text100",
    "spacer89",
    "typography50",
    "signedByBaseTypographyParagraphMedium42",
    "spacer90",
    "trailingEnhancer14",
    "checkmarkSmall4",
    "menuItem19",
    "signedByBaseMenuItemOptionMediumStandardEnabled15",
    "menuItemControlMediumCheckboxUnchecked15",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked15",
    "icon15",
    "leadingEnhancer15",
    "heart37",
    "textFrame15",
    "leadingText15",
    "typography51",
    "signedByBaseTypographyParagraphMedium43",
    "text101",
    "spacer91",
    "typography52",
    "signedByBaseTypographyParagraphMedium44",
    "text102",
    "spacer92",
    "typography53",
    "signedByBaseTypographyParagraphMedium45",
    "spacer93",
    "trailingEnhancer15",
    "heart38",
    "menuItem20",
    "signedByBaseMenuItemOptionMediumStandardEnabled16",
    "menuItemControlMediumCheckboxUnchecked16",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked16",
    "icon16",
    "leadingEnhancer16",
    "heart39",
    "textFrame16",
    "leadingText16",
    "typography54",
    "signedByBaseTypographyParagraphMedium46",
    "text103",
    "spacer94",
    "typography55",
    "signedByBaseTypographyParagraphMedium47",
    "text104",
    "spacer95",
    "typography56",
    "signedByBaseTypographyParagraphMedium48",
    "spacer96",
    "trailingEnhancer16",
    "heart40",
    "scrollBar4"
  ],
  signedByBaseMenuListMedium4: ["signedByBaseMenuListMedium4"],
  menuItem16: [
    "menuItem16",
    "signedByBaseMenuItemSearchMediumNoneEnabled4",
    "searchField4",
    "signedByBaseSearchFieldMediumEnabled4",
    "inputElementLabel4",
    "signedByBaseInputElementLabelMedium4",
    "typography43",
    "signedByBaseTypographyLabelMedium21",
    "text91",
    "spacer80",
    "characterCountFrame4",
    "heart32",
    "typography44",
    "signedByBaseTypographyLabelMedium22",
    "text92",
    "spacer81",
    "inputElementTextField8",
    "signedByBaseInputElementTextFieldMediumEnabled4",
    "leadingArtworkContainer16",
    "search4",
    "leadingLabelContainer16",
    "leadingLabel16",
    "signedByBaseTypographyLabelMedium23",
    "text93",
    "spacer82",
    "inputElementContentText16",
    "signedByBaseInputElementContentTextMediumOff8",
    "text94",
    "trailingLabelEnhancer16",
    "trailingLabel16",
    "signedByBaseTypographyLabelMedium24",
    "text95",
    "spacer83",
    "trailingArtworkContainer16",
    "trailingArtwork16",
    "inputElementHint8",
    "heart33",
    "hint8",
    "signedByBaseTypographyParagraphSmall8",
    "text96",
    "spacer84"
  ],
  signedByBaseMenuItemSearchMediumNoneEnabled4: [
    "signedByBaseMenuItemSearchMediumNoneEnabled4"
  ],
  searchField4: [
    "searchField4",
    "signedByBaseSearchFieldMediumEnabled4",
    "inputElementLabel4",
    "signedByBaseInputElementLabelMedium4",
    "typography43",
    "signedByBaseTypographyLabelMedium21",
    "text91",
    "spacer80",
    "characterCountFrame4",
    "heart32",
    "typography44",
    "signedByBaseTypographyLabelMedium22",
    "text92",
    "spacer81",
    "inputElementTextField8",
    "signedByBaseInputElementTextFieldMediumEnabled4",
    "leadingArtworkContainer16",
    "search4",
    "leadingLabelContainer16",
    "leadingLabel16",
    "signedByBaseTypographyLabelMedium23",
    "text93",
    "spacer82",
    "inputElementContentText16",
    "signedByBaseInputElementContentTextMediumOff8",
    "text94",
    "trailingLabelEnhancer16",
    "trailingLabel16",
    "signedByBaseTypographyLabelMedium24",
    "text95",
    "spacer83",
    "trailingArtworkContainer16",
    "trailingArtwork16",
    "inputElementHint8",
    "heart33",
    "hint8",
    "signedByBaseTypographyParagraphSmall8",
    "text96",
    "spacer84"
  ],
  signedByBaseSearchFieldMediumEnabled4: [
    "signedByBaseSearchFieldMediumEnabled4"
  ],
  inputElementLabel4: [
    "inputElementLabel4",
    "signedByBaseInputElementLabelMedium4",
    "typography43",
    "signedByBaseTypographyLabelMedium21",
    "text91",
    "spacer80",
    "characterCountFrame4",
    "heart32",
    "typography44",
    "signedByBaseTypographyLabelMedium22",
    "text92",
    "spacer81"
  ],
  signedByBaseInputElementLabelMedium4: [
    "signedByBaseInputElementLabelMedium4"
  ],
  typography43: [
    "typography43",
    "signedByBaseTypographyLabelMedium21",
    "text91",
    "spacer80"
  ],
  signedByBaseTypographyLabelMedium21: ["signedByBaseTypographyLabelMedium21"],
  text91: ["text91"],
  spacer80: ["spacer80"],
  characterCountFrame4: [
    "characterCountFrame4",
    "heart32",
    "typography44",
    "signedByBaseTypographyLabelMedium22",
    "text92",
    "spacer81"
  ],
  heart32: ["heart32"],
  typography44: [
    "typography44",
    "signedByBaseTypographyLabelMedium22",
    "text92",
    "spacer81"
  ],
  signedByBaseTypographyLabelMedium22: ["signedByBaseTypographyLabelMedium22"],
  text92: ["text92"],
  spacer81: ["spacer81"],
  inputElementTextField8: [
    "inputElementTextField8",
    "signedByBaseInputElementTextFieldMediumEnabled4",
    "leadingArtworkContainer16",
    "search4",
    "leadingLabelContainer16",
    "leadingLabel16",
    "signedByBaseTypographyLabelMedium23",
    "text93",
    "spacer82",
    "inputElementContentText16",
    "signedByBaseInputElementContentTextMediumOff8",
    "text94",
    "trailingLabelEnhancer16",
    "trailingLabel16",
    "signedByBaseTypographyLabelMedium24",
    "text95",
    "spacer83",
    "trailingArtworkContainer16",
    "trailingArtwork16"
  ],
  signedByBaseInputElementTextFieldMediumEnabled4: [
    "signedByBaseInputElementTextFieldMediumEnabled4"
  ],
  leadingArtworkContainer16: ["leadingArtworkContainer16", "search4"],
  search4: ["search4"],
  leadingLabelContainer16: [
    "leadingLabelContainer16",
    "leadingLabel16",
    "signedByBaseTypographyLabelMedium23",
    "text93",
    "spacer82"
  ],
  leadingLabel16: [
    "leadingLabel16",
    "signedByBaseTypographyLabelMedium23",
    "text93",
    "spacer82"
  ],
  signedByBaseTypographyLabelMedium23: ["signedByBaseTypographyLabelMedium23"],
  text93: ["text93"],
  spacer82: ["spacer82"],
  inputElementContentText16: [
    "inputElementContentText16",
    "signedByBaseInputElementContentTextMediumOff8",
    "text94"
  ],
  signedByBaseInputElementContentTextMediumOff8: [
    "signedByBaseInputElementContentTextMediumOff8"
  ],
  text94: ["text94"],
  trailingLabelEnhancer16: [
    "trailingLabelEnhancer16",
    "trailingLabel16",
    "signedByBaseTypographyLabelMedium24",
    "text95",
    "spacer83"
  ],
  trailingLabel16: [
    "trailingLabel16",
    "signedByBaseTypographyLabelMedium24",
    "text95",
    "spacer83"
  ],
  signedByBaseTypographyLabelMedium24: ["signedByBaseTypographyLabelMedium24"],
  text95: ["text95"],
  spacer83: ["spacer83"],
  trailingArtworkContainer16: [
    "trailingArtworkContainer16",
    "trailingArtwork16"
  ],
  trailingArtwork16: ["trailingArtwork16"],
  inputElementHint8: [
    "inputElementHint8",
    "heart33",
    "hint8",
    "signedByBaseTypographyParagraphSmall8",
    "text96",
    "spacer84"
  ],
  heart33: ["heart33"],
  hint8: [
    "hint8",
    "signedByBaseTypographyParagraphSmall8",
    "text96",
    "spacer84"
  ],
  signedByBaseTypographyParagraphSmall8: [
    "signedByBaseTypographyParagraphSmall8"
  ],
  text96: ["text96"],
  spacer84: ["spacer84"],
  menuItem17: [
    "menuItem17",
    "signedByBaseMenuItemOptionMediumStandardEnabled13",
    "menuItemControlMediumCheckboxUnchecked13",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked13",
    "icon13",
    "leadingEnhancer13",
    "heart34",
    "textFrame13",
    "leadingText13",
    "typography45",
    "signedByBaseTypographyParagraphMedium37",
    "text97",
    "spacer85",
    "typography46",
    "signedByBaseTypographyParagraphMedium38",
    "text98",
    "spacer86",
    "typography47",
    "signedByBaseTypographyParagraphMedium39",
    "spacer87",
    "trailingEnhancer13",
    "heart35"
  ],
  signedByBaseMenuItemOptionMediumStandardEnabled13: [
    "signedByBaseMenuItemOptionMediumStandardEnabled13"
  ],
  menuItemControlMediumCheckboxUnchecked13: [
    "menuItemControlMediumCheckboxUnchecked13",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked13",
    "icon13"
  ],
  signedByBaseMenuItemControlMediumCheckboxUnchecked13: [
    "signedByBaseMenuItemControlMediumCheckboxUnchecked13"
  ],
  icon13: ["icon13"],
  leadingEnhancer13: ["leadingEnhancer13", "heart34"],
  heart34: ["heart34"],
  textFrame13: [
    "textFrame13",
    "leadingText13",
    "typography45",
    "signedByBaseTypographyParagraphMedium37",
    "text97",
    "spacer85",
    "typography46",
    "signedByBaseTypographyParagraphMedium38",
    "text98",
    "spacer86",
    "typography47",
    "signedByBaseTypographyParagraphMedium39",
    "spacer87"
  ],
  leadingText13: [
    "leadingText13",
    "typography45",
    "signedByBaseTypographyParagraphMedium37",
    "text97",
    "spacer85",
    "typography46",
    "signedByBaseTypographyParagraphMedium38",
    "text98",
    "spacer86"
  ],
  typography45: [
    "typography45",
    "signedByBaseTypographyParagraphMedium37",
    "text97",
    "spacer85"
  ],
  signedByBaseTypographyParagraphMedium37: [
    "signedByBaseTypographyParagraphMedium37"
  ],
  text97: ["text97"],
  spacer85: ["spacer85"],
  typography46: [
    "typography46",
    "signedByBaseTypographyParagraphMedium38",
    "text98",
    "spacer86"
  ],
  signedByBaseTypographyParagraphMedium38: [
    "signedByBaseTypographyParagraphMedium38"
  ],
  text98: ["text98"],
  spacer86: ["spacer86"],
  typography47: [
    "typography47",
    "signedByBaseTypographyParagraphMedium39",
    "spacer87"
  ],
  signedByBaseTypographyParagraphMedium39: [
    "signedByBaseTypographyParagraphMedium39"
  ],
  spacer87: ["spacer87"],
  trailingEnhancer13: ["trailingEnhancer13", "heart35"],
  heart35: ["heart35"],
  menuItem18: [
    "menuItem18",
    "signedByBaseMenuItemOptionMediumStandardEnabled14",
    "menuItemControlMediumCheckboxUnchecked14",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked14",
    "icon14",
    "leadingEnhancer14",
    "heart36",
    "textFrame14",
    "leadingText14",
    "typography48",
    "signedByBaseTypographyParagraphMedium40",
    "text99",
    "spacer88",
    "typography49",
    "signedByBaseTypographyParagraphMedium41",
    "text100",
    "spacer89",
    "typography50",
    "signedByBaseTypographyParagraphMedium42",
    "spacer90",
    "trailingEnhancer14",
    "checkmarkSmall4"
  ],
  signedByBaseMenuItemOptionMediumStandardEnabled14: [
    "signedByBaseMenuItemOptionMediumStandardEnabled14"
  ],
  menuItemControlMediumCheckboxUnchecked14: [
    "menuItemControlMediumCheckboxUnchecked14",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked14",
    "icon14"
  ],
  signedByBaseMenuItemControlMediumCheckboxUnchecked14: [
    "signedByBaseMenuItemControlMediumCheckboxUnchecked14"
  ],
  icon14: ["icon14"],
  leadingEnhancer14: ["leadingEnhancer14", "heart36"],
  heart36: ["heart36"],
  textFrame14: [
    "textFrame14",
    "leadingText14",
    "typography48",
    "signedByBaseTypographyParagraphMedium40",
    "text99",
    "spacer88",
    "typography49",
    "signedByBaseTypographyParagraphMedium41",
    "text100",
    "spacer89",
    "typography50",
    "signedByBaseTypographyParagraphMedium42",
    "spacer90"
  ],
  leadingText14: [
    "leadingText14",
    "typography48",
    "signedByBaseTypographyParagraphMedium40",
    "text99",
    "spacer88",
    "typography49",
    "signedByBaseTypographyParagraphMedium41",
    "text100",
    "spacer89"
  ],
  typography48: [
    "typography48",
    "signedByBaseTypographyParagraphMedium40",
    "text99",
    "spacer88"
  ],
  signedByBaseTypographyParagraphMedium40: [
    "signedByBaseTypographyParagraphMedium40"
  ],
  text99: ["text99"],
  spacer88: ["spacer88"],
  typography49: [
    "typography49",
    "signedByBaseTypographyParagraphMedium41",
    "text100",
    "spacer89"
  ],
  signedByBaseTypographyParagraphMedium41: [
    "signedByBaseTypographyParagraphMedium41"
  ],
  text100: ["text100"],
  spacer89: ["spacer89"],
  typography50: [
    "typography50",
    "signedByBaseTypographyParagraphMedium42",
    "spacer90"
  ],
  signedByBaseTypographyParagraphMedium42: [
    "signedByBaseTypographyParagraphMedium42"
  ],
  spacer90: ["spacer90"],
  trailingEnhancer14: ["trailingEnhancer14", "checkmarkSmall4"],
  checkmarkSmall4: ["checkmarkSmall4"],
  menuItem19: [
    "menuItem19",
    "signedByBaseMenuItemOptionMediumStandardEnabled15",
    "menuItemControlMediumCheckboxUnchecked15",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked15",
    "icon15",
    "leadingEnhancer15",
    "heart37",
    "textFrame15",
    "leadingText15",
    "typography51",
    "signedByBaseTypographyParagraphMedium43",
    "text101",
    "spacer91",
    "typography52",
    "signedByBaseTypographyParagraphMedium44",
    "text102",
    "spacer92",
    "typography53",
    "signedByBaseTypographyParagraphMedium45",
    "spacer93",
    "trailingEnhancer15",
    "heart38"
  ],
  signedByBaseMenuItemOptionMediumStandardEnabled15: [
    "signedByBaseMenuItemOptionMediumStandardEnabled15"
  ],
  menuItemControlMediumCheckboxUnchecked15: [
    "menuItemControlMediumCheckboxUnchecked15",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked15",
    "icon15"
  ],
  signedByBaseMenuItemControlMediumCheckboxUnchecked15: [
    "signedByBaseMenuItemControlMediumCheckboxUnchecked15"
  ],
  icon15: ["icon15"],
  leadingEnhancer15: ["leadingEnhancer15", "heart37"],
  heart37: ["heart37"],
  textFrame15: [
    "textFrame15",
    "leadingText15",
    "typography51",
    "signedByBaseTypographyParagraphMedium43",
    "text101",
    "spacer91",
    "typography52",
    "signedByBaseTypographyParagraphMedium44",
    "text102",
    "spacer92",
    "typography53",
    "signedByBaseTypographyParagraphMedium45",
    "spacer93"
  ],
  leadingText15: [
    "leadingText15",
    "typography51",
    "signedByBaseTypographyParagraphMedium43",
    "text101",
    "spacer91",
    "typography52",
    "signedByBaseTypographyParagraphMedium44",
    "text102",
    "spacer92"
  ],
  typography51: [
    "typography51",
    "signedByBaseTypographyParagraphMedium43",
    "text101",
    "spacer91"
  ],
  signedByBaseTypographyParagraphMedium43: [
    "signedByBaseTypographyParagraphMedium43"
  ],
  text101: ["text101"],
  spacer91: ["spacer91"],
  typography52: [
    "typography52",
    "signedByBaseTypographyParagraphMedium44",
    "text102",
    "spacer92"
  ],
  signedByBaseTypographyParagraphMedium44: [
    "signedByBaseTypographyParagraphMedium44"
  ],
  text102: ["text102"],
  spacer92: ["spacer92"],
  typography53: [
    "typography53",
    "signedByBaseTypographyParagraphMedium45",
    "spacer93"
  ],
  signedByBaseTypographyParagraphMedium45: [
    "signedByBaseTypographyParagraphMedium45"
  ],
  spacer93: ["spacer93"],
  trailingEnhancer15: ["trailingEnhancer15", "heart38"],
  heart38: ["heart38"],
  menuItem20: [
    "menuItem20",
    "signedByBaseMenuItemOptionMediumStandardEnabled16",
    "menuItemControlMediumCheckboxUnchecked16",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked16",
    "icon16",
    "leadingEnhancer16",
    "heart39",
    "textFrame16",
    "leadingText16",
    "typography54",
    "signedByBaseTypographyParagraphMedium46",
    "text103",
    "spacer94",
    "typography55",
    "signedByBaseTypographyParagraphMedium47",
    "text104",
    "spacer95",
    "typography56",
    "signedByBaseTypographyParagraphMedium48",
    "spacer96",
    "trailingEnhancer16",
    "heart40"
  ],
  signedByBaseMenuItemOptionMediumStandardEnabled16: [
    "signedByBaseMenuItemOptionMediumStandardEnabled16"
  ],
  menuItemControlMediumCheckboxUnchecked16: [
    "menuItemControlMediumCheckboxUnchecked16",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked16",
    "icon16"
  ],
  signedByBaseMenuItemControlMediumCheckboxUnchecked16: [
    "signedByBaseMenuItemControlMediumCheckboxUnchecked16"
  ],
  icon16: ["icon16"],
  leadingEnhancer16: ["leadingEnhancer16", "heart39"],
  heart39: ["heart39"],
  textFrame16: [
    "textFrame16",
    "leadingText16",
    "typography54",
    "signedByBaseTypographyParagraphMedium46",
    "text103",
    "spacer94",
    "typography55",
    "signedByBaseTypographyParagraphMedium47",
    "text104",
    "spacer95",
    "typography56",
    "signedByBaseTypographyParagraphMedium48",
    "spacer96"
  ],
  leadingText16: [
    "leadingText16",
    "typography54",
    "signedByBaseTypographyParagraphMedium46",
    "text103",
    "spacer94",
    "typography55",
    "signedByBaseTypographyParagraphMedium47",
    "text104",
    "spacer95"
  ],
  typography54: [
    "typography54",
    "signedByBaseTypographyParagraphMedium46",
    "text103",
    "spacer94"
  ],
  signedByBaseTypographyParagraphMedium46: [
    "signedByBaseTypographyParagraphMedium46"
  ],
  text103: ["text103"],
  spacer94: ["spacer94"],
  typography55: [
    "typography55",
    "signedByBaseTypographyParagraphMedium47",
    "text104",
    "spacer95"
  ],
  signedByBaseTypographyParagraphMedium47: [
    "signedByBaseTypographyParagraphMedium47"
  ],
  text104: ["text104"],
  spacer95: ["spacer95"],
  typography56: [
    "typography56",
    "signedByBaseTypographyParagraphMedium48",
    "spacer96"
  ],
  signedByBaseTypographyParagraphMedium48: [
    "signedByBaseTypographyParagraphMedium48"
  ],
  spacer96: ["spacer96"],
  trailingEnhancer16: ["trailingEnhancer16", "heart40"],
  heart40: ["heart40"],
  scrollBar4: ["scrollBar4"],
  model6: ["model6"],
  buttons4: [
    "buttons4",
    "button13",
    "frame1073713927",
    "frame1073713933",
    "button14",
    "button15",
    "button16"
  ],
  button13: ["button13"],
  frame1073713927: ["frame1073713927"],
  frame1073713933: ["frame1073713933", "button14", "button15", "button16"],
  button14: ["button14"],
  button15: ["button15"],
  button16: ["button16"],
  _2: ["_2"],
  bottomMenu: ["bottomMenu"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  (typeof PlasmicDescendants)[T][number];
type NodeDefaultElementType = {
  root: "div";
  accueilDashboard: "div";
  leftMenu: typeof LeftMenu;
  tabsContainer: typeof TabsContainer;
  main: "div";
  header: typeof Header;
  frame1437253918: "div";
  filters2: "div";
  buttonFilter2: typeof Button;
  retexMenu: typeof RetexMenu;
  _1: typeof TabContent;
  table3: "div";
  dataGrid: typeof DataGrid;
  kpIs: "div";
  metricItem: "div";
  headingAndDropdown: "div";
  heading: "div";
  numberAndChart: "div";
  numberAndBadge: "div";
  number: "div";
  changeAndText: "div";
  change: "div";
  change2: "div";
  text: "div";
  metricItem2: "div";
  headingAndDropdown2: "div";
  heading2: "div";
  numberAndChart2: "div";
  numberAndBadge2: "div";
  number2: "div";
  changeAndText2: "div";
  change3: "div";
  change4: "div";
  text2: "div";
  metricItem3: "div";
  headingAndDropdown3: "div";
  heading3: "div";
  numberAndChart3: "div";
  numberAndBadge3: "div";
  number3: "div";
  changeAndText3: "div";
  change5: "div";
  change6: "div";
  text3: "div";
  metricItem4: "div";
  headingAndDropdown4: "div";
  heading4: "div";
  numberAndChart4: "div";
  numberAndBadge4: "div";
  number4: "div";
  changeAndText4: "div";
  change7: "div";
  change8: "div";
  text4: "div";
  metricItem5: "div";
  headingAndDropdown5: "div";
  heading5: "div";
  numberAndChart5: "div";
  numberAndBadge5: "div";
  number5: "div";
  changeAndText5: "div";
  change9: "div";
  change10: "div";
  text105: "div";
  metricItem6: "div";
  headingAndDropdown6: "div";
  heading6: "div";
  numberAndChart6: "div";
  numberAndBadge6: "div";
  number6: "div";
  changeAndText6: "div";
  change11: "div";
  change12: "div";
  text106: "div";
  barChartMultiple: typeof BarChartMultiple;
  duplicate: typeof Modal;
  frame1437254022: "div";
  name9: "div";
  frame1437254023: "div";
  formDuplicateModel: typeof FormWrapper;
  button: typeof Button;
  content4: "div";
  titre6: typeof TextInput;
  texinput24: typeof SitexTextInput;
  date4: "div";
  label9: "div";
  timePicker10: typeof AntdDatePicker;
  type6: typeof DropDown;
  budget6: typeof TextInput;
  comments4: typeof TextInput;
  input10: "div";
  name8: "div";
  datePickerWeb4: "div";
  inputSelect4: "div";
  signedByBaseFieldGroupSmall4: "div";
  endDateCalendar4: "div";
  inputElementTextField7: "div";
  signedByBaseInputElementTextFieldSmallEnabled4: "div";
  leadingArtworkContainer13: "div";
  leadingArtwork7: "div";
  leadingLabelContainer13: "div";
  leadingLabel13: "div";
  signedByBaseTypographyLabelSmall7: "div";
  text80: "div";
  spacer73: "div";
  inputElementContentText13: "div";
  signedByBaseInputElementContentTextSmallOff4: "div";
  text81: "div";
  trailingLabelEnhancer13: "div";
  trailingLabel13: "div";
  signedByBaseTypographyLabelSmall8: "div";
  text82: "div";
  spacer74: "div";
  trailingArtworkContainer13: "div";
  trailingArtwork13: "div";
  calendar4: "div";
  signedByBaseInputElementSelectXSmallWebSingleDefaultEnabled4: "div";
  leadingArtworkContainer14: "div";
  text83: "div";
  leadingLabelContainer14: "div";
  leadingLabel14: "div";
  signedByBaseTypographyLabelXSmall7: "div";
  text84: "div";
  spacer75: "div";
  inputElementContentText14: "div";
  signedByBaseInputElementContentTextXSmallWebOff4: "div";
  text85: "div";
  trailingLabelEnhancer14: "div";
  trailingLabel14: "div";
  signedByBaseTypographyLabelXSmall8: "div";
  text86: "div";
  spacer76: "div";
  trailingArtworkContainer14: "div";
  trailingArtwork14: "div";
  selectIndicatorContainer7: "div";
  chevronIcon7: "div";
  inputElementHint7: "div";
  heart31: "div";
  hint7: "div";
  signedByBaseTypographyParagraphSmall7: "div";
  text87: "div";
  spacer77: "div";
  inputElementSelect4: "div";
  signedByBaseInputElementSelectMediumSingleDefaultActive4: "div";
  selectFrame4: "div";
  leadingArtworkContainer15: "div";
  leadingArtwork8: "div";
  leadingLabelContainer15: "div";
  leadingLabel15: "div";
  signedByBaseTypographyLabelMedium19: "div";
  text88: "div";
  spacer78: "div";
  inputElementContentText15: "div";
  signedByBaseInputElementContentTextMediumOff7: "div";
  text89: "div";
  trailingLabelEnhancer15: "div";
  trailingLabel15: "div";
  signedByBaseTypographyLabelMedium20: "div";
  text90: "div";
  spacer79: "div";
  trailingArtworkContainer15: "div";
  trailingArtwork15: "div";
  selectIndicatorContainer8: "div";
  chevronIcon8: "div";
  menu4: "div";
  signedByBaseMenuListMedium4: "div";
  menuItem16: "div";
  signedByBaseMenuItemSearchMediumNoneEnabled4: "div";
  searchField4: "div";
  signedByBaseSearchFieldMediumEnabled4: "div";
  inputElementLabel4: "div";
  signedByBaseInputElementLabelMedium4: "div";
  typography43: "div";
  signedByBaseTypographyLabelMedium21: "div";
  text91: "div";
  spacer80: "div";
  characterCountFrame4: "div";
  heart32: "div";
  typography44: "div";
  signedByBaseTypographyLabelMedium22: "div";
  text92: "div";
  spacer81: "div";
  inputElementTextField8: "div";
  signedByBaseInputElementTextFieldMediumEnabled4: "div";
  leadingArtworkContainer16: "div";
  search4: "div";
  leadingLabelContainer16: "div";
  leadingLabel16: "div";
  signedByBaseTypographyLabelMedium23: "div";
  text93: "div";
  spacer82: "div";
  inputElementContentText16: "div";
  signedByBaseInputElementContentTextMediumOff8: "div";
  text94: "div";
  trailingLabelEnhancer16: "div";
  trailingLabel16: "div";
  signedByBaseTypographyLabelMedium24: "div";
  text95: "div";
  spacer83: "div";
  trailingArtworkContainer16: "div";
  trailingArtwork16: "div";
  inputElementHint8: "div";
  heart33: "div";
  hint8: "div";
  signedByBaseTypographyParagraphSmall8: "div";
  text96: "div";
  spacer84: "div";
  menuItem17: "div";
  signedByBaseMenuItemOptionMediumStandardEnabled13: "div";
  menuItemControlMediumCheckboxUnchecked13: "div";
  signedByBaseMenuItemControlMediumCheckboxUnchecked13: "div";
  icon13: "div";
  leadingEnhancer13: "div";
  heart34: "div";
  textFrame13: "div";
  leadingText13: "div";
  typography45: "div";
  signedByBaseTypographyParagraphMedium37: "div";
  text97: "div";
  spacer85: "div";
  typography46: "div";
  signedByBaseTypographyParagraphMedium38: "div";
  text98: "div";
  spacer86: "div";
  typography47: "div";
  signedByBaseTypographyParagraphMedium39: "div";
  spacer87: "div";
  trailingEnhancer13: "div";
  heart35: "div";
  menuItem18: "div";
  signedByBaseMenuItemOptionMediumStandardEnabled14: "div";
  menuItemControlMediumCheckboxUnchecked14: "div";
  signedByBaseMenuItemControlMediumCheckboxUnchecked14: "div";
  icon14: "div";
  leadingEnhancer14: "div";
  heart36: "div";
  textFrame14: "div";
  leadingText14: "div";
  typography48: "div";
  signedByBaseTypographyParagraphMedium40: "div";
  text99: "div";
  spacer88: "div";
  typography49: "div";
  signedByBaseTypographyParagraphMedium41: "div";
  text100: "div";
  spacer89: "div";
  typography50: "div";
  signedByBaseTypographyParagraphMedium42: "div";
  spacer90: "div";
  trailingEnhancer14: "div";
  checkmarkSmall4: "div";
  menuItem19: "div";
  signedByBaseMenuItemOptionMediumStandardEnabled15: "div";
  menuItemControlMediumCheckboxUnchecked15: "div";
  signedByBaseMenuItemControlMediumCheckboxUnchecked15: "div";
  icon15: "div";
  leadingEnhancer15: "div";
  heart37: "div";
  textFrame15: "div";
  leadingText15: "div";
  typography51: "div";
  signedByBaseTypographyParagraphMedium43: "div";
  text101: "div";
  spacer91: "div";
  typography52: "div";
  signedByBaseTypographyParagraphMedium44: "div";
  text102: "div";
  spacer92: "div";
  typography53: "div";
  signedByBaseTypographyParagraphMedium45: "div";
  spacer93: "div";
  trailingEnhancer15: "div";
  heart38: "div";
  menuItem20: "div";
  signedByBaseMenuItemOptionMediumStandardEnabled16: "div";
  menuItemControlMediumCheckboxUnchecked16: "div";
  signedByBaseMenuItemControlMediumCheckboxUnchecked16: "div";
  icon16: "div";
  leadingEnhancer16: "div";
  heart39: "div";
  textFrame16: "div";
  leadingText16: "div";
  typography54: "div";
  signedByBaseTypographyParagraphMedium46: "div";
  text103: "div";
  spacer94: "div";
  typography55: "div";
  signedByBaseTypographyParagraphMedium47: "div";
  text104: "div";
  spacer95: "div";
  typography56: "div";
  signedByBaseTypographyParagraphMedium48: "div";
  spacer96: "div";
  trailingEnhancer16: "div";
  heart40: "div";
  scrollBar4: "div";
  model6: typeof DropDown;
  buttons4: "div";
  button13: typeof Button;
  frame1073713927: "div";
  frame1073713933: "div";
  button14: typeof Button;
  button15: "div";
  button16: "div";
  _2: typeof TabContent;
  bottomMenu: typeof BottomMenu;
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicBilanGeneral__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicBilanGeneral__VariantsArgs;
    args?: PlasmicBilanGeneral__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicBilanGeneral__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    // Specify args directly as props
    Omit<PlasmicBilanGeneral__ArgsType, ReservedPropsType> &
    // Specify overrides for each element directly as props
    Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    // Specify props for the root element
    Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: PlasmicDescendants[nodeName],
          internalArgPropNames: PlasmicBilanGeneral__ArgProps,
          internalVariantPropNames: PlasmicBilanGeneral__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicBilanGeneral__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicBilanGeneral";
  } else {
    func.displayName = `PlasmicBilanGeneral.${nodeName}`;
  }
  return func;
}

export const PlasmicBilanGeneral = Object.assign(
  // Top-level PlasmicBilanGeneral renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    accueilDashboard: makeNodeComponent("accueilDashboard"),
    leftMenu: makeNodeComponent("leftMenu"),
    tabsContainer: makeNodeComponent("tabsContainer"),
    main: makeNodeComponent("main"),
    header: makeNodeComponent("header"),
    frame1437253918: makeNodeComponent("frame1437253918"),
    filters2: makeNodeComponent("filters2"),
    buttonFilter2: makeNodeComponent("buttonFilter2"),
    retexMenu: makeNodeComponent("retexMenu"),
    _1: makeNodeComponent("_1"),
    table3: makeNodeComponent("table3"),
    dataGrid: makeNodeComponent("dataGrid"),
    kpIs: makeNodeComponent("kpIs"),
    metricItem: makeNodeComponent("metricItem"),
    headingAndDropdown: makeNodeComponent("headingAndDropdown"),
    heading: makeNodeComponent("heading"),
    numberAndChart: makeNodeComponent("numberAndChart"),
    numberAndBadge: makeNodeComponent("numberAndBadge"),
    number: makeNodeComponent("number"),
    changeAndText: makeNodeComponent("changeAndText"),
    change: makeNodeComponent("change"),
    change2: makeNodeComponent("change2"),
    text: makeNodeComponent("text"),
    metricItem2: makeNodeComponent("metricItem2"),
    headingAndDropdown2: makeNodeComponent("headingAndDropdown2"),
    heading2: makeNodeComponent("heading2"),
    numberAndChart2: makeNodeComponent("numberAndChart2"),
    numberAndBadge2: makeNodeComponent("numberAndBadge2"),
    number2: makeNodeComponent("number2"),
    changeAndText2: makeNodeComponent("changeAndText2"),
    change3: makeNodeComponent("change3"),
    change4: makeNodeComponent("change4"),
    text2: makeNodeComponent("text2"),
    metricItem3: makeNodeComponent("metricItem3"),
    headingAndDropdown3: makeNodeComponent("headingAndDropdown3"),
    heading3: makeNodeComponent("heading3"),
    numberAndChart3: makeNodeComponent("numberAndChart3"),
    numberAndBadge3: makeNodeComponent("numberAndBadge3"),
    number3: makeNodeComponent("number3"),
    changeAndText3: makeNodeComponent("changeAndText3"),
    change5: makeNodeComponent("change5"),
    change6: makeNodeComponent("change6"),
    text3: makeNodeComponent("text3"),
    metricItem4: makeNodeComponent("metricItem4"),
    headingAndDropdown4: makeNodeComponent("headingAndDropdown4"),
    heading4: makeNodeComponent("heading4"),
    numberAndChart4: makeNodeComponent("numberAndChart4"),
    numberAndBadge4: makeNodeComponent("numberAndBadge4"),
    number4: makeNodeComponent("number4"),
    changeAndText4: makeNodeComponent("changeAndText4"),
    change7: makeNodeComponent("change7"),
    change8: makeNodeComponent("change8"),
    text4: makeNodeComponent("text4"),
    metricItem5: makeNodeComponent("metricItem5"),
    headingAndDropdown5: makeNodeComponent("headingAndDropdown5"),
    heading5: makeNodeComponent("heading5"),
    numberAndChart5: makeNodeComponent("numberAndChart5"),
    numberAndBadge5: makeNodeComponent("numberAndBadge5"),
    number5: makeNodeComponent("number5"),
    changeAndText5: makeNodeComponent("changeAndText5"),
    change9: makeNodeComponent("change9"),
    change10: makeNodeComponent("change10"),
    text105: makeNodeComponent("text105"),
    metricItem6: makeNodeComponent("metricItem6"),
    headingAndDropdown6: makeNodeComponent("headingAndDropdown6"),
    heading6: makeNodeComponent("heading6"),
    numberAndChart6: makeNodeComponent("numberAndChart6"),
    numberAndBadge6: makeNodeComponent("numberAndBadge6"),
    number6: makeNodeComponent("number6"),
    changeAndText6: makeNodeComponent("changeAndText6"),
    change11: makeNodeComponent("change11"),
    change12: makeNodeComponent("change12"),
    text106: makeNodeComponent("text106"),
    barChartMultiple: makeNodeComponent("barChartMultiple"),
    duplicate: makeNodeComponent("duplicate"),
    frame1437254022: makeNodeComponent("frame1437254022"),
    name9: makeNodeComponent("name9"),
    frame1437254023: makeNodeComponent("frame1437254023"),
    formDuplicateModel: makeNodeComponent("formDuplicateModel"),
    button: makeNodeComponent("button"),
    content4: makeNodeComponent("content4"),
    titre6: makeNodeComponent("titre6"),
    texinput24: makeNodeComponent("texinput24"),
    date4: makeNodeComponent("date4"),
    label9: makeNodeComponent("label9"),
    timePicker10: makeNodeComponent("timePicker10"),
    type6: makeNodeComponent("type6"),
    budget6: makeNodeComponent("budget6"),
    comments4: makeNodeComponent("comments4"),
    input10: makeNodeComponent("input10"),
    name8: makeNodeComponent("name8"),
    datePickerWeb4: makeNodeComponent("datePickerWeb4"),
    inputSelect4: makeNodeComponent("inputSelect4"),
    signedByBaseFieldGroupSmall4: makeNodeComponent(
      "signedByBaseFieldGroupSmall4"
    ),
    endDateCalendar4: makeNodeComponent("endDateCalendar4"),
    inputElementTextField7: makeNodeComponent("inputElementTextField7"),
    signedByBaseInputElementTextFieldSmallEnabled4: makeNodeComponent(
      "signedByBaseInputElementTextFieldSmallEnabled4"
    ),
    leadingArtworkContainer13: makeNodeComponent("leadingArtworkContainer13"),
    leadingArtwork7: makeNodeComponent("leadingArtwork7"),
    leadingLabelContainer13: makeNodeComponent("leadingLabelContainer13"),
    leadingLabel13: makeNodeComponent("leadingLabel13"),
    signedByBaseTypographyLabelSmall7: makeNodeComponent(
      "signedByBaseTypographyLabelSmall7"
    ),
    text80: makeNodeComponent("text80"),
    spacer73: makeNodeComponent("spacer73"),
    inputElementContentText13: makeNodeComponent("inputElementContentText13"),
    signedByBaseInputElementContentTextSmallOff4: makeNodeComponent(
      "signedByBaseInputElementContentTextSmallOff4"
    ),
    text81: makeNodeComponent("text81"),
    trailingLabelEnhancer13: makeNodeComponent("trailingLabelEnhancer13"),
    trailingLabel13: makeNodeComponent("trailingLabel13"),
    signedByBaseTypographyLabelSmall8: makeNodeComponent(
      "signedByBaseTypographyLabelSmall8"
    ),
    text82: makeNodeComponent("text82"),
    spacer74: makeNodeComponent("spacer74"),
    trailingArtworkContainer13: makeNodeComponent("trailingArtworkContainer13"),
    trailingArtwork13: makeNodeComponent("trailingArtwork13"),
    calendar4: makeNodeComponent("calendar4"),
    signedByBaseInputElementSelectXSmallWebSingleDefaultEnabled4:
      makeNodeComponent(
        "signedByBaseInputElementSelectXSmallWebSingleDefaultEnabled4"
      ),
    leadingArtworkContainer14: makeNodeComponent("leadingArtworkContainer14"),
    text83: makeNodeComponent("text83"),
    leadingLabelContainer14: makeNodeComponent("leadingLabelContainer14"),
    leadingLabel14: makeNodeComponent("leadingLabel14"),
    signedByBaseTypographyLabelXSmall7: makeNodeComponent(
      "signedByBaseTypographyLabelXSmall7"
    ),
    text84: makeNodeComponent("text84"),
    spacer75: makeNodeComponent("spacer75"),
    inputElementContentText14: makeNodeComponent("inputElementContentText14"),
    signedByBaseInputElementContentTextXSmallWebOff4: makeNodeComponent(
      "signedByBaseInputElementContentTextXSmallWebOff4"
    ),
    text85: makeNodeComponent("text85"),
    trailingLabelEnhancer14: makeNodeComponent("trailingLabelEnhancer14"),
    trailingLabel14: makeNodeComponent("trailingLabel14"),
    signedByBaseTypographyLabelXSmall8: makeNodeComponent(
      "signedByBaseTypographyLabelXSmall8"
    ),
    text86: makeNodeComponent("text86"),
    spacer76: makeNodeComponent("spacer76"),
    trailingArtworkContainer14: makeNodeComponent("trailingArtworkContainer14"),
    trailingArtwork14: makeNodeComponent("trailingArtwork14"),
    selectIndicatorContainer7: makeNodeComponent("selectIndicatorContainer7"),
    chevronIcon7: makeNodeComponent("chevronIcon7"),
    inputElementHint7: makeNodeComponent("inputElementHint7"),
    heart31: makeNodeComponent("heart31"),
    hint7: makeNodeComponent("hint7"),
    signedByBaseTypographyParagraphSmall7: makeNodeComponent(
      "signedByBaseTypographyParagraphSmall7"
    ),
    text87: makeNodeComponent("text87"),
    spacer77: makeNodeComponent("spacer77"),
    inputElementSelect4: makeNodeComponent("inputElementSelect4"),
    signedByBaseInputElementSelectMediumSingleDefaultActive4: makeNodeComponent(
      "signedByBaseInputElementSelectMediumSingleDefaultActive4"
    ),
    selectFrame4: makeNodeComponent("selectFrame4"),
    leadingArtworkContainer15: makeNodeComponent("leadingArtworkContainer15"),
    leadingArtwork8: makeNodeComponent("leadingArtwork8"),
    leadingLabelContainer15: makeNodeComponent("leadingLabelContainer15"),
    leadingLabel15: makeNodeComponent("leadingLabel15"),
    signedByBaseTypographyLabelMedium19: makeNodeComponent(
      "signedByBaseTypographyLabelMedium19"
    ),
    text88: makeNodeComponent("text88"),
    spacer78: makeNodeComponent("spacer78"),
    inputElementContentText15: makeNodeComponent("inputElementContentText15"),
    signedByBaseInputElementContentTextMediumOff7: makeNodeComponent(
      "signedByBaseInputElementContentTextMediumOff7"
    ),
    text89: makeNodeComponent("text89"),
    trailingLabelEnhancer15: makeNodeComponent("trailingLabelEnhancer15"),
    trailingLabel15: makeNodeComponent("trailingLabel15"),
    signedByBaseTypographyLabelMedium20: makeNodeComponent(
      "signedByBaseTypographyLabelMedium20"
    ),
    text90: makeNodeComponent("text90"),
    spacer79: makeNodeComponent("spacer79"),
    trailingArtworkContainer15: makeNodeComponent("trailingArtworkContainer15"),
    trailingArtwork15: makeNodeComponent("trailingArtwork15"),
    selectIndicatorContainer8: makeNodeComponent("selectIndicatorContainer8"),
    chevronIcon8: makeNodeComponent("chevronIcon8"),
    menu4: makeNodeComponent("menu4"),
    signedByBaseMenuListMedium4: makeNodeComponent(
      "signedByBaseMenuListMedium4"
    ),
    menuItem16: makeNodeComponent("menuItem16"),
    signedByBaseMenuItemSearchMediumNoneEnabled4: makeNodeComponent(
      "signedByBaseMenuItemSearchMediumNoneEnabled4"
    ),
    searchField4: makeNodeComponent("searchField4"),
    signedByBaseSearchFieldMediumEnabled4: makeNodeComponent(
      "signedByBaseSearchFieldMediumEnabled4"
    ),
    inputElementLabel4: makeNodeComponent("inputElementLabel4"),
    signedByBaseInputElementLabelMedium4: makeNodeComponent(
      "signedByBaseInputElementLabelMedium4"
    ),
    typography43: makeNodeComponent("typography43"),
    signedByBaseTypographyLabelMedium21: makeNodeComponent(
      "signedByBaseTypographyLabelMedium21"
    ),
    text91: makeNodeComponent("text91"),
    spacer80: makeNodeComponent("spacer80"),
    characterCountFrame4: makeNodeComponent("characterCountFrame4"),
    heart32: makeNodeComponent("heart32"),
    typography44: makeNodeComponent("typography44"),
    signedByBaseTypographyLabelMedium22: makeNodeComponent(
      "signedByBaseTypographyLabelMedium22"
    ),
    text92: makeNodeComponent("text92"),
    spacer81: makeNodeComponent("spacer81"),
    inputElementTextField8: makeNodeComponent("inputElementTextField8"),
    signedByBaseInputElementTextFieldMediumEnabled4: makeNodeComponent(
      "signedByBaseInputElementTextFieldMediumEnabled4"
    ),
    leadingArtworkContainer16: makeNodeComponent("leadingArtworkContainer16"),
    search4: makeNodeComponent("search4"),
    leadingLabelContainer16: makeNodeComponent("leadingLabelContainer16"),
    leadingLabel16: makeNodeComponent("leadingLabel16"),
    signedByBaseTypographyLabelMedium23: makeNodeComponent(
      "signedByBaseTypographyLabelMedium23"
    ),
    text93: makeNodeComponent("text93"),
    spacer82: makeNodeComponent("spacer82"),
    inputElementContentText16: makeNodeComponent("inputElementContentText16"),
    signedByBaseInputElementContentTextMediumOff8: makeNodeComponent(
      "signedByBaseInputElementContentTextMediumOff8"
    ),
    text94: makeNodeComponent("text94"),
    trailingLabelEnhancer16: makeNodeComponent("trailingLabelEnhancer16"),
    trailingLabel16: makeNodeComponent("trailingLabel16"),
    signedByBaseTypographyLabelMedium24: makeNodeComponent(
      "signedByBaseTypographyLabelMedium24"
    ),
    text95: makeNodeComponent("text95"),
    spacer83: makeNodeComponent("spacer83"),
    trailingArtworkContainer16: makeNodeComponent("trailingArtworkContainer16"),
    trailingArtwork16: makeNodeComponent("trailingArtwork16"),
    inputElementHint8: makeNodeComponent("inputElementHint8"),
    heart33: makeNodeComponent("heart33"),
    hint8: makeNodeComponent("hint8"),
    signedByBaseTypographyParagraphSmall8: makeNodeComponent(
      "signedByBaseTypographyParagraphSmall8"
    ),
    text96: makeNodeComponent("text96"),
    spacer84: makeNodeComponent("spacer84"),
    menuItem17: makeNodeComponent("menuItem17"),
    signedByBaseMenuItemOptionMediumStandardEnabled13: makeNodeComponent(
      "signedByBaseMenuItemOptionMediumStandardEnabled13"
    ),
    menuItemControlMediumCheckboxUnchecked13: makeNodeComponent(
      "menuItemControlMediumCheckboxUnchecked13"
    ),
    signedByBaseMenuItemControlMediumCheckboxUnchecked13: makeNodeComponent(
      "signedByBaseMenuItemControlMediumCheckboxUnchecked13"
    ),
    icon13: makeNodeComponent("icon13"),
    leadingEnhancer13: makeNodeComponent("leadingEnhancer13"),
    heart34: makeNodeComponent("heart34"),
    textFrame13: makeNodeComponent("textFrame13"),
    leadingText13: makeNodeComponent("leadingText13"),
    typography45: makeNodeComponent("typography45"),
    signedByBaseTypographyParagraphMedium37: makeNodeComponent(
      "signedByBaseTypographyParagraphMedium37"
    ),
    text97: makeNodeComponent("text97"),
    spacer85: makeNodeComponent("spacer85"),
    typography46: makeNodeComponent("typography46"),
    signedByBaseTypographyParagraphMedium38: makeNodeComponent(
      "signedByBaseTypographyParagraphMedium38"
    ),
    text98: makeNodeComponent("text98"),
    spacer86: makeNodeComponent("spacer86"),
    typography47: makeNodeComponent("typography47"),
    signedByBaseTypographyParagraphMedium39: makeNodeComponent(
      "signedByBaseTypographyParagraphMedium39"
    ),
    spacer87: makeNodeComponent("spacer87"),
    trailingEnhancer13: makeNodeComponent("trailingEnhancer13"),
    heart35: makeNodeComponent("heart35"),
    menuItem18: makeNodeComponent("menuItem18"),
    signedByBaseMenuItemOptionMediumStandardEnabled14: makeNodeComponent(
      "signedByBaseMenuItemOptionMediumStandardEnabled14"
    ),
    menuItemControlMediumCheckboxUnchecked14: makeNodeComponent(
      "menuItemControlMediumCheckboxUnchecked14"
    ),
    signedByBaseMenuItemControlMediumCheckboxUnchecked14: makeNodeComponent(
      "signedByBaseMenuItemControlMediumCheckboxUnchecked14"
    ),
    icon14: makeNodeComponent("icon14"),
    leadingEnhancer14: makeNodeComponent("leadingEnhancer14"),
    heart36: makeNodeComponent("heart36"),
    textFrame14: makeNodeComponent("textFrame14"),
    leadingText14: makeNodeComponent("leadingText14"),
    typography48: makeNodeComponent("typography48"),
    signedByBaseTypographyParagraphMedium40: makeNodeComponent(
      "signedByBaseTypographyParagraphMedium40"
    ),
    text99: makeNodeComponent("text99"),
    spacer88: makeNodeComponent("spacer88"),
    typography49: makeNodeComponent("typography49"),
    signedByBaseTypographyParagraphMedium41: makeNodeComponent(
      "signedByBaseTypographyParagraphMedium41"
    ),
    text100: makeNodeComponent("text100"),
    spacer89: makeNodeComponent("spacer89"),
    typography50: makeNodeComponent("typography50"),
    signedByBaseTypographyParagraphMedium42: makeNodeComponent(
      "signedByBaseTypographyParagraphMedium42"
    ),
    spacer90: makeNodeComponent("spacer90"),
    trailingEnhancer14: makeNodeComponent("trailingEnhancer14"),
    checkmarkSmall4: makeNodeComponent("checkmarkSmall4"),
    menuItem19: makeNodeComponent("menuItem19"),
    signedByBaseMenuItemOptionMediumStandardEnabled15: makeNodeComponent(
      "signedByBaseMenuItemOptionMediumStandardEnabled15"
    ),
    menuItemControlMediumCheckboxUnchecked15: makeNodeComponent(
      "menuItemControlMediumCheckboxUnchecked15"
    ),
    signedByBaseMenuItemControlMediumCheckboxUnchecked15: makeNodeComponent(
      "signedByBaseMenuItemControlMediumCheckboxUnchecked15"
    ),
    icon15: makeNodeComponent("icon15"),
    leadingEnhancer15: makeNodeComponent("leadingEnhancer15"),
    heart37: makeNodeComponent("heart37"),
    textFrame15: makeNodeComponent("textFrame15"),
    leadingText15: makeNodeComponent("leadingText15"),
    typography51: makeNodeComponent("typography51"),
    signedByBaseTypographyParagraphMedium43: makeNodeComponent(
      "signedByBaseTypographyParagraphMedium43"
    ),
    text101: makeNodeComponent("text101"),
    spacer91: makeNodeComponent("spacer91"),
    typography52: makeNodeComponent("typography52"),
    signedByBaseTypographyParagraphMedium44: makeNodeComponent(
      "signedByBaseTypographyParagraphMedium44"
    ),
    text102: makeNodeComponent("text102"),
    spacer92: makeNodeComponent("spacer92"),
    typography53: makeNodeComponent("typography53"),
    signedByBaseTypographyParagraphMedium45: makeNodeComponent(
      "signedByBaseTypographyParagraphMedium45"
    ),
    spacer93: makeNodeComponent("spacer93"),
    trailingEnhancer15: makeNodeComponent("trailingEnhancer15"),
    heart38: makeNodeComponent("heart38"),
    menuItem20: makeNodeComponent("menuItem20"),
    signedByBaseMenuItemOptionMediumStandardEnabled16: makeNodeComponent(
      "signedByBaseMenuItemOptionMediumStandardEnabled16"
    ),
    menuItemControlMediumCheckboxUnchecked16: makeNodeComponent(
      "menuItemControlMediumCheckboxUnchecked16"
    ),
    signedByBaseMenuItemControlMediumCheckboxUnchecked16: makeNodeComponent(
      "signedByBaseMenuItemControlMediumCheckboxUnchecked16"
    ),
    icon16: makeNodeComponent("icon16"),
    leadingEnhancer16: makeNodeComponent("leadingEnhancer16"),
    heart39: makeNodeComponent("heart39"),
    textFrame16: makeNodeComponent("textFrame16"),
    leadingText16: makeNodeComponent("leadingText16"),
    typography54: makeNodeComponent("typography54"),
    signedByBaseTypographyParagraphMedium46: makeNodeComponent(
      "signedByBaseTypographyParagraphMedium46"
    ),
    text103: makeNodeComponent("text103"),
    spacer94: makeNodeComponent("spacer94"),
    typography55: makeNodeComponent("typography55"),
    signedByBaseTypographyParagraphMedium47: makeNodeComponent(
      "signedByBaseTypographyParagraphMedium47"
    ),
    text104: makeNodeComponent("text104"),
    spacer95: makeNodeComponent("spacer95"),
    typography56: makeNodeComponent("typography56"),
    signedByBaseTypographyParagraphMedium48: makeNodeComponent(
      "signedByBaseTypographyParagraphMedium48"
    ),
    spacer96: makeNodeComponent("spacer96"),
    trailingEnhancer16: makeNodeComponent("trailingEnhancer16"),
    heart40: makeNodeComponent("heart40"),
    scrollBar4: makeNodeComponent("scrollBar4"),
    model6: makeNodeComponent("model6"),
    buttons4: makeNodeComponent("buttons4"),
    button13: makeNodeComponent("button13"),
    frame1073713927: makeNodeComponent("frame1073713927"),
    frame1073713933: makeNodeComponent("frame1073713933"),
    button14: makeNodeComponent("button14"),
    button15: makeNodeComponent("button15"),
    button16: makeNodeComponent("button16"),
    _2: makeNodeComponent("_2"),
    bottomMenu: makeNodeComponent("bottomMenu"),

    // Metadata about props expected for PlasmicBilanGeneral
    internalVariantProps: PlasmicBilanGeneral__VariantProps,
    internalArgProps: PlasmicBilanGeneral__ArgProps,

    // Page metadata
    pageMetadata: {
      title: "Bilan Général",
      description: "",
      ogImageSrc: "",
      canonical: ""
    }
  }
);

export default PlasmicBilanGeneral;
/* prettier-ignore-end */
