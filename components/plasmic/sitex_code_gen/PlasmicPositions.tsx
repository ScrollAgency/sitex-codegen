/* eslint-disable */
/* tslint:disable */
// @ts-nocheck
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: 341WB3S6fAjbZggAzyKhr1
// Component: qR-a576Rc2ev

import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";
import { useRouter } from "next/router";

import {
  Flex as Flex__,
  MultiChoiceArg,
  PlasmicDataSourceContextProvider as PlasmicDataSourceContextProvider__,
  PlasmicIcon as PlasmicIcon__,
  PlasmicImg as PlasmicImg__,
  PlasmicLink as PlasmicLink__,
  PlasmicPageGuard as PlasmicPageGuard__,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  Stack as Stack__,
  StrictProps,
  Trans as Trans__,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants,
  generateOnMutateForSpec,
  generateStateOnChangeProp,
  generateStateOnChangePropForCodeComponents,
  generateStateValueProp,
  get as $stateGet,
  hasVariant,
  initializeCodeComponentStates,
  initializePlasmicStates,
  makeFragment,
  omit,
  pick,
  renderPlasmicSlot,
  set as $stateSet,
  useCurrentUser,
  useDollarState,
  usePlasmicTranslator,
  useTrigger,
  wrapWithClassName
} from "@plasmicapp/react-web";
import {
  DataCtxReader as DataCtxReader__,
  useDataEnv,
  useGlobalActions
} from "@plasmicapp/react-web/lib/host";

import { usePlasmicDataSourceContext } from "@plasmicapp/data-sources-context";
import {
  executePlasmicDataOp,
  usePlasmicDataOp,
  usePlasmicInvalidate
} from "@plasmicapp/react-web/lib/data-sources";

import Modal from "../../Modal"; // plasmic-import: 2dhqWpUZxzEb/component
import { UploadWrapper } from "@plasmicpkgs/antd5/skinny/registerUpload";
import { AntdButton } from "@plasmicpkgs/antd5/skinny/registerButton";
import Button from "../../Button"; // plasmic-import: lcnlii-Mi9bF/component
import { FormWrapper } from "@plasmicpkgs/antd5/skinny/Form";
import { formHelpers as FormWrapper_Helpers } from "@plasmicpkgs/antd5/skinny/Form";
import { FormItemWrapper } from "@plasmicpkgs/antd5/skinny/FormItem";
import { AntdInput } from "@plasmicpkgs/antd5/skinny/registerInput";
import { inputHelpers as AntdInput_Helpers } from "@plasmicpkgs/antd5/skinny/registerInput";
import { AntdTextArea } from "@plasmicpkgs/antd5/skinny/registerInput";
import { inputHelpers as AntdTextArea_Helpers } from "@plasmicpkgs/antd5/skinny/registerInput";
import { AntdSelect } from "@plasmicpkgs/antd5/skinny/registerSelect";
import TextAreaInput from "../../TextAreaInput"; // plasmic-import: lhUOZcKCH_AK/component
import { TextInput } from "../../../plasmic-library/forms/TextInput"; // plasmic-import: L-RrflTRMMhf/codeComponent
import { SitexTextInput } from "../../../plasmic-library/forms/SitexTextInput"; // plasmic-import: FXhuSzutgVdR/codeComponent
import { AntdDatePicker } from "@plasmicpkgs/antd5/skinny/registerDatePicker";
import { datePickerHelpers as AntdDatePicker_Helpers } from "@plasmicpkgs/antd5/skinny/registerDatePicker";
import { DropDown } from "../../../plasmic-library/forms/DropDown"; // plasmic-import: iAtbmaEieqny/codeComponent
import LeftMenu from "../../LeftMenu"; // plasmic-import: P7MLNCNmfe0b/component
import Header from "../../Header"; // plasmic-import: 2eAt6bzh0iAt/component
import { TabsContainer } from "@plasmicpkgs/plasmic-tabs";
import { TabButton } from "@plasmicpkgs/plasmic-tabs";
import { TabUnderline } from "@plasmicpkgs/plasmic-tabs";
import { TabContent } from "@plasmicpkgs/plasmic-tabs";
import { DataGrid } from "../../../plasmic-library/ui/data_grid"; // plasmic-import: UgPv5Wh-TKEv/codeComponent
import File from "../../File"; // plasmic-import: kvtu7IVvZKcp/component
import BottomMenu from "../../BottomMenu"; // plasmic-import: x-phPVP8sWsV/component
import { Fetcher } from "@plasmicapp/react-web/lib/data-sources";

import { useScreenVariants as useScreenVariantsjdkNhxaWnKvk } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: JdkNHXAWnKVK/globalVariant

import "@plasmicapp/react-web/lib/plasmic.css";

import plasmic_antd_5_hostless_css from "../antd_5_hostless/plasmic.module.css"; // plasmic-import: ohDidvG9XsCeFumugENU3J/projectcss
import projectcss from "./plasmic.module.css"; // plasmic-import: 341WB3S6fAjbZggAzyKhr1/projectcss
import sty from "./PlasmicPositions.module.css"; // plasmic-import: qR-a576Rc2ev/css

import LinkSimpleIcon from "./icons/PlasmicIcon__LinkSimple"; // plasmic-import: j1hFSwL8QFW8/icon
import XIcon from "./icons/PlasmicIcon__X"; // plasmic-import: Ciiq3-41nfH3/icon
import CircleIcon from "./icons/PlasmicIcon__Circle"; // plasmic-import: GXxwbmvNEgwq/icon
import ChevronDownIcon from "./icons/PlasmicIcon__ChevronDown"; // plasmic-import: t_DMhjzzg7u-/icon
import OutlinedIcon from "./icons/PlasmicIcon__Outlined"; // plasmic-import: KSDVg8pxipFP/icon
import FilledIcon from "./icons/PlasmicIcon__Filled"; // plasmic-import: hf9VaFZryDjW/icon
import Outlined2Icon from "./icons/PlasmicIcon__Outlined2"; // plasmic-import: KUj1hb82lL9p/icon
import Filled2Icon from "./icons/PlasmicIcon__Filled2"; // plasmic-import: bV2Rhoi89Nbo/icon
import Outlined3Icon from "./icons/PlasmicIcon__Outlined3"; // plasmic-import: F-p0hJ-0w6np/icon
import Outlined4Icon from "./icons/PlasmicIcon__Outlined4"; // plasmic-import: 0betudEa-qOp/icon
import Filled3Icon from "./icons/PlasmicIcon__Filled3"; // plasmic-import: 0fyEdXS8b5qB/icon
import Outlined5Icon from "./icons/PlasmicIcon__Outlined5"; // plasmic-import: KELtri34ORgp/icon
import Filled4Icon from "./icons/PlasmicIcon__Filled4"; // plasmic-import: 8jxFG1oHtkw2/icon
import Outlined6Icon from "./icons/PlasmicIcon__Outlined6"; // plasmic-import: vsSe2R3hqp-H/icon
import Outlined7Icon from "./icons/PlasmicIcon__Outlined7"; // plasmic-import: 9CfLC5ZQ7veK/icon
import Outlined8Icon from "./icons/PlasmicIcon__Outlined8"; // plasmic-import: 4UmaWISAaqWp/icon
import Outlined9Icon from "./icons/PlasmicIcon__Outlined9"; // plasmic-import: PWnzGUKO-rFw/icon
import IcRoundPlusIcon from "./icons/PlasmicIcon__IcRoundPlus"; // plasmic-import: 8J79OcNmiVuF/icon
import Line9Icon from "./icons/PlasmicIcon__Line9"; // plasmic-import: IdP8XmyKAA75/icon
import IcTwotoneAppleIcon from "./icons/PlasmicIcon__IcTwotoneApple"; // plasmic-import: EW8lvp8Rllk4/icon
import MdiFacebookIcon from "./icons/PlasmicIcon__MdiFacebook"; // plasmic-import: b-hWlWAZSFUh/icon
import SlidersHorizontalIcon from "./icons/PlasmicIcon__SlidersHorizontal"; // plasmic-import: yp2q2x7jxhyF/icon
import PlusIcon from "./icons/PlasmicIcon__Plus"; // plasmic-import: 7-eqbUfgKU33/icon
import PhCalendarBlankFillIcon from "./icons/PlasmicIcon__PhCalendarBlankFill"; // plasmic-import: cghc6kciFm2G/icon

createPlasmicElementProxy;

export type PlasmicPositions__VariantMembers = {};
export type PlasmicPositions__VariantsArgs = {};
type VariantPropType = keyof PlasmicPositions__VariantsArgs;
export const PlasmicPositions__VariantProps = new Array<VariantPropType>();

export type PlasmicPositions__ArgsType = {};
type ArgPropType = keyof PlasmicPositions__ArgsType;
export const PlasmicPositions__ArgProps = new Array<ArgPropType>();

export type PlasmicPositions__OverridesType = {
  root?: Flex__<"div">;
  uploadFile?: Flex__<typeof Modal>;
  frame1437254034?: Flex__<"div">;
  name16?: Flex__<"div">;
  frame1437254035?: Flex__<"div">;
  files2?: Flex__<"div">;
  upload5?: Flex__<typeof UploadWrapper>;
  createPosition?: Flex__<typeof Modal>;
  frame1437254016?: Flex__<"div">;
  name?: Flex__<"div">;
  frame1437254019?: Flex__<"div">;
  createPosition2?: Flex__<typeof FormWrapper>;
  input?: Flex__<typeof AntdInput>;
  textArea?: Flex__<typeof AntdTextArea>;
  precisions2?: Flex__<typeof FormItemWrapper>;
  select9?: Flex__<typeof AntdSelect>;
  generalDescription2?: Flex__<typeof FormItemWrapper>;
  textAreaInput?: Flex__<typeof TextAreaInput>;
  upload?: Flex__<typeof UploadWrapper>;
  content?: Flex__<"div">;
  titre?: Flex__<typeof TextInput>;
  texinput2?: Flex__<typeof SitexTextInput>;
  date?: Flex__<"div">;
  label6?: Flex__<"div">;
  timePicker?: Flex__<typeof AntdDatePicker>;
  type?: Flex__<typeof DropDown>;
  budget?: Flex__<typeof TextInput>;
  comments?: Flex__<typeof TextInput>;
  input5?: Flex__<"div">;
  name2?: Flex__<"div">;
  datePickerWeb?: Flex__<"div">;
  inputSelect?: Flex__<"div">;
  signedByBaseFieldGroupSmall?: Flex__<"div">;
  endDateCalendar?: Flex__<"div">;
  inputElementTextField?: Flex__<"div">;
  signedByBaseInputElementTextFieldSmallEnabled?: Flex__<"div">;
  leadingArtworkContainer?: Flex__<"div">;
  leadingArtwork?: Flex__<"div">;
  leadingLabelContainer?: Flex__<"div">;
  leadingLabel?: Flex__<"div">;
  signedByBaseTypographyLabelSmall?: Flex__<"div">;
  text5?: Flex__<"div">;
  spacer?: Flex__<"div">;
  inputElementContentText?: Flex__<"div">;
  signedByBaseInputElementContentTextSmallOff?: Flex__<"div">;
  text6?: Flex__<"div">;
  trailingLabelEnhancer?: Flex__<"div">;
  trailingLabel?: Flex__<"div">;
  signedByBaseTypographyLabelSmall2?: Flex__<"div">;
  text7?: Flex__<"div">;
  spacer2?: Flex__<"div">;
  trailingArtworkContainer?: Flex__<"div">;
  trailingArtwork?: Flex__<"div">;
  calendar?: Flex__<"div">;
  signedByBaseInputElementSelectXSmallWebSingleDefaultEnabled?: Flex__<"div">;
  leadingArtworkContainer2?: Flex__<"div">;
  text8?: Flex__<"div">;
  leadingLabelContainer2?: Flex__<"div">;
  leadingLabel2?: Flex__<"div">;
  signedByBaseTypographyLabelXSmall?: Flex__<"div">;
  text9?: Flex__<"div">;
  spacer3?: Flex__<"div">;
  inputElementContentText2?: Flex__<"div">;
  signedByBaseInputElementContentTextXSmallWebOff?: Flex__<"div">;
  text10?: Flex__<"div">;
  trailingLabelEnhancer2?: Flex__<"div">;
  trailingLabel2?: Flex__<"div">;
  signedByBaseTypographyLabelXSmall2?: Flex__<"div">;
  text11?: Flex__<"div">;
  spacer4?: Flex__<"div">;
  trailingArtworkContainer2?: Flex__<"div">;
  trailingArtwork2?: Flex__<"div">;
  selectIndicatorContainer?: Flex__<"div">;
  chevronIcon?: Flex__<"div">;
  inputElementHint?: Flex__<"div">;
  heart?: Flex__<"div">;
  hint?: Flex__<"div">;
  signedByBaseTypographyParagraphSmall?: Flex__<"div">;
  text12?: Flex__<"div">;
  spacer28?: Flex__<"div">;
  inputElementSelect?: Flex__<"div">;
  signedByBaseInputElementSelectMediumSingleDefaultActive?: Flex__<"div">;
  selectFrame?: Flex__<"div">;
  leadingArtworkContainer3?: Flex__<"div">;
  leadingArtwork2?: Flex__<"div">;
  leadingLabelContainer3?: Flex__<"div">;
  leadingLabel3?: Flex__<"div">;
  signedByBaseTypographyLabelMedium?: Flex__<"div">;
  text13?: Flex__<"div">;
  spacer5?: Flex__<"div">;
  inputElementContentText3?: Flex__<"div">;
  signedByBaseInputElementContentTextMediumOff?: Flex__<"div">;
  text14?: Flex__<"div">;
  trailingLabelEnhancer3?: Flex__<"div">;
  trailingLabel3?: Flex__<"div">;
  signedByBaseTypographyLabelMedium2?: Flex__<"div">;
  text15?: Flex__<"div">;
  spacer6?: Flex__<"div">;
  trailingArtworkContainer3?: Flex__<"div">;
  trailingArtwork3?: Flex__<"div">;
  selectIndicatorContainer2?: Flex__<"div">;
  chevronIcon2?: Flex__<"div">;
  menu?: Flex__<"div">;
  signedByBaseMenuListMedium?: Flex__<"div">;
  menuItem?: Flex__<"div">;
  signedByBaseMenuItemSearchMediumNoneEnabled?: Flex__<"div">;
  searchField?: Flex__<"div">;
  signedByBaseSearchFieldMediumEnabled?: Flex__<"div">;
  inputElementLabel?: Flex__<"div">;
  signedByBaseInputElementLabelMedium?: Flex__<"div">;
  typography?: Flex__<"div">;
  signedByBaseTypographyLabelMedium3?: Flex__<"div">;
  text16?: Flex__<"div">;
  spacer7?: Flex__<"div">;
  characterCountFrame?: Flex__<"div">;
  heart2?: Flex__<"div">;
  typography2?: Flex__<"div">;
  signedByBaseTypographyLabelMedium4?: Flex__<"div">;
  text17?: Flex__<"div">;
  spacer8?: Flex__<"div">;
  inputElementTextField2?: Flex__<"div">;
  signedByBaseInputElementTextFieldMediumEnabled?: Flex__<"div">;
  leadingArtworkContainer4?: Flex__<"div">;
  search?: Flex__<"div">;
  leadingLabelContainer4?: Flex__<"div">;
  leadingLabel4?: Flex__<"div">;
  signedByBaseTypographyLabelMedium5?: Flex__<"div">;
  text18?: Flex__<"div">;
  spacer9?: Flex__<"div">;
  inputElementContentText4?: Flex__<"div">;
  signedByBaseInputElementContentTextMediumOff2?: Flex__<"div">;
  text19?: Flex__<"div">;
  trailingLabelEnhancer4?: Flex__<"div">;
  trailingLabel4?: Flex__<"div">;
  signedByBaseTypographyLabelMedium6?: Flex__<"div">;
  text20?: Flex__<"div">;
  spacer10?: Flex__<"div">;
  trailingArtworkContainer4?: Flex__<"div">;
  trailingArtwork4?: Flex__<"div">;
  inputElementHint2?: Flex__<"div">;
  heart3?: Flex__<"div">;
  hint2?: Flex__<"div">;
  signedByBaseTypographyParagraphSmall2?: Flex__<"div">;
  text21?: Flex__<"div">;
  spacer29?: Flex__<"div">;
  menuItem2?: Flex__<"div">;
  signedByBaseMenuItemOptionMediumStandardEnabled?: Flex__<"div">;
  menuItemControlMediumCheckboxUnchecked?: Flex__<"div">;
  signedByBaseMenuItemControlMediumCheckboxUnchecked?: Flex__<"div">;
  icon?: Flex__<"div">;
  leadingEnhancer?: Flex__<"div">;
  heart4?: Flex__<"div">;
  textFrame?: Flex__<"div">;
  leadingText?: Flex__<"div">;
  typography3?: Flex__<"div">;
  signedByBaseTypographyParagraphMedium?: Flex__<"div">;
  text22?: Flex__<"div">;
  spacer11?: Flex__<"div">;
  typography4?: Flex__<"div">;
  signedByBaseTypographyParagraphMedium2?: Flex__<"div">;
  text23?: Flex__<"div">;
  spacer12?: Flex__<"div">;
  typography5?: Flex__<"div">;
  signedByBaseTypographyParagraphMedium3?: Flex__<"div">;
  spacer13?: Flex__<"div">;
  trailingEnhancer?: Flex__<"div">;
  heart5?: Flex__<"div">;
  menuItem3?: Flex__<"div">;
  signedByBaseMenuItemOptionMediumStandardEnabled2?: Flex__<"div">;
  menuItemControlMediumCheckboxUnchecked2?: Flex__<"div">;
  signedByBaseMenuItemControlMediumCheckboxUnchecked2?: Flex__<"div">;
  icon2?: Flex__<"div">;
  leadingEnhancer2?: Flex__<"div">;
  heart6?: Flex__<"div">;
  textFrame2?: Flex__<"div">;
  leadingText2?: Flex__<"div">;
  typography6?: Flex__<"div">;
  signedByBaseTypographyParagraphMedium4?: Flex__<"div">;
  text24?: Flex__<"div">;
  spacer14?: Flex__<"div">;
  typography7?: Flex__<"div">;
  signedByBaseTypographyParagraphMedium5?: Flex__<"div">;
  text25?: Flex__<"div">;
  spacer15?: Flex__<"div">;
  typography8?: Flex__<"div">;
  signedByBaseTypographyParagraphMedium6?: Flex__<"div">;
  spacer16?: Flex__<"div">;
  trailingEnhancer2?: Flex__<"div">;
  checkmarkSmall?: Flex__<"div">;
  menuItem4?: Flex__<"div">;
  signedByBaseMenuItemOptionMediumStandardEnabled3?: Flex__<"div">;
  menuItemControlMediumCheckboxUnchecked3?: Flex__<"div">;
  signedByBaseMenuItemControlMediumCheckboxUnchecked3?: Flex__<"div">;
  icon3?: Flex__<"div">;
  leadingEnhancer3?: Flex__<"div">;
  heart7?: Flex__<"div">;
  textFrame3?: Flex__<"div">;
  leadingText3?: Flex__<"div">;
  typography9?: Flex__<"div">;
  signedByBaseTypographyParagraphMedium7?: Flex__<"div">;
  text26?: Flex__<"div">;
  spacer17?: Flex__<"div">;
  typography10?: Flex__<"div">;
  signedByBaseTypographyParagraphMedium8?: Flex__<"div">;
  text27?: Flex__<"div">;
  spacer18?: Flex__<"div">;
  typography11?: Flex__<"div">;
  signedByBaseTypographyParagraphMedium9?: Flex__<"div">;
  spacer19?: Flex__<"div">;
  trailingEnhancer3?: Flex__<"div">;
  heart8?: Flex__<"div">;
  menuItem5?: Flex__<"div">;
  signedByBaseMenuItemOptionMediumStandardEnabled4?: Flex__<"div">;
  menuItemControlMediumCheckboxUnchecked4?: Flex__<"div">;
  signedByBaseMenuItemControlMediumCheckboxUnchecked4?: Flex__<"div">;
  icon4?: Flex__<"div">;
  leadingEnhancer4?: Flex__<"div">;
  heart9?: Flex__<"div">;
  textFrame4?: Flex__<"div">;
  leadingText4?: Flex__<"div">;
  typography12?: Flex__<"div">;
  signedByBaseTypographyParagraphMedium10?: Flex__<"div">;
  text28?: Flex__<"div">;
  spacer20?: Flex__<"div">;
  typography13?: Flex__<"div">;
  signedByBaseTypographyParagraphMedium11?: Flex__<"div">;
  text29?: Flex__<"div">;
  spacer21?: Flex__<"div">;
  typography14?: Flex__<"div">;
  signedByBaseTypographyParagraphMedium12?: Flex__<"div">;
  spacer22?: Flex__<"div">;
  trailingEnhancer4?: Flex__<"div">;
  heart10?: Flex__<"div">;
  scrollBar?: Flex__<"div">;
  model?: Flex__<typeof DropDown>;
  buttons?: Flex__<"div">;
  button?: Flex__<typeof Button>;
  frame1073713924?: Flex__<"div">;
  frame1073713930?: Flex__<"div">;
  button2?: Flex__<typeof Button>;
  button3?: Flex__<"div">;
  button4?: Flex__<"div">;
  editPosition?: Flex__<typeof Modal>;
  frame1437254017?: Flex__<"div">;
  name3?: Flex__<"div">;
  frame1437254020?: Flex__<"div">;
  editPosition3?: Flex__<typeof FormWrapper>;
  input3?: Flex__<typeof AntdInput>;
  textArea2?: Flex__<typeof AntdTextArea>;
  precisions3?: Flex__<typeof FormItemWrapper>;
  select10?: Flex__<typeof AntdSelect>;
  generalDescription3?: Flex__<typeof FormItemWrapper>;
  textArea4?: Flex__<typeof AntdTextArea>;
  upload22?: Flex__<typeof UploadWrapper>;
  deletePosition2?: Flex__<typeof Modal>;
  frame1437254018?: Flex__<"div">;
  name7?: Flex__<"div">;
  frame1437254021?: Flex__<"div">;
  form3?: Flex__<typeof FormWrapper>;
  content3?: Flex__<"div">;
  titre3?: Flex__<typeof TextInput>;
  texinput23?: Flex__<typeof SitexTextInput>;
  date3?: Flex__<"div">;
  label8?: Flex__<"div">;
  timePicker9?: Flex__<typeof AntdDatePicker>;
  type3?: Flex__<typeof DropDown>;
  budget3?: Flex__<typeof TextInput>;
  comments3?: Flex__<typeof TextInput>;
  input9?: Flex__<"div">;
  name6?: Flex__<"div">;
  datePickerWeb3?: Flex__<"div">;
  inputSelect3?: Flex__<"div">;
  signedByBaseFieldGroupSmall3?: Flex__<"div">;
  endDateCalendar3?: Flex__<"div">;
  inputElementTextField5?: Flex__<"div">;
  signedByBaseInputElementTextFieldSmallEnabled3?: Flex__<"div">;
  leadingArtworkContainer9?: Flex__<"div">;
  leadingArtwork5?: Flex__<"div">;
  leadingLabelContainer9?: Flex__<"div">;
  leadingLabel9?: Flex__<"div">;
  signedByBaseTypographyLabelSmall5?: Flex__<"div">;
  text55?: Flex__<"div">;
  spacer49?: Flex__<"div">;
  inputElementContentText9?: Flex__<"div">;
  signedByBaseInputElementContentTextSmallOff3?: Flex__<"div">;
  text56?: Flex__<"div">;
  trailingLabelEnhancer9?: Flex__<"div">;
  trailingLabel9?: Flex__<"div">;
  signedByBaseTypographyLabelSmall6?: Flex__<"div">;
  text57?: Flex__<"div">;
  spacer50?: Flex__<"div">;
  trailingArtworkContainer9?: Flex__<"div">;
  trailingArtwork9?: Flex__<"div">;
  calendar3?: Flex__<"div">;
  signedByBaseInputElementSelectXSmallWebSingleDefaultEnabled3?: Flex__<"div">;
  leadingArtworkContainer10?: Flex__<"div">;
  text58?: Flex__<"div">;
  leadingLabelContainer10?: Flex__<"div">;
  leadingLabel10?: Flex__<"div">;
  signedByBaseTypographyLabelXSmall5?: Flex__<"div">;
  text59?: Flex__<"div">;
  spacer51?: Flex__<"div">;
  inputElementContentText10?: Flex__<"div">;
  signedByBaseInputElementContentTextXSmallWebOff3?: Flex__<"div">;
  text60?: Flex__<"div">;
  trailingLabelEnhancer10?: Flex__<"div">;
  trailingLabel10?: Flex__<"div">;
  signedByBaseTypographyLabelXSmall6?: Flex__<"div">;
  text61?: Flex__<"div">;
  spacer52?: Flex__<"div">;
  trailingArtworkContainer10?: Flex__<"div">;
  trailingArtwork10?: Flex__<"div">;
  selectIndicatorContainer5?: Flex__<"div">;
  chevronIcon5?: Flex__<"div">;
  inputElementHint5?: Flex__<"div">;
  heart21?: Flex__<"div">;
  hint5?: Flex__<"div">;
  signedByBaseTypographyParagraphSmall5?: Flex__<"div">;
  text62?: Flex__<"div">;
  spacer53?: Flex__<"div">;
  inputElementSelect3?: Flex__<"div">;
  signedByBaseInputElementSelectMediumSingleDefaultActive3?: Flex__<"div">;
  selectFrame3?: Flex__<"div">;
  leadingArtworkContainer11?: Flex__<"div">;
  leadingArtwork6?: Flex__<"div">;
  leadingLabelContainer11?: Flex__<"div">;
  leadingLabel11?: Flex__<"div">;
  signedByBaseTypographyLabelMedium13?: Flex__<"div">;
  text63?: Flex__<"div">;
  spacer54?: Flex__<"div">;
  inputElementContentText11?: Flex__<"div">;
  signedByBaseInputElementContentTextMediumOff5?: Flex__<"div">;
  text64?: Flex__<"div">;
  trailingLabelEnhancer11?: Flex__<"div">;
  trailingLabel11?: Flex__<"div">;
  signedByBaseTypographyLabelMedium14?: Flex__<"div">;
  text65?: Flex__<"div">;
  spacer55?: Flex__<"div">;
  trailingArtworkContainer11?: Flex__<"div">;
  trailingArtwork11?: Flex__<"div">;
  selectIndicatorContainer6?: Flex__<"div">;
  chevronIcon6?: Flex__<"div">;
  menu3?: Flex__<"div">;
  signedByBaseMenuListMedium3?: Flex__<"div">;
  menuItem11?: Flex__<"div">;
  signedByBaseMenuItemSearchMediumNoneEnabled3?: Flex__<"div">;
  searchField3?: Flex__<"div">;
  signedByBaseSearchFieldMediumEnabled3?: Flex__<"div">;
  inputElementLabel3?: Flex__<"div">;
  signedByBaseInputElementLabelMedium3?: Flex__<"div">;
  typography29?: Flex__<"div">;
  signedByBaseTypographyLabelMedium15?: Flex__<"div">;
  text66?: Flex__<"div">;
  spacer56?: Flex__<"div">;
  characterCountFrame3?: Flex__<"div">;
  heart22?: Flex__<"div">;
  typography30?: Flex__<"div">;
  signedByBaseTypographyLabelMedium16?: Flex__<"div">;
  text67?: Flex__<"div">;
  spacer57?: Flex__<"div">;
  inputElementTextField6?: Flex__<"div">;
  signedByBaseInputElementTextFieldMediumEnabled3?: Flex__<"div">;
  leadingArtworkContainer12?: Flex__<"div">;
  search3?: Flex__<"div">;
  leadingLabelContainer12?: Flex__<"div">;
  leadingLabel12?: Flex__<"div">;
  signedByBaseTypographyLabelMedium17?: Flex__<"div">;
  text68?: Flex__<"div">;
  spacer58?: Flex__<"div">;
  inputElementContentText12?: Flex__<"div">;
  signedByBaseInputElementContentTextMediumOff6?: Flex__<"div">;
  text69?: Flex__<"div">;
  trailingLabelEnhancer12?: Flex__<"div">;
  trailingLabel12?: Flex__<"div">;
  signedByBaseTypographyLabelMedium18?: Flex__<"div">;
  text70?: Flex__<"div">;
  spacer59?: Flex__<"div">;
  trailingArtworkContainer12?: Flex__<"div">;
  trailingArtwork12?: Flex__<"div">;
  inputElementHint6?: Flex__<"div">;
  heart23?: Flex__<"div">;
  hint6?: Flex__<"div">;
  signedByBaseTypographyParagraphSmall6?: Flex__<"div">;
  text71?: Flex__<"div">;
  spacer60?: Flex__<"div">;
  menuItem12?: Flex__<"div">;
  signedByBaseMenuItemOptionMediumStandardEnabled9?: Flex__<"div">;
  menuItemControlMediumCheckboxUnchecked9?: Flex__<"div">;
  signedByBaseMenuItemControlMediumCheckboxUnchecked9?: Flex__<"div">;
  icon9?: Flex__<"div">;
  leadingEnhancer9?: Flex__<"div">;
  heart24?: Flex__<"div">;
  textFrame9?: Flex__<"div">;
  leadingText9?: Flex__<"div">;
  typography31?: Flex__<"div">;
  signedByBaseTypographyParagraphMedium25?: Flex__<"div">;
  text72?: Flex__<"div">;
  spacer61?: Flex__<"div">;
  typography32?: Flex__<"div">;
  signedByBaseTypographyParagraphMedium26?: Flex__<"div">;
  text73?: Flex__<"div">;
  spacer62?: Flex__<"div">;
  typography33?: Flex__<"div">;
  signedByBaseTypographyParagraphMedium27?: Flex__<"div">;
  spacer63?: Flex__<"div">;
  trailingEnhancer9?: Flex__<"div">;
  heart25?: Flex__<"div">;
  menuItem13?: Flex__<"div">;
  signedByBaseMenuItemOptionMediumStandardEnabled10?: Flex__<"div">;
  menuItemControlMediumCheckboxUnchecked10?: Flex__<"div">;
  signedByBaseMenuItemControlMediumCheckboxUnchecked10?: Flex__<"div">;
  icon10?: Flex__<"div">;
  leadingEnhancer10?: Flex__<"div">;
  heart26?: Flex__<"div">;
  textFrame10?: Flex__<"div">;
  leadingText10?: Flex__<"div">;
  typography34?: Flex__<"div">;
  signedByBaseTypographyParagraphMedium28?: Flex__<"div">;
  text74?: Flex__<"div">;
  spacer64?: Flex__<"div">;
  typography35?: Flex__<"div">;
  signedByBaseTypographyParagraphMedium29?: Flex__<"div">;
  text75?: Flex__<"div">;
  spacer65?: Flex__<"div">;
  typography36?: Flex__<"div">;
  signedByBaseTypographyParagraphMedium30?: Flex__<"div">;
  spacer66?: Flex__<"div">;
  trailingEnhancer10?: Flex__<"div">;
  checkmarkSmall3?: Flex__<"div">;
  menuItem14?: Flex__<"div">;
  signedByBaseMenuItemOptionMediumStandardEnabled11?: Flex__<"div">;
  menuItemControlMediumCheckboxUnchecked11?: Flex__<"div">;
  signedByBaseMenuItemControlMediumCheckboxUnchecked11?: Flex__<"div">;
  icon11?: Flex__<"div">;
  leadingEnhancer11?: Flex__<"div">;
  heart27?: Flex__<"div">;
  textFrame11?: Flex__<"div">;
  leadingText11?: Flex__<"div">;
  typography37?: Flex__<"div">;
  signedByBaseTypographyParagraphMedium31?: Flex__<"div">;
  text76?: Flex__<"div">;
  spacer67?: Flex__<"div">;
  typography38?: Flex__<"div">;
  signedByBaseTypographyParagraphMedium32?: Flex__<"div">;
  text77?: Flex__<"div">;
  spacer68?: Flex__<"div">;
  typography39?: Flex__<"div">;
  signedByBaseTypographyParagraphMedium33?: Flex__<"div">;
  spacer69?: Flex__<"div">;
  trailingEnhancer11?: Flex__<"div">;
  heart28?: Flex__<"div">;
  menuItem15?: Flex__<"div">;
  signedByBaseMenuItemOptionMediumStandardEnabled12?: Flex__<"div">;
  menuItemControlMediumCheckboxUnchecked12?: Flex__<"div">;
  signedByBaseMenuItemControlMediumCheckboxUnchecked12?: Flex__<"div">;
  icon12?: Flex__<"div">;
  leadingEnhancer12?: Flex__<"div">;
  heart29?: Flex__<"div">;
  textFrame12?: Flex__<"div">;
  leadingText12?: Flex__<"div">;
  typography40?: Flex__<"div">;
  signedByBaseTypographyParagraphMedium34?: Flex__<"div">;
  text78?: Flex__<"div">;
  spacer70?: Flex__<"div">;
  typography41?: Flex__<"div">;
  signedByBaseTypographyParagraphMedium35?: Flex__<"div">;
  text79?: Flex__<"div">;
  spacer71?: Flex__<"div">;
  typography42?: Flex__<"div">;
  signedByBaseTypographyParagraphMedium36?: Flex__<"div">;
  spacer72?: Flex__<"div">;
  trailingEnhancer12?: Flex__<"div">;
  heart30?: Flex__<"div">;
  scrollBar3?: Flex__<"div">;
  model3?: Flex__<typeof DropDown>;
  buttons3?: Flex__<"div">;
  button9?: Flex__<typeof Button>;
  frame1073713926?: Flex__<"div">;
  frame1073713932?: Flex__<"div">;
  button10?: Flex__<typeof Button>;
  button11?: Flex__<"div">;
  button12?: Flex__<"div">;
  duplicate?: Flex__<typeof Modal>;
  frame1437254022?: Flex__<"div">;
  name9?: Flex__<"div">;
  frame1437254023?: Flex__<"div">;
  formDuplicateModel?: Flex__<typeof FormWrapper>;
  content4?: Flex__<"div">;
  titre6?: Flex__<typeof TextInput>;
  texinput24?: Flex__<typeof SitexTextInput>;
  date4?: Flex__<"div">;
  label9?: Flex__<"div">;
  timePicker10?: Flex__<typeof AntdDatePicker>;
  type6?: Flex__<typeof DropDown>;
  budget6?: Flex__<typeof TextInput>;
  comments4?: Flex__<typeof TextInput>;
  input10?: Flex__<"div">;
  name8?: Flex__<"div">;
  datePickerWeb4?: Flex__<"div">;
  inputSelect4?: Flex__<"div">;
  signedByBaseFieldGroupSmall4?: Flex__<"div">;
  endDateCalendar4?: Flex__<"div">;
  inputElementTextField7?: Flex__<"div">;
  signedByBaseInputElementTextFieldSmallEnabled4?: Flex__<"div">;
  leadingArtworkContainer13?: Flex__<"div">;
  leadingArtwork7?: Flex__<"div">;
  leadingLabelContainer13?: Flex__<"div">;
  leadingLabel13?: Flex__<"div">;
  signedByBaseTypographyLabelSmall7?: Flex__<"div">;
  text80?: Flex__<"div">;
  spacer73?: Flex__<"div">;
  inputElementContentText13?: Flex__<"div">;
  signedByBaseInputElementContentTextSmallOff4?: Flex__<"div">;
  text81?: Flex__<"div">;
  trailingLabelEnhancer13?: Flex__<"div">;
  trailingLabel13?: Flex__<"div">;
  signedByBaseTypographyLabelSmall8?: Flex__<"div">;
  text82?: Flex__<"div">;
  spacer74?: Flex__<"div">;
  trailingArtworkContainer13?: Flex__<"div">;
  trailingArtwork13?: Flex__<"div">;
  calendar4?: Flex__<"div">;
  signedByBaseInputElementSelectXSmallWebSingleDefaultEnabled4?: Flex__<"div">;
  leadingArtworkContainer14?: Flex__<"div">;
  text83?: Flex__<"div">;
  leadingLabelContainer14?: Flex__<"div">;
  leadingLabel14?: Flex__<"div">;
  signedByBaseTypographyLabelXSmall7?: Flex__<"div">;
  text84?: Flex__<"div">;
  spacer75?: Flex__<"div">;
  inputElementContentText14?: Flex__<"div">;
  signedByBaseInputElementContentTextXSmallWebOff4?: Flex__<"div">;
  text85?: Flex__<"div">;
  trailingLabelEnhancer14?: Flex__<"div">;
  trailingLabel14?: Flex__<"div">;
  signedByBaseTypographyLabelXSmall8?: Flex__<"div">;
  text86?: Flex__<"div">;
  spacer76?: Flex__<"div">;
  trailingArtworkContainer14?: Flex__<"div">;
  trailingArtwork14?: Flex__<"div">;
  selectIndicatorContainer7?: Flex__<"div">;
  chevronIcon7?: Flex__<"div">;
  inputElementHint7?: Flex__<"div">;
  heart31?: Flex__<"div">;
  hint7?: Flex__<"div">;
  signedByBaseTypographyParagraphSmall7?: Flex__<"div">;
  text87?: Flex__<"div">;
  spacer77?: Flex__<"div">;
  inputElementSelect4?: Flex__<"div">;
  signedByBaseInputElementSelectMediumSingleDefaultActive4?: Flex__<"div">;
  selectFrame4?: Flex__<"div">;
  leadingArtworkContainer15?: Flex__<"div">;
  leadingArtwork8?: Flex__<"div">;
  leadingLabelContainer15?: Flex__<"div">;
  leadingLabel15?: Flex__<"div">;
  signedByBaseTypographyLabelMedium19?: Flex__<"div">;
  text88?: Flex__<"div">;
  spacer78?: Flex__<"div">;
  inputElementContentText15?: Flex__<"div">;
  signedByBaseInputElementContentTextMediumOff7?: Flex__<"div">;
  text89?: Flex__<"div">;
  trailingLabelEnhancer15?: Flex__<"div">;
  trailingLabel15?: Flex__<"div">;
  signedByBaseTypographyLabelMedium20?: Flex__<"div">;
  text90?: Flex__<"div">;
  spacer79?: Flex__<"div">;
  trailingArtworkContainer15?: Flex__<"div">;
  trailingArtwork15?: Flex__<"div">;
  selectIndicatorContainer8?: Flex__<"div">;
  chevronIcon8?: Flex__<"div">;
  menu4?: Flex__<"div">;
  signedByBaseMenuListMedium4?: Flex__<"div">;
  menuItem16?: Flex__<"div">;
  signedByBaseMenuItemSearchMediumNoneEnabled4?: Flex__<"div">;
  searchField4?: Flex__<"div">;
  signedByBaseSearchFieldMediumEnabled4?: Flex__<"div">;
  inputElementLabel4?: Flex__<"div">;
  signedByBaseInputElementLabelMedium4?: Flex__<"div">;
  typography43?: Flex__<"div">;
  signedByBaseTypographyLabelMedium21?: Flex__<"div">;
  text91?: Flex__<"div">;
  spacer80?: Flex__<"div">;
  characterCountFrame4?: Flex__<"div">;
  heart32?: Flex__<"div">;
  typography44?: Flex__<"div">;
  signedByBaseTypographyLabelMedium22?: Flex__<"div">;
  text92?: Flex__<"div">;
  spacer81?: Flex__<"div">;
  inputElementTextField8?: Flex__<"div">;
  signedByBaseInputElementTextFieldMediumEnabled4?: Flex__<"div">;
  leadingArtworkContainer16?: Flex__<"div">;
  search4?: Flex__<"div">;
  leadingLabelContainer16?: Flex__<"div">;
  leadingLabel16?: Flex__<"div">;
  signedByBaseTypographyLabelMedium23?: Flex__<"div">;
  text93?: Flex__<"div">;
  spacer82?: Flex__<"div">;
  inputElementContentText16?: Flex__<"div">;
  signedByBaseInputElementContentTextMediumOff8?: Flex__<"div">;
  text94?: Flex__<"div">;
  trailingLabelEnhancer16?: Flex__<"div">;
  trailingLabel16?: Flex__<"div">;
  signedByBaseTypographyLabelMedium24?: Flex__<"div">;
  text95?: Flex__<"div">;
  spacer83?: Flex__<"div">;
  trailingArtworkContainer16?: Flex__<"div">;
  trailingArtwork16?: Flex__<"div">;
  inputElementHint8?: Flex__<"div">;
  heart33?: Flex__<"div">;
  hint8?: Flex__<"div">;
  signedByBaseTypographyParagraphSmall8?: Flex__<"div">;
  text96?: Flex__<"div">;
  spacer84?: Flex__<"div">;
  menuItem17?: Flex__<"div">;
  signedByBaseMenuItemOptionMediumStandardEnabled13?: Flex__<"div">;
  menuItemControlMediumCheckboxUnchecked13?: Flex__<"div">;
  signedByBaseMenuItemControlMediumCheckboxUnchecked13?: Flex__<"div">;
  icon13?: Flex__<"div">;
  leadingEnhancer13?: Flex__<"div">;
  heart34?: Flex__<"div">;
  textFrame13?: Flex__<"div">;
  leadingText13?: Flex__<"div">;
  typography45?: Flex__<"div">;
  signedByBaseTypographyParagraphMedium37?: Flex__<"div">;
  text97?: Flex__<"div">;
  spacer85?: Flex__<"div">;
  typography46?: Flex__<"div">;
  signedByBaseTypographyParagraphMedium38?: Flex__<"div">;
  text98?: Flex__<"div">;
  spacer86?: Flex__<"div">;
  typography47?: Flex__<"div">;
  signedByBaseTypographyParagraphMedium39?: Flex__<"div">;
  spacer87?: Flex__<"div">;
  trailingEnhancer13?: Flex__<"div">;
  heart35?: Flex__<"div">;
  menuItem18?: Flex__<"div">;
  signedByBaseMenuItemOptionMediumStandardEnabled14?: Flex__<"div">;
  menuItemControlMediumCheckboxUnchecked14?: Flex__<"div">;
  signedByBaseMenuItemControlMediumCheckboxUnchecked14?: Flex__<"div">;
  icon14?: Flex__<"div">;
  leadingEnhancer14?: Flex__<"div">;
  heart36?: Flex__<"div">;
  textFrame14?: Flex__<"div">;
  leadingText14?: Flex__<"div">;
  typography48?: Flex__<"div">;
  signedByBaseTypographyParagraphMedium40?: Flex__<"div">;
  text99?: Flex__<"div">;
  spacer88?: Flex__<"div">;
  typography49?: Flex__<"div">;
  signedByBaseTypographyParagraphMedium41?: Flex__<"div">;
  text100?: Flex__<"div">;
  spacer89?: Flex__<"div">;
  typography50?: Flex__<"div">;
  signedByBaseTypographyParagraphMedium42?: Flex__<"div">;
  spacer90?: Flex__<"div">;
  trailingEnhancer14?: Flex__<"div">;
  checkmarkSmall4?: Flex__<"div">;
  menuItem19?: Flex__<"div">;
  signedByBaseMenuItemOptionMediumStandardEnabled15?: Flex__<"div">;
  menuItemControlMediumCheckboxUnchecked15?: Flex__<"div">;
  signedByBaseMenuItemControlMediumCheckboxUnchecked15?: Flex__<"div">;
  icon15?: Flex__<"div">;
  leadingEnhancer15?: Flex__<"div">;
  heart37?: Flex__<"div">;
  textFrame15?: Flex__<"div">;
  leadingText15?: Flex__<"div">;
  typography51?: Flex__<"div">;
  signedByBaseTypographyParagraphMedium43?: Flex__<"div">;
  text101?: Flex__<"div">;
  spacer91?: Flex__<"div">;
  typography52?: Flex__<"div">;
  signedByBaseTypographyParagraphMedium44?: Flex__<"div">;
  text102?: Flex__<"div">;
  spacer92?: Flex__<"div">;
  typography53?: Flex__<"div">;
  signedByBaseTypographyParagraphMedium45?: Flex__<"div">;
  spacer93?: Flex__<"div">;
  trailingEnhancer15?: Flex__<"div">;
  heart38?: Flex__<"div">;
  menuItem20?: Flex__<"div">;
  signedByBaseMenuItemOptionMediumStandardEnabled16?: Flex__<"div">;
  menuItemControlMediumCheckboxUnchecked16?: Flex__<"div">;
  signedByBaseMenuItemControlMediumCheckboxUnchecked16?: Flex__<"div">;
  icon16?: Flex__<"div">;
  leadingEnhancer16?: Flex__<"div">;
  heart39?: Flex__<"div">;
  textFrame16?: Flex__<"div">;
  leadingText16?: Flex__<"div">;
  typography54?: Flex__<"div">;
  signedByBaseTypographyParagraphMedium46?: Flex__<"div">;
  text103?: Flex__<"div">;
  spacer94?: Flex__<"div">;
  typography55?: Flex__<"div">;
  signedByBaseTypographyParagraphMedium47?: Flex__<"div">;
  text104?: Flex__<"div">;
  spacer95?: Flex__<"div">;
  typography56?: Flex__<"div">;
  signedByBaseTypographyParagraphMedium48?: Flex__<"div">;
  spacer96?: Flex__<"div">;
  trailingEnhancer16?: Flex__<"div">;
  heart40?: Flex__<"div">;
  scrollBar4?: Flex__<"div">;
  model6?: Flex__<typeof DropDown>;
  buttons4?: Flex__<"div">;
  button13?: Flex__<typeof Button>;
  frame1073713927?: Flex__<"div">;
  frame1073713933?: Flex__<"div">;
  button14?: Flex__<typeof Button>;
  button15?: Flex__<"div">;
  button16?: Flex__<"div">;
  accueilDashboard?: Flex__<"div">;
  leftMenu?: Flex__<typeof LeftMenu>;
  main?: Flex__<"div">;
  header?: Flex__<typeof Header>;
  main2?: Flex__<"div">;
  tabsContainer?: Flex__<typeof TabsContainer>;
  tabs?: Flex__<"div">;
  tabButton?: Flex__<typeof TabButton>;
  tabUnderline?: Flex__<typeof TabUnderline>;
  filter?: Flex__<"div">;
  buttonFilter?: Flex__<typeof Button>;
  buttonAdd2?: Flex__<typeof Button>;
  buttonAddDoc?: Flex__<typeof Button>;
  _1?: Flex__<typeof TabContent>;
  table?: Flex__<"div">;
  dataGrid?: Flex__<typeof DataGrid>;
  _2?: Flex__<typeof TabContent>;
  file?: Flex__<typeof File>;
  noDoc?: Flex__<"div">;
  noDocuments?: Flex__<"div">;
  startCreatingYour?: Flex__<"div">;
  bottomMenu?: Flex__<typeof BottomMenu>;
};

export interface DefaultPositionsProps {}

const $$ = {};

function useNextRouter() {
  try {
    return useRouter();
  } catch {}
  return undefined;
}

function PlasmicPositions__RenderFunc(props: {
  variants: PlasmicPositions__VariantsArgs;
  args: PlasmicPositions__ArgsType;
  overrides: PlasmicPositions__OverridesType;
  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;

  const args = React.useMemo(
    () =>
      Object.assign(
        {},
        Object.fromEntries(
          Object.entries(props.args).filter(([_, v]) => v !== undefined)
        )
      ),
    [props.args]
  );

  const $props = {
    ...args,
    ...variants
  };

  const __nextRouter = useNextRouter();

  const $ctx = useDataEnv?.() || {};
  const refsRef = React.useRef({});
  const $refs = refsRef.current;

  const $globalActions = useGlobalActions?.();

  let [$queries, setDollarQueries] = React.useState<
    Record<string, ReturnType<typeof usePlasmicDataOp>>
  >({});
  const stateSpecs: Parameters<typeof useDollarState>[0] = React.useMemo(
    () => [
      {
        path: "newPosition",
        type: "private",
        variableType: "boolean",
        initFunc: ({ $props, $state, $queries, $ctx }) => false
      },
      {
        path: "createPosition.isOpen",
        type: "private",
        variableType: "boolean",
        initFunc: ({ $props, $state, $queries, $ctx }) =>
          (() => {
            try {
              return $state.newPosition;
            } catch (e) {
              if (
                e instanceof TypeError ||
                e?.plasmicType === "PlasmicUndefinedDataError"
              ) {
                return undefined;
              }
              throw e;
            }
          })()
      },
      {
        path: "timePicker.value",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined,

        onMutate: generateOnMutateForSpec("value", AntdDatePicker_Helpers)
      },
      {
        path: "texinput2.value",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined
      },
      {
        path: "texinput2.isInputValid",
        type: "private",
        variableType: "boolean",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined
      },
      {
        path: "createPosition2.value",
        type: "private",
        variableType: "object",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined,

        refName: "createPosition2",
        onMutate: generateOnMutateForSpec("value", FormWrapper_Helpers)
      },
      {
        path: "createPosition2.isSubmitting",
        type: "private",
        variableType: "boolean",
        initFunc: ({ $props, $state, $queries, $ctx }) => false,

        refName: "createPosition2",
        onMutate: generateOnMutateForSpec("isSubmitting", FormWrapper_Helpers)
      },
      {
        path: "input.value",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined,

        onMutate: generateOnMutateForSpec("value", AntdInput_Helpers)
      },
      {
        path: "textArea.value",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined,

        onMutate: generateOnMutateForSpec("value", AntdTextArea_Helpers)
      },
      {
        path: "editPosition.isOpen",
        type: "private",
        variableType: "boolean",
        initFunc: ({ $props, $state, $queries, $ctx }) =>
          (() => {
            try {
              return $state.editPosition2;
            } catch (e) {
              if (
                e instanceof TypeError ||
                e?.plasmicType === "PlasmicUndefinedDataError"
              ) {
                return undefined;
              }
              throw e;
            }
          })()
      },
      {
        path: "editPosition3.value",
        type: "private",
        variableType: "object",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined,

        refName: "editPosition3",
        onMutate: generateOnMutateForSpec("value", FormWrapper_Helpers)
      },
      {
        path: "editPosition3.isSubmitting",
        type: "private",
        variableType: "boolean",
        initFunc: ({ $props, $state, $queries, $ctx }) => false,

        refName: "editPosition3",
        onMutate: generateOnMutateForSpec("isSubmitting", FormWrapper_Helpers)
      },
      {
        path: "editPosition2",
        type: "private",
        variableType: "boolean",
        initFunc: ({ $props, $state, $queries, $ctx }) => false
      },
      {
        path: "positionId",
        type: "private",
        variableType: "number",
        initFunc: ({ $props, $state, $queries, $ctx }) => 0
      },
      {
        path: "deletePosition",
        type: "private",
        variableType: "boolean",
        initFunc: ({ $props, $state, $queries, $ctx }) => false
      },
      {
        path: "deletePosition2.isOpen",
        type: "private",
        variableType: "boolean",
        initFunc: ({ $props, $state, $queries, $ctx }) =>
          (() => {
            try {
              return $state.deletePosition;
            } catch (e) {
              if (
                e instanceof TypeError ||
                e?.plasmicType === "PlasmicUndefinedDataError"
              ) {
                return undefined;
              }
              throw e;
            }
          })()
      },
      {
        path: "form3.value",
        type: "private",
        variableType: "object",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined,

        refName: "form3",
        onMutate: generateOnMutateForSpec("value", FormWrapper_Helpers)
      },
      {
        path: "form3.isSubmitting",
        type: "private",
        variableType: "boolean",
        initFunc: ({ $props, $state, $queries, $ctx }) => false,

        refName: "form3",
        onMutate: generateOnMutateForSpec("isSubmitting", FormWrapper_Helpers)
      },
      {
        path: "texinput23.value",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined
      },
      {
        path: "texinput23.isInputValid",
        type: "private",
        variableType: "boolean",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined
      },
      {
        path: "timePicker9.value",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined,

        onMutate: generateOnMutateForSpec("value", AntdDatePicker_Helpers)
      },
      {
        path: "header.operationId",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => 0
      },
      {
        path: "select9.value",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined
      },
      {
        path: "input3.value",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined,

        onMutate: generateOnMutateForSpec("value", AntdInput_Helpers)
      },
      {
        path: "textArea2.value",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined,

        onMutate: generateOnMutateForSpec("value", AntdTextArea_Helpers)
      },
      {
        path: "select10.value",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined
      },
      {
        path: "textArea4.value",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined,

        onMutate: generateOnMutateForSpec("value", AntdTextArea_Helpers)
      },
      {
        path: "duplicate.isOpen",
        type: "private",
        variableType: "boolean",
        initFunc: ({ $props, $state, $queries, $ctx }) =>
          (() => {
            try {
              return $state.duplicatePosition;
            } catch (e) {
              if (
                e instanceof TypeError ||
                e?.plasmicType === "PlasmicUndefinedDataError"
              ) {
                return undefined;
              }
              throw e;
            }
          })()
      },
      {
        path: "formDuplicateModel.value",
        type: "private",
        variableType: "object",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined,

        refName: "formDuplicateModel",
        onMutate: generateOnMutateForSpec("value", FormWrapper_Helpers)
      },
      {
        path: "formDuplicateModel.isSubmitting",
        type: "private",
        variableType: "boolean",
        initFunc: ({ $props, $state, $queries, $ctx }) => false,

        refName: "formDuplicateModel",
        onMutate: generateOnMutateForSpec("isSubmitting", FormWrapper_Helpers)
      },
      {
        path: "texinput24.value",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined
      },
      {
        path: "texinput24.isInputValid",
        type: "private",
        variableType: "boolean",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined
      },
      {
        path: "timePicker10.value",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined,

        onMutate: generateOnMutateForSpec("value", AntdDatePicker_Helpers)
      },
      {
        path: "duplicatePosition",
        type: "private",
        variableType: "boolean",
        initFunc: ({ $props, $state, $queries, $ctx }) => false
      },
      {
        path: "header.runsheet",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => "Runsheet"
      },
      {
        path: "leftMenu.subMenuParams",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined
      },
      {
        path: "upload.files",
        type: "private",
        variableType: "array",
        initFunc: ({ $props, $state, $queries, $ctx }) => []
      },
      {
        path: "upload22.files",
        type: "private",
        variableType: "array",
        initFunc: ({ $props, $state, $queries, $ctx }) =>
          (() => {
            try {
              return $state.editPosition3.value.attached_file == undefined ||
                $state.editPosition3.value.attached_file == null
                ? null
                : [
                    {
                      name: $state.editPosition3.value.attached_file,
                      download_url:
                        "https://wrtucmaotoeqjhalofcv.supabase.co/storage/v1/object/public/tasks/" +
                        $state.editPosition3.value.attached_file
                    }
                  ];
            } catch (e) {
              if (
                e instanceof TypeError ||
                e?.plasmicType === "PlasmicUndefinedDataError"
              ) {
                return [];
              }
              throw e;
            }
          })()
      },
      {
        path: "uploadFile.isOpen",
        type: "private",
        variableType: "boolean",
        initFunc: ({ $props, $state, $queries, $ctx }) =>
          (() => {
            try {
              return $state.newDoc;
            } catch (e) {
              if (
                e instanceof TypeError ||
                e?.plasmicType === "PlasmicUndefinedDataError"
              ) {
                return undefined;
              }
              throw e;
            }
          })()
      },
      {
        path: "upload5.files",
        type: "private",
        variableType: "array",
        initFunc: ({ $props, $state, $queries, $ctx }) => []
      },
      {
        path: "file[].fileId",
        type: "private",
        variableType: "number"
      },
      {
        path: "file[].type",
        type: "private",
        variableType: "text"
      },
      {
        path: "header.mois",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined
      },
      {
        path: "header.userClientId",
        type: "private",
        variableType: "number",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined
      },
      {
        path: "newDoc",
        type: "private",
        variableType: "boolean",
        initFunc: ({ $props, $state, $queries, $ctx }) => false
      },
      {
        path: "textAreaInput.value",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined
      }
    ],
    [$props, $ctx, $refs]
  );
  const $state = useDollarState(stateSpecs, {
    $props,
    $ctx,
    $queries: $queries,
    $refs
  });
  const dataSourcesCtx = usePlasmicDataSourceContext();
  const plasmicInvalidate = usePlasmicInvalidate();

  const new$Queries: Record<string, ReturnType<typeof usePlasmicDataOp>> = {
    poPositions: usePlasmicDataOp(() => {
      return {
        sourceId: "v6umJuHyep6kPNyCAJjouT",
        opId: "9a8b9715-636a-4e8a-9793-deffde568069",
        userArgs: {
          filters: [$state.header.userClientId]
        },
        cacheKey: `plasmic.$.9a8b9715-636a-4e8a-9793-deffde568069.$.`,
        invalidatedKeys: null,
        roleId: null
      };
    }),
    poFiles: usePlasmicDataOp(() => {
      return {
        sourceId: "v6umJuHyep6kPNyCAJjouT",
        opId: "b2df3309-3478-4ad4-8318-2e72183e7cbb",
        userArgs: {
          filters: [$state.header.userClientId]
        },
        cacheKey: `plasmic.$.b2df3309-3478-4ad4-8318-2e72183e7cbb.$.`,
        invalidatedKeys: null,
        roleId: null
      };
    })
  };
  if (Object.keys(new$Queries).some(k => new$Queries[k] !== $queries[k])) {
    setDollarQueries(new$Queries);

    $queries = new$Queries;
  }

  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariantsjdkNhxaWnKvk()
  });

  return (
    <React.Fragment>
      <Head>
        <meta name="twitter:card" content="summary" />
        <title key="title">{PlasmicPositions.pageMetadata.title}</title>
        <meta
          key="og:title"
          property="og:title"
          content={PlasmicPositions.pageMetadata.title}
        />
        <meta
          key="twitter:title"
          name="twitter:title"
          content={PlasmicPositions.pageMetadata.title}
        />
      </Head>

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div
        data-plasmic-name={"root"}
        data-plasmic-override={overrides.root}
        data-plasmic-root={true}
        data-plasmic-for-node={forNode}
        className={classNames(
          projectcss.all,
          projectcss.root_reset,
          projectcss.plasmic_default_styles,
          projectcss.plasmic_mixins,
          projectcss.plasmic_tokens,
          plasmic_antd_5_hostless_css.plasmic_tokens,
          sty.root
        )}
      >
        <Modal
          data-plasmic-name={"uploadFile"}
          data-plasmic-override={overrides.uploadFile}
          className={classNames("__wab_instance", sty.uploadFile)}
          closeOnBackdropClick={true}
          content={
            <React.Fragment>
              <Stack__
                as={"div"}
                data-plasmic-name={"files2"}
                data-plasmic-override={overrides.files2}
                hasGap={true}
                className={classNames(projectcss.all, sty.files2)}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__tcEnw
                  )}
                >
                  <React.Fragment>
                    <span
                      className={"plasmic_default__all plasmic_default__span"}
                      style={{ fontWeight: 700 }}
                    >
                      {"Fichier attach\u00e9"}
                    </span>
                  </React.Fragment>
                </div>
                <UploadWrapper
                  data-plasmic-name={"upload5"}
                  data-plasmic-override={overrides.upload5}
                  accept={""}
                  className={classNames("__wab_instance", sty.upload5)}
                  dragAndDropFiles={true}
                  files={generateStateValueProp($state, ["upload5", "files"])}
                  maxCount={1}
                  onFilesChange={async (...eventArgs: any) => {
                    generateStateOnChangeProp($state, [
                      "upload5",
                      "files"
                    ]).apply(null, eventArgs);
                  }}
                  showUploadList={true}
                >
                  <AntdButton
                    className={classNames("__wab_instance", sty.button__gtB8Q)}
                    size={"large"}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__jjAtC
                      )}
                    >
                      <React.Fragment>
                        <span
                          className={
                            "plasmic_default__all plasmic_default__span"
                          }
                          style={{ fontWeight: 700 }}
                        >
                          {"Importer ou d\u00e9poser un fichier"}
                        </span>
                      </React.Fragment>
                    </div>
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__j12DS
                      )}
                    >
                      {"10 Mb max"}
                    </div>
                  </AntdButton>
                </UploadWrapper>
              </Stack__>
              <Button
                className={classNames("__wab_instance", sty.button__ccxT4)}
                label={
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__oWo86
                    )}
                  >
                    {"Importer"}
                  </div>
                }
                submitsForm={false}
              />
            </React.Fragment>
          }
          footer={
            <div className={classNames(projectcss.all, sty.freeBox__ahk4C)} />
          }
          heading={
            <div
              data-plasmic-name={"frame1437254034"}
              data-plasmic-override={overrides.frame1437254034}
              className={classNames(projectcss.all, sty.frame1437254034)}
            >
              <div
                data-plasmic-name={"name16"}
                data-plasmic-override={overrides.name16}
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.name16
                )}
              >
                {"Nouveau document"}
              </div>
              <Stack__
                as={"div"}
                data-plasmic-name={"frame1437254035"}
                data-plasmic-override={overrides.frame1437254035}
                hasGap={true}
                className={classNames(projectcss.all, sty.frame1437254035)}
              >
                <LinkSimpleIcon
                  className={classNames(projectcss.all, sty.svg__vlLo1)}
                  role={"img"}
                />

                <XIcon
                  className={classNames(projectcss.all, sty.svg__cfGQh)}
                  onClick={async event => {
                    const $steps = {};

                    $steps["updateNewDoc"] = true
                      ? (() => {
                          const actionArgs = {
                            variable: {
                              objRoot: $state,
                              variablePath: ["newDoc"]
                            },
                            operation: 0,
                            value: false
                          };
                          return (({
                            variable,
                            value,
                            startIndex,
                            deleteCount
                          }) => {
                            if (!variable) {
                              return;
                            }
                            const { objRoot, variablePath } = variable;

                            $stateSet(objRoot, variablePath, value);
                            return value;
                          })?.apply(null, [actionArgs]);
                        })()
                      : undefined;
                    if (
                      $steps["updateNewDoc"] != null &&
                      typeof $steps["updateNewDoc"] === "object" &&
                      typeof $steps["updateNewDoc"].then === "function"
                    ) {
                      $steps["updateNewDoc"] = await $steps["updateNewDoc"];
                    }
                  }}
                  role={"img"}
                />
              </Stack__>
            </div>
          }
          isOpen={generateStateValueProp($state, ["uploadFile", "isOpen"])}
          noTrigger={true}
          onOpenChange={async (...eventArgs: any) => {
            generateStateOnChangeProp($state, ["uploadFile", "isOpen"]).apply(
              null,
              eventArgs
            );

            if (
              eventArgs.length > 1 &&
              eventArgs[1] &&
              eventArgs[1]._plasmic_state_init_
            ) {
              return;
            }

            (async val => {
              const $steps = {};

              $steps["updateNewDoc"] = true
                ? (() => {
                    const actionArgs = {
                      variable: {
                        objRoot: $state,
                        variablePath: ["newDoc"]
                      },
                      operation: 4
                    };
                    return (({ variable, value, startIndex, deleteCount }) => {
                      if (!variable) {
                        return;
                      }
                      const { objRoot, variablePath } = variable;

                      const oldValue = $stateGet(objRoot, variablePath);
                      $stateSet(objRoot, variablePath, !oldValue);
                      return !oldValue;
                    })?.apply(null, [actionArgs]);
                  })()
                : undefined;
              if (
                $steps["updateNewDoc"] != null &&
                typeof $steps["updateNewDoc"] === "object" &&
                typeof $steps["updateNewDoc"].then === "function"
              ) {
                $steps["updateNewDoc"] = await $steps["updateNewDoc"];
              }
            }).apply(null, eventArgs);
          }}
          showFooter={false}
          trigger={null}
        />

        <Modal
          data-plasmic-name={"createPosition"}
          data-plasmic-override={overrides.createPosition}
          className={classNames("__wab_instance", sty.createPosition)}
          closeOnBackdropClick={false}
          content={
            <React.Fragment>
              {(() => {
                const child$Props = {
                  className: classNames("__wab_instance", sty.createPosition2),
                  extendedOnValuesChange: async (...eventArgs: any) => {
                    generateStateOnChangePropForCodeComponents(
                      $state,
                      "value",
                      ["createPosition2", "value"],
                      FormWrapper_Helpers
                    ).apply(null, eventArgs);
                  },
                  formItems: [
                    { label: "Name", name: "name", inputType: "Text" },
                    {
                      label: "Message",
                      name: "message",
                      inputType: "Text Area"
                    }
                  ],
                  labelCol: { span: 8, horizontalOnly: true },
                  layout: "vertical",
                  mode: "advanced",
                  onFinish: async values => {
                    const $steps = {};

                    $steps["supabaseUploadFile"] =
                      $state.createPosition2.value.attached_file.length > 0
                        ? (() => {
                            const actionArgs = {
                              dataOp: {
                                sourceId: "m24ybmDtQiMCnPaXvSSHEf",
                                opId: "a999c0b8-8d97-4075-9a63-076ae0e83ac7",
                                userArgs: {
                                  path: [
                                    $state.createPosition2.value
                                      .attached_file[0].name
                                  ],
                                  content: [
                                    $state.createPosition2.value
                                      .attached_file[0].contents
                                  ],
                                  contentType: [
                                    $state.createPosition2.value
                                      .attached_file[0].type
                                  ]
                                },
                                cacheKey: null,
                                invalidatedKeys: [],
                                roleId: null
                              }
                            };
                            return (async ({ dataOp, continueOnError }) => {
                              try {
                                const response = await executePlasmicDataOp(
                                  dataOp,
                                  {
                                    userAuthToken:
                                      dataSourcesCtx?.userAuthToken,
                                    user: dataSourcesCtx?.user
                                  }
                                );
                                await plasmicInvalidate(dataOp.invalidatedKeys);
                                return response;
                              } catch (e) {
                                if (!continueOnError) {
                                  throw e;
                                }
                                return e;
                              }
                            })?.apply(null, [actionArgs]);
                          })()
                        : undefined;
                    if (
                      $steps["supabaseUploadFile"] != null &&
                      typeof $steps["supabaseUploadFile"] === "object" &&
                      typeof $steps["supabaseUploadFile"].then === "function"
                    ) {
                      $steps["supabaseUploadFile"] = await $steps[
                        "supabaseUploadFile"
                      ];
                    }

                    $steps["createFile"] = true
                      ? (() => {
                          const actionArgs = {
                            dataOp: {
                              sourceId: "v6umJuHyep6kPNyCAJjouT",
                              opId: "aae03845-781b-4a5e-b1bd-b60f35410f1d",
                              userArgs: {
                                variables: [
                                  $steps.supabaseUploadFile?.path || null,
                                  $state.header.userClientId
                                ]
                              },
                              cacheKey: null,
                              invalidatedKeys: [],
                              roleId: null
                            }
                          };
                          return (async ({ dataOp, continueOnError }) => {
                            try {
                              const response = await executePlasmicDataOp(
                                dataOp,
                                {
                                  userAuthToken: dataSourcesCtx?.userAuthToken,
                                  user: dataSourcesCtx?.user
                                }
                              );
                              await plasmicInvalidate(dataOp.invalidatedKeys);
                              return response;
                            } catch (e) {
                              if (!continueOnError) {
                                throw e;
                              }
                              return e;
                            }
                          })?.apply(null, [actionArgs]);
                        })()
                      : undefined;
                    if (
                      $steps["createFile"] != null &&
                      typeof $steps["createFile"] === "object" &&
                      typeof $steps["createFile"].then === "function"
                    ) {
                      $steps["createFile"] = await $steps["createFile"];
                    }

                    $steps["createPosition"] = true
                      ? (() => {
                          const actionArgs = {
                            dataOp: {
                              sourceId: "v6umJuHyep6kPNyCAJjouT",
                              opId: "3d5134f6-cb2c-4ece-a288-28dce8234935",
                              userArgs: {
                                variables: [
                                  $steps.createFile
                                    ? $steps.createFile.data[0].id
                                    : null,
                                  $state.createPosition2.value.name,
                                  $state.createPosition2.value.references,
                                  $state.createPosition2.value.sector,
                                  $state.createPosition2.value.specific_name,
                                  new Date().toISOString(),
                                  new Date().toISOString(),
                                  $ctx.SupabaseUser.user == undefined
                                    ? null
                                    : $ctx.SupabaseUser.user.id,
                                  $state.header.userClientId
                                ]
                              },
                              cacheKey: null,
                              invalidatedKeys: [
                                "9a8b9715-636a-4e8a-9793-deffde568069"
                              ],
                              roleId: null
                            }
                          };
                          return (async ({ dataOp, continueOnError }) => {
                            try {
                              const response = await executePlasmicDataOp(
                                dataOp,
                                {
                                  userAuthToken: dataSourcesCtx?.userAuthToken,
                                  user: dataSourcesCtx?.user
                                }
                              );
                              await plasmicInvalidate(dataOp.invalidatedKeys);
                              return response;
                            } catch (e) {
                              if (!continueOnError) {
                                throw e;
                              }
                              return e;
                            }
                          })?.apply(null, [actionArgs]);
                        })()
                      : undefined;
                    if (
                      $steps["createPosition"] != null &&
                      typeof $steps["createPosition"] === "object" &&
                      typeof $steps["createPosition"].then === "function"
                    ) {
                      $steps["createPosition"] = await $steps["createPosition"];
                    }

                    $steps["invokeGlobalAction"] = true
                      ? (() => {
                          const actionArgs = {
                            args: [
                              "success",
                              "Position cr\u00e9\u00e9e",
                              undefined,
                              undefined,
                              "bottom"
                            ]
                          };
                          return $globalActions[
                            "plasmic-antd5-config-provider.showNotification"
                          ]?.apply(null, [...actionArgs.args]);
                        })()
                      : undefined;
                    if (
                      $steps["invokeGlobalAction"] != null &&
                      typeof $steps["invokeGlobalAction"] === "object" &&
                      typeof $steps["invokeGlobalAction"].then === "function"
                    ) {
                      $steps["invokeGlobalAction"] = await $steps[
                        "invokeGlobalAction"
                      ];
                    }

                    $steps["updateNewOperation"] = true
                      ? (() => {
                          const actionArgs = {
                            variable: {
                              objRoot: $state,
                              variablePath: ["newPosition"]
                            },
                            operation: 0,
                            value: false
                          };
                          return (({
                            variable,
                            value,
                            startIndex,
                            deleteCount
                          }) => {
                            if (!variable) {
                              return;
                            }
                            const { objRoot, variablePath } = variable;

                            $stateSet(objRoot, variablePath, value);
                            return value;
                          })?.apply(null, [actionArgs]);
                        })()
                      : undefined;
                    if (
                      $steps["updateNewOperation"] != null &&
                      typeof $steps["updateNewOperation"] === "object" &&
                      typeof $steps["updateNewOperation"].then === "function"
                    ) {
                      $steps["updateNewOperation"] = await $steps[
                        "updateNewOperation"
                      ];
                    }
                  },
                  onFinishFailed: async data => {
                    const $steps = {};

                    $steps["invokeGlobalAction"] = true
                      ? (() => {
                          const actionArgs = {
                            args: ["error", "Erreur", ``, undefined, "bottom"]
                          };
                          return $globalActions[
                            "plasmic-antd5-config-provider.showNotification"
                          ]?.apply(null, [...actionArgs.args]);
                        })()
                      : undefined;
                    if (
                      $steps["invokeGlobalAction"] != null &&
                      typeof $steps["invokeGlobalAction"] === "object" &&
                      typeof $steps["invokeGlobalAction"].then === "function"
                    ) {
                      $steps["invokeGlobalAction"] = await $steps[
                        "invokeGlobalAction"
                      ];
                    }
                  },
                  onIsSubmittingChange: async (...eventArgs: any) => {
                    generateStateOnChangePropForCodeComponents(
                      $state,
                      "isSubmitting",
                      ["createPosition2", "isSubmitting"],
                      FormWrapper_Helpers
                    ).apply(null, eventArgs);
                  },
                  ref: ref => {
                    $refs["createPosition2"] = ref;
                  },
                  submitSlot: null,
                  wrapperCol: { span: 16, horizontalOnly: true }
                };
                initializeCodeComponentStates(
                  $state,
                  [
                    {
                      name: "value",
                      plasmicStateName: "createPosition2.value"
                    },
                    {
                      name: "isSubmitting",
                      plasmicStateName: "createPosition2.isSubmitting"
                    }
                  ],
                  [],
                  FormWrapper_Helpers ?? {},
                  child$Props
                );

                return (
                  <FormWrapper
                    data-plasmic-name={"createPosition2"}
                    data-plasmic-override={overrides.createPosition2}
                    {...child$Props}
                  >
                    <FormItemWrapper
                      className={classNames(
                        "__wab_instance",
                        sty.formField__pdYpq
                      )}
                      initialValue={undefined}
                      label={
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__nWmG
                          )}
                        >
                          {"Nom"}
                        </div>
                      }
                      name={"name"}
                      rules={[{ ruleType: "required", message: "Lieu requis" }]}
                    >
                      {(() => {
                        const child$Props = {
                          className: classNames("__wab_instance", sty.input),
                          onChange: async (...eventArgs: any) => {
                            generateStateOnChangePropForCodeComponents(
                              $state,
                              "value",
                              ["input", "value"],
                              AntdInput_Helpers
                            ).apply(null, eventArgs);
                          },
                          placeholder: "Titre",
                          size: "large",
                          value: generateStateValueProp($state, [
                            "input",
                            "value"
                          ])
                        };
                        initializeCodeComponentStates(
                          $state,
                          [
                            {
                              name: "value",
                              plasmicStateName: "input.value"
                            }
                          ],
                          [],
                          AntdInput_Helpers ?? {},
                          child$Props
                        );

                        return (
                          <AntdInput
                            data-plasmic-name={"input"}
                            data-plasmic-override={overrides.input}
                            {...child$Props}
                          />
                        );
                      })()}
                    </FormItemWrapper>
                    <FormItemWrapper
                      className={classNames(
                        "__wab_instance",
                        sty.formField__wqrMk
                      )}
                      initialValue={undefined}
                      label={
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__d37I3
                          )}
                        >
                          {"Libell\u00e9"}
                        </div>
                      }
                      name={"specific_name"}
                    >
                      {(() => {
                        const child$Props = {
                          autoSize: false,
                          className: classNames("__wab_instance", sty.textArea),
                          onChange: async (...eventArgs: any) => {
                            generateStateOnChangePropForCodeComponents(
                              $state,
                              "value",
                              ["textArea", "value"],
                              AntdTextArea_Helpers
                            ).apply(null, eventArgs);
                          },
                          value: generateStateValueProp($state, [
                            "textArea",
                            "value"
                          ])
                        };
                        initializeCodeComponentStates(
                          $state,
                          [
                            {
                              name: "value",
                              plasmicStateName: "textArea.value"
                            }
                          ],
                          [],
                          AntdTextArea_Helpers ?? {},
                          child$Props
                        );

                        return (
                          <AntdTextArea
                            data-plasmic-name={"textArea"}
                            data-plasmic-override={overrides.textArea}
                            {...child$Props}
                          />
                        );
                      })()}
                    </FormItemWrapper>
                    <FormItemWrapper
                      data-plasmic-name={"precisions2"}
                      data-plasmic-override={overrides.precisions2}
                      className={classNames("__wab_instance", sty.precisions2)}
                      label={
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__fopDt
                          )}
                        >
                          {"Secteur"}
                        </div>
                      }
                      name={"sector"}
                    >
                      <AntdSelect
                        data-plasmic-name={"select9"}
                        data-plasmic-override={overrides.select9}
                        bordered={true}
                        className={classNames("__wab_instance", sty.select9)}
                        defaultStylesClassName={classNames(
                          projectcss.root_reset,
                          projectcss.plasmic_default_styles,
                          projectcss.plasmic_mixins,
                          projectcss.plasmic_tokens,
                          plasmic_antd_5_hostless_css.plasmic_tokens
                        )}
                        onChange={async (...eventArgs: any) => {
                          generateStateOnChangeProp($state, [
                            "select9",
                            "value"
                          ]).apply(null, eventArgs);
                        }}
                        options={(() => {
                          try {
                            return [
                              {
                                value: "sector1",
                                label: "Secteur 1"
                              },
                              {
                                value: "sector2",
                                label: "Secteur 2"
                              }
                            ];
                          } catch (e) {
                            if (
                              e instanceof TypeError ||
                              e?.plasmicType === "PlasmicUndefinedDataError"
                            ) {
                              return [];
                            }
                            throw e;
                          }
                        })()}
                        placeholder={
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__b6O3L
                            )}
                          >
                            {"S\u00e9lectionner"}
                          </div>
                        }
                        popupScopeClassName={sty["select9__popup"]}
                        size={"middle"}
                        value={generateStateValueProp($state, [
                          "select9",
                          "value"
                        ])}
                      />
                    </FormItemWrapper>
                    <FormItemWrapper
                      data-plasmic-name={"generalDescription2"}
                      data-plasmic-override={overrides.generalDescription2}
                      className={classNames(
                        "__wab_instance",
                        sty.generalDescription2
                      )}
                      label={
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__xJf4E
                          )}
                        >
                          {"R\u00e9f\u00e9rences et dimensionnement"}
                        </div>
                      }
                      name={"references"}
                    >
                      <TextAreaInput
                        data-plasmic-name={"textAreaInput"}
                        data-plasmic-override={overrides.textAreaInput}
                        className={classNames(
                          "__wab_instance",
                          sty.textAreaInput
                        )}
                        onChange={async (...eventArgs: any) => {
                          generateStateOnChangeProp($state, [
                            "textAreaInput",
                            "value"
                          ]).apply(null, eventArgs);

                          if (
                            eventArgs.length > 1 &&
                            eventArgs[1] &&
                            eventArgs[1]._plasmic_state_init_
                          ) {
                            return;
                          }
                        }}
                        placeholder={"R\u00e9f\u00e9rences et dimensionnement"}
                      />
                    </FormItemWrapper>
                    <FormItemWrapper
                      className={classNames(
                        "__wab_instance",
                        sty.formField__kOq45
                      )}
                      label={
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__nSdK
                          )}
                        >
                          {"Photo de situation"}
                        </div>
                      }
                      name={"attached_file"}
                    >
                      <UploadWrapper
                        data-plasmic-name={"upload"}
                        data-plasmic-override={overrides.upload}
                        accept={""}
                        className={classNames("__wab_instance", sty.upload)}
                        dragAndDropFiles={true}
                        files={generateStateValueProp($state, [
                          "upload",
                          "files"
                        ])}
                        maxCount={1}
                        onFilesChange={async (...eventArgs: any) => {
                          generateStateOnChangeProp($state, [
                            "upload",
                            "files"
                          ]).apply(null, eventArgs);
                        }}
                        showUploadList={true}
                      >
                        <AntdButton
                          className={classNames(
                            "__wab_instance",
                            sty.button__fq4Di
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__hbaKz
                            )}
                          >
                            <React.Fragment>
                              <span
                                className={
                                  "plasmic_default__all plasmic_default__span"
                                }
                                style={{ fontWeight: 700 }}
                              >
                                {"Importer ou d\u00e9poser un fichier"}
                              </span>
                            </React.Fragment>
                          </div>
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__s9Gpx
                            )}
                          >
                            {"10 Mb max"}
                          </div>
                        </AntdButton>
                      </UploadWrapper>
                    </FormItemWrapper>
                    <Button
                      className={classNames(
                        "__wab_instance",
                        sty.button__qtlEv
                      )}
                      label={
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__vqRPe
                          )}
                        >
                          {"Cr\u00e9er"}
                        </div>
                      }
                      submitsForm={true}
                    />
                  </FormWrapper>
                );
              })()}
              <Stack__
                as={"div"}
                data-plasmic-name={"content"}
                data-plasmic-override={overrides.content}
                hasGap={true}
                className={classNames(projectcss.all, sty.content)}
              >
                <TextInput
                  data-plasmic-name={"titre"}
                  data-plasmic-override={overrides.titre}
                  className={classNames("__wab_instance", sty.titre)}
                  isMulti={false}
                  label={"Titre*"}
                  placeholder={"Titre*"}
                  showIcon={false}
                  showLabel={true}
                  state={"default"}
                  text={``}
                  type={"text"}
                />

                <SitexTextInput
                  data-plasmic-name={"texinput2"}
                  data-plasmic-override={overrides.texinput2}
                  className={classNames("__wab_instance", sty.texinput2)}
                  initialValue={generateStateValueProp($state, [
                    "texinput2",
                    "value"
                  ])}
                  inputClassName={classNames({
                    [sty["pcls_sapSxOU2y7eZ"]]: true
                  })}
                  onTextChange={async (...eventArgs: any) => {
                    generateStateOnChangeProp($state, [
                      "texinput2",
                      "value"
                    ]).apply(null, eventArgs);
                  }}
                  onValidationChange={async (...eventArgs: any) => {
                    generateStateOnChangeProp($state, [
                      "texinput2",
                      "isInputValid"
                    ]).apply(null, eventArgs);
                  }}
                  placeholder={"Titre*"}
                  prefixedText={"Titre*"}
                  required={true}
                  type={"text"}
                />

                <Stack__
                  as={"div"}
                  data-plasmic-name={"date"}
                  data-plasmic-override={overrides.date}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.date)}
                >
                  <div
                    data-plasmic-name={"label6"}
                    data-plasmic-override={overrides.label6}
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.label6
                    )}
                  >
                    {"Date et heure de d\u00e9but"}
                  </div>
                  {(() => {
                    const child$Props = {
                      allowClear: true,
                      className: classNames("__wab_instance", sty.timePicker),
                      onChange: async (...eventArgs: any) => {
                        generateStateOnChangePropForCodeComponents(
                          $state,
                          "value",
                          ["timePicker", "value"],
                          AntdDatePicker_Helpers
                        ).apply(null, eventArgs);
                      },
                      popupScopeClassName: sty["timePicker__datePickerPopup"],
                      showTime: true,
                      value: generateStateValueProp($state, [
                        "timePicker",
                        "value"
                      ])
                    };
                    initializeCodeComponentStates(
                      $state,
                      [
                        {
                          name: "value",
                          plasmicStateName: "timePicker.value"
                        }
                      ],
                      [],
                      AntdDatePicker_Helpers ?? {},
                      child$Props
                    );

                    return (
                      <AntdDatePicker
                        data-plasmic-name={"timePicker"}
                        data-plasmic-override={overrides.timePicker}
                        {...child$Props}
                      />
                    );
                  })()}
                </Stack__>
                <DropDown
                  data-plasmic-name={"type"}
                  data-plasmic-override={overrides.type}
                  check={false}
                  className={classNames("__wab_instance", sty.type)}
                  label={"Type"}
                  options={["Default", "Special"]}
                  showLabel={true}
                  state={"default"}
                  type={"default"}
                />

                <TextInput
                  data-plasmic-name={"budget"}
                  data-plasmic-override={overrides.budget}
                  className={classNames("__wab_instance", sty.budget)}
                  isMulti={false}
                  label={"Budget"}
                  placeholder={"\u20ac"}
                  showIcon={false}
                  showLabel={true}
                  state={"default"}
                  text={""}
                  type={"text"}
                />

                <TextInput
                  data-plasmic-name={"comments"}
                  data-plasmic-override={overrides.comments}
                  className={classNames("__wab_instance", sty.comments)}
                  isMulti={false}
                  label={"Commentaires"}
                  placeholder={"Commentaires"}
                  showIcon={false}
                  showLabel={true}
                  state={"Placeholder"}
                  text={""}
                  type={"TextArea"}
                />

                {false ? (
                  <Stack__
                    as={"div"}
                    data-plasmic-name={"input5"}
                    data-plasmic-override={overrides.input5}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.input5)}
                  >
                    <div
                      data-plasmic-name={"name2"}
                      data-plasmic-override={overrides.name2}
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.name2
                      )}
                    >
                      {"Dispositif"}
                    </div>
                    <Stack__
                      as={"div"}
                      data-plasmic-name={"datePickerWeb"}
                      data-plasmic-override={overrides.datePickerWeb}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.datePickerWeb)}
                    >
                      <Stack__
                        as={"div"}
                        data-plasmic-name={"inputSelect"}
                        data-plasmic-override={overrides.inputSelect}
                        hasGap={true}
                        className={classNames(projectcss.all, sty.inputSelect)}
                      >
                        {false ? (
                          <div
                            data-plasmic-name={"signedByBaseFieldGroupSmall"}
                            data-plasmic-override={
                              overrides.signedByBaseFieldGroupSmall
                            }
                            className={classNames(
                              projectcss.all,
                              sty.signedByBaseFieldGroupSmall
                            )}
                          />
                        ) : null}
                        <Stack__
                          as={"div"}
                          data-plasmic-name={"endDateCalendar"}
                          data-plasmic-override={overrides.endDateCalendar}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.endDateCalendar
                          )}
                        >
                          {false ? (
                            <div
                              data-plasmic-name={"inputElementTextField"}
                              data-plasmic-override={
                                overrides.inputElementTextField
                              }
                              className={classNames(
                                projectcss.all,
                                sty.inputElementTextField
                              )}
                            >
                              {false ? (
                                <div
                                  data-plasmic-name={
                                    "signedByBaseInputElementTextFieldSmallEnabled"
                                  }
                                  data-plasmic-override={
                                    overrides.signedByBaseInputElementTextFieldSmallEnabled
                                  }
                                  className={classNames(
                                    projectcss.all,
                                    sty.signedByBaseInputElementTextFieldSmallEnabled
                                  )}
                                />
                              ) : null}
                              {false ? (
                                <div
                                  data-plasmic-name={"leadingArtworkContainer"}
                                  data-plasmic-override={
                                    overrides.leadingArtworkContainer
                                  }
                                  className={classNames(
                                    projectcss.all,
                                    sty.leadingArtworkContainer
                                  )}
                                >
                                  <div
                                    data-plasmic-name={"leadingArtwork"}
                                    data-plasmic-override={
                                      overrides.leadingArtwork
                                    }
                                    className={classNames(
                                      projectcss.all,
                                      sty.leadingArtwork
                                    )}
                                  >
                                    {false ? (
                                      <OutlinedIcon
                                        className={classNames(
                                          projectcss.all,
                                          sty.svg__utdc7
                                        )}
                                        role={"img"}
                                      />
                                    ) : null}
                                    <FilledIcon
                                      className={classNames(
                                        projectcss.all,
                                        sty.svg__jSrS
                                      )}
                                      role={"img"}
                                    />
                                  </div>
                                </div>
                              ) : null}
                              {false ? (
                                <div
                                  data-plasmic-name={"leadingLabelContainer"}
                                  data-plasmic-override={
                                    overrides.leadingLabelContainer
                                  }
                                  className={classNames(
                                    projectcss.all,
                                    sty.leadingLabelContainer
                                  )}
                                >
                                  <div
                                    data-plasmic-name={"leadingLabel"}
                                    data-plasmic-override={
                                      overrides.leadingLabel
                                    }
                                    className={classNames(
                                      projectcss.all,
                                      sty.leadingLabel
                                    )}
                                  >
                                    {false ? (
                                      <div
                                        data-plasmic-name={
                                          "signedByBaseTypographyLabelSmall"
                                        }
                                        data-plasmic-override={
                                          overrides.signedByBaseTypographyLabelSmall
                                        }
                                        className={classNames(
                                          projectcss.all,
                                          sty.signedByBaseTypographyLabelSmall
                                        )}
                                      />
                                    ) : null}
                                    <div
                                      data-plasmic-name={"text5"}
                                      data-plasmic-override={overrides.text5}
                                      className={classNames(
                                        projectcss.all,
                                        projectcss.__wab_text,
                                        sty.text5
                                      )}
                                    >
                                      {"$"}
                                    </div>
                                    {false ? (
                                      <div
                                        data-plasmic-name={"spacer"}
                                        data-plasmic-override={overrides.spacer}
                                        className={classNames(
                                          projectcss.all,
                                          sty.spacer
                                        )}
                                      />
                                    ) : null}
                                  </div>
                                </div>
                              ) : null}
                              <div
                                data-plasmic-name={"inputElementContentText"}
                                data-plasmic-override={
                                  overrides.inputElementContentText
                                }
                                className={classNames(
                                  projectcss.all,
                                  sty.inputElementContentText
                                )}
                              >
                                {false ? (
                                  <div
                                    data-plasmic-name={
                                      "signedByBaseInputElementContentTextSmallOff"
                                    }
                                    data-plasmic-override={
                                      overrides.signedByBaseInputElementContentTextSmallOff
                                    }
                                    className={classNames(
                                      projectcss.all,
                                      sty.signedByBaseInputElementContentTextSmallOff
                                    )}
                                  />
                                ) : null}
                                <div
                                  data-plasmic-name={"text6"}
                                  data-plasmic-override={overrides.text6}
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.__wab_text,
                                    sty.text6
                                  )}
                                >
                                  {"MM/DD/YYYY"}
                                </div>
                              </div>
                              {false ? (
                                <div
                                  data-plasmic-name={"trailingLabelEnhancer"}
                                  data-plasmic-override={
                                    overrides.trailingLabelEnhancer
                                  }
                                  className={classNames(
                                    projectcss.all,
                                    sty.trailingLabelEnhancer
                                  )}
                                >
                                  {false ? (
                                    <div
                                      data-plasmic-name={"trailingLabel"}
                                      data-plasmic-override={
                                        overrides.trailingLabel
                                      }
                                      className={classNames(
                                        projectcss.all,
                                        sty.trailingLabel
                                      )}
                                    >
                                      {false ? (
                                        <div
                                          data-plasmic-name={
                                            "signedByBaseTypographyLabelSmall2"
                                          }
                                          data-plasmic-override={
                                            overrides.signedByBaseTypographyLabelSmall2
                                          }
                                          className={classNames(
                                            projectcss.all,
                                            sty.signedByBaseTypographyLabelSmall2
                                          )}
                                        />
                                      ) : null}
                                      <div
                                        data-plasmic-name={"text7"}
                                        data-plasmic-override={overrides.text7}
                                        className={classNames(
                                          projectcss.all,
                                          projectcss.__wab_text,
                                          sty.text7
                                        )}
                                      >
                                        {"USD"}
                                      </div>
                                      {false ? (
                                        <div
                                          data-plasmic-name={"spacer2"}
                                          data-plasmic-override={
                                            overrides.spacer2
                                          }
                                          className={classNames(
                                            projectcss.all,
                                            sty.spacer2
                                          )}
                                        />
                                      ) : null}
                                    </div>
                                  ) : null}
                                </div>
                              ) : null}
                              {false ? (
                                <div
                                  data-plasmic-name={"trailingArtworkContainer"}
                                  data-plasmic-override={
                                    overrides.trailingArtworkContainer
                                  }
                                  className={classNames(
                                    projectcss.all,
                                    sty.trailingArtworkContainer
                                  )}
                                >
                                  <div
                                    data-plasmic-name={"trailingArtwork"}
                                    data-plasmic-override={
                                      overrides.trailingArtwork
                                    }
                                    className={classNames(
                                      projectcss.all,
                                      sty.trailingArtwork
                                    )}
                                  >
                                    {false ? (
                                      <OutlinedIcon
                                        className={classNames(
                                          projectcss.all,
                                          sty.svg__p1K3C
                                        )}
                                        role={"img"}
                                      />
                                    ) : null}
                                    <FilledIcon
                                      className={classNames(
                                        projectcss.all,
                                        sty.svg__jnDus
                                      )}
                                      role={"img"}
                                    />
                                  </div>
                                </div>
                              ) : null}
                            </div>
                          ) : null}
                          <div
                            data-plasmic-name={"calendar"}
                            data-plasmic-override={overrides.calendar}
                            className={classNames(projectcss.all, sty.calendar)}
                          >
                            {false ? (
                              <div
                                data-plasmic-name={
                                  "signedByBaseInputElementSelectXSmallWebSingleDefaultEnabled"
                                }
                                data-plasmic-override={
                                  overrides.signedByBaseInputElementSelectXSmallWebSingleDefaultEnabled
                                }
                                className={classNames(
                                  projectcss.all,
                                  sty.signedByBaseInputElementSelectXSmallWebSingleDefaultEnabled
                                )}
                              />
                            ) : null}
                            <Stack__
                              as={"div"}
                              data-plasmic-name={"leadingArtworkContainer2"}
                              data-plasmic-override={
                                overrides.leadingArtworkContainer2
                              }
                              hasGap={true}
                              className={classNames(
                                projectcss.all,
                                sty.leadingArtworkContainer2
                              )}
                            >
                              <div
                                data-plasmic-name={"text8"}
                                data-plasmic-override={overrides.text8}
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text8
                                )}
                              >
                                {"S\u00e9lectionner..."}
                              </div>
                            </Stack__>
                            {false ? (
                              <div
                                data-plasmic-name={"leadingLabelContainer2"}
                                data-plasmic-override={
                                  overrides.leadingLabelContainer2
                                }
                                className={classNames(
                                  projectcss.all,
                                  sty.leadingLabelContainer2
                                )}
                              >
                                <div
                                  data-plasmic-name={"leadingLabel2"}
                                  data-plasmic-override={
                                    overrides.leadingLabel2
                                  }
                                  className={classNames(
                                    projectcss.all,
                                    sty.leadingLabel2
                                  )}
                                >
                                  {false ? (
                                    <div
                                      data-plasmic-name={
                                        "signedByBaseTypographyLabelXSmall"
                                      }
                                      data-plasmic-override={
                                        overrides.signedByBaseTypographyLabelXSmall
                                      }
                                      className={classNames(
                                        projectcss.all,
                                        sty.signedByBaseTypographyLabelXSmall
                                      )}
                                    />
                                  ) : null}
                                  <div
                                    data-plasmic-name={"text9"}
                                    data-plasmic-override={overrides.text9}
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.__wab_text,
                                      sty.text9
                                    )}
                                  >
                                    {"$"}
                                  </div>
                                  {false ? (
                                    <div
                                      data-plasmic-name={"spacer3"}
                                      data-plasmic-override={overrides.spacer3}
                                      className={classNames(
                                        projectcss.all,
                                        sty.spacer3
                                      )}
                                    />
                                  ) : null}
                                </div>
                              </div>
                            ) : null}
                            {false ? (
                              <div
                                data-plasmic-name={"inputElementContentText2"}
                                data-plasmic-override={
                                  overrides.inputElementContentText2
                                }
                                className={classNames(
                                  projectcss.all,
                                  sty.inputElementContentText2
                                )}
                              >
                                {false ? (
                                  <div
                                    data-plasmic-name={
                                      "signedByBaseInputElementContentTextXSmallWebOff"
                                    }
                                    data-plasmic-override={
                                      overrides.signedByBaseInputElementContentTextXSmallWebOff
                                    }
                                    className={classNames(
                                      projectcss.all,
                                      sty.signedByBaseInputElementContentTextXSmallWebOff
                                    )}
                                  />
                                ) : null}
                                <div
                                  data-plasmic-name={"text10"}
                                  data-plasmic-override={overrides.text10}
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.__wab_text,
                                    sty.text10
                                  )}
                                >
                                  {"Jr"}
                                </div>
                              </div>
                            ) : null}
                            {false ? (
                              <div
                                data-plasmic-name={"trailingLabelEnhancer2"}
                                data-plasmic-override={
                                  overrides.trailingLabelEnhancer2
                                }
                                className={classNames(
                                  projectcss.all,
                                  sty.trailingLabelEnhancer2
                                )}
                              >
                                {false ? (
                                  <div
                                    data-plasmic-name={"trailingLabel2"}
                                    data-plasmic-override={
                                      overrides.trailingLabel2
                                    }
                                    className={classNames(
                                      projectcss.all,
                                      sty.trailingLabel2
                                    )}
                                  >
                                    {false ? (
                                      <div
                                        data-plasmic-name={
                                          "signedByBaseTypographyLabelXSmall2"
                                        }
                                        data-plasmic-override={
                                          overrides.signedByBaseTypographyLabelXSmall2
                                        }
                                        className={classNames(
                                          projectcss.all,
                                          sty.signedByBaseTypographyLabelXSmall2
                                        )}
                                      />
                                    ) : null}
                                    <div
                                      data-plasmic-name={"text11"}
                                      data-plasmic-override={overrides.text11}
                                      className={classNames(
                                        projectcss.all,
                                        projectcss.__wab_text,
                                        sty.text11
                                      )}
                                    >
                                      {"USD"}
                                    </div>
                                    {false ? (
                                      <div
                                        data-plasmic-name={"spacer4"}
                                        data-plasmic-override={
                                          overrides.spacer4
                                        }
                                        className={classNames(
                                          projectcss.all,
                                          sty.spacer4
                                        )}
                                      />
                                    ) : null}
                                  </div>
                                ) : null}
                              </div>
                            ) : null}
                            {false ? (
                              <div
                                data-plasmic-name={"trailingArtworkContainer2"}
                                data-plasmic-override={
                                  overrides.trailingArtworkContainer2
                                }
                                className={classNames(
                                  projectcss.all,
                                  sty.trailingArtworkContainer2
                                )}
                              >
                                <div
                                  data-plasmic-name={"trailingArtwork2"}
                                  data-plasmic-override={
                                    overrides.trailingArtwork2
                                  }
                                  className={classNames(
                                    projectcss.all,
                                    sty.trailingArtwork2
                                  )}
                                >
                                  {false ? (
                                    <Outlined2Icon
                                      className={classNames(
                                        projectcss.all,
                                        sty.svg__hakX
                                      )}
                                      role={"img"}
                                    />
                                  ) : null}
                                  <Filled2Icon
                                    className={classNames(
                                      projectcss.all,
                                      sty.svg__vhOin
                                    )}
                                    role={"img"}
                                  />
                                </div>
                              </div>
                            ) : null}
                            <div
                              data-plasmic-name={"selectIndicatorContainer"}
                              data-plasmic-override={
                                overrides.selectIndicatorContainer
                              }
                              className={classNames(
                                projectcss.all,
                                sty.selectIndicatorContainer
                              )}
                            >
                              <div
                                data-plasmic-name={"chevronIcon"}
                                data-plasmic-override={overrides.chevronIcon}
                                className={classNames(
                                  projectcss.all,
                                  sty.chevronIcon
                                )}
                              >
                                {false ? (
                                  <Outlined3Icon
                                    className={classNames(
                                      projectcss.all,
                                      sty.svg__zJmKd
                                    )}
                                    role={"img"}
                                  />
                                ) : null}
                                <Outlined3Icon
                                  className={classNames(
                                    projectcss.all,
                                    sty.svg___8KS6
                                  )}
                                  role={"img"}
                                />
                              </div>
                            </div>
                          </div>
                        </Stack__>
                        {false ? (
                          <Stack__
                            as={"div"}
                            data-plasmic-name={"inputElementHint"}
                            data-plasmic-override={overrides.inputElementHint}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.inputElementHint
                            )}
                          >
                            {false ? (
                              <div
                                data-plasmic-name={"heart"}
                                data-plasmic-override={overrides.heart}
                                className={classNames(
                                  projectcss.all,
                                  sty.heart
                                )}
                              >
                                {false ? (
                                  <Outlined4Icon
                                    className={classNames(
                                      projectcss.all,
                                      sty.svg__xAkqa
                                    )}
                                    role={"img"}
                                  />
                                ) : null}
                                <Filled3Icon
                                  className={classNames(
                                    projectcss.all,
                                    sty.svg__zExYk
                                  )}
                                  role={"img"}
                                />
                              </div>
                            ) : null}
                            <div
                              data-plasmic-name={"hint"}
                              data-plasmic-override={overrides.hint}
                              className={classNames(projectcss.all, sty.hint)}
                            >
                              {false ? (
                                <div
                                  data-plasmic-name={
                                    "signedByBaseTypographyParagraphSmall"
                                  }
                                  data-plasmic-override={
                                    overrides.signedByBaseTypographyParagraphSmall
                                  }
                                  className={classNames(
                                    projectcss.all,
                                    sty.signedByBaseTypographyParagraphSmall
                                  )}
                                />
                              ) : null}
                              <div
                                data-plasmic-name={"text12"}
                                data-plasmic-override={overrides.text12}
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text12
                                )}
                              >
                                {"MM/DD/YYYY"}
                              </div>
                              {false ? (
                                <div
                                  data-plasmic-name={"spacer28"}
                                  data-plasmic-override={overrides.spacer28}
                                  className={classNames(
                                    projectcss.all,
                                    sty.spacer28
                                  )}
                                />
                              ) : null}
                            </div>
                          </Stack__>
                        ) : null}
                      </Stack__>
                    </Stack__>
                    <div
                      data-plasmic-name={"inputElementSelect"}
                      data-plasmic-override={overrides.inputElementSelect}
                      className={classNames(
                        projectcss.all,
                        sty.inputElementSelect
                      )}
                    >
                      {false ? (
                        <div
                          data-plasmic-name={
                            "signedByBaseInputElementSelectMediumSingleDefaultActive"
                          }
                          data-plasmic-override={
                            overrides.signedByBaseInputElementSelectMediumSingleDefaultActive
                          }
                          className={classNames(
                            projectcss.all,
                            sty.signedByBaseInputElementSelectMediumSingleDefaultActive
                          )}
                        />
                      ) : null}
                      {false ? (
                        <div
                          data-plasmic-name={"selectFrame"}
                          data-plasmic-override={overrides.selectFrame}
                          className={classNames(
                            projectcss.all,
                            sty.selectFrame
                          )}
                        >
                          {false ? (
                            <div
                              data-plasmic-name={"leadingArtworkContainer3"}
                              data-plasmic-override={
                                overrides.leadingArtworkContainer3
                              }
                              className={classNames(
                                projectcss.all,
                                sty.leadingArtworkContainer3
                              )}
                            >
                              <div
                                data-plasmic-name={"leadingArtwork2"}
                                data-plasmic-override={
                                  overrides.leadingArtwork2
                                }
                                className={classNames(
                                  projectcss.all,
                                  sty.leadingArtwork2
                                )}
                              >
                                {false ? (
                                  <Outlined5Icon
                                    className={classNames(
                                      projectcss.all,
                                      sty.svg__i4RaI
                                    )}
                                    role={"img"}
                                  />
                                ) : null}
                                <Filled4Icon
                                  className={classNames(
                                    projectcss.all,
                                    sty.svg__ctGiQ
                                  )}
                                  role={"img"}
                                />
                              </div>
                            </div>
                          ) : null}
                          {false ? (
                            <div
                              data-plasmic-name={"leadingLabelContainer3"}
                              data-plasmic-override={
                                overrides.leadingLabelContainer3
                              }
                              className={classNames(
                                projectcss.all,
                                sty.leadingLabelContainer3
                              )}
                            >
                              <div
                                data-plasmic-name={"leadingLabel3"}
                                data-plasmic-override={overrides.leadingLabel3}
                                className={classNames(
                                  projectcss.all,
                                  sty.leadingLabel3
                                )}
                              >
                                {false ? (
                                  <div
                                    data-plasmic-name={
                                      "signedByBaseTypographyLabelMedium"
                                    }
                                    data-plasmic-override={
                                      overrides.signedByBaseTypographyLabelMedium
                                    }
                                    className={classNames(
                                      projectcss.all,
                                      sty.signedByBaseTypographyLabelMedium
                                    )}
                                  />
                                ) : null}
                                <div
                                  data-plasmic-name={"text13"}
                                  data-plasmic-override={overrides.text13}
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.__wab_text,
                                    sty.text13
                                  )}
                                >
                                  {"$"}
                                </div>
                                {false ? (
                                  <div
                                    data-plasmic-name={"spacer5"}
                                    data-plasmic-override={overrides.spacer5}
                                    className={classNames(
                                      projectcss.all,
                                      sty.spacer5
                                    )}
                                  />
                                ) : null}
                              </div>
                            </div>
                          ) : null}
                          <div
                            data-plasmic-name={"inputElementContentText3"}
                            data-plasmic-override={
                              overrides.inputElementContentText3
                            }
                            className={classNames(
                              projectcss.all,
                              sty.inputElementContentText3
                            )}
                          >
                            {false ? (
                              <div
                                data-plasmic-name={
                                  "signedByBaseInputElementContentTextMediumOff"
                                }
                                data-plasmic-override={
                                  overrides.signedByBaseInputElementContentTextMediumOff
                                }
                                className={classNames(
                                  projectcss.all,
                                  sty.signedByBaseInputElementContentTextMediumOff
                                )}
                              />
                            ) : null}
                            {false ? (
                              <div
                                data-plasmic-name={"text14"}
                                data-plasmic-override={overrides.text14}
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text14
                                )}
                              >
                                {"S\u00e9lectionner..."}
                              </div>
                            ) : null}
                          </div>
                          {false ? (
                            <div
                              data-plasmic-name={"trailingLabelEnhancer3"}
                              data-plasmic-override={
                                overrides.trailingLabelEnhancer3
                              }
                              className={classNames(
                                projectcss.all,
                                sty.trailingLabelEnhancer3
                              )}
                            >
                              {false ? (
                                <div
                                  data-plasmic-name={"trailingLabel3"}
                                  data-plasmic-override={
                                    overrides.trailingLabel3
                                  }
                                  className={classNames(
                                    projectcss.all,
                                    sty.trailingLabel3
                                  )}
                                >
                                  {false ? (
                                    <div
                                      data-plasmic-name={
                                        "signedByBaseTypographyLabelMedium2"
                                      }
                                      data-plasmic-override={
                                        overrides.signedByBaseTypographyLabelMedium2
                                      }
                                      className={classNames(
                                        projectcss.all,
                                        sty.signedByBaseTypographyLabelMedium2
                                      )}
                                    />
                                  ) : null}
                                  <div
                                    data-plasmic-name={"text15"}
                                    data-plasmic-override={overrides.text15}
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.__wab_text,
                                      sty.text15
                                    )}
                                  >
                                    {"USD"}
                                  </div>
                                  {false ? (
                                    <div
                                      data-plasmic-name={"spacer6"}
                                      data-plasmic-override={overrides.spacer6}
                                      className={classNames(
                                        projectcss.all,
                                        sty.spacer6
                                      )}
                                    />
                                  ) : null}
                                </div>
                              ) : null}
                            </div>
                          ) : null}
                          {false ? (
                            <div
                              data-plasmic-name={"trailingArtworkContainer3"}
                              data-plasmic-override={
                                overrides.trailingArtworkContainer3
                              }
                              className={classNames(
                                projectcss.all,
                                sty.trailingArtworkContainer3
                              )}
                            >
                              <div
                                data-plasmic-name={"trailingArtwork3"}
                                data-plasmic-override={
                                  overrides.trailingArtwork3
                                }
                                className={classNames(
                                  projectcss.all,
                                  sty.trailingArtwork3
                                )}
                              >
                                {false ? (
                                  <Outlined5Icon
                                    className={classNames(
                                      projectcss.all,
                                      sty.svg__qMMz9
                                    )}
                                    role={"img"}
                                  />
                                ) : null}
                                <Filled4Icon
                                  className={classNames(
                                    projectcss.all,
                                    sty.svg__yuImj
                                  )}
                                  role={"img"}
                                />
                              </div>
                            </div>
                          ) : null}
                          {false ? (
                            <div
                              data-plasmic-name={"selectIndicatorContainer2"}
                              data-plasmic-override={
                                overrides.selectIndicatorContainer2
                              }
                              className={classNames(
                                projectcss.all,
                                sty.selectIndicatorContainer2
                              )}
                            >
                              <div
                                data-plasmic-name={"chevronIcon2"}
                                data-plasmic-override={overrides.chevronIcon2}
                                className={classNames(
                                  projectcss.all,
                                  sty.chevronIcon2
                                )}
                              >
                                {false ? (
                                  <Outlined6Icon
                                    className={classNames(
                                      projectcss.all,
                                      sty.svg__o7TFe
                                    )}
                                    role={"img"}
                                  />
                                ) : null}
                                <Outlined6Icon
                                  className={classNames(
                                    projectcss.all,
                                    sty.svg__slOI
                                  )}
                                  role={"img"}
                                />
                              </div>
                            </div>
                          ) : null}
                        </div>
                      ) : null}
                      <div
                        data-plasmic-name={"menu"}
                        data-plasmic-override={overrides.menu}
                        className={classNames(projectcss.all, sty.menu)}
                      >
                        {false ? (
                          <div
                            data-plasmic-name={"signedByBaseMenuListMedium"}
                            data-plasmic-override={
                              overrides.signedByBaseMenuListMedium
                            }
                            className={classNames(
                              projectcss.all,
                              sty.signedByBaseMenuListMedium
                            )}
                          />
                        ) : null}
                        {false ? (
                          <Stack__
                            as={"div"}
                            data-plasmic-name={"menuItem"}
                            data-plasmic-override={overrides.menuItem}
                            hasGap={true}
                            className={classNames(projectcss.all, sty.menuItem)}
                          >
                            {false ? (
                              <div
                                data-plasmic-name={
                                  "signedByBaseMenuItemSearchMediumNoneEnabled"
                                }
                                data-plasmic-override={
                                  overrides.signedByBaseMenuItemSearchMediumNoneEnabled
                                }
                                className={classNames(
                                  projectcss.all,
                                  sty.signedByBaseMenuItemSearchMediumNoneEnabled
                                )}
                              />
                            ) : null}
                            <Stack__
                              as={"div"}
                              data-plasmic-name={"searchField"}
                              data-plasmic-override={overrides.searchField}
                              hasGap={true}
                              className={classNames(
                                projectcss.all,
                                sty.searchField
                              )}
                            >
                              {false ? (
                                <div
                                  data-plasmic-name={
                                    "signedByBaseSearchFieldMediumEnabled"
                                  }
                                  data-plasmic-override={
                                    overrides.signedByBaseSearchFieldMediumEnabled
                                  }
                                  className={classNames(
                                    projectcss.all,
                                    sty.signedByBaseSearchFieldMediumEnabled
                                  )}
                                />
                              ) : null}
                              {false ? (
                                <Stack__
                                  as={"div"}
                                  data-plasmic-name={"inputElementLabel"}
                                  data-plasmic-override={
                                    overrides.inputElementLabel
                                  }
                                  hasGap={true}
                                  className={classNames(
                                    projectcss.all,
                                    sty.inputElementLabel
                                  )}
                                >
                                  {false ? (
                                    <div
                                      data-plasmic-name={
                                        "signedByBaseInputElementLabelMedium"
                                      }
                                      data-plasmic-override={
                                        overrides.signedByBaseInputElementLabelMedium
                                      }
                                      className={classNames(
                                        projectcss.all,
                                        sty.signedByBaseInputElementLabelMedium
                                      )}
                                    />
                                  ) : null}
                                  <div
                                    data-plasmic-name={"typography"}
                                    data-plasmic-override={overrides.typography}
                                    className={classNames(
                                      projectcss.all,
                                      sty.typography
                                    )}
                                  >
                                    {false ? (
                                      <div
                                        data-plasmic-name={
                                          "signedByBaseTypographyLabelMedium3"
                                        }
                                        data-plasmic-override={
                                          overrides.signedByBaseTypographyLabelMedium3
                                        }
                                        className={classNames(
                                          projectcss.all,
                                          sty.signedByBaseTypographyLabelMedium3
                                        )}
                                      />
                                    ) : null}
                                    <div
                                      data-plasmic-name={"text16"}
                                      data-plasmic-override={overrides.text16}
                                      className={classNames(
                                        projectcss.all,
                                        projectcss.__wab_text,
                                        sty.text16
                                      )}
                                    >
                                      {"Label"}
                                    </div>
                                    {false ? (
                                      <div
                                        data-plasmic-name={"spacer7"}
                                        data-plasmic-override={
                                          overrides.spacer7
                                        }
                                        className={classNames(
                                          projectcss.all,
                                          sty.spacer7
                                        )}
                                      />
                                    ) : null}
                                  </div>
                                  {false ? (
                                    <Stack__
                                      as={"div"}
                                      data-plasmic-name={"characterCountFrame"}
                                      data-plasmic-override={
                                        overrides.characterCountFrame
                                      }
                                      hasGap={true}
                                      className={classNames(
                                        projectcss.all,
                                        sty.characterCountFrame
                                      )}
                                    >
                                      {false ? (
                                        <div
                                          data-plasmic-name={"heart2"}
                                          data-plasmic-override={
                                            overrides.heart2
                                          }
                                          className={classNames(
                                            projectcss.all,
                                            sty.heart2
                                          )}
                                        >
                                          {false ? (
                                            <OutlinedIcon
                                              className={classNames(
                                                projectcss.all,
                                                sty.svg__kFghM
                                              )}
                                              role={"img"}
                                            />
                                          ) : null}
                                          <FilledIcon
                                            className={classNames(
                                              projectcss.all,
                                              sty.svg__ey1U7
                                            )}
                                            role={"img"}
                                          />
                                        </div>
                                      ) : null}
                                      <div
                                        data-plasmic-name={"typography2"}
                                        data-plasmic-override={
                                          overrides.typography2
                                        }
                                        className={classNames(
                                          projectcss.all,
                                          sty.typography2
                                        )}
                                      >
                                        {false ? (
                                          <div
                                            data-plasmic-name={
                                              "signedByBaseTypographyLabelMedium4"
                                            }
                                            data-plasmic-override={
                                              overrides.signedByBaseTypographyLabelMedium4
                                            }
                                            className={classNames(
                                              projectcss.all,
                                              sty.signedByBaseTypographyLabelMedium4
                                            )}
                                          />
                                        ) : null}
                                        <div
                                          data-plasmic-name={"text17"}
                                          data-plasmic-override={
                                            overrides.text17
                                          }
                                          className={classNames(
                                            projectcss.all,
                                            projectcss.__wab_text,
                                            sty.text17
                                          )}
                                        >
                                          {"0/100"}
                                        </div>
                                        {false ? (
                                          <div
                                            data-plasmic-name={"spacer8"}
                                            data-plasmic-override={
                                              overrides.spacer8
                                            }
                                            className={classNames(
                                              projectcss.all,
                                              sty.spacer8
                                            )}
                                          />
                                        ) : null}
                                      </div>
                                    </Stack__>
                                  ) : null}
                                </Stack__>
                              ) : null}
                              <div
                                data-plasmic-name={"inputElementTextField2"}
                                data-plasmic-override={
                                  overrides.inputElementTextField2
                                }
                                className={classNames(
                                  projectcss.all,
                                  sty.inputElementTextField2
                                )}
                              >
                                {false ? (
                                  <div
                                    data-plasmic-name={
                                      "signedByBaseInputElementTextFieldMediumEnabled"
                                    }
                                    data-plasmic-override={
                                      overrides.signedByBaseInputElementTextFieldMediumEnabled
                                    }
                                    className={classNames(
                                      projectcss.all,
                                      sty.signedByBaseInputElementTextFieldMediumEnabled
                                    )}
                                  />
                                ) : null}
                                <div
                                  data-plasmic-name={"leadingArtworkContainer4"}
                                  data-plasmic-override={
                                    overrides.leadingArtworkContainer4
                                  }
                                  className={classNames(
                                    projectcss.all,
                                    sty.leadingArtworkContainer4
                                  )}
                                >
                                  <div
                                    data-plasmic-name={"search"}
                                    data-plasmic-override={overrides.search}
                                    className={classNames(
                                      projectcss.all,
                                      sty.search
                                    )}
                                  >
                                    {false ? (
                                      <Outlined7Icon
                                        className={classNames(
                                          projectcss.all,
                                          sty.svg__coIu8
                                        )}
                                        role={"img"}
                                      />
                                    ) : null}
                                    <Outlined7Icon
                                      className={classNames(
                                        projectcss.all,
                                        sty.svg__vdjzz
                                      )}
                                      role={"img"}
                                    />
                                  </div>
                                </div>
                                {false ? (
                                  <div
                                    data-plasmic-name={"leadingLabelContainer4"}
                                    data-plasmic-override={
                                      overrides.leadingLabelContainer4
                                    }
                                    className={classNames(
                                      projectcss.all,
                                      sty.leadingLabelContainer4
                                    )}
                                  >
                                    {false ? (
                                      <div
                                        data-plasmic-name={"leadingLabel4"}
                                        data-plasmic-override={
                                          overrides.leadingLabel4
                                        }
                                        className={classNames(
                                          projectcss.all,
                                          sty.leadingLabel4
                                        )}
                                      >
                                        {false ? (
                                          <div
                                            data-plasmic-name={
                                              "signedByBaseTypographyLabelMedium5"
                                            }
                                            data-plasmic-override={
                                              overrides.signedByBaseTypographyLabelMedium5
                                            }
                                            className={classNames(
                                              projectcss.all,
                                              sty.signedByBaseTypographyLabelMedium5
                                            )}
                                          />
                                        ) : null}
                                        <div
                                          data-plasmic-name={"text18"}
                                          data-plasmic-override={
                                            overrides.text18
                                          }
                                          className={classNames(
                                            projectcss.all,
                                            projectcss.__wab_text,
                                            sty.text18
                                          )}
                                        >
                                          {"$"}
                                        </div>
                                        {false ? (
                                          <div
                                            data-plasmic-name={"spacer9"}
                                            data-plasmic-override={
                                              overrides.spacer9
                                            }
                                            className={classNames(
                                              projectcss.all,
                                              sty.spacer9
                                            )}
                                          />
                                        ) : null}
                                      </div>
                                    ) : null}
                                  </div>
                                ) : null}
                                <div
                                  data-plasmic-name={"inputElementContentText4"}
                                  data-plasmic-override={
                                    overrides.inputElementContentText4
                                  }
                                  className={classNames(
                                    projectcss.all,
                                    sty.inputElementContentText4
                                  )}
                                >
                                  {false ? (
                                    <div
                                      data-plasmic-name={
                                        "signedByBaseInputElementContentTextMediumOff2"
                                      }
                                      data-plasmic-override={
                                        overrides.signedByBaseInputElementContentTextMediumOff2
                                      }
                                      className={classNames(
                                        projectcss.all,
                                        sty.signedByBaseInputElementContentTextMediumOff2
                                      )}
                                    />
                                  ) : null}
                                  <div
                                    data-plasmic-name={"text19"}
                                    data-plasmic-override={overrides.text19}
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.__wab_text,
                                      sty.text19
                                    )}
                                  >
                                    {"Placeholder"}
                                  </div>
                                </div>
                                {false ? (
                                  <div
                                    data-plasmic-name={"trailingLabelEnhancer4"}
                                    data-plasmic-override={
                                      overrides.trailingLabelEnhancer4
                                    }
                                    className={classNames(
                                      projectcss.all,
                                      sty.trailingLabelEnhancer4
                                    )}
                                  >
                                    {false ? (
                                      <div
                                        data-plasmic-name={"trailingLabel4"}
                                        data-plasmic-override={
                                          overrides.trailingLabel4
                                        }
                                        className={classNames(
                                          projectcss.all,
                                          sty.trailingLabel4
                                        )}
                                      >
                                        {false ? (
                                          <div
                                            data-plasmic-name={
                                              "signedByBaseTypographyLabelMedium6"
                                            }
                                            data-plasmic-override={
                                              overrides.signedByBaseTypographyLabelMedium6
                                            }
                                            className={classNames(
                                              projectcss.all,
                                              sty.signedByBaseTypographyLabelMedium6
                                            )}
                                          />
                                        ) : null}
                                        <div
                                          data-plasmic-name={"text20"}
                                          data-plasmic-override={
                                            overrides.text20
                                          }
                                          className={classNames(
                                            projectcss.all,
                                            projectcss.__wab_text,
                                            sty.text20
                                          )}
                                        >
                                          {"USD"}
                                        </div>
                                        {false ? (
                                          <div
                                            data-plasmic-name={"spacer10"}
                                            data-plasmic-override={
                                              overrides.spacer10
                                            }
                                            className={classNames(
                                              projectcss.all,
                                              sty.spacer10
                                            )}
                                          />
                                        ) : null}
                                      </div>
                                    ) : null}
                                  </div>
                                ) : null}
                                {false ? (
                                  <div
                                    data-plasmic-name={
                                      "trailingArtworkContainer4"
                                    }
                                    data-plasmic-override={
                                      overrides.trailingArtworkContainer4
                                    }
                                    className={classNames(
                                      projectcss.all,
                                      sty.trailingArtworkContainer4
                                    )}
                                  >
                                    {false ? (
                                      <div
                                        data-plasmic-name={"trailingArtwork4"}
                                        data-plasmic-override={
                                          overrides.trailingArtwork4
                                        }
                                        className={classNames(
                                          projectcss.all,
                                          sty.trailingArtwork4
                                        )}
                                      >
                                        {false ? (
                                          <Outlined5Icon
                                            className={classNames(
                                              projectcss.all,
                                              sty.svg__wlHcc
                                            )}
                                            role={"img"}
                                          />
                                        ) : null}
                                        <Filled4Icon
                                          className={classNames(
                                            projectcss.all,
                                            sty.svg___3AfA
                                          )}
                                          role={"img"}
                                        />
                                      </div>
                                    ) : null}
                                  </div>
                                ) : null}
                              </div>
                              {false ? (
                                <Stack__
                                  as={"div"}
                                  data-plasmic-name={"inputElementHint2"}
                                  data-plasmic-override={
                                    overrides.inputElementHint2
                                  }
                                  hasGap={true}
                                  className={classNames(
                                    projectcss.all,
                                    sty.inputElementHint2
                                  )}
                                >
                                  {false ? (
                                    <div
                                      data-plasmic-name={"heart3"}
                                      data-plasmic-override={overrides.heart3}
                                      className={classNames(
                                        projectcss.all,
                                        sty.heart3
                                      )}
                                    >
                                      {false ? (
                                        <Outlined4Icon
                                          className={classNames(
                                            projectcss.all,
                                            sty.svg___667Y
                                          )}
                                          role={"img"}
                                        />
                                      ) : null}
                                      <Filled3Icon
                                        className={classNames(
                                          projectcss.all,
                                          sty.svg__wjgFn
                                        )}
                                        role={"img"}
                                      />
                                    </div>
                                  ) : null}
                                  <div
                                    data-plasmic-name={"hint2"}
                                    data-plasmic-override={overrides.hint2}
                                    className={classNames(
                                      projectcss.all,
                                      sty.hint2
                                    )}
                                  >
                                    {false ? (
                                      <div
                                        data-plasmic-name={
                                          "signedByBaseTypographyParagraphSmall2"
                                        }
                                        data-plasmic-override={
                                          overrides.signedByBaseTypographyParagraphSmall2
                                        }
                                        className={classNames(
                                          projectcss.all,
                                          sty.signedByBaseTypographyParagraphSmall2
                                        )}
                                      />
                                    ) : null}
                                    <div
                                      data-plasmic-name={"text21"}
                                      data-plasmic-override={overrides.text21}
                                      className={classNames(
                                        projectcss.all,
                                        projectcss.__wab_text,
                                        sty.text21
                                      )}
                                    >
                                      {"Hint"}
                                    </div>
                                    {false ? (
                                      <div
                                        data-plasmic-name={"spacer29"}
                                        data-plasmic-override={
                                          overrides.spacer29
                                        }
                                        className={classNames(
                                          projectcss.all,
                                          sty.spacer29
                                        )}
                                      />
                                    ) : null}
                                  </div>
                                </Stack__>
                              ) : null}
                            </Stack__>
                          </Stack__>
                        ) : null}
                        <Stack__
                          as={"div"}
                          data-plasmic-name={"menuItem2"}
                          data-plasmic-override={overrides.menuItem2}
                          hasGap={true}
                          className={classNames(projectcss.all, sty.menuItem2)}
                        >
                          {false ? (
                            <div
                              data-plasmic-name={
                                "signedByBaseMenuItemOptionMediumStandardEnabled"
                              }
                              data-plasmic-override={
                                overrides.signedByBaseMenuItemOptionMediumStandardEnabled
                              }
                              className={classNames(
                                projectcss.all,
                                sty.signedByBaseMenuItemOptionMediumStandardEnabled
                              )}
                            />
                          ) : null}
                          {false ? (
                            <Stack__
                              as={"div"}
                              data-plasmic-name={
                                "menuItemControlMediumCheckboxUnchecked"
                              }
                              data-plasmic-override={
                                overrides.menuItemControlMediumCheckboxUnchecked
                              }
                              hasGap={true}
                              className={classNames(
                                projectcss.all,
                                sty.menuItemControlMediumCheckboxUnchecked
                              )}
                            >
                              {false ? (
                                <div
                                  data-plasmic-name={
                                    "signedByBaseMenuItemControlMediumCheckboxUnchecked"
                                  }
                                  data-plasmic-override={
                                    overrides.signedByBaseMenuItemControlMediumCheckboxUnchecked
                                  }
                                  className={classNames(
                                    projectcss.all,
                                    sty.signedByBaseMenuItemControlMediumCheckboxUnchecked
                                  )}
                                />
                              ) : null}
                              <div
                                data-plasmic-name={"icon"}
                                data-plasmic-override={overrides.icon}
                                className={classNames(projectcss.all, sty.icon)}
                              >
                                {false ? (
                                  <Outlined8Icon
                                    className={classNames(
                                      projectcss.all,
                                      sty.svg__p5Ba3
                                    )}
                                    role={"img"}
                                  />
                                ) : null}
                                <Outlined8Icon
                                  className={classNames(
                                    projectcss.all,
                                    sty.svg__lq8B
                                  )}
                                  role={"img"}
                                />
                              </div>
                            </Stack__>
                          ) : null}
                          {false ? (
                            <Stack__
                              as={"div"}
                              data-plasmic-name={"leadingEnhancer"}
                              data-plasmic-override={overrides.leadingEnhancer}
                              hasGap={true}
                              className={classNames(
                                projectcss.all,
                                sty.leadingEnhancer
                              )}
                            >
                              <div
                                data-plasmic-name={"heart4"}
                                data-plasmic-override={overrides.heart4}
                                className={classNames(
                                  projectcss.all,
                                  sty.heart4
                                )}
                              >
                                {false ? (
                                  <Outlined5Icon
                                    className={classNames(
                                      projectcss.all,
                                      sty.svg__jShQd
                                    )}
                                    role={"img"}
                                  />
                                ) : null}
                                <Filled4Icon
                                  className={classNames(
                                    projectcss.all,
                                    sty.svg___3X6J3
                                  )}
                                  role={"img"}
                                />
                              </div>
                            </Stack__>
                          ) : null}
                          <Stack__
                            as={"div"}
                            data-plasmic-name={"textFrame"}
                            data-plasmic-override={overrides.textFrame}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.textFrame
                            )}
                          >
                            <div
                              data-plasmic-name={"leadingText"}
                              data-plasmic-override={overrides.leadingText}
                              className={classNames(
                                projectcss.all,
                                sty.leadingText
                              )}
                            >
                              <div
                                data-plasmic-name={"typography3"}
                                data-plasmic-override={overrides.typography3}
                                className={classNames(
                                  projectcss.all,
                                  sty.typography3
                                )}
                              >
                                {false ? (
                                  <div
                                    data-plasmic-name={
                                      "signedByBaseTypographyParagraphMedium"
                                    }
                                    data-plasmic-override={
                                      overrides.signedByBaseTypographyParagraphMedium
                                    }
                                    className={classNames(
                                      projectcss.all,
                                      sty.signedByBaseTypographyParagraphMedium
                                    )}
                                  />
                                ) : null}
                                <div
                                  data-plasmic-name={"text22"}
                                  data-plasmic-override={overrides.text22}
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.__wab_text,
                                    sty.text22
                                  )}
                                >
                                  {"Mod\u00e8le de concert 20h"}
                                </div>
                                {false ? (
                                  <div
                                    data-plasmic-name={"spacer11"}
                                    data-plasmic-override={overrides.spacer11}
                                    className={classNames(
                                      projectcss.all,
                                      sty.spacer11
                                    )}
                                  />
                                ) : null}
                              </div>
                              {false ? (
                                <div
                                  data-plasmic-name={"typography4"}
                                  data-plasmic-override={overrides.typography4}
                                  className={classNames(
                                    projectcss.all,
                                    sty.typography4
                                  )}
                                >
                                  {false ? (
                                    <div
                                      data-plasmic-name={
                                        "signedByBaseTypographyParagraphMedium2"
                                      }
                                      data-plasmic-override={
                                        overrides.signedByBaseTypographyParagraphMedium2
                                      }
                                      className={classNames(
                                        projectcss.all,
                                        sty.signedByBaseTypographyParagraphMedium2
                                      )}
                                    />
                                  ) : null}
                                  <div
                                    data-plasmic-name={"text23"}
                                    data-plasmic-override={overrides.text23}
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.__wab_text,
                                      sty.text23
                                    )}
                                  >
                                    {"Supporting text"}
                                  </div>
                                  {false ? (
                                    <div
                                      data-plasmic-name={"spacer12"}
                                      data-plasmic-override={overrides.spacer12}
                                      className={classNames(
                                        projectcss.all,
                                        sty.spacer12
                                      )}
                                    />
                                  ) : null}
                                </div>
                              ) : null}
                            </div>
                            {false ? (
                              <div
                                data-plasmic-name={"typography5"}
                                data-plasmic-override={overrides.typography5}
                                className={classNames(
                                  projectcss.all,
                                  sty.typography5
                                )}
                              >
                                {false ? (
                                  <div
                                    data-plasmic-name={
                                      "signedByBaseTypographyParagraphMedium3"
                                    }
                                    data-plasmic-override={
                                      overrides.signedByBaseTypographyParagraphMedium3
                                    }
                                    className={classNames(
                                      projectcss.all,
                                      sty.signedByBaseTypographyParagraphMedium3
                                    )}
                                  />
                                ) : null}
                                <div
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.__wab_text,
                                    sty.text__j8G6D
                                  )}
                                >
                                  {"Text"}
                                </div>
                                {false ? (
                                  <div
                                    data-plasmic-name={"spacer13"}
                                    data-plasmic-override={overrides.spacer13}
                                    className={classNames(
                                      projectcss.all,
                                      sty.spacer13
                                    )}
                                  />
                                ) : null}
                              </div>
                            ) : null}
                          </Stack__>
                          {false ? (
                            <Stack__
                              as={"div"}
                              data-plasmic-name={"trailingEnhancer"}
                              data-plasmic-override={overrides.trailingEnhancer}
                              hasGap={true}
                              className={classNames(
                                projectcss.all,
                                sty.trailingEnhancer
                              )}
                            >
                              <div
                                data-plasmic-name={"heart5"}
                                data-plasmic-override={overrides.heart5}
                                className={classNames(
                                  projectcss.all,
                                  sty.heart5
                                )}
                              >
                                {false ? (
                                  <Outlined5Icon
                                    className={classNames(
                                      projectcss.all,
                                      sty.svg__lMxGn
                                    )}
                                    role={"img"}
                                  />
                                ) : null}
                                <Filled4Icon
                                  className={classNames(
                                    projectcss.all,
                                    sty.svg__dddLc
                                  )}
                                  role={"img"}
                                />
                              </div>
                            </Stack__>
                          ) : null}
                        </Stack__>
                        <Stack__
                          as={"div"}
                          data-plasmic-name={"menuItem3"}
                          data-plasmic-override={overrides.menuItem3}
                          hasGap={true}
                          className={classNames(projectcss.all, sty.menuItem3)}
                        >
                          {false ? (
                            <div
                              data-plasmic-name={
                                "signedByBaseMenuItemOptionMediumStandardEnabled2"
                              }
                              data-plasmic-override={
                                overrides.signedByBaseMenuItemOptionMediumStandardEnabled2
                              }
                              className={classNames(
                                projectcss.all,
                                sty.signedByBaseMenuItemOptionMediumStandardEnabled2
                              )}
                            />
                          ) : null}
                          {false ? (
                            <Stack__
                              as={"div"}
                              data-plasmic-name={
                                "menuItemControlMediumCheckboxUnchecked2"
                              }
                              data-plasmic-override={
                                overrides.menuItemControlMediumCheckboxUnchecked2
                              }
                              hasGap={true}
                              className={classNames(
                                projectcss.all,
                                sty.menuItemControlMediumCheckboxUnchecked2
                              )}
                            >
                              {false ? (
                                <div
                                  data-plasmic-name={
                                    "signedByBaseMenuItemControlMediumCheckboxUnchecked2"
                                  }
                                  data-plasmic-override={
                                    overrides.signedByBaseMenuItemControlMediumCheckboxUnchecked2
                                  }
                                  className={classNames(
                                    projectcss.all,
                                    sty.signedByBaseMenuItemControlMediumCheckboxUnchecked2
                                  )}
                                />
                              ) : null}
                              <div
                                data-plasmic-name={"icon2"}
                                data-plasmic-override={overrides.icon2}
                                className={classNames(
                                  projectcss.all,
                                  sty.icon2
                                )}
                              >
                                {false ? (
                                  <Outlined8Icon
                                    className={classNames(
                                      projectcss.all,
                                      sty.svg__a2OWo
                                    )}
                                    role={"img"}
                                  />
                                ) : null}
                                <Outlined8Icon
                                  className={classNames(
                                    projectcss.all,
                                    sty.svg__vrQqP
                                  )}
                                  role={"img"}
                                />
                              </div>
                            </Stack__>
                          ) : null}
                          {false ? (
                            <Stack__
                              as={"div"}
                              data-plasmic-name={"leadingEnhancer2"}
                              data-plasmic-override={overrides.leadingEnhancer2}
                              hasGap={true}
                              className={classNames(
                                projectcss.all,
                                sty.leadingEnhancer2
                              )}
                            >
                              <div
                                data-plasmic-name={"heart6"}
                                data-plasmic-override={overrides.heart6}
                                className={classNames(
                                  projectcss.all,
                                  sty.heart6
                                )}
                              >
                                {false ? (
                                  <Outlined5Icon
                                    className={classNames(
                                      projectcss.all,
                                      sty.svg__kcVqy
                                    )}
                                    role={"img"}
                                  />
                                ) : null}
                                <Filled4Icon
                                  className={classNames(
                                    projectcss.all,
                                    sty.svg__tK1Ry
                                  )}
                                  role={"img"}
                                />
                              </div>
                            </Stack__>
                          ) : null}
                          <Stack__
                            as={"div"}
                            data-plasmic-name={"textFrame2"}
                            data-plasmic-override={overrides.textFrame2}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.textFrame2
                            )}
                          >
                            <div
                              data-plasmic-name={"leadingText2"}
                              data-plasmic-override={overrides.leadingText2}
                              className={classNames(
                                projectcss.all,
                                sty.leadingText2
                              )}
                            >
                              <div
                                data-plasmic-name={"typography6"}
                                data-plasmic-override={overrides.typography6}
                                className={classNames(
                                  projectcss.all,
                                  sty.typography6
                                )}
                              >
                                {false ? (
                                  <div
                                    data-plasmic-name={
                                      "signedByBaseTypographyParagraphMedium4"
                                    }
                                    data-plasmic-override={
                                      overrides.signedByBaseTypographyParagraphMedium4
                                    }
                                    className={classNames(
                                      projectcss.all,
                                      sty.signedByBaseTypographyParagraphMedium4
                                    )}
                                  />
                                ) : null}
                                <div
                                  data-plasmic-name={"text24"}
                                  data-plasmic-override={overrides.text24}
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.__wab_text,
                                    sty.text24
                                  )}
                                >
                                  {"Mod\u00e8le de match 21h"}
                                </div>
                                {false ? (
                                  <div
                                    data-plasmic-name={"spacer14"}
                                    data-plasmic-override={overrides.spacer14}
                                    className={classNames(
                                      projectcss.all,
                                      sty.spacer14
                                    )}
                                  />
                                ) : null}
                              </div>
                              {false ? (
                                <div
                                  data-plasmic-name={"typography7"}
                                  data-plasmic-override={overrides.typography7}
                                  className={classNames(
                                    projectcss.all,
                                    sty.typography7
                                  )}
                                >
                                  {false ? (
                                    <div
                                      data-plasmic-name={
                                        "signedByBaseTypographyParagraphMedium5"
                                      }
                                      data-plasmic-override={
                                        overrides.signedByBaseTypographyParagraphMedium5
                                      }
                                      className={classNames(
                                        projectcss.all,
                                        sty.signedByBaseTypographyParagraphMedium5
                                      )}
                                    />
                                  ) : null}
                                  <div
                                    data-plasmic-name={"text25"}
                                    data-plasmic-override={overrides.text25}
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.__wab_text,
                                      sty.text25
                                    )}
                                  >
                                    {"Supporting text"}
                                  </div>
                                  {false ? (
                                    <div
                                      data-plasmic-name={"spacer15"}
                                      data-plasmic-override={overrides.spacer15}
                                      className={classNames(
                                        projectcss.all,
                                        sty.spacer15
                                      )}
                                    />
                                  ) : null}
                                </div>
                              ) : null}
                            </div>
                            {false ? (
                              <div
                                data-plasmic-name={"typography8"}
                                data-plasmic-override={overrides.typography8}
                                className={classNames(
                                  projectcss.all,
                                  sty.typography8
                                )}
                              >
                                {false ? (
                                  <div
                                    data-plasmic-name={
                                      "signedByBaseTypographyParagraphMedium6"
                                    }
                                    data-plasmic-override={
                                      overrides.signedByBaseTypographyParagraphMedium6
                                    }
                                    className={classNames(
                                      projectcss.all,
                                      sty.signedByBaseTypographyParagraphMedium6
                                    )}
                                  />
                                ) : null}
                                <div
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.__wab_text,
                                    sty.text__g7YiJ
                                  )}
                                >
                                  {"Text"}
                                </div>
                                {false ? (
                                  <div
                                    data-plasmic-name={"spacer16"}
                                    data-plasmic-override={overrides.spacer16}
                                    className={classNames(
                                      projectcss.all,
                                      sty.spacer16
                                    )}
                                  />
                                ) : null}
                              </div>
                            ) : null}
                          </Stack__>
                          {false ? (
                            <Stack__
                              as={"div"}
                              data-plasmic-name={"trailingEnhancer2"}
                              data-plasmic-override={
                                overrides.trailingEnhancer2
                              }
                              hasGap={true}
                              className={classNames(
                                projectcss.all,
                                sty.trailingEnhancer2
                              )}
                            >
                              <div
                                data-plasmic-name={"checkmarkSmall"}
                                data-plasmic-override={overrides.checkmarkSmall}
                                className={classNames(
                                  projectcss.all,
                                  sty.checkmarkSmall
                                )}
                              >
                                {false ? (
                                  <Outlined9Icon
                                    className={classNames(
                                      projectcss.all,
                                      sty.svg__ktGdY
                                    )}
                                    role={"img"}
                                  />
                                ) : null}
                                <Outlined9Icon
                                  className={classNames(
                                    projectcss.all,
                                    sty.svg__e8KFo
                                  )}
                                  role={"img"}
                                />
                              </div>
                            </Stack__>
                          ) : null}
                        </Stack__>
                        <Stack__
                          as={"div"}
                          data-plasmic-name={"menuItem4"}
                          data-plasmic-override={overrides.menuItem4}
                          hasGap={true}
                          className={classNames(projectcss.all, sty.menuItem4)}
                        >
                          {false ? (
                            <div
                              data-plasmic-name={
                                "signedByBaseMenuItemOptionMediumStandardEnabled3"
                              }
                              data-plasmic-override={
                                overrides.signedByBaseMenuItemOptionMediumStandardEnabled3
                              }
                              className={classNames(
                                projectcss.all,
                                sty.signedByBaseMenuItemOptionMediumStandardEnabled3
                              )}
                            />
                          ) : null}
                          {false ? (
                            <Stack__
                              as={"div"}
                              data-plasmic-name={
                                "menuItemControlMediumCheckboxUnchecked3"
                              }
                              data-plasmic-override={
                                overrides.menuItemControlMediumCheckboxUnchecked3
                              }
                              hasGap={true}
                              className={classNames(
                                projectcss.all,
                                sty.menuItemControlMediumCheckboxUnchecked3
                              )}
                            >
                              {false ? (
                                <div
                                  data-plasmic-name={
                                    "signedByBaseMenuItemControlMediumCheckboxUnchecked3"
                                  }
                                  data-plasmic-override={
                                    overrides.signedByBaseMenuItemControlMediumCheckboxUnchecked3
                                  }
                                  className={classNames(
                                    projectcss.all,
                                    sty.signedByBaseMenuItemControlMediumCheckboxUnchecked3
                                  )}
                                />
                              ) : null}
                              <div
                                data-plasmic-name={"icon3"}
                                data-plasmic-override={overrides.icon3}
                                className={classNames(
                                  projectcss.all,
                                  sty.icon3
                                )}
                              >
                                {false ? (
                                  <Outlined8Icon
                                    className={classNames(
                                      projectcss.all,
                                      sty.svg__g4Q7U
                                    )}
                                    role={"img"}
                                  />
                                ) : null}
                                <Outlined8Icon
                                  className={classNames(
                                    projectcss.all,
                                    sty.svg__hzZ9S
                                  )}
                                  role={"img"}
                                />
                              </div>
                            </Stack__>
                          ) : null}
                          {false ? (
                            <Stack__
                              as={"div"}
                              data-plasmic-name={"leadingEnhancer3"}
                              data-plasmic-override={overrides.leadingEnhancer3}
                              hasGap={true}
                              className={classNames(
                                projectcss.all,
                                sty.leadingEnhancer3
                              )}
                            >
                              <div
                                data-plasmic-name={"heart7"}
                                data-plasmic-override={overrides.heart7}
                                className={classNames(
                                  projectcss.all,
                                  sty.heart7
                                )}
                              >
                                {false ? (
                                  <Outlined5Icon
                                    className={classNames(
                                      projectcss.all,
                                      sty.svg__pcj6C
                                    )}
                                    role={"img"}
                                  />
                                ) : null}
                                <Filled4Icon
                                  className={classNames(
                                    projectcss.all,
                                    sty.svg__akErq
                                  )}
                                  role={"img"}
                                />
                              </div>
                            </Stack__>
                          ) : null}
                          <IcRoundPlusIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg__jqKRl
                            )}
                            role={"img"}
                          />

                          <Stack__
                            as={"div"}
                            data-plasmic-name={"textFrame3"}
                            data-plasmic-override={overrides.textFrame3}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.textFrame3
                            )}
                          >
                            <div
                              data-plasmic-name={"leadingText3"}
                              data-plasmic-override={overrides.leadingText3}
                              className={classNames(
                                projectcss.all,
                                sty.leadingText3
                              )}
                            >
                              <div
                                data-plasmic-name={"typography9"}
                                data-plasmic-override={overrides.typography9}
                                className={classNames(
                                  projectcss.all,
                                  sty.typography9
                                )}
                              >
                                {false ? (
                                  <div
                                    data-plasmic-name={
                                      "signedByBaseTypographyParagraphMedium7"
                                    }
                                    data-plasmic-override={
                                      overrides.signedByBaseTypographyParagraphMedium7
                                    }
                                    className={classNames(
                                      projectcss.all,
                                      sty.signedByBaseTypographyParagraphMedium7
                                    )}
                                  />
                                ) : null}
                                <div
                                  data-plasmic-name={"text26"}
                                  data-plasmic-override={overrides.text26}
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.__wab_text,
                                    sty.text26
                                  )}
                                >
                                  {"Dispositif vierge"}
                                </div>
                                {false ? (
                                  <div
                                    data-plasmic-name={"spacer17"}
                                    data-plasmic-override={overrides.spacer17}
                                    className={classNames(
                                      projectcss.all,
                                      sty.spacer17
                                    )}
                                  />
                                ) : null}
                              </div>
                              {false ? (
                                <div
                                  data-plasmic-name={"typography10"}
                                  data-plasmic-override={overrides.typography10}
                                  className={classNames(
                                    projectcss.all,
                                    sty.typography10
                                  )}
                                >
                                  {false ? (
                                    <div
                                      data-plasmic-name={
                                        "signedByBaseTypographyParagraphMedium8"
                                      }
                                      data-plasmic-override={
                                        overrides.signedByBaseTypographyParagraphMedium8
                                      }
                                      className={classNames(
                                        projectcss.all,
                                        sty.signedByBaseTypographyParagraphMedium8
                                      )}
                                    />
                                  ) : null}
                                  <div
                                    data-plasmic-name={"text27"}
                                    data-plasmic-override={overrides.text27}
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.__wab_text,
                                      sty.text27
                                    )}
                                  >
                                    {"Supporting text"}
                                  </div>
                                  {false ? (
                                    <div
                                      data-plasmic-name={"spacer18"}
                                      data-plasmic-override={overrides.spacer18}
                                      className={classNames(
                                        projectcss.all,
                                        sty.spacer18
                                      )}
                                    />
                                  ) : null}
                                </div>
                              ) : null}
                            </div>
                            {false ? (
                              <div
                                data-plasmic-name={"typography11"}
                                data-plasmic-override={overrides.typography11}
                                className={classNames(
                                  projectcss.all,
                                  sty.typography11
                                )}
                              >
                                {false ? (
                                  <div
                                    data-plasmic-name={
                                      "signedByBaseTypographyParagraphMedium9"
                                    }
                                    data-plasmic-override={
                                      overrides.signedByBaseTypographyParagraphMedium9
                                    }
                                    className={classNames(
                                      projectcss.all,
                                      sty.signedByBaseTypographyParagraphMedium9
                                    )}
                                  />
                                ) : null}
                                <div
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.__wab_text,
                                    sty.text__iu1G2
                                  )}
                                >
                                  {"Text"}
                                </div>
                                {false ? (
                                  <div
                                    data-plasmic-name={"spacer19"}
                                    data-plasmic-override={overrides.spacer19}
                                    className={classNames(
                                      projectcss.all,
                                      sty.spacer19
                                    )}
                                  />
                                ) : null}
                              </div>
                            ) : null}
                          </Stack__>
                          {false ? (
                            <Stack__
                              as={"div"}
                              data-plasmic-name={"trailingEnhancer3"}
                              data-plasmic-override={
                                overrides.trailingEnhancer3
                              }
                              hasGap={true}
                              className={classNames(
                                projectcss.all,
                                sty.trailingEnhancer3
                              )}
                            >
                              <div
                                data-plasmic-name={"heart8"}
                                data-plasmic-override={overrides.heart8}
                                className={classNames(
                                  projectcss.all,
                                  sty.heart8
                                )}
                              >
                                {false ? (
                                  <Outlined5Icon
                                    className={classNames(
                                      projectcss.all,
                                      sty.svg__muBOr
                                    )}
                                    role={"img"}
                                  />
                                ) : null}
                                <Filled4Icon
                                  className={classNames(
                                    projectcss.all,
                                    sty.svg__wzXy
                                  )}
                                  role={"img"}
                                />
                              </div>
                            </Stack__>
                          ) : null}
                        </Stack__>
                        {false ? (
                          <Stack__
                            as={"div"}
                            data-plasmic-name={"menuItem5"}
                            data-plasmic-override={overrides.menuItem5}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.menuItem5
                            )}
                          >
                            {false ? (
                              <div
                                data-plasmic-name={
                                  "signedByBaseMenuItemOptionMediumStandardEnabled4"
                                }
                                data-plasmic-override={
                                  overrides.signedByBaseMenuItemOptionMediumStandardEnabled4
                                }
                                className={classNames(
                                  projectcss.all,
                                  sty.signedByBaseMenuItemOptionMediumStandardEnabled4
                                )}
                              />
                            ) : null}
                            {false ? (
                              <Stack__
                                as={"div"}
                                data-plasmic-name={
                                  "menuItemControlMediumCheckboxUnchecked4"
                                }
                                data-plasmic-override={
                                  overrides.menuItemControlMediumCheckboxUnchecked4
                                }
                                hasGap={true}
                                className={classNames(
                                  projectcss.all,
                                  sty.menuItemControlMediumCheckboxUnchecked4
                                )}
                              >
                                {false ? (
                                  <div
                                    data-plasmic-name={
                                      "signedByBaseMenuItemControlMediumCheckboxUnchecked4"
                                    }
                                    data-plasmic-override={
                                      overrides.signedByBaseMenuItemControlMediumCheckboxUnchecked4
                                    }
                                    className={classNames(
                                      projectcss.all,
                                      sty.signedByBaseMenuItemControlMediumCheckboxUnchecked4
                                    )}
                                  />
                                ) : null}
                                <div
                                  data-plasmic-name={"icon4"}
                                  data-plasmic-override={overrides.icon4}
                                  className={classNames(
                                    projectcss.all,
                                    sty.icon4
                                  )}
                                >
                                  {false ? (
                                    <Outlined8Icon
                                      className={classNames(
                                        projectcss.all,
                                        sty.svg___9F9X8
                                      )}
                                      role={"img"}
                                    />
                                  ) : null}
                                  <Outlined8Icon
                                    className={classNames(
                                      projectcss.all,
                                      sty.svg__zFOw
                                    )}
                                    role={"img"}
                                  />
                                </div>
                              </Stack__>
                            ) : null}
                            {false ? (
                              <Stack__
                                as={"div"}
                                data-plasmic-name={"leadingEnhancer4"}
                                data-plasmic-override={
                                  overrides.leadingEnhancer4
                                }
                                hasGap={true}
                                className={classNames(
                                  projectcss.all,
                                  sty.leadingEnhancer4
                                )}
                              >
                                <div
                                  data-plasmic-name={"heart9"}
                                  data-plasmic-override={overrides.heart9}
                                  className={classNames(
                                    projectcss.all,
                                    sty.heart9
                                  )}
                                >
                                  {false ? (
                                    <Outlined5Icon
                                      className={classNames(
                                        projectcss.all,
                                        sty.svg___3Dm2
                                      )}
                                      role={"img"}
                                    />
                                  ) : null}
                                  <Filled4Icon
                                    className={classNames(
                                      projectcss.all,
                                      sty.svg__gaH5C
                                    )}
                                    role={"img"}
                                  />
                                </div>
                              </Stack__>
                            ) : null}
                            <Stack__
                              as={"div"}
                              data-plasmic-name={"textFrame4"}
                              data-plasmic-override={overrides.textFrame4}
                              hasGap={true}
                              className={classNames(
                                projectcss.all,
                                sty.textFrame4
                              )}
                            >
                              <div
                                data-plasmic-name={"leadingText4"}
                                data-plasmic-override={overrides.leadingText4}
                                className={classNames(
                                  projectcss.all,
                                  sty.leadingText4
                                )}
                              >
                                <div
                                  data-plasmic-name={"typography12"}
                                  data-plasmic-override={overrides.typography12}
                                  className={classNames(
                                    projectcss.all,
                                    sty.typography12
                                  )}
                                >
                                  {false ? (
                                    <div
                                      data-plasmic-name={
                                        "signedByBaseTypographyParagraphMedium10"
                                      }
                                      data-plasmic-override={
                                        overrides.signedByBaseTypographyParagraphMedium10
                                      }
                                      className={classNames(
                                        projectcss.all,
                                        sty.signedByBaseTypographyParagraphMedium10
                                      )}
                                    />
                                  ) : null}
                                  <div
                                    data-plasmic-name={"text28"}
                                    data-plasmic-override={overrides.text28}
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.__wab_text,
                                      sty.text28
                                    )}
                                  >
                                    {"Options"}
                                  </div>
                                  {false ? (
                                    <div
                                      data-plasmic-name={"spacer20"}
                                      data-plasmic-override={overrides.spacer20}
                                      className={classNames(
                                        projectcss.all,
                                        sty.spacer20
                                      )}
                                    />
                                  ) : null}
                                </div>
                                {false ? (
                                  <div
                                    data-plasmic-name={"typography13"}
                                    data-plasmic-override={
                                      overrides.typography13
                                    }
                                    className={classNames(
                                      projectcss.all,
                                      sty.typography13
                                    )}
                                  >
                                    {false ? (
                                      <div
                                        data-plasmic-name={
                                          "signedByBaseTypographyParagraphMedium11"
                                        }
                                        data-plasmic-override={
                                          overrides.signedByBaseTypographyParagraphMedium11
                                        }
                                        className={classNames(
                                          projectcss.all,
                                          sty.signedByBaseTypographyParagraphMedium11
                                        )}
                                      />
                                    ) : null}
                                    <div
                                      data-plasmic-name={"text29"}
                                      data-plasmic-override={overrides.text29}
                                      className={classNames(
                                        projectcss.all,
                                        projectcss.__wab_text,
                                        sty.text29
                                      )}
                                    >
                                      {"Supporting text"}
                                    </div>
                                    {false ? (
                                      <div
                                        data-plasmic-name={"spacer21"}
                                        data-plasmic-override={
                                          overrides.spacer21
                                        }
                                        className={classNames(
                                          projectcss.all,
                                          sty.spacer21
                                        )}
                                      />
                                    ) : null}
                                  </div>
                                ) : null}
                              </div>
                              {false ? (
                                <div
                                  data-plasmic-name={"typography14"}
                                  data-plasmic-override={overrides.typography14}
                                  className={classNames(
                                    projectcss.all,
                                    sty.typography14
                                  )}
                                >
                                  {false ? (
                                    <div
                                      data-plasmic-name={
                                        "signedByBaseTypographyParagraphMedium12"
                                      }
                                      data-plasmic-override={
                                        overrides.signedByBaseTypographyParagraphMedium12
                                      }
                                      className={classNames(
                                        projectcss.all,
                                        sty.signedByBaseTypographyParagraphMedium12
                                      )}
                                    />
                                  ) : null}
                                  <div
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.__wab_text,
                                      sty.text__v2Fwd
                                    )}
                                  >
                                    {"Text"}
                                  </div>
                                  {false ? (
                                    <div
                                      data-plasmic-name={"spacer22"}
                                      data-plasmic-override={overrides.spacer22}
                                      className={classNames(
                                        projectcss.all,
                                        sty.spacer22
                                      )}
                                    />
                                  ) : null}
                                </div>
                              ) : null}
                            </Stack__>
                            {false ? (
                              <Stack__
                                as={"div"}
                                data-plasmic-name={"trailingEnhancer4"}
                                data-plasmic-override={
                                  overrides.trailingEnhancer4
                                }
                                hasGap={true}
                                className={classNames(
                                  projectcss.all,
                                  sty.trailingEnhancer4
                                )}
                              >
                                <div
                                  data-plasmic-name={"heart10"}
                                  data-plasmic-override={overrides.heart10}
                                  className={classNames(
                                    projectcss.all,
                                    sty.heart10
                                  )}
                                >
                                  {false ? (
                                    <Outlined5Icon
                                      className={classNames(
                                        projectcss.all,
                                        sty.svg__ijHyo
                                      )}
                                      role={"img"}
                                    />
                                  ) : null}
                                  <Filled4Icon
                                    className={classNames(
                                      projectcss.all,
                                      sty.svg__joNaj
                                    )}
                                    role={"img"}
                                  />
                                </div>
                              </Stack__>
                            ) : null}
                          </Stack__>
                        ) : null}
                        <div
                          data-plasmic-name={"scrollBar"}
                          data-plasmic-override={overrides.scrollBar}
                          className={classNames(projectcss.all, sty.scrollBar)}
                        />
                      </div>
                    </div>
                  </Stack__>
                ) : null}
                <DropDown
                  data-plasmic-name={"model"}
                  data-plasmic-override={overrides.model}
                  check={false}
                  className={classNames("__wab_instance", sty.model)}
                  label={"Mod\u00e8le de Runsheet & Dispositif*"}
                  options={["Default", "Special"]}
                  showLabel={true}
                  state={"default"}
                  type={"default"}
                />

                <Stack__
                  as={"div"}
                  data-plasmic-name={"buttons"}
                  data-plasmic-override={overrides.buttons}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.buttons)}
                >
                  <Button
                    data-plasmic-name={"button"}
                    data-plasmic-override={overrides.button}
                    className={classNames("__wab_instance", sty.button)}
                    label={
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__obc1R
                        )}
                      >
                        {"Cr\u00e9er"}
                      </div>
                    }
                    onClick={async event => {
                      const $steps = {};

                      $steps["useIntegration"] = true
                        ? (() => {
                            const actionArgs = {};
                            return (async ({ dataOp, continueOnError }) => {
                              try {
                                const response = await executePlasmicDataOp(
                                  dataOp,
                                  {
                                    userAuthToken:
                                      dataSourcesCtx?.userAuthToken,
                                    user: dataSourcesCtx?.user
                                  }
                                );
                                await plasmicInvalidate(dataOp.invalidatedKeys);
                                return response;
                              } catch (e) {
                                if (!continueOnError) {
                                  throw e;
                                }
                                return e;
                              }
                            })?.apply(null, [actionArgs]);
                          })()
                        : undefined;
                      if (
                        $steps["useIntegration"] != null &&
                        typeof $steps["useIntegration"] === "object" &&
                        typeof $steps["useIntegration"].then === "function"
                      ) {
                        $steps["useIntegration"] = await $steps[
                          "useIntegration"
                        ];
                      }
                    }}
                  />

                  {false ? (
                    <Stack__
                      as={"div"}
                      data-plasmic-name={"frame1073713924"}
                      data-plasmic-override={overrides.frame1073713924}
                      hasGap={true}
                      className={classNames(
                        projectcss.all,
                        sty.frame1073713924
                      )}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__b1I15
                        )}
                      >
                        <Line9Icon
                          className={classNames(projectcss.all, sty.svg__ulXtN)}
                          role={"img"}
                        />
                      </div>
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text___2W7TM
                        )}
                      >
                        {"OU"}
                      </div>
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__m4PaF
                        )}
                      >
                        <Line9Icon
                          className={classNames(projectcss.all, sty.svg__naCg9)}
                          role={"img"}
                        />
                      </div>
                    </Stack__>
                  ) : null}
                  {false ? (
                    <Stack__
                      as={"div"}
                      data-plasmic-name={"frame1073713930"}
                      data-plasmic-override={overrides.frame1073713930}
                      hasGap={true}
                      className={classNames(
                        projectcss.all,
                        sty.frame1073713930
                      )}
                    >
                      <Button
                        data-plasmic-name={"button2"}
                        data-plasmic-override={overrides.button2}
                        className={classNames("__wab_instance", sty.button2)}
                      />

                      <Stack__
                        as={"div"}
                        data-plasmic-name={"button3"}
                        data-plasmic-override={overrides.button3}
                        hasGap={true}
                        className={classNames(projectcss.all, sty.button3)}
                      >
                        <IcTwotoneAppleIcon
                          className={classNames(projectcss.all, sty.svg__ogylg)}
                          role={"img"}
                        />

                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__qU8Zu
                          )}
                        >
                          {"Apple"}
                        </div>
                      </Stack__>
                      <Stack__
                        as={"div"}
                        data-plasmic-name={"button4"}
                        data-plasmic-override={overrides.button4}
                        hasGap={true}
                        className={classNames(projectcss.all, sty.button4)}
                      >
                        <MdiFacebookIcon
                          className={classNames(projectcss.all, sty.svg__wxz4P)}
                          role={"img"}
                        />

                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__l06Co
                          )}
                        >
                          {"Facebook"}
                        </div>
                      </Stack__>
                    </Stack__>
                  ) : null}
                </Stack__>
              </Stack__>
            </React.Fragment>
          }
          footer={
            <div className={classNames(projectcss.all, sty.freeBox__yg8Lh)} />
          }
          heading={
            <div
              data-plasmic-name={"frame1437254016"}
              data-plasmic-override={overrides.frame1437254016}
              className={classNames(projectcss.all, sty.frame1437254016)}
            >
              <div
                data-plasmic-name={"name"}
                data-plasmic-override={overrides.name}
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.name
                )}
              >
                {"Nouvelle position site"}
              </div>
              <Stack__
                as={"div"}
                data-plasmic-name={"frame1437254019"}
                data-plasmic-override={overrides.frame1437254019}
                hasGap={true}
                className={classNames(projectcss.all, sty.frame1437254019)}
              >
                <LinkSimpleIcon
                  className={classNames(projectcss.all, sty.svg__wqJyG)}
                  role={"img"}
                />

                <XIcon
                  className={classNames(projectcss.all, sty.svg___6ALeA)}
                  onClick={async event => {
                    const $steps = {};

                    $steps["updateNewOperation"] = true
                      ? (() => {
                          const actionArgs = {
                            variable: {
                              objRoot: $state,
                              variablePath: ["newPosition"]
                            },
                            operation: 0,
                            value: false
                          };
                          return (({
                            variable,
                            value,
                            startIndex,
                            deleteCount
                          }) => {
                            if (!variable) {
                              return;
                            }
                            const { objRoot, variablePath } = variable;

                            $stateSet(objRoot, variablePath, value);
                            return value;
                          })?.apply(null, [actionArgs]);
                        })()
                      : undefined;
                    if (
                      $steps["updateNewOperation"] != null &&
                      typeof $steps["updateNewOperation"] === "object" &&
                      typeof $steps["updateNewOperation"].then === "function"
                    ) {
                      $steps["updateNewOperation"] = await $steps[
                        "updateNewOperation"
                      ];
                    }
                  }}
                  role={"img"}
                />
              </Stack__>
            </div>
          }
          isOpen={generateStateValueProp($state, ["createPosition", "isOpen"])}
          noTrigger={true}
          onOpenChange={async (...eventArgs: any) => {
            generateStateOnChangeProp($state, [
              "createPosition",
              "isOpen"
            ]).apply(null, eventArgs);

            if (
              eventArgs.length > 1 &&
              eventArgs[1] &&
              eventArgs[1]._plasmic_state_init_
            ) {
              return;
            }
          }}
          showFooter={false}
          trigger={null}
        />

        <Modal
          data-plasmic-name={"editPosition"}
          data-plasmic-override={overrides.editPosition}
          className={classNames("__wab_instance", sty.editPosition)}
          closeOnBackdropClick={false}
          content={(() => {
            const child$Props = {
              className: classNames("__wab_instance", sty.editPosition3),
              extendedOnValuesChange: async (...eventArgs: any) => {
                generateStateOnChangePropForCodeComponents(
                  $state,
                  "value",
                  ["editPosition3", "value"],
                  FormWrapper_Helpers
                ).apply(null, eventArgs);
              },
              formItems: [
                { label: "Name", name: "name", inputType: "Text" },
                { label: "Message", name: "message", inputType: "Text Area" }
              ],
              initialValues: (() => {
                try {
                  return (
                    $queries.poPositions.data.find(
                      position => parseInt(position.id) === $state.positionId
                    ) || $queries.poPositions.data[0]
                  );
                } catch (e) {
                  if (
                    e instanceof TypeError ||
                    e?.plasmicType === "PlasmicUndefinedDataError"
                  ) {
                    return undefined;
                  }
                  throw e;
                }
              })(),
              labelCol: { span: 8, horizontalOnly: true },
              layout: "vertical",
              mode: "advanced",
              onFinish: async values => {
                const $steps = {};

                $steps["supabaseUploadFile"] =
                  $state.upload22.files !== null &&
                  $state.upload22.files.length > 0 &&
                  $state.upload22.files[0].uid !== undefined
                    ? (() => {
                        const actionArgs = {
                          dataOp: {
                            sourceId: "m24ybmDtQiMCnPaXvSSHEf",
                            opId: "a999c0b8-8d97-4075-9a63-076ae0e83ac7",
                            userArgs: {
                              path: [$state.upload22.files[0].name],
                              content: [$state.upload22.files[0].contents],
                              contentType: [$state.upload22.files[0].type]
                            },
                            cacheKey: null,
                            invalidatedKeys: [],
                            roleId: null
                          }
                        };
                        return (async ({ dataOp, continueOnError }) => {
                          try {
                            const response = await executePlasmicDataOp(
                              dataOp,
                              {
                                userAuthToken: dataSourcesCtx?.userAuthToken,
                                user: dataSourcesCtx?.user
                              }
                            );
                            await plasmicInvalidate(dataOp.invalidatedKeys);
                            return response;
                          } catch (e) {
                            if (!continueOnError) {
                              throw e;
                            }
                            return e;
                          }
                        })?.apply(null, [actionArgs]);
                      })()
                    : undefined;
                if (
                  $steps["supabaseUploadFile"] != null &&
                  typeof $steps["supabaseUploadFile"] === "object" &&
                  typeof $steps["supabaseUploadFile"].then === "function"
                ) {
                  $steps["supabaseUploadFile"] = await $steps[
                    "supabaseUploadFile"
                  ];
                }

                $steps["defaultSubmit"] = true
                  ? (() => {
                      const actionArgs = {
                        dataOp: {
                          sourceId: "v6umJuHyep6kPNyCAJjouT",
                          opId: "7577918c-249c-4ff2-bda6-fb4f46976254",
                          userArgs: {
                            keys: [$state.positionId],
                            variables: [
                              $steps.supabaseUploadFile?.path,
                              $state.editPosition3.value.name,
                              $state.editPosition3.value.references,
                              $state.editPosition3.value.sector,
                              $state.editPosition3.value.specific_name,
                              new Date().toLocaleString(),
                              $ctx.SupabaseUser.user == undefined
                                ? null
                                : $ctx.SupabaseUser.user.id
                            ]
                          },
                          cacheKey: null,
                          invalidatedKeys: [
                            "9a8b9715-636a-4e8a-9793-deffde568069"
                          ],
                          roleId: null
                        }
                      };
                      return (async ({ dataOp, continueOnError }) => {
                        try {
                          const response = await executePlasmicDataOp(dataOp, {
                            userAuthToken: dataSourcesCtx?.userAuthToken,
                            user: dataSourcesCtx?.user
                          });
                          await plasmicInvalidate(dataOp.invalidatedKeys);
                          return response;
                        } catch (e) {
                          if (!continueOnError) {
                            throw e;
                          }
                          return e;
                        }
                      })?.apply(null, [actionArgs]);
                    })()
                  : undefined;
                if (
                  $steps["defaultSubmit"] != null &&
                  typeof $steps["defaultSubmit"] === "object" &&
                  typeof $steps["defaultSubmit"].then === "function"
                ) {
                  $steps["defaultSubmit"] = await $steps["defaultSubmit"];
                }

                $steps["invokeGlobalAction"] = true
                  ? (() => {
                      const actionArgs = {
                        args: [
                          "success",
                          "Position modifi\u00e9e",
                          undefined,
                          undefined,
                          "bottom"
                        ]
                      };
                      return $globalActions[
                        "plasmic-antd5-config-provider.showNotification"
                      ]?.apply(null, [...actionArgs.args]);
                    })()
                  : undefined;
                if (
                  $steps["invokeGlobalAction"] != null &&
                  typeof $steps["invokeGlobalAction"] === "object" &&
                  typeof $steps["invokeGlobalAction"].then === "function"
                ) {
                  $steps["invokeGlobalAction"] = await $steps[
                    "invokeGlobalAction"
                  ];
                }

                $steps["updateNewOperation"] = true
                  ? (() => {
                      const actionArgs = {
                        variable: {
                          objRoot: $state,
                          variablePath: ["editPosition2"]
                        },
                        operation: 0,
                        value: false
                      };
                      return (({
                        variable,
                        value,
                        startIndex,
                        deleteCount
                      }) => {
                        if (!variable) {
                          return;
                        }
                        const { objRoot, variablePath } = variable;

                        $stateSet(objRoot, variablePath, value);
                        return value;
                      })?.apply(null, [actionArgs]);
                    })()
                  : undefined;
                if (
                  $steps["updateNewOperation"] != null &&
                  typeof $steps["updateNewOperation"] === "object" &&
                  typeof $steps["updateNewOperation"].then === "function"
                ) {
                  $steps["updateNewOperation"] = await $steps[
                    "updateNewOperation"
                  ];
                }
              },
              onFinishFailed: async data => {
                const $steps = {};

                $steps["invokeGlobalAction"] = true
                  ? (() => {
                      const actionArgs = {
                        args: ["error", "Erreur", ``, undefined, "bottom"]
                      };
                      return $globalActions[
                        "plasmic-antd5-config-provider.showNotification"
                      ]?.apply(null, [...actionArgs.args]);
                    })()
                  : undefined;
                if (
                  $steps["invokeGlobalAction"] != null &&
                  typeof $steps["invokeGlobalAction"] === "object" &&
                  typeof $steps["invokeGlobalAction"].then === "function"
                ) {
                  $steps["invokeGlobalAction"] = await $steps[
                    "invokeGlobalAction"
                  ];
                }
              },
              onIsSubmittingChange: async (...eventArgs: any) => {
                generateStateOnChangePropForCodeComponents(
                  $state,
                  "isSubmitting",
                  ["editPosition3", "isSubmitting"],
                  FormWrapper_Helpers
                ).apply(null, eventArgs);
              },
              ref: ref => {
                $refs["editPosition3"] = ref;
              },
              submitSlot: null,
              wrapperCol: { span: 16, horizontalOnly: true }
            };
            initializeCodeComponentStates(
              $state,
              [
                {
                  name: "value",
                  plasmicStateName: "editPosition3.value"
                },
                {
                  name: "isSubmitting",
                  plasmicStateName: "editPosition3.isSubmitting"
                }
              ],
              [],
              FormWrapper_Helpers ?? {},
              child$Props
            );

            return (
              <FormWrapper
                data-plasmic-name={"editPosition3"}
                data-plasmic-override={overrides.editPosition3}
                {...child$Props}
              >
                <FormItemWrapper
                  className={classNames(
                    "__wab_instance",
                    sty.formField___26H5Q
                  )}
                  initialValue={undefined}
                  label={
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__bD5G0
                      )}
                    >
                      {"Nom"}
                    </div>
                  }
                  name={"name"}
                >
                  {(() => {
                    const child$Props = {
                      className: classNames("__wab_instance", sty.input3),
                      onChange: async (...eventArgs: any) => {
                        generateStateOnChangePropForCodeComponents(
                          $state,
                          "value",
                          ["input3", "value"],
                          AntdInput_Helpers
                        ).apply(null, eventArgs);
                      },
                      placeholder: "Titre",
                      size: "large",
                      value: generateStateValueProp($state, ["input3", "value"])
                    };
                    initializeCodeComponentStates(
                      $state,
                      [
                        {
                          name: "value",
                          plasmicStateName: "input3.value"
                        }
                      ],
                      [],
                      AntdInput_Helpers ?? {},
                      child$Props
                    );

                    return (
                      <AntdInput
                        data-plasmic-name={"input3"}
                        data-plasmic-override={overrides.input3}
                        {...child$Props}
                      />
                    );
                  })()}
                </FormItemWrapper>
                <FormItemWrapper
                  className={classNames("__wab_instance", sty.formField__w0TJf)}
                  initialValue={undefined}
                  label={
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__zqeqK
                      )}
                    >
                      {"Libell\u00e9"}
                    </div>
                  }
                  name={"specific_name"}
                >
                  {(() => {
                    const child$Props = {
                      autoSize: false,
                      className: classNames("__wab_instance", sty.textArea2),
                      onChange: async (...eventArgs: any) => {
                        generateStateOnChangePropForCodeComponents(
                          $state,
                          "value",
                          ["textArea2", "value"],
                          AntdTextArea_Helpers
                        ).apply(null, eventArgs);
                      },
                      value: generateStateValueProp($state, [
                        "textArea2",
                        "value"
                      ])
                    };
                    initializeCodeComponentStates(
                      $state,
                      [
                        {
                          name: "value",
                          plasmicStateName: "textArea2.value"
                        }
                      ],
                      [],
                      AntdTextArea_Helpers ?? {},
                      child$Props
                    );

                    return (
                      <AntdTextArea
                        data-plasmic-name={"textArea2"}
                        data-plasmic-override={overrides.textArea2}
                        {...child$Props}
                      />
                    );
                  })()}
                </FormItemWrapper>
                <FormItemWrapper
                  data-plasmic-name={"precisions3"}
                  data-plasmic-override={overrides.precisions3}
                  className={classNames("__wab_instance", sty.precisions3)}
                  label={
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__tBqft
                      )}
                    >
                      {"Secteur"}
                    </div>
                  }
                  name={"sector"}
                >
                  <AntdSelect
                    data-plasmic-name={"select10"}
                    data-plasmic-override={overrides.select10}
                    bordered={true}
                    className={classNames("__wab_instance", sty.select10)}
                    defaultStylesClassName={classNames(
                      projectcss.root_reset,
                      projectcss.plasmic_default_styles,
                      projectcss.plasmic_mixins,
                      projectcss.plasmic_tokens,
                      plasmic_antd_5_hostless_css.plasmic_tokens
                    )}
                    onChange={async (...eventArgs: any) => {
                      generateStateOnChangeProp($state, [
                        "select10",
                        "value"
                      ]).apply(null, eventArgs);
                    }}
                    options={(() => {
                      try {
                        return [
                          {
                            value: "sector1",
                            label: "Secteur 1"
                          },
                          {
                            value: "sector2",
                            label: "Secteur 2"
                          }
                        ];
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return [];
                        }
                        throw e;
                      }
                    })()}
                    placeholder={
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text___5JAf
                        )}
                      >
                        {"S\u00e9lectionner"}
                      </div>
                    }
                    popupScopeClassName={sty["select10__popup"]}
                    size={"middle"}
                    value={generateStateValueProp($state, [
                      "select10",
                      "value"
                    ])}
                  />
                </FormItemWrapper>
                <FormItemWrapper
                  data-plasmic-name={"generalDescription3"}
                  data-plasmic-override={overrides.generalDescription3}
                  className={classNames(
                    "__wab_instance",
                    sty.generalDescription3
                  )}
                  label={
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__bWy
                      )}
                    >
                      {"R\u00e9f\u00e9rences et dimensionnement"}
                    </div>
                  }
                  name={"references"}
                >
                  {(() => {
                    const child$Props = {
                      autoSize: true,
                      className: classNames("__wab_instance", sty.textArea4),
                      onChange: async (...eventArgs: any) => {
                        generateStateOnChangePropForCodeComponents(
                          $state,
                          "value",
                          ["textArea4", "value"],
                          AntdTextArea_Helpers
                        ).apply(null, eventArgs);
                      },
                      placeholder: "R\u00e9f\u00e9rences et dimensionnement",
                      value: generateStateValueProp($state, [
                        "textArea4",
                        "value"
                      ])
                    };
                    initializeCodeComponentStates(
                      $state,
                      [
                        {
                          name: "value",
                          plasmicStateName: "textArea4.value"
                        }
                      ],
                      [],
                      AntdTextArea_Helpers ?? {},
                      child$Props
                    );

                    return (
                      <AntdTextArea
                        data-plasmic-name={"textArea4"}
                        data-plasmic-override={overrides.textArea4}
                        {...child$Props}
                      />
                    );
                  })()}
                </FormItemWrapper>
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__vGRlo)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__dLpeE
                    )}
                  >
                    <React.Fragment>
                      <span
                        className={"plasmic_default__all plasmic_default__span"}
                        style={{ fontWeight: 700 }}
                      >
                        {"Photo de situation"}
                      </span>
                    </React.Fragment>
                  </div>
                  <UploadWrapper
                    data-plasmic-name={"upload22"}
                    data-plasmic-override={overrides.upload22}
                    accept={""}
                    className={classNames("__wab_instance", sty.upload22)}
                    dragAndDropFiles={true}
                    files={generateStateValueProp($state, [
                      "upload22",
                      "files"
                    ])}
                    maxCount={1}
                    onFilesChange={async (...eventArgs: any) => {
                      generateStateOnChangeProp($state, [
                        "upload22",
                        "files"
                      ]).apply(null, eventArgs);
                    }}
                    showUploadList={true}
                  >
                    <AntdButton
                      className={classNames(
                        "__wab_instance",
                        sty.button__fbGes
                      )}
                      size={"large"}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__mjnu0
                        )}
                      >
                        <React.Fragment>
                          <span
                            className={
                              "plasmic_default__all plasmic_default__span"
                            }
                            style={{ fontWeight: 700 }}
                          >
                            {"Importer ou d\u00e9poser un fichier"}
                          </span>
                        </React.Fragment>
                      </div>
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__dc3Nw
                        )}
                      >
                        {"10 Mb max"}
                      </div>
                    </AntdButton>
                  </UploadWrapper>
                </Stack__>
                <Button
                  className={classNames("__wab_instance", sty.button__ygY2Z)}
                  label={
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__dTy2X
                      )}
                    >
                      {"Mettre \u00e0 jour"}
                    </div>
                  }
                  submitsForm={true}
                />
              </FormWrapper>
            );
          })()}
          footer={
            <div className={classNames(projectcss.all, sty.freeBox__zbe3D)} />
          }
          heading={
            <div
              data-plasmic-name={"frame1437254017"}
              data-plasmic-override={overrides.frame1437254017}
              className={classNames(projectcss.all, sty.frame1437254017)}
            >
              <div
                data-plasmic-name={"name3"}
                data-plasmic-override={overrides.name3}
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.name3
                )}
              >
                {"Modifier position"}
              </div>
              <Stack__
                as={"div"}
                data-plasmic-name={"frame1437254020"}
                data-plasmic-override={overrides.frame1437254020}
                hasGap={true}
                className={classNames(projectcss.all, sty.frame1437254020)}
              >
                <LinkSimpleIcon
                  className={classNames(projectcss.all, sty.svg__dFgr1)}
                  role={"img"}
                />

                <XIcon
                  className={classNames(projectcss.all, sty.svg__o8Vi3)}
                  onClick={async event => {
                    const $steps = {};

                    $steps["updateNewOperation"] = true
                      ? (() => {
                          const actionArgs = {
                            variable: {
                              objRoot: $state,
                              variablePath: ["editPosition2"]
                            },
                            operation: 0,
                            value: false
                          };
                          return (({
                            variable,
                            value,
                            startIndex,
                            deleteCount
                          }) => {
                            if (!variable) {
                              return;
                            }
                            const { objRoot, variablePath } = variable;

                            $stateSet(objRoot, variablePath, value);
                            return value;
                          })?.apply(null, [actionArgs]);
                        })()
                      : undefined;
                    if (
                      $steps["updateNewOperation"] != null &&
                      typeof $steps["updateNewOperation"] === "object" &&
                      typeof $steps["updateNewOperation"].then === "function"
                    ) {
                      $steps["updateNewOperation"] = await $steps[
                        "updateNewOperation"
                      ];
                    }
                  }}
                  role={"img"}
                />
              </Stack__>
            </div>
          }
          isOpen={generateStateValueProp($state, ["editPosition", "isOpen"])}
          noTrigger={true}
          onOpenChange={async (...eventArgs: any) => {
            generateStateOnChangeProp($state, ["editPosition", "isOpen"]).apply(
              null,
              eventArgs
            );

            if (
              eventArgs.length > 1 &&
              eventArgs[1] &&
              eventArgs[1]._plasmic_state_init_
            ) {
              return;
            }
          }}
          showFooter={false}
          trigger={null}
        />

        <Modal
          data-plasmic-name={"deletePosition2"}
          data-plasmic-override={overrides.deletePosition2}
          className={classNames("__wab_instance", sty.deletePosition2)}
          closeOnBackdropClick={true}
          content={
            <React.Fragment>
              {(() => {
                const child$Props = {
                  className: classNames("__wab_instance", sty.form3),
                  extendedOnValuesChange: async (...eventArgs: any) => {
                    generateStateOnChangePropForCodeComponents(
                      $state,
                      "value",
                      ["form3", "value"],
                      FormWrapper_Helpers
                    ).apply(null, eventArgs);
                  },
                  formItems: [
                    { label: "Name", name: "name", inputType: "Text" },
                    {
                      label: "Message",
                      name: "message",
                      inputType: "Text Area"
                    }
                  ],
                  initialValues: (() => {
                    try {
                      return (
                        $queries.poPositions.data.find(
                          position =>
                            parseInt(position.id) === $state.positionId
                        ) || $queries.poPositions.data[0]
                      );
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return undefined;
                      }
                      throw e;
                    }
                  })(),
                  labelCol: { span: 8, horizontalOnly: true },
                  layout: "vertical",
                  mode: "advanced",
                  onFinish: async values => {
                    const $steps = {};

                    $steps["postgresDeleteMany"] =
                      $state.positionId !== undefined && $state.positionId > 0
                        ? (() => {
                            const actionArgs = {
                              dataOp: {
                                sourceId: "v6umJuHyep6kPNyCAJjouT",
                                opId: "133c19e1-86f6-4717-ad7f-0f27f0ef422c",
                                userArgs: {
                                  conditions: [$state.positionId]
                                },
                                cacheKey: null,
                                invalidatedKeys: [
                                  "9a8b9715-636a-4e8a-9793-deffde568069"
                                ],
                                roleId: null
                              }
                            };
                            return (async ({ dataOp, continueOnError }) => {
                              try {
                                const response = await executePlasmicDataOp(
                                  dataOp,
                                  {
                                    userAuthToken:
                                      dataSourcesCtx?.userAuthToken,
                                    user: dataSourcesCtx?.user
                                  }
                                );
                                await plasmicInvalidate(dataOp.invalidatedKeys);
                                return response;
                              } catch (e) {
                                if (!continueOnError) {
                                  throw e;
                                }
                                return e;
                              }
                            })?.apply(null, [actionArgs]);
                          })()
                        : undefined;
                    if (
                      $steps["postgresDeleteMany"] != null &&
                      typeof $steps["postgresDeleteMany"] === "object" &&
                      typeof $steps["postgresDeleteMany"].then === "function"
                    ) {
                      $steps["postgresDeleteMany"] = await $steps[
                        "postgresDeleteMany"
                      ];
                    }

                    $steps["updateDeletePosition"] = true
                      ? (() => {
                          const actionArgs = {
                            variable: {
                              objRoot: $state,
                              variablePath: ["deletePosition"]
                            },
                            operation: 0,
                            value: false
                          };
                          return (({
                            variable,
                            value,
                            startIndex,
                            deleteCount
                          }) => {
                            if (!variable) {
                              return;
                            }
                            const { objRoot, variablePath } = variable;

                            $stateSet(objRoot, variablePath, value);
                            return value;
                          })?.apply(null, [actionArgs]);
                        })()
                      : undefined;
                    if (
                      $steps["updateDeletePosition"] != null &&
                      typeof $steps["updateDeletePosition"] === "object" &&
                      typeof $steps["updateDeletePosition"].then === "function"
                    ) {
                      $steps["updateDeletePosition"] = await $steps[
                        "updateDeletePosition"
                      ];
                    }

                    $steps["invokeGlobalAction"] = true
                      ? (() => {
                          const actionArgs = {
                            args: [
                              "success",
                              "Position supprim\u00e9e",
                              undefined,
                              undefined,
                              "bottom"
                            ]
                          };
                          return $globalActions[
                            "plasmic-antd5-config-provider.showNotification"
                          ]?.apply(null, [...actionArgs.args]);
                        })()
                      : undefined;
                    if (
                      $steps["invokeGlobalAction"] != null &&
                      typeof $steps["invokeGlobalAction"] === "object" &&
                      typeof $steps["invokeGlobalAction"].then === "function"
                    ) {
                      $steps["invokeGlobalAction"] = await $steps[
                        "invokeGlobalAction"
                      ];
                    }
                  },
                  onIsSubmittingChange: async (...eventArgs: any) => {
                    generateStateOnChangePropForCodeComponents(
                      $state,
                      "isSubmitting",
                      ["form3", "isSubmitting"],
                      FormWrapper_Helpers
                    ).apply(null, eventArgs);
                  },
                  ref: ref => {
                    $refs["form3"] = ref;
                  },
                  submitSlot: null,
                  wrapperCol: { span: 16, horizontalOnly: true }
                };
                initializeCodeComponentStates(
                  $state,
                  [
                    {
                      name: "value",
                      plasmicStateName: "form3.value"
                    },
                    {
                      name: "isSubmitting",
                      plasmicStateName: "form3.isSubmitting"
                    }
                  ],
                  [],
                  FormWrapper_Helpers ?? {},
                  child$Props
                );

                return (
                  <FormWrapper
                    data-plasmic-name={"form3"}
                    data-plasmic-override={overrides.form3}
                    {...child$Props}
                  >
                    <Button
                      className={classNames(
                        "__wab_instance",
                        sty.button___0RdZu
                      )}
                      color={"errorDestructive"}
                      disabled={(() => {
                        try {
                          return !$state.positionId || $state.positionId === 0;
                        } catch (e) {
                          if (
                            e instanceof TypeError ||
                            e?.plasmicType === "PlasmicUndefinedDataError"
                          ) {
                            return undefined;
                          }
                          throw e;
                        }
                      })()}
                      label={"Supprimer"}
                      submitsForm={true}
                    />
                  </FormWrapper>
                );
              })()}
              <Stack__
                as={"div"}
                data-plasmic-name={"content3"}
                data-plasmic-override={overrides.content3}
                hasGap={true}
                className={classNames(projectcss.all, sty.content3)}
              >
                <TextInput
                  data-plasmic-name={"titre3"}
                  data-plasmic-override={overrides.titre3}
                  className={classNames("__wab_instance", sty.titre3)}
                  isMulti={false}
                  label={"Titre*"}
                  placeholder={"Titre*"}
                  showIcon={false}
                  showLabel={true}
                  state={"default"}
                  text={``}
                  type={"text"}
                />

                <SitexTextInput
                  data-plasmic-name={"texinput23"}
                  data-plasmic-override={overrides.texinput23}
                  className={classNames("__wab_instance", sty.texinput23)}
                  initialValue={generateStateValueProp($state, [
                    "texinput23",
                    "value"
                  ])}
                  onTextChange={async (...eventArgs: any) => {
                    generateStateOnChangeProp($state, [
                      "texinput23",
                      "value"
                    ]).apply(null, eventArgs);
                  }}
                  onValidationChange={async (...eventArgs: any) => {
                    generateStateOnChangeProp($state, [
                      "texinput23",
                      "isInputValid"
                    ]).apply(null, eventArgs);
                  }}
                  placeholder={"Titre*"}
                  prefixedText={"Titre*"}
                  required={true}
                  type={"text"}
                />

                <Stack__
                  as={"div"}
                  data-plasmic-name={"date3"}
                  data-plasmic-override={overrides.date3}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.date3)}
                >
                  <div
                    data-plasmic-name={"label8"}
                    data-plasmic-override={overrides.label8}
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.label8
                    )}
                  >
                    {"Date et heure de d\u00e9but"}
                  </div>
                  {(() => {
                    const child$Props = {
                      allowClear: true,
                      className: classNames("__wab_instance", sty.timePicker9),
                      onChange: async (...eventArgs: any) => {
                        generateStateOnChangePropForCodeComponents(
                          $state,
                          "value",
                          ["timePicker9", "value"],
                          AntdDatePicker_Helpers
                        ).apply(null, eventArgs);
                      },
                      popupScopeClassName: sty["timePicker9__datePickerPopup"],
                      showTime: true,
                      value: generateStateValueProp($state, [
                        "timePicker9",
                        "value"
                      ])
                    };
                    initializeCodeComponentStates(
                      $state,
                      [
                        {
                          name: "value",
                          plasmicStateName: "timePicker9.value"
                        }
                      ],
                      [],
                      AntdDatePicker_Helpers ?? {},
                      child$Props
                    );

                    return (
                      <AntdDatePicker
                        data-plasmic-name={"timePicker9"}
                        data-plasmic-override={overrides.timePicker9}
                        {...child$Props}
                      />
                    );
                  })()}
                </Stack__>
                <DropDown
                  data-plasmic-name={"type3"}
                  data-plasmic-override={overrides.type3}
                  check={false}
                  className={classNames("__wab_instance", sty.type3)}
                  label={"Type"}
                  options={["Default", "Special"]}
                  showLabel={true}
                  state={"default"}
                  type={"default"}
                />

                <TextInput
                  data-plasmic-name={"budget3"}
                  data-plasmic-override={overrides.budget3}
                  className={classNames("__wab_instance", sty.budget3)}
                  isMulti={false}
                  label={"Budget"}
                  placeholder={"\u20ac"}
                  showIcon={false}
                  showLabel={true}
                  state={"default"}
                  text={""}
                  type={"text"}
                />

                <TextInput
                  data-plasmic-name={"comments3"}
                  data-plasmic-override={overrides.comments3}
                  className={classNames("__wab_instance", sty.comments3)}
                  isMulti={false}
                  label={"Commentaires"}
                  placeholder={"Commentaires"}
                  showIcon={false}
                  showLabel={true}
                  state={"Placeholder"}
                  text={""}
                  type={"TextArea"}
                />

                {false ? (
                  <Stack__
                    as={"div"}
                    data-plasmic-name={"input9"}
                    data-plasmic-override={overrides.input9}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.input9)}
                  >
                    <div
                      data-plasmic-name={"name6"}
                      data-plasmic-override={overrides.name6}
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.name6
                      )}
                    >
                      {"Dispositif"}
                    </div>
                    <Stack__
                      as={"div"}
                      data-plasmic-name={"datePickerWeb3"}
                      data-plasmic-override={overrides.datePickerWeb3}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.datePickerWeb3)}
                    >
                      <Stack__
                        as={"div"}
                        data-plasmic-name={"inputSelect3"}
                        data-plasmic-override={overrides.inputSelect3}
                        hasGap={true}
                        className={classNames(projectcss.all, sty.inputSelect3)}
                      >
                        {false ? (
                          <div
                            data-plasmic-name={"signedByBaseFieldGroupSmall3"}
                            data-plasmic-override={
                              overrides.signedByBaseFieldGroupSmall3
                            }
                            className={classNames(
                              projectcss.all,
                              sty.signedByBaseFieldGroupSmall3
                            )}
                          />
                        ) : null}
                        <Stack__
                          as={"div"}
                          data-plasmic-name={"endDateCalendar3"}
                          data-plasmic-override={overrides.endDateCalendar3}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.endDateCalendar3
                          )}
                        >
                          {false ? (
                            <div
                              data-plasmic-name={"inputElementTextField5"}
                              data-plasmic-override={
                                overrides.inputElementTextField5
                              }
                              className={classNames(
                                projectcss.all,
                                sty.inputElementTextField5
                              )}
                            >
                              {false ? (
                                <div
                                  data-plasmic-name={
                                    "signedByBaseInputElementTextFieldSmallEnabled3"
                                  }
                                  data-plasmic-override={
                                    overrides.signedByBaseInputElementTextFieldSmallEnabled3
                                  }
                                  className={classNames(
                                    projectcss.all,
                                    sty.signedByBaseInputElementTextFieldSmallEnabled3
                                  )}
                                />
                              ) : null}
                              {false ? (
                                <div
                                  data-plasmic-name={"leadingArtworkContainer9"}
                                  data-plasmic-override={
                                    overrides.leadingArtworkContainer9
                                  }
                                  className={classNames(
                                    projectcss.all,
                                    sty.leadingArtworkContainer9
                                  )}
                                >
                                  <div
                                    data-plasmic-name={"leadingArtwork5"}
                                    data-plasmic-override={
                                      overrides.leadingArtwork5
                                    }
                                    className={classNames(
                                      projectcss.all,
                                      sty.leadingArtwork5
                                    )}
                                  >
                                    {false ? (
                                      <OutlinedIcon
                                        className={classNames(
                                          projectcss.all,
                                          sty.svg__iO7P
                                        )}
                                        role={"img"}
                                      />
                                    ) : null}
                                    <FilledIcon
                                      className={classNames(
                                        projectcss.all,
                                        sty.svg__ynsBd
                                      )}
                                      role={"img"}
                                    />
                                  </div>
                                </div>
                              ) : null}
                              {false ? (
                                <div
                                  data-plasmic-name={"leadingLabelContainer9"}
                                  data-plasmic-override={
                                    overrides.leadingLabelContainer9
                                  }
                                  className={classNames(
                                    projectcss.all,
                                    sty.leadingLabelContainer9
                                  )}
                                >
                                  <div
                                    data-plasmic-name={"leadingLabel9"}
                                    data-plasmic-override={
                                      overrides.leadingLabel9
                                    }
                                    className={classNames(
                                      projectcss.all,
                                      sty.leadingLabel9
                                    )}
                                  >
                                    {false ? (
                                      <div
                                        data-plasmic-name={
                                          "signedByBaseTypographyLabelSmall5"
                                        }
                                        data-plasmic-override={
                                          overrides.signedByBaseTypographyLabelSmall5
                                        }
                                        className={classNames(
                                          projectcss.all,
                                          sty.signedByBaseTypographyLabelSmall5
                                        )}
                                      />
                                    ) : null}
                                    <div
                                      data-plasmic-name={"text55"}
                                      data-plasmic-override={overrides.text55}
                                      className={classNames(
                                        projectcss.all,
                                        projectcss.__wab_text,
                                        sty.text55
                                      )}
                                    >
                                      {"$"}
                                    </div>
                                    {false ? (
                                      <div
                                        data-plasmic-name={"spacer49"}
                                        data-plasmic-override={
                                          overrides.spacer49
                                        }
                                        className={classNames(
                                          projectcss.all,
                                          sty.spacer49
                                        )}
                                      />
                                    ) : null}
                                  </div>
                                </div>
                              ) : null}
                              <div
                                data-plasmic-name={"inputElementContentText9"}
                                data-plasmic-override={
                                  overrides.inputElementContentText9
                                }
                                className={classNames(
                                  projectcss.all,
                                  sty.inputElementContentText9
                                )}
                              >
                                {false ? (
                                  <div
                                    data-plasmic-name={
                                      "signedByBaseInputElementContentTextSmallOff3"
                                    }
                                    data-plasmic-override={
                                      overrides.signedByBaseInputElementContentTextSmallOff3
                                    }
                                    className={classNames(
                                      projectcss.all,
                                      sty.signedByBaseInputElementContentTextSmallOff3
                                    )}
                                  />
                                ) : null}
                                <div
                                  data-plasmic-name={"text56"}
                                  data-plasmic-override={overrides.text56}
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.__wab_text,
                                    sty.text56
                                  )}
                                >
                                  {"MM/DD/YYYY"}
                                </div>
                              </div>
                              {false ? (
                                <div
                                  data-plasmic-name={"trailingLabelEnhancer9"}
                                  data-plasmic-override={
                                    overrides.trailingLabelEnhancer9
                                  }
                                  className={classNames(
                                    projectcss.all,
                                    sty.trailingLabelEnhancer9
                                  )}
                                >
                                  {false ? (
                                    <div
                                      data-plasmic-name={"trailingLabel9"}
                                      data-plasmic-override={
                                        overrides.trailingLabel9
                                      }
                                      className={classNames(
                                        projectcss.all,
                                        sty.trailingLabel9
                                      )}
                                    >
                                      {false ? (
                                        <div
                                          data-plasmic-name={
                                            "signedByBaseTypographyLabelSmall6"
                                          }
                                          data-plasmic-override={
                                            overrides.signedByBaseTypographyLabelSmall6
                                          }
                                          className={classNames(
                                            projectcss.all,
                                            sty.signedByBaseTypographyLabelSmall6
                                          )}
                                        />
                                      ) : null}
                                      <div
                                        data-plasmic-name={"text57"}
                                        data-plasmic-override={overrides.text57}
                                        className={classNames(
                                          projectcss.all,
                                          projectcss.__wab_text,
                                          sty.text57
                                        )}
                                      >
                                        {"USD"}
                                      </div>
                                      {false ? (
                                        <div
                                          data-plasmic-name={"spacer50"}
                                          data-plasmic-override={
                                            overrides.spacer50
                                          }
                                          className={classNames(
                                            projectcss.all,
                                            sty.spacer50
                                          )}
                                        />
                                      ) : null}
                                    </div>
                                  ) : null}
                                </div>
                              ) : null}
                              {false ? (
                                <div
                                  data-plasmic-name={
                                    "trailingArtworkContainer9"
                                  }
                                  data-plasmic-override={
                                    overrides.trailingArtworkContainer9
                                  }
                                  className={classNames(
                                    projectcss.all,
                                    sty.trailingArtworkContainer9
                                  )}
                                >
                                  <div
                                    data-plasmic-name={"trailingArtwork9"}
                                    data-plasmic-override={
                                      overrides.trailingArtwork9
                                    }
                                    className={classNames(
                                      projectcss.all,
                                      sty.trailingArtwork9
                                    )}
                                  >
                                    {false ? (
                                      <OutlinedIcon
                                        className={classNames(
                                          projectcss.all,
                                          sty.svg__d4Bs
                                        )}
                                        role={"img"}
                                      />
                                    ) : null}
                                    <FilledIcon
                                      className={classNames(
                                        projectcss.all,
                                        sty.svg__u1T03
                                      )}
                                      role={"img"}
                                    />
                                  </div>
                                </div>
                              ) : null}
                            </div>
                          ) : null}
                          <div
                            data-plasmic-name={"calendar3"}
                            data-plasmic-override={overrides.calendar3}
                            className={classNames(
                              projectcss.all,
                              sty.calendar3
                            )}
                          >
                            {false ? (
                              <div
                                data-plasmic-name={
                                  "signedByBaseInputElementSelectXSmallWebSingleDefaultEnabled3"
                                }
                                data-plasmic-override={
                                  overrides.signedByBaseInputElementSelectXSmallWebSingleDefaultEnabled3
                                }
                                className={classNames(
                                  projectcss.all,
                                  sty.signedByBaseInputElementSelectXSmallWebSingleDefaultEnabled3
                                )}
                              />
                            ) : null}
                            <Stack__
                              as={"div"}
                              data-plasmic-name={"leadingArtworkContainer10"}
                              data-plasmic-override={
                                overrides.leadingArtworkContainer10
                              }
                              hasGap={true}
                              className={classNames(
                                projectcss.all,
                                sty.leadingArtworkContainer10
                              )}
                            >
                              <div
                                data-plasmic-name={"text58"}
                                data-plasmic-override={overrides.text58}
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text58
                                )}
                              >
                                {"S\u00e9lectionner..."}
                              </div>
                            </Stack__>
                            {false ? (
                              <div
                                data-plasmic-name={"leadingLabelContainer10"}
                                data-plasmic-override={
                                  overrides.leadingLabelContainer10
                                }
                                className={classNames(
                                  projectcss.all,
                                  sty.leadingLabelContainer10
                                )}
                              >
                                <div
                                  data-plasmic-name={"leadingLabel10"}
                                  data-plasmic-override={
                                    overrides.leadingLabel10
                                  }
                                  className={classNames(
                                    projectcss.all,
                                    sty.leadingLabel10
                                  )}
                                >
                                  {false ? (
                                    <div
                                      data-plasmic-name={
                                        "signedByBaseTypographyLabelXSmall5"
                                      }
                                      data-plasmic-override={
                                        overrides.signedByBaseTypographyLabelXSmall5
                                      }
                                      className={classNames(
                                        projectcss.all,
                                        sty.signedByBaseTypographyLabelXSmall5
                                      )}
                                    />
                                  ) : null}
                                  <div
                                    data-plasmic-name={"text59"}
                                    data-plasmic-override={overrides.text59}
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.__wab_text,
                                      sty.text59
                                    )}
                                  >
                                    {"$"}
                                  </div>
                                  {false ? (
                                    <div
                                      data-plasmic-name={"spacer51"}
                                      data-plasmic-override={overrides.spacer51}
                                      className={classNames(
                                        projectcss.all,
                                        sty.spacer51
                                      )}
                                    />
                                  ) : null}
                                </div>
                              </div>
                            ) : null}
                            {false ? (
                              <div
                                data-plasmic-name={"inputElementContentText10"}
                                data-plasmic-override={
                                  overrides.inputElementContentText10
                                }
                                className={classNames(
                                  projectcss.all,
                                  sty.inputElementContentText10
                                )}
                              >
                                {false ? (
                                  <div
                                    data-plasmic-name={
                                      "signedByBaseInputElementContentTextXSmallWebOff3"
                                    }
                                    data-plasmic-override={
                                      overrides.signedByBaseInputElementContentTextXSmallWebOff3
                                    }
                                    className={classNames(
                                      projectcss.all,
                                      sty.signedByBaseInputElementContentTextXSmallWebOff3
                                    )}
                                  />
                                ) : null}
                                <div
                                  data-plasmic-name={"text60"}
                                  data-plasmic-override={overrides.text60}
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.__wab_text,
                                    sty.text60
                                  )}
                                >
                                  {"Jr"}
                                </div>
                              </div>
                            ) : null}
                            {false ? (
                              <div
                                data-plasmic-name={"trailingLabelEnhancer10"}
                                data-plasmic-override={
                                  overrides.trailingLabelEnhancer10
                                }
                                className={classNames(
                                  projectcss.all,
                                  sty.trailingLabelEnhancer10
                                )}
                              >
                                {false ? (
                                  <div
                                    data-plasmic-name={"trailingLabel10"}
                                    data-plasmic-override={
                                      overrides.trailingLabel10
                                    }
                                    className={classNames(
                                      projectcss.all,
                                      sty.trailingLabel10
                                    )}
                                  >
                                    {false ? (
                                      <div
                                        data-plasmic-name={
                                          "signedByBaseTypographyLabelXSmall6"
                                        }
                                        data-plasmic-override={
                                          overrides.signedByBaseTypographyLabelXSmall6
                                        }
                                        className={classNames(
                                          projectcss.all,
                                          sty.signedByBaseTypographyLabelXSmall6
                                        )}
                                      />
                                    ) : null}
                                    <div
                                      data-plasmic-name={"text61"}
                                      data-plasmic-override={overrides.text61}
                                      className={classNames(
                                        projectcss.all,
                                        projectcss.__wab_text,
                                        sty.text61
                                      )}
                                    >
                                      {"USD"}
                                    </div>
                                    {false ? (
                                      <div
                                        data-plasmic-name={"spacer52"}
                                        data-plasmic-override={
                                          overrides.spacer52
                                        }
                                        className={classNames(
                                          projectcss.all,
                                          sty.spacer52
                                        )}
                                      />
                                    ) : null}
                                  </div>
                                ) : null}
                              </div>
                            ) : null}
                            {false ? (
                              <div
                                data-plasmic-name={"trailingArtworkContainer10"}
                                data-plasmic-override={
                                  overrides.trailingArtworkContainer10
                                }
                                className={classNames(
                                  projectcss.all,
                                  sty.trailingArtworkContainer10
                                )}
                              >
                                <div
                                  data-plasmic-name={"trailingArtwork10"}
                                  data-plasmic-override={
                                    overrides.trailingArtwork10
                                  }
                                  className={classNames(
                                    projectcss.all,
                                    sty.trailingArtwork10
                                  )}
                                >
                                  {false ? (
                                    <Outlined2Icon
                                      className={classNames(
                                        projectcss.all,
                                        sty.svg__p6448
                                      )}
                                      role={"img"}
                                    />
                                  ) : null}
                                  <Filled2Icon
                                    className={classNames(
                                      projectcss.all,
                                      sty.svg__bOmOc
                                    )}
                                    role={"img"}
                                  />
                                </div>
                              </div>
                            ) : null}
                            <div
                              data-plasmic-name={"selectIndicatorContainer5"}
                              data-plasmic-override={
                                overrides.selectIndicatorContainer5
                              }
                              className={classNames(
                                projectcss.all,
                                sty.selectIndicatorContainer5
                              )}
                            >
                              <div
                                data-plasmic-name={"chevronIcon5"}
                                data-plasmic-override={overrides.chevronIcon5}
                                className={classNames(
                                  projectcss.all,
                                  sty.chevronIcon5
                                )}
                              >
                                {false ? (
                                  <Outlined3Icon
                                    className={classNames(
                                      projectcss.all,
                                      sty.svg__hb8SS
                                    )}
                                    role={"img"}
                                  />
                                ) : null}
                                <Outlined3Icon
                                  className={classNames(
                                    projectcss.all,
                                    sty.svg__xrR5E
                                  )}
                                  role={"img"}
                                />
                              </div>
                            </div>
                          </div>
                        </Stack__>
                        {false ? (
                          <Stack__
                            as={"div"}
                            data-plasmic-name={"inputElementHint5"}
                            data-plasmic-override={overrides.inputElementHint5}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.inputElementHint5
                            )}
                          >
                            {false ? (
                              <div
                                data-plasmic-name={"heart21"}
                                data-plasmic-override={overrides.heart21}
                                className={classNames(
                                  projectcss.all,
                                  sty.heart21
                                )}
                              >
                                {false ? (
                                  <Outlined4Icon
                                    className={classNames(
                                      projectcss.all,
                                      sty.svg__kIw59
                                    )}
                                    role={"img"}
                                  />
                                ) : null}
                                <Filled3Icon
                                  className={classNames(
                                    projectcss.all,
                                    sty.svg___11EhC
                                  )}
                                  role={"img"}
                                />
                              </div>
                            ) : null}
                            <div
                              data-plasmic-name={"hint5"}
                              data-plasmic-override={overrides.hint5}
                              className={classNames(projectcss.all, sty.hint5)}
                            >
                              {false ? (
                                <div
                                  data-plasmic-name={
                                    "signedByBaseTypographyParagraphSmall5"
                                  }
                                  data-plasmic-override={
                                    overrides.signedByBaseTypographyParagraphSmall5
                                  }
                                  className={classNames(
                                    projectcss.all,
                                    sty.signedByBaseTypographyParagraphSmall5
                                  )}
                                />
                              ) : null}
                              <div
                                data-plasmic-name={"text62"}
                                data-plasmic-override={overrides.text62}
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text62
                                )}
                              >
                                {"MM/DD/YYYY"}
                              </div>
                              {false ? (
                                <div
                                  data-plasmic-name={"spacer53"}
                                  data-plasmic-override={overrides.spacer53}
                                  className={classNames(
                                    projectcss.all,
                                    sty.spacer53
                                  )}
                                />
                              ) : null}
                            </div>
                          </Stack__>
                        ) : null}
                      </Stack__>
                    </Stack__>
                    <div
                      data-plasmic-name={"inputElementSelect3"}
                      data-plasmic-override={overrides.inputElementSelect3}
                      className={classNames(
                        projectcss.all,
                        sty.inputElementSelect3
                      )}
                    >
                      {false ? (
                        <div
                          data-plasmic-name={
                            "signedByBaseInputElementSelectMediumSingleDefaultActive3"
                          }
                          data-plasmic-override={
                            overrides.signedByBaseInputElementSelectMediumSingleDefaultActive3
                          }
                          className={classNames(
                            projectcss.all,
                            sty.signedByBaseInputElementSelectMediumSingleDefaultActive3
                          )}
                        />
                      ) : null}
                      {false ? (
                        <div
                          data-plasmic-name={"selectFrame3"}
                          data-plasmic-override={overrides.selectFrame3}
                          className={classNames(
                            projectcss.all,
                            sty.selectFrame3
                          )}
                        >
                          {false ? (
                            <div
                              data-plasmic-name={"leadingArtworkContainer11"}
                              data-plasmic-override={
                                overrides.leadingArtworkContainer11
                              }
                              className={classNames(
                                projectcss.all,
                                sty.leadingArtworkContainer11
                              )}
                            >
                              <div
                                data-plasmic-name={"leadingArtwork6"}
                                data-plasmic-override={
                                  overrides.leadingArtwork6
                                }
                                className={classNames(
                                  projectcss.all,
                                  sty.leadingArtwork6
                                )}
                              >
                                {false ? (
                                  <Outlined5Icon
                                    className={classNames(
                                      projectcss.all,
                                      sty.svg__wxkD
                                    )}
                                    role={"img"}
                                  />
                                ) : null}
                                <Filled4Icon
                                  className={classNames(
                                    projectcss.all,
                                    sty.svg___8EeFc
                                  )}
                                  role={"img"}
                                />
                              </div>
                            </div>
                          ) : null}
                          {false ? (
                            <div
                              data-plasmic-name={"leadingLabelContainer11"}
                              data-plasmic-override={
                                overrides.leadingLabelContainer11
                              }
                              className={classNames(
                                projectcss.all,
                                sty.leadingLabelContainer11
                              )}
                            >
                              <div
                                data-plasmic-name={"leadingLabel11"}
                                data-plasmic-override={overrides.leadingLabel11}
                                className={classNames(
                                  projectcss.all,
                                  sty.leadingLabel11
                                )}
                              >
                                {false ? (
                                  <div
                                    data-plasmic-name={
                                      "signedByBaseTypographyLabelMedium13"
                                    }
                                    data-plasmic-override={
                                      overrides.signedByBaseTypographyLabelMedium13
                                    }
                                    className={classNames(
                                      projectcss.all,
                                      sty.signedByBaseTypographyLabelMedium13
                                    )}
                                  />
                                ) : null}
                                <div
                                  data-plasmic-name={"text63"}
                                  data-plasmic-override={overrides.text63}
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.__wab_text,
                                    sty.text63
                                  )}
                                >
                                  {"$"}
                                </div>
                                {false ? (
                                  <div
                                    data-plasmic-name={"spacer54"}
                                    data-plasmic-override={overrides.spacer54}
                                    className={classNames(
                                      projectcss.all,
                                      sty.spacer54
                                    )}
                                  />
                                ) : null}
                              </div>
                            </div>
                          ) : null}
                          <div
                            data-plasmic-name={"inputElementContentText11"}
                            data-plasmic-override={
                              overrides.inputElementContentText11
                            }
                            className={classNames(
                              projectcss.all,
                              sty.inputElementContentText11
                            )}
                          >
                            {false ? (
                              <div
                                data-plasmic-name={
                                  "signedByBaseInputElementContentTextMediumOff5"
                                }
                                data-plasmic-override={
                                  overrides.signedByBaseInputElementContentTextMediumOff5
                                }
                                className={classNames(
                                  projectcss.all,
                                  sty.signedByBaseInputElementContentTextMediumOff5
                                )}
                              />
                            ) : null}
                            {false ? (
                              <div
                                data-plasmic-name={"text64"}
                                data-plasmic-override={overrides.text64}
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text64
                                )}
                              >
                                {"S\u00e9lectionner..."}
                              </div>
                            ) : null}
                          </div>
                          {false ? (
                            <div
                              data-plasmic-name={"trailingLabelEnhancer11"}
                              data-plasmic-override={
                                overrides.trailingLabelEnhancer11
                              }
                              className={classNames(
                                projectcss.all,
                                sty.trailingLabelEnhancer11
                              )}
                            >
                              {false ? (
                                <div
                                  data-plasmic-name={"trailingLabel11"}
                                  data-plasmic-override={
                                    overrides.trailingLabel11
                                  }
                                  className={classNames(
                                    projectcss.all,
                                    sty.trailingLabel11
                                  )}
                                >
                                  {false ? (
                                    <div
                                      data-plasmic-name={
                                        "signedByBaseTypographyLabelMedium14"
                                      }
                                      data-plasmic-override={
                                        overrides.signedByBaseTypographyLabelMedium14
                                      }
                                      className={classNames(
                                        projectcss.all,
                                        sty.signedByBaseTypographyLabelMedium14
                                      )}
                                    />
                                  ) : null}
                                  <div
                                    data-plasmic-name={"text65"}
                                    data-plasmic-override={overrides.text65}
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.__wab_text,
                                      sty.text65
                                    )}
                                  >
                                    {"USD"}
                                  </div>
                                  {false ? (
                                    <div
                                      data-plasmic-name={"spacer55"}
                                      data-plasmic-override={overrides.spacer55}
                                      className={classNames(
                                        projectcss.all,
                                        sty.spacer55
                                      )}
                                    />
                                  ) : null}
                                </div>
                              ) : null}
                            </div>
                          ) : null}
                          {false ? (
                            <div
                              data-plasmic-name={"trailingArtworkContainer11"}
                              data-plasmic-override={
                                overrides.trailingArtworkContainer11
                              }
                              className={classNames(
                                projectcss.all,
                                sty.trailingArtworkContainer11
                              )}
                            >
                              <div
                                data-plasmic-name={"trailingArtwork11"}
                                data-plasmic-override={
                                  overrides.trailingArtwork11
                                }
                                className={classNames(
                                  projectcss.all,
                                  sty.trailingArtwork11
                                )}
                              >
                                {false ? (
                                  <Outlined5Icon
                                    className={classNames(
                                      projectcss.all,
                                      sty.svg__o84Z3
                                    )}
                                    role={"img"}
                                  />
                                ) : null}
                                <Filled4Icon
                                  className={classNames(
                                    projectcss.all,
                                    sty.svg___3V5O6
                                  )}
                                  role={"img"}
                                />
                              </div>
                            </div>
                          ) : null}
                          {false ? (
                            <div
                              data-plasmic-name={"selectIndicatorContainer6"}
                              data-plasmic-override={
                                overrides.selectIndicatorContainer6
                              }
                              className={classNames(
                                projectcss.all,
                                sty.selectIndicatorContainer6
                              )}
                            >
                              <div
                                data-plasmic-name={"chevronIcon6"}
                                data-plasmic-override={overrides.chevronIcon6}
                                className={classNames(
                                  projectcss.all,
                                  sty.chevronIcon6
                                )}
                              >
                                {false ? (
                                  <Outlined6Icon
                                    className={classNames(
                                      projectcss.all,
                                      sty.svg___7OUj7
                                    )}
                                    role={"img"}
                                  />
                                ) : null}
                                <Outlined6Icon
                                  className={classNames(
                                    projectcss.all,
                                    sty.svg__dfkay
                                  )}
                                  role={"img"}
                                />
                              </div>
                            </div>
                          ) : null}
                        </div>
                      ) : null}
                      <div
                        data-plasmic-name={"menu3"}
                        data-plasmic-override={overrides.menu3}
                        className={classNames(projectcss.all, sty.menu3)}
                      >
                        {false ? (
                          <div
                            data-plasmic-name={"signedByBaseMenuListMedium3"}
                            data-plasmic-override={
                              overrides.signedByBaseMenuListMedium3
                            }
                            className={classNames(
                              projectcss.all,
                              sty.signedByBaseMenuListMedium3
                            )}
                          />
                        ) : null}
                        {false ? (
                          <Stack__
                            as={"div"}
                            data-plasmic-name={"menuItem11"}
                            data-plasmic-override={overrides.menuItem11}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.menuItem11
                            )}
                          >
                            {false ? (
                              <div
                                data-plasmic-name={
                                  "signedByBaseMenuItemSearchMediumNoneEnabled3"
                                }
                                data-plasmic-override={
                                  overrides.signedByBaseMenuItemSearchMediumNoneEnabled3
                                }
                                className={classNames(
                                  projectcss.all,
                                  sty.signedByBaseMenuItemSearchMediumNoneEnabled3
                                )}
                              />
                            ) : null}
                            <Stack__
                              as={"div"}
                              data-plasmic-name={"searchField3"}
                              data-plasmic-override={overrides.searchField3}
                              hasGap={true}
                              className={classNames(
                                projectcss.all,
                                sty.searchField3
                              )}
                            >
                              {false ? (
                                <div
                                  data-plasmic-name={
                                    "signedByBaseSearchFieldMediumEnabled3"
                                  }
                                  data-plasmic-override={
                                    overrides.signedByBaseSearchFieldMediumEnabled3
                                  }
                                  className={classNames(
                                    projectcss.all,
                                    sty.signedByBaseSearchFieldMediumEnabled3
                                  )}
                                />
                              ) : null}
                              {false ? (
                                <Stack__
                                  as={"div"}
                                  data-plasmic-name={"inputElementLabel3"}
                                  data-plasmic-override={
                                    overrides.inputElementLabel3
                                  }
                                  hasGap={true}
                                  className={classNames(
                                    projectcss.all,
                                    sty.inputElementLabel3
                                  )}
                                >
                                  {false ? (
                                    <div
                                      data-plasmic-name={
                                        "signedByBaseInputElementLabelMedium3"
                                      }
                                      data-plasmic-override={
                                        overrides.signedByBaseInputElementLabelMedium3
                                      }
                                      className={classNames(
                                        projectcss.all,
                                        sty.signedByBaseInputElementLabelMedium3
                                      )}
                                    />
                                  ) : null}
                                  <div
                                    data-plasmic-name={"typography29"}
                                    data-plasmic-override={
                                      overrides.typography29
                                    }
                                    className={classNames(
                                      projectcss.all,
                                      sty.typography29
                                    )}
                                  >
                                    {false ? (
                                      <div
                                        data-plasmic-name={
                                          "signedByBaseTypographyLabelMedium15"
                                        }
                                        data-plasmic-override={
                                          overrides.signedByBaseTypographyLabelMedium15
                                        }
                                        className={classNames(
                                          projectcss.all,
                                          sty.signedByBaseTypographyLabelMedium15
                                        )}
                                      />
                                    ) : null}
                                    <div
                                      data-plasmic-name={"text66"}
                                      data-plasmic-override={overrides.text66}
                                      className={classNames(
                                        projectcss.all,
                                        projectcss.__wab_text,
                                        sty.text66
                                      )}
                                    >
                                      {"Label"}
                                    </div>
                                    {false ? (
                                      <div
                                        data-plasmic-name={"spacer56"}
                                        data-plasmic-override={
                                          overrides.spacer56
                                        }
                                        className={classNames(
                                          projectcss.all,
                                          sty.spacer56
                                        )}
                                      />
                                    ) : null}
                                  </div>
                                  {false ? (
                                    <Stack__
                                      as={"div"}
                                      data-plasmic-name={"characterCountFrame3"}
                                      data-plasmic-override={
                                        overrides.characterCountFrame3
                                      }
                                      hasGap={true}
                                      className={classNames(
                                        projectcss.all,
                                        sty.characterCountFrame3
                                      )}
                                    >
                                      {false ? (
                                        <div
                                          data-plasmic-name={"heart22"}
                                          data-plasmic-override={
                                            overrides.heart22
                                          }
                                          className={classNames(
                                            projectcss.all,
                                            sty.heart22
                                          )}
                                        >
                                          {false ? (
                                            <OutlinedIcon
                                              className={classNames(
                                                projectcss.all,
                                                sty.svg___7FZYi
                                              )}
                                              role={"img"}
                                            />
                                          ) : null}
                                          <FilledIcon
                                            className={classNames(
                                              projectcss.all,
                                              sty.svg__cbgRf
                                            )}
                                            role={"img"}
                                          />
                                        </div>
                                      ) : null}
                                      <div
                                        data-plasmic-name={"typography30"}
                                        data-plasmic-override={
                                          overrides.typography30
                                        }
                                        className={classNames(
                                          projectcss.all,
                                          sty.typography30
                                        )}
                                      >
                                        {false ? (
                                          <div
                                            data-plasmic-name={
                                              "signedByBaseTypographyLabelMedium16"
                                            }
                                            data-plasmic-override={
                                              overrides.signedByBaseTypographyLabelMedium16
                                            }
                                            className={classNames(
                                              projectcss.all,
                                              sty.signedByBaseTypographyLabelMedium16
                                            )}
                                          />
                                        ) : null}
                                        <div
                                          data-plasmic-name={"text67"}
                                          data-plasmic-override={
                                            overrides.text67
                                          }
                                          className={classNames(
                                            projectcss.all,
                                            projectcss.__wab_text,
                                            sty.text67
                                          )}
                                        >
                                          {"0/100"}
                                        </div>
                                        {false ? (
                                          <div
                                            data-plasmic-name={"spacer57"}
                                            data-plasmic-override={
                                              overrides.spacer57
                                            }
                                            className={classNames(
                                              projectcss.all,
                                              sty.spacer57
                                            )}
                                          />
                                        ) : null}
                                      </div>
                                    </Stack__>
                                  ) : null}
                                </Stack__>
                              ) : null}
                              <div
                                data-plasmic-name={"inputElementTextField6"}
                                data-plasmic-override={
                                  overrides.inputElementTextField6
                                }
                                className={classNames(
                                  projectcss.all,
                                  sty.inputElementTextField6
                                )}
                              >
                                {false ? (
                                  <div
                                    data-plasmic-name={
                                      "signedByBaseInputElementTextFieldMediumEnabled3"
                                    }
                                    data-plasmic-override={
                                      overrides.signedByBaseInputElementTextFieldMediumEnabled3
                                    }
                                    className={classNames(
                                      projectcss.all,
                                      sty.signedByBaseInputElementTextFieldMediumEnabled3
                                    )}
                                  />
                                ) : null}
                                <div
                                  data-plasmic-name={
                                    "leadingArtworkContainer12"
                                  }
                                  data-plasmic-override={
                                    overrides.leadingArtworkContainer12
                                  }
                                  className={classNames(
                                    projectcss.all,
                                    sty.leadingArtworkContainer12
                                  )}
                                >
                                  <div
                                    data-plasmic-name={"search3"}
                                    data-plasmic-override={overrides.search3}
                                    className={classNames(
                                      projectcss.all,
                                      sty.search3
                                    )}
                                  >
                                    {false ? (
                                      <Outlined7Icon
                                        className={classNames(
                                          projectcss.all,
                                          sty.svg__r9AH
                                        )}
                                        role={"img"}
                                      />
                                    ) : null}
                                    <Outlined7Icon
                                      className={classNames(
                                        projectcss.all,
                                        sty.svg__u2U5N
                                      )}
                                      role={"img"}
                                    />
                                  </div>
                                </div>
                                {false ? (
                                  <div
                                    data-plasmic-name={
                                      "leadingLabelContainer12"
                                    }
                                    data-plasmic-override={
                                      overrides.leadingLabelContainer12
                                    }
                                    className={classNames(
                                      projectcss.all,
                                      sty.leadingLabelContainer12
                                    )}
                                  >
                                    {false ? (
                                      <div
                                        data-plasmic-name={"leadingLabel12"}
                                        data-plasmic-override={
                                          overrides.leadingLabel12
                                        }
                                        className={classNames(
                                          projectcss.all,
                                          sty.leadingLabel12
                                        )}
                                      >
                                        {false ? (
                                          <div
                                            data-plasmic-name={
                                              "signedByBaseTypographyLabelMedium17"
                                            }
                                            data-plasmic-override={
                                              overrides.signedByBaseTypographyLabelMedium17
                                            }
                                            className={classNames(
                                              projectcss.all,
                                              sty.signedByBaseTypographyLabelMedium17
                                            )}
                                          />
                                        ) : null}
                                        <div
                                          data-plasmic-name={"text68"}
                                          data-plasmic-override={
                                            overrides.text68
                                          }
                                          className={classNames(
                                            projectcss.all,
                                            projectcss.__wab_text,
                                            sty.text68
                                          )}
                                        >
                                          {"$"}
                                        </div>
                                        {false ? (
                                          <div
                                            data-plasmic-name={"spacer58"}
                                            data-plasmic-override={
                                              overrides.spacer58
                                            }
                                            className={classNames(
                                              projectcss.all,
                                              sty.spacer58
                                            )}
                                          />
                                        ) : null}
                                      </div>
                                    ) : null}
                                  </div>
                                ) : null}
                                <div
                                  data-plasmic-name={
                                    "inputElementContentText12"
                                  }
                                  data-plasmic-override={
                                    overrides.inputElementContentText12
                                  }
                                  className={classNames(
                                    projectcss.all,
                                    sty.inputElementContentText12
                                  )}
                                >
                                  {false ? (
                                    <div
                                      data-plasmic-name={
                                        "signedByBaseInputElementContentTextMediumOff6"
                                      }
                                      data-plasmic-override={
                                        overrides.signedByBaseInputElementContentTextMediumOff6
                                      }
                                      className={classNames(
                                        projectcss.all,
                                        sty.signedByBaseInputElementContentTextMediumOff6
                                      )}
                                    />
                                  ) : null}
                                  <div
                                    data-plasmic-name={"text69"}
                                    data-plasmic-override={overrides.text69}
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.__wab_text,
                                      sty.text69
                                    )}
                                  >
                                    {"Placeholder"}
                                  </div>
                                </div>
                                {false ? (
                                  <div
                                    data-plasmic-name={
                                      "trailingLabelEnhancer12"
                                    }
                                    data-plasmic-override={
                                      overrides.trailingLabelEnhancer12
                                    }
                                    className={classNames(
                                      projectcss.all,
                                      sty.trailingLabelEnhancer12
                                    )}
                                  >
                                    {false ? (
                                      <div
                                        data-plasmic-name={"trailingLabel12"}
                                        data-plasmic-override={
                                          overrides.trailingLabel12
                                        }
                                        className={classNames(
                                          projectcss.all,
                                          sty.trailingLabel12
                                        )}
                                      >
                                        {false ? (
                                          <div
                                            data-plasmic-name={
                                              "signedByBaseTypographyLabelMedium18"
                                            }
                                            data-plasmic-override={
                                              overrides.signedByBaseTypographyLabelMedium18
                                            }
                                            className={classNames(
                                              projectcss.all,
                                              sty.signedByBaseTypographyLabelMedium18
                                            )}
                                          />
                                        ) : null}
                                        <div
                                          data-plasmic-name={"text70"}
                                          data-plasmic-override={
                                            overrides.text70
                                          }
                                          className={classNames(
                                            projectcss.all,
                                            projectcss.__wab_text,
                                            sty.text70
                                          )}
                                        >
                                          {"USD"}
                                        </div>
                                        {false ? (
                                          <div
                                            data-plasmic-name={"spacer59"}
                                            data-plasmic-override={
                                              overrides.spacer59
                                            }
                                            className={classNames(
                                              projectcss.all,
                                              sty.spacer59
                                            )}
                                          />
                                        ) : null}
                                      </div>
                                    ) : null}
                                  </div>
                                ) : null}
                                {false ? (
                                  <div
                                    data-plasmic-name={
                                      "trailingArtworkContainer12"
                                    }
                                    data-plasmic-override={
                                      overrides.trailingArtworkContainer12
                                    }
                                    className={classNames(
                                      projectcss.all,
                                      sty.trailingArtworkContainer12
                                    )}
                                  >
                                    {false ? (
                                      <div
                                        data-plasmic-name={"trailingArtwork12"}
                                        data-plasmic-override={
                                          overrides.trailingArtwork12
                                        }
                                        className={classNames(
                                          projectcss.all,
                                          sty.trailingArtwork12
                                        )}
                                      >
                                        {false ? (
                                          <Outlined5Icon
                                            className={classNames(
                                              projectcss.all,
                                              sty.svg__cj7Pc
                                            )}
                                            role={"img"}
                                          />
                                        ) : null}
                                        <Filled4Icon
                                          className={classNames(
                                            projectcss.all,
                                            sty.svg___5FkLh
                                          )}
                                          role={"img"}
                                        />
                                      </div>
                                    ) : null}
                                  </div>
                                ) : null}
                              </div>
                              {false ? (
                                <Stack__
                                  as={"div"}
                                  data-plasmic-name={"inputElementHint6"}
                                  data-plasmic-override={
                                    overrides.inputElementHint6
                                  }
                                  hasGap={true}
                                  className={classNames(
                                    projectcss.all,
                                    sty.inputElementHint6
                                  )}
                                >
                                  {false ? (
                                    <div
                                      data-plasmic-name={"heart23"}
                                      data-plasmic-override={overrides.heart23}
                                      className={classNames(
                                        projectcss.all,
                                        sty.heart23
                                      )}
                                    >
                                      {false ? (
                                        <Outlined4Icon
                                          className={classNames(
                                            projectcss.all,
                                            sty.svg__m7OyI
                                          )}
                                          role={"img"}
                                        />
                                      ) : null}
                                      <Filled3Icon
                                        className={classNames(
                                          projectcss.all,
                                          sty.svg___2PeFs
                                        )}
                                        role={"img"}
                                      />
                                    </div>
                                  ) : null}
                                  <div
                                    data-plasmic-name={"hint6"}
                                    data-plasmic-override={overrides.hint6}
                                    className={classNames(
                                      projectcss.all,
                                      sty.hint6
                                    )}
                                  >
                                    {false ? (
                                      <div
                                        data-plasmic-name={
                                          "signedByBaseTypographyParagraphSmall6"
                                        }
                                        data-plasmic-override={
                                          overrides.signedByBaseTypographyParagraphSmall6
                                        }
                                        className={classNames(
                                          projectcss.all,
                                          sty.signedByBaseTypographyParagraphSmall6
                                        )}
                                      />
                                    ) : null}
                                    <div
                                      data-plasmic-name={"text71"}
                                      data-plasmic-override={overrides.text71}
                                      className={classNames(
                                        projectcss.all,
                                        projectcss.__wab_text,
                                        sty.text71
                                      )}
                                    >
                                      {"Hint"}
                                    </div>
                                    {false ? (
                                      <div
                                        data-plasmic-name={"spacer60"}
                                        data-plasmic-override={
                                          overrides.spacer60
                                        }
                                        className={classNames(
                                          projectcss.all,
                                          sty.spacer60
                                        )}
                                      />
                                    ) : null}
                                  </div>
                                </Stack__>
                              ) : null}
                            </Stack__>
                          </Stack__>
                        ) : null}
                        <Stack__
                          as={"div"}
                          data-plasmic-name={"menuItem12"}
                          data-plasmic-override={overrides.menuItem12}
                          hasGap={true}
                          className={classNames(projectcss.all, sty.menuItem12)}
                        >
                          {false ? (
                            <div
                              data-plasmic-name={
                                "signedByBaseMenuItemOptionMediumStandardEnabled9"
                              }
                              data-plasmic-override={
                                overrides.signedByBaseMenuItemOptionMediumStandardEnabled9
                              }
                              className={classNames(
                                projectcss.all,
                                sty.signedByBaseMenuItemOptionMediumStandardEnabled9
                              )}
                            />
                          ) : null}
                          {false ? (
                            <Stack__
                              as={"div"}
                              data-plasmic-name={
                                "menuItemControlMediumCheckboxUnchecked9"
                              }
                              data-plasmic-override={
                                overrides.menuItemControlMediumCheckboxUnchecked9
                              }
                              hasGap={true}
                              className={classNames(
                                projectcss.all,
                                sty.menuItemControlMediumCheckboxUnchecked9
                              )}
                            >
                              {false ? (
                                <div
                                  data-plasmic-name={
                                    "signedByBaseMenuItemControlMediumCheckboxUnchecked9"
                                  }
                                  data-plasmic-override={
                                    overrides.signedByBaseMenuItemControlMediumCheckboxUnchecked9
                                  }
                                  className={classNames(
                                    projectcss.all,
                                    sty.signedByBaseMenuItemControlMediumCheckboxUnchecked9
                                  )}
                                />
                              ) : null}
                              <div
                                data-plasmic-name={"icon9"}
                                data-plasmic-override={overrides.icon9}
                                className={classNames(
                                  projectcss.all,
                                  sty.icon9
                                )}
                              >
                                {false ? (
                                  <Outlined8Icon
                                    className={classNames(
                                      projectcss.all,
                                      sty.svg__ddKuN
                                    )}
                                    role={"img"}
                                  />
                                ) : null}
                                <Outlined8Icon
                                  className={classNames(
                                    projectcss.all,
                                    sty.svg__xUIf2
                                  )}
                                  role={"img"}
                                />
                              </div>
                            </Stack__>
                          ) : null}
                          {false ? (
                            <Stack__
                              as={"div"}
                              data-plasmic-name={"leadingEnhancer9"}
                              data-plasmic-override={overrides.leadingEnhancer9}
                              hasGap={true}
                              className={classNames(
                                projectcss.all,
                                sty.leadingEnhancer9
                              )}
                            >
                              <div
                                data-plasmic-name={"heart24"}
                                data-plasmic-override={overrides.heart24}
                                className={classNames(
                                  projectcss.all,
                                  sty.heart24
                                )}
                              >
                                {false ? (
                                  <Outlined5Icon
                                    className={classNames(
                                      projectcss.all,
                                      sty.svg__b5EzX
                                    )}
                                    role={"img"}
                                  />
                                ) : null}
                                <Filled4Icon
                                  className={classNames(
                                    projectcss.all,
                                    sty.svg___8Nc1A
                                  )}
                                  role={"img"}
                                />
                              </div>
                            </Stack__>
                          ) : null}
                          <Stack__
                            as={"div"}
                            data-plasmic-name={"textFrame9"}
                            data-plasmic-override={overrides.textFrame9}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.textFrame9
                            )}
                          >
                            <div
                              data-plasmic-name={"leadingText9"}
                              data-plasmic-override={overrides.leadingText9}
                              className={classNames(
                                projectcss.all,
                                sty.leadingText9
                              )}
                            >
                              <div
                                data-plasmic-name={"typography31"}
                                data-plasmic-override={overrides.typography31}
                                className={classNames(
                                  projectcss.all,
                                  sty.typography31
                                )}
                              >
                                {false ? (
                                  <div
                                    data-plasmic-name={
                                      "signedByBaseTypographyParagraphMedium25"
                                    }
                                    data-plasmic-override={
                                      overrides.signedByBaseTypographyParagraphMedium25
                                    }
                                    className={classNames(
                                      projectcss.all,
                                      sty.signedByBaseTypographyParagraphMedium25
                                    )}
                                  />
                                ) : null}
                                <div
                                  data-plasmic-name={"text72"}
                                  data-plasmic-override={overrides.text72}
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.__wab_text,
                                    sty.text72
                                  )}
                                >
                                  {"Mod\u00e8le de concert 20h"}
                                </div>
                                {false ? (
                                  <div
                                    data-plasmic-name={"spacer61"}
                                    data-plasmic-override={overrides.spacer61}
                                    className={classNames(
                                      projectcss.all,
                                      sty.spacer61
                                    )}
                                  />
                                ) : null}
                              </div>
                              {false ? (
                                <div
                                  data-plasmic-name={"typography32"}
                                  data-plasmic-override={overrides.typography32}
                                  className={classNames(
                                    projectcss.all,
                                    sty.typography32
                                  )}
                                >
                                  {false ? (
                                    <div
                                      data-plasmic-name={
                                        "signedByBaseTypographyParagraphMedium26"
                                      }
                                      data-plasmic-override={
                                        overrides.signedByBaseTypographyParagraphMedium26
                                      }
                                      className={classNames(
                                        projectcss.all,
                                        sty.signedByBaseTypographyParagraphMedium26
                                      )}
                                    />
                                  ) : null}
                                  <div
                                    data-plasmic-name={"text73"}
                                    data-plasmic-override={overrides.text73}
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.__wab_text,
                                      sty.text73
                                    )}
                                  >
                                    {"Supporting text"}
                                  </div>
                                  {false ? (
                                    <div
                                      data-plasmic-name={"spacer62"}
                                      data-plasmic-override={overrides.spacer62}
                                      className={classNames(
                                        projectcss.all,
                                        sty.spacer62
                                      )}
                                    />
                                  ) : null}
                                </div>
                              ) : null}
                            </div>
                            {false ? (
                              <div
                                data-plasmic-name={"typography33"}
                                data-plasmic-override={overrides.typography33}
                                className={classNames(
                                  projectcss.all,
                                  sty.typography33
                                )}
                              >
                                {false ? (
                                  <div
                                    data-plasmic-name={
                                      "signedByBaseTypographyParagraphMedium27"
                                    }
                                    data-plasmic-override={
                                      overrides.signedByBaseTypographyParagraphMedium27
                                    }
                                    className={classNames(
                                      projectcss.all,
                                      sty.signedByBaseTypographyParagraphMedium27
                                    )}
                                  />
                                ) : null}
                                <div
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.__wab_text,
                                    sty.text__bcZkz
                                  )}
                                >
                                  {"Text"}
                                </div>
                                {false ? (
                                  <div
                                    data-plasmic-name={"spacer63"}
                                    data-plasmic-override={overrides.spacer63}
                                    className={classNames(
                                      projectcss.all,
                                      sty.spacer63
                                    )}
                                  />
                                ) : null}
                              </div>
                            ) : null}
                          </Stack__>
                          {false ? (
                            <Stack__
                              as={"div"}
                              data-plasmic-name={"trailingEnhancer9"}
                              data-plasmic-override={
                                overrides.trailingEnhancer9
                              }
                              hasGap={true}
                              className={classNames(
                                projectcss.all,
                                sty.trailingEnhancer9
                              )}
                            >
                              <div
                                data-plasmic-name={"heart25"}
                                data-plasmic-override={overrides.heart25}
                                className={classNames(
                                  projectcss.all,
                                  sty.heart25
                                )}
                              >
                                {false ? (
                                  <Outlined5Icon
                                    className={classNames(
                                      projectcss.all,
                                      sty.svg__rUwi
                                    )}
                                    role={"img"}
                                  />
                                ) : null}
                                <Filled4Icon
                                  className={classNames(
                                    projectcss.all,
                                    sty.svg___9RJ
                                  )}
                                  role={"img"}
                                />
                              </div>
                            </Stack__>
                          ) : null}
                        </Stack__>
                        <Stack__
                          as={"div"}
                          data-plasmic-name={"menuItem13"}
                          data-plasmic-override={overrides.menuItem13}
                          hasGap={true}
                          className={classNames(projectcss.all, sty.menuItem13)}
                        >
                          {false ? (
                            <div
                              data-plasmic-name={
                                "signedByBaseMenuItemOptionMediumStandardEnabled10"
                              }
                              data-plasmic-override={
                                overrides.signedByBaseMenuItemOptionMediumStandardEnabled10
                              }
                              className={classNames(
                                projectcss.all,
                                sty.signedByBaseMenuItemOptionMediumStandardEnabled10
                              )}
                            />
                          ) : null}
                          {false ? (
                            <Stack__
                              as={"div"}
                              data-plasmic-name={
                                "menuItemControlMediumCheckboxUnchecked10"
                              }
                              data-plasmic-override={
                                overrides.menuItemControlMediumCheckboxUnchecked10
                              }
                              hasGap={true}
                              className={classNames(
                                projectcss.all,
                                sty.menuItemControlMediumCheckboxUnchecked10
                              )}
                            >
                              {false ? (
                                <div
                                  data-plasmic-name={
                                    "signedByBaseMenuItemControlMediumCheckboxUnchecked10"
                                  }
                                  data-plasmic-override={
                                    overrides.signedByBaseMenuItemControlMediumCheckboxUnchecked10
                                  }
                                  className={classNames(
                                    projectcss.all,
                                    sty.signedByBaseMenuItemControlMediumCheckboxUnchecked10
                                  )}
                                />
                              ) : null}
                              <div
                                data-plasmic-name={"icon10"}
                                data-plasmic-override={overrides.icon10}
                                className={classNames(
                                  projectcss.all,
                                  sty.icon10
                                )}
                              >
                                {false ? (
                                  <Outlined8Icon
                                    className={classNames(
                                      projectcss.all,
                                      sty.svg__mvWrq
                                    )}
                                    role={"img"}
                                  />
                                ) : null}
                                <Outlined8Icon
                                  className={classNames(
                                    projectcss.all,
                                    sty.svg__d1L3F
                                  )}
                                  role={"img"}
                                />
                              </div>
                            </Stack__>
                          ) : null}
                          {false ? (
                            <Stack__
                              as={"div"}
                              data-plasmic-name={"leadingEnhancer10"}
                              data-plasmic-override={
                                overrides.leadingEnhancer10
                              }
                              hasGap={true}
                              className={classNames(
                                projectcss.all,
                                sty.leadingEnhancer10
                              )}
                            >
                              <div
                                data-plasmic-name={"heart26"}
                                data-plasmic-override={overrides.heart26}
                                className={classNames(
                                  projectcss.all,
                                  sty.heart26
                                )}
                              >
                                {false ? (
                                  <Outlined5Icon
                                    className={classNames(
                                      projectcss.all,
                                      sty.svg___5Mzf4
                                    )}
                                    role={"img"}
                                  />
                                ) : null}
                                <Filled4Icon
                                  className={classNames(
                                    projectcss.all,
                                    sty.svg__cPjRf
                                  )}
                                  role={"img"}
                                />
                              </div>
                            </Stack__>
                          ) : null}
                          <Stack__
                            as={"div"}
                            data-plasmic-name={"textFrame10"}
                            data-plasmic-override={overrides.textFrame10}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.textFrame10
                            )}
                          >
                            <div
                              data-plasmic-name={"leadingText10"}
                              data-plasmic-override={overrides.leadingText10}
                              className={classNames(
                                projectcss.all,
                                sty.leadingText10
                              )}
                            >
                              <div
                                data-plasmic-name={"typography34"}
                                data-plasmic-override={overrides.typography34}
                                className={classNames(
                                  projectcss.all,
                                  sty.typography34
                                )}
                              >
                                {false ? (
                                  <div
                                    data-plasmic-name={
                                      "signedByBaseTypographyParagraphMedium28"
                                    }
                                    data-plasmic-override={
                                      overrides.signedByBaseTypographyParagraphMedium28
                                    }
                                    className={classNames(
                                      projectcss.all,
                                      sty.signedByBaseTypographyParagraphMedium28
                                    )}
                                  />
                                ) : null}
                                <div
                                  data-plasmic-name={"text74"}
                                  data-plasmic-override={overrides.text74}
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.__wab_text,
                                    sty.text74
                                  )}
                                >
                                  {"Mod\u00e8le de match 21h"}
                                </div>
                                {false ? (
                                  <div
                                    data-plasmic-name={"spacer64"}
                                    data-plasmic-override={overrides.spacer64}
                                    className={classNames(
                                      projectcss.all,
                                      sty.spacer64
                                    )}
                                  />
                                ) : null}
                              </div>
                              {false ? (
                                <div
                                  data-plasmic-name={"typography35"}
                                  data-plasmic-override={overrides.typography35}
                                  className={classNames(
                                    projectcss.all,
                                    sty.typography35
                                  )}
                                >
                                  {false ? (
                                    <div
                                      data-plasmic-name={
                                        "signedByBaseTypographyParagraphMedium29"
                                      }
                                      data-plasmic-override={
                                        overrides.signedByBaseTypographyParagraphMedium29
                                      }
                                      className={classNames(
                                        projectcss.all,
                                        sty.signedByBaseTypographyParagraphMedium29
                                      )}
                                    />
                                  ) : null}
                                  <div
                                    data-plasmic-name={"text75"}
                                    data-plasmic-override={overrides.text75}
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.__wab_text,
                                      sty.text75
                                    )}
                                  >
                                    {"Supporting text"}
                                  </div>
                                  {false ? (
                                    <div
                                      data-plasmic-name={"spacer65"}
                                      data-plasmic-override={overrides.spacer65}
                                      className={classNames(
                                        projectcss.all,
                                        sty.spacer65
                                      )}
                                    />
                                  ) : null}
                                </div>
                              ) : null}
                            </div>
                            {false ? (
                              <div
                                data-plasmic-name={"typography36"}
                                data-plasmic-override={overrides.typography36}
                                className={classNames(
                                  projectcss.all,
                                  sty.typography36
                                )}
                              >
                                {false ? (
                                  <div
                                    data-plasmic-name={
                                      "signedByBaseTypographyParagraphMedium30"
                                    }
                                    data-plasmic-override={
                                      overrides.signedByBaseTypographyParagraphMedium30
                                    }
                                    className={classNames(
                                      projectcss.all,
                                      sty.signedByBaseTypographyParagraphMedium30
                                    )}
                                  />
                                ) : null}
                                <div
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.__wab_text,
                                    sty.text___2HtAf
                                  )}
                                >
                                  {"Text"}
                                </div>
                                {false ? (
                                  <div
                                    data-plasmic-name={"spacer66"}
                                    data-plasmic-override={overrides.spacer66}
                                    className={classNames(
                                      projectcss.all,
                                      sty.spacer66
                                    )}
                                  />
                                ) : null}
                              </div>
                            ) : null}
                          </Stack__>
                          {false ? (
                            <Stack__
                              as={"div"}
                              data-plasmic-name={"trailingEnhancer10"}
                              data-plasmic-override={
                                overrides.trailingEnhancer10
                              }
                              hasGap={true}
                              className={classNames(
                                projectcss.all,
                                sty.trailingEnhancer10
                              )}
                            >
                              <div
                                data-plasmic-name={"checkmarkSmall3"}
                                data-plasmic-override={
                                  overrides.checkmarkSmall3
                                }
                                className={classNames(
                                  projectcss.all,
                                  sty.checkmarkSmall3
                                )}
                              >
                                {false ? (
                                  <Outlined9Icon
                                    className={classNames(
                                      projectcss.all,
                                      sty.svg__pbnl9
                                    )}
                                    role={"img"}
                                  />
                                ) : null}
                                <Outlined9Icon
                                  className={classNames(
                                    projectcss.all,
                                    sty.svg__bkTri
                                  )}
                                  role={"img"}
                                />
                              </div>
                            </Stack__>
                          ) : null}
                        </Stack__>
                        <Stack__
                          as={"div"}
                          data-plasmic-name={"menuItem14"}
                          data-plasmic-override={overrides.menuItem14}
                          hasGap={true}
                          className={classNames(projectcss.all, sty.menuItem14)}
                        >
                          {false ? (
                            <div
                              data-plasmic-name={
                                "signedByBaseMenuItemOptionMediumStandardEnabled11"
                              }
                              data-plasmic-override={
                                overrides.signedByBaseMenuItemOptionMediumStandardEnabled11
                              }
                              className={classNames(
                                projectcss.all,
                                sty.signedByBaseMenuItemOptionMediumStandardEnabled11
                              )}
                            />
                          ) : null}
                          {false ? (
                            <Stack__
                              as={"div"}
                              data-plasmic-name={
                                "menuItemControlMediumCheckboxUnchecked11"
                              }
                              data-plasmic-override={
                                overrides.menuItemControlMediumCheckboxUnchecked11
                              }
                              hasGap={true}
                              className={classNames(
                                projectcss.all,
                                sty.menuItemControlMediumCheckboxUnchecked11
                              )}
                            >
                              {false ? (
                                <div
                                  data-plasmic-name={
                                    "signedByBaseMenuItemControlMediumCheckboxUnchecked11"
                                  }
                                  data-plasmic-override={
                                    overrides.signedByBaseMenuItemControlMediumCheckboxUnchecked11
                                  }
                                  className={classNames(
                                    projectcss.all,
                                    sty.signedByBaseMenuItemControlMediumCheckboxUnchecked11
                                  )}
                                />
                              ) : null}
                              <div
                                data-plasmic-name={"icon11"}
                                data-plasmic-override={overrides.icon11}
                                className={classNames(
                                  projectcss.all,
                                  sty.icon11
                                )}
                              >
                                {false ? (
                                  <Outlined8Icon
                                    className={classNames(
                                      projectcss.all,
                                      sty.svg___0DB
                                    )}
                                    role={"img"}
                                  />
                                ) : null}
                                <Outlined8Icon
                                  className={classNames(
                                    projectcss.all,
                                    sty.svg___3HpVe
                                  )}
                                  role={"img"}
                                />
                              </div>
                            </Stack__>
                          ) : null}
                          {false ? (
                            <Stack__
                              as={"div"}
                              data-plasmic-name={"leadingEnhancer11"}
                              data-plasmic-override={
                                overrides.leadingEnhancer11
                              }
                              hasGap={true}
                              className={classNames(
                                projectcss.all,
                                sty.leadingEnhancer11
                              )}
                            >
                              <div
                                data-plasmic-name={"heart27"}
                                data-plasmic-override={overrides.heart27}
                                className={classNames(
                                  projectcss.all,
                                  sty.heart27
                                )}
                              >
                                {false ? (
                                  <Outlined5Icon
                                    className={classNames(
                                      projectcss.all,
                                      sty.svg___2AiJt
                                    )}
                                    role={"img"}
                                  />
                                ) : null}
                                <Filled4Icon
                                  className={classNames(
                                    projectcss.all,
                                    sty.svg__eoefr
                                  )}
                                  role={"img"}
                                />
                              </div>
                            </Stack__>
                          ) : null}
                          <IcRoundPlusIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg__g8Jli
                            )}
                            role={"img"}
                          />

                          <Stack__
                            as={"div"}
                            data-plasmic-name={"textFrame11"}
                            data-plasmic-override={overrides.textFrame11}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.textFrame11
                            )}
                          >
                            <div
                              data-plasmic-name={"leadingText11"}
                              data-plasmic-override={overrides.leadingText11}
                              className={classNames(
                                projectcss.all,
                                sty.leadingText11
                              )}
                            >
                              <div
                                data-plasmic-name={"typography37"}
                                data-plasmic-override={overrides.typography37}
                                className={classNames(
                                  projectcss.all,
                                  sty.typography37
                                )}
                              >
                                {false ? (
                                  <div
                                    data-plasmic-name={
                                      "signedByBaseTypographyParagraphMedium31"
                                    }
                                    data-plasmic-override={
                                      overrides.signedByBaseTypographyParagraphMedium31
                                    }
                                    className={classNames(
                                      projectcss.all,
                                      sty.signedByBaseTypographyParagraphMedium31
                                    )}
                                  />
                                ) : null}
                                <div
                                  data-plasmic-name={"text76"}
                                  data-plasmic-override={overrides.text76}
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.__wab_text,
                                    sty.text76
                                  )}
                                >
                                  {"Dispositif vierge"}
                                </div>
                                {false ? (
                                  <div
                                    data-plasmic-name={"spacer67"}
                                    data-plasmic-override={overrides.spacer67}
                                    className={classNames(
                                      projectcss.all,
                                      sty.spacer67
                                    )}
                                  />
                                ) : null}
                              </div>
                              {false ? (
                                <div
                                  data-plasmic-name={"typography38"}
                                  data-plasmic-override={overrides.typography38}
                                  className={classNames(
                                    projectcss.all,
                                    sty.typography38
                                  )}
                                >
                                  {false ? (
                                    <div
                                      data-plasmic-name={
                                        "signedByBaseTypographyParagraphMedium32"
                                      }
                                      data-plasmic-override={
                                        overrides.signedByBaseTypographyParagraphMedium32
                                      }
                                      className={classNames(
                                        projectcss.all,
                                        sty.signedByBaseTypographyParagraphMedium32
                                      )}
                                    />
                                  ) : null}
                                  <div
                                    data-plasmic-name={"text77"}
                                    data-plasmic-override={overrides.text77}
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.__wab_text,
                                      sty.text77
                                    )}
                                  >
                                    {"Supporting text"}
                                  </div>
                                  {false ? (
                                    <div
                                      data-plasmic-name={"spacer68"}
                                      data-plasmic-override={overrides.spacer68}
                                      className={classNames(
                                        projectcss.all,
                                        sty.spacer68
                                      )}
                                    />
                                  ) : null}
                                </div>
                              ) : null}
                            </div>
                            {false ? (
                              <div
                                data-plasmic-name={"typography39"}
                                data-plasmic-override={overrides.typography39}
                                className={classNames(
                                  projectcss.all,
                                  sty.typography39
                                )}
                              >
                                {false ? (
                                  <div
                                    data-plasmic-name={
                                      "signedByBaseTypographyParagraphMedium33"
                                    }
                                    data-plasmic-override={
                                      overrides.signedByBaseTypographyParagraphMedium33
                                    }
                                    className={classNames(
                                      projectcss.all,
                                      sty.signedByBaseTypographyParagraphMedium33
                                    )}
                                  />
                                ) : null}
                                <div
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.__wab_text,
                                    sty.text__mLp1Q
                                  )}
                                >
                                  {"Text"}
                                </div>
                                {false ? (
                                  <div
                                    data-plasmic-name={"spacer69"}
                                    data-plasmic-override={overrides.spacer69}
                                    className={classNames(
                                      projectcss.all,
                                      sty.spacer69
                                    )}
                                  />
                                ) : null}
                              </div>
                            ) : null}
                          </Stack__>
                          {false ? (
                            <Stack__
                              as={"div"}
                              data-plasmic-name={"trailingEnhancer11"}
                              data-plasmic-override={
                                overrides.trailingEnhancer11
                              }
                              hasGap={true}
                              className={classNames(
                                projectcss.all,
                                sty.trailingEnhancer11
                              )}
                            >
                              <div
                                data-plasmic-name={"heart28"}
                                data-plasmic-override={overrides.heart28}
                                className={classNames(
                                  projectcss.all,
                                  sty.heart28
                                )}
                              >
                                {false ? (
                                  <Outlined5Icon
                                    className={classNames(
                                      projectcss.all,
                                      sty.svg___4AXlg
                                    )}
                                    role={"img"}
                                  />
                                ) : null}
                                <Filled4Icon
                                  className={classNames(
                                    projectcss.all,
                                    sty.svg__ir3Xu
                                  )}
                                  role={"img"}
                                />
                              </div>
                            </Stack__>
                          ) : null}
                        </Stack__>
                        {false ? (
                          <Stack__
                            as={"div"}
                            data-plasmic-name={"menuItem15"}
                            data-plasmic-override={overrides.menuItem15}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.menuItem15
                            )}
                          >
                            {false ? (
                              <div
                                data-plasmic-name={
                                  "signedByBaseMenuItemOptionMediumStandardEnabled12"
                                }
                                data-plasmic-override={
                                  overrides.signedByBaseMenuItemOptionMediumStandardEnabled12
                                }
                                className={classNames(
                                  projectcss.all,
                                  sty.signedByBaseMenuItemOptionMediumStandardEnabled12
                                )}
                              />
                            ) : null}
                            {false ? (
                              <Stack__
                                as={"div"}
                                data-plasmic-name={
                                  "menuItemControlMediumCheckboxUnchecked12"
                                }
                                data-plasmic-override={
                                  overrides.menuItemControlMediumCheckboxUnchecked12
                                }
                                hasGap={true}
                                className={classNames(
                                  projectcss.all,
                                  sty.menuItemControlMediumCheckboxUnchecked12
                                )}
                              >
                                {false ? (
                                  <div
                                    data-plasmic-name={
                                      "signedByBaseMenuItemControlMediumCheckboxUnchecked12"
                                    }
                                    data-plasmic-override={
                                      overrides.signedByBaseMenuItemControlMediumCheckboxUnchecked12
                                    }
                                    className={classNames(
                                      projectcss.all,
                                      sty.signedByBaseMenuItemControlMediumCheckboxUnchecked12
                                    )}
                                  />
                                ) : null}
                                <div
                                  data-plasmic-name={"icon12"}
                                  data-plasmic-override={overrides.icon12}
                                  className={classNames(
                                    projectcss.all,
                                    sty.icon12
                                  )}
                                >
                                  {false ? (
                                    <Outlined8Icon
                                      className={classNames(
                                        projectcss.all,
                                        sty.svg__u36GK
                                      )}
                                      role={"img"}
                                    />
                                  ) : null}
                                  <Outlined8Icon
                                    className={classNames(
                                      projectcss.all,
                                      sty.svg__v9LO
                                    )}
                                    role={"img"}
                                  />
                                </div>
                              </Stack__>
                            ) : null}
                            {false ? (
                              <Stack__
                                as={"div"}
                                data-plasmic-name={"leadingEnhancer12"}
                                data-plasmic-override={
                                  overrides.leadingEnhancer12
                                }
                                hasGap={true}
                                className={classNames(
                                  projectcss.all,
                                  sty.leadingEnhancer12
                                )}
                              >
                                <div
                                  data-plasmic-name={"heart29"}
                                  data-plasmic-override={overrides.heart29}
                                  className={classNames(
                                    projectcss.all,
                                    sty.heart29
                                  )}
                                >
                                  {false ? (
                                    <Outlined5Icon
                                      className={classNames(
                                        projectcss.all,
                                        sty.svg__wwPt0
                                      )}
                                      role={"img"}
                                    />
                                  ) : null}
                                  <Filled4Icon
                                    className={classNames(
                                      projectcss.all,
                                      sty.svg__wyuoz
                                    )}
                                    role={"img"}
                                  />
                                </div>
                              </Stack__>
                            ) : null}
                            <Stack__
                              as={"div"}
                              data-plasmic-name={"textFrame12"}
                              data-plasmic-override={overrides.textFrame12}
                              hasGap={true}
                              className={classNames(
                                projectcss.all,
                                sty.textFrame12
                              )}
                            >
                              <div
                                data-plasmic-name={"leadingText12"}
                                data-plasmic-override={overrides.leadingText12}
                                className={classNames(
                                  projectcss.all,
                                  sty.leadingText12
                                )}
                              >
                                <div
                                  data-plasmic-name={"typography40"}
                                  data-plasmic-override={overrides.typography40}
                                  className={classNames(
                                    projectcss.all,
                                    sty.typography40
                                  )}
                                >
                                  {false ? (
                                    <div
                                      data-plasmic-name={
                                        "signedByBaseTypographyParagraphMedium34"
                                      }
                                      data-plasmic-override={
                                        overrides.signedByBaseTypographyParagraphMedium34
                                      }
                                      className={classNames(
                                        projectcss.all,
                                        sty.signedByBaseTypographyParagraphMedium34
                                      )}
                                    />
                                  ) : null}
                                  <div
                                    data-plasmic-name={"text78"}
                                    data-plasmic-override={overrides.text78}
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.__wab_text,
                                      sty.text78
                                    )}
                                  >
                                    {"Options"}
                                  </div>
                                  {false ? (
                                    <div
                                      data-plasmic-name={"spacer70"}
                                      data-plasmic-override={overrides.spacer70}
                                      className={classNames(
                                        projectcss.all,
                                        sty.spacer70
                                      )}
                                    />
                                  ) : null}
                                </div>
                                {false ? (
                                  <div
                                    data-plasmic-name={"typography41"}
                                    data-plasmic-override={
                                      overrides.typography41
                                    }
                                    className={classNames(
                                      projectcss.all,
                                      sty.typography41
                                    )}
                                  >
                                    {false ? (
                                      <div
                                        data-plasmic-name={
                                          "signedByBaseTypographyParagraphMedium35"
                                        }
                                        data-plasmic-override={
                                          overrides.signedByBaseTypographyParagraphMedium35
                                        }
                                        className={classNames(
                                          projectcss.all,
                                          sty.signedByBaseTypographyParagraphMedium35
                                        )}
                                      />
                                    ) : null}
                                    <div
                                      data-plasmic-name={"text79"}
                                      data-plasmic-override={overrides.text79}
                                      className={classNames(
                                        projectcss.all,
                                        projectcss.__wab_text,
                                        sty.text79
                                      )}
                                    >
                                      {"Supporting text"}
                                    </div>
                                    {false ? (
                                      <div
                                        data-plasmic-name={"spacer71"}
                                        data-plasmic-override={
                                          overrides.spacer71
                                        }
                                        className={classNames(
                                          projectcss.all,
                                          sty.spacer71
                                        )}
                                      />
                                    ) : null}
                                  </div>
                                ) : null}
                              </div>
                              {false ? (
                                <div
                                  data-plasmic-name={"typography42"}
                                  data-plasmic-override={overrides.typography42}
                                  className={classNames(
                                    projectcss.all,
                                    sty.typography42
                                  )}
                                >
                                  {false ? (
                                    <div
                                      data-plasmic-name={
                                        "signedByBaseTypographyParagraphMedium36"
                                      }
                                      data-plasmic-override={
                                        overrides.signedByBaseTypographyParagraphMedium36
                                      }
                                      className={classNames(
                                        projectcss.all,
                                        sty.signedByBaseTypographyParagraphMedium36
                                      )}
                                    />
                                  ) : null}
                                  <div
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.__wab_text,
                                      sty.text__vbD0L
                                    )}
                                  >
                                    {"Text"}
                                  </div>
                                  {false ? (
                                    <div
                                      data-plasmic-name={"spacer72"}
                                      data-plasmic-override={overrides.spacer72}
                                      className={classNames(
                                        projectcss.all,
                                        sty.spacer72
                                      )}
                                    />
                                  ) : null}
                                </div>
                              ) : null}
                            </Stack__>
                            {false ? (
                              <Stack__
                                as={"div"}
                                data-plasmic-name={"trailingEnhancer12"}
                                data-plasmic-override={
                                  overrides.trailingEnhancer12
                                }
                                hasGap={true}
                                className={classNames(
                                  projectcss.all,
                                  sty.trailingEnhancer12
                                )}
                              >
                                <div
                                  data-plasmic-name={"heart30"}
                                  data-plasmic-override={overrides.heart30}
                                  className={classNames(
                                    projectcss.all,
                                    sty.heart30
                                  )}
                                >
                                  {false ? (
                                    <Outlined5Icon
                                      className={classNames(
                                        projectcss.all,
                                        sty.svg___5Pq7J
                                      )}
                                      role={"img"}
                                    />
                                  ) : null}
                                  <Filled4Icon
                                    className={classNames(
                                      projectcss.all,
                                      sty.svg__sFozC
                                    )}
                                    role={"img"}
                                  />
                                </div>
                              </Stack__>
                            ) : null}
                          </Stack__>
                        ) : null}
                        <div
                          data-plasmic-name={"scrollBar3"}
                          data-plasmic-override={overrides.scrollBar3}
                          className={classNames(projectcss.all, sty.scrollBar3)}
                        />
                      </div>
                    </div>
                  </Stack__>
                ) : null}
                <DropDown
                  data-plasmic-name={"model3"}
                  data-plasmic-override={overrides.model3}
                  check={false}
                  className={classNames("__wab_instance", sty.model3)}
                  label={"Mod\u00e8le de Runsheet & Dispositif*"}
                  options={["Default", "Special"]}
                  showLabel={true}
                  state={"default"}
                  type={"default"}
                />

                <Stack__
                  as={"div"}
                  data-plasmic-name={"buttons3"}
                  data-plasmic-override={overrides.buttons3}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.buttons3)}
                >
                  <Button
                    data-plasmic-name={"button9"}
                    data-plasmic-override={overrides.button9}
                    className={classNames("__wab_instance", sty.button9)}
                    label={
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__qAyZm
                        )}
                      >
                        {"Cr\u00e9er"}
                      </div>
                    }
                  />

                  {false ? (
                    <Stack__
                      as={"div"}
                      data-plasmic-name={"frame1073713926"}
                      data-plasmic-override={overrides.frame1073713926}
                      hasGap={true}
                      className={classNames(
                        projectcss.all,
                        sty.frame1073713926
                      )}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__vmRqW
                        )}
                      >
                        <Line9Icon
                          className={classNames(projectcss.all, sty.svg__bmZjo)}
                          role={"img"}
                        />
                      </div>
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__e9On7
                        )}
                      >
                        {"OU"}
                      </div>
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox___0Ol9R
                        )}
                      >
                        <Line9Icon
                          className={classNames(projectcss.all, sty.svg___4OVY)}
                          role={"img"}
                        />
                      </div>
                    </Stack__>
                  ) : null}
                  {false ? (
                    <Stack__
                      as={"div"}
                      data-plasmic-name={"frame1073713932"}
                      data-plasmic-override={overrides.frame1073713932}
                      hasGap={true}
                      className={classNames(
                        projectcss.all,
                        sty.frame1073713932
                      )}
                    >
                      <Button
                        data-plasmic-name={"button10"}
                        data-plasmic-override={overrides.button10}
                        className={classNames("__wab_instance", sty.button10)}
                      />

                      <Stack__
                        as={"div"}
                        data-plasmic-name={"button11"}
                        data-plasmic-override={overrides.button11}
                        hasGap={true}
                        className={classNames(projectcss.all, sty.button11)}
                      >
                        <IcTwotoneAppleIcon
                          className={classNames(
                            projectcss.all,
                            sty.svg___9EDzv
                          )}
                          role={"img"}
                        />

                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__r1DoC
                          )}
                        >
                          {"Apple"}
                        </div>
                      </Stack__>
                      <Stack__
                        as={"div"}
                        data-plasmic-name={"button12"}
                        data-plasmic-override={overrides.button12}
                        hasGap={true}
                        className={classNames(projectcss.all, sty.button12)}
                      >
                        <MdiFacebookIcon
                          className={classNames(projectcss.all, sty.svg__hAmHt)}
                          role={"img"}
                        />

                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__vbcRo
                          )}
                        >
                          {"Facebook"}
                        </div>
                      </Stack__>
                    </Stack__>
                  ) : null}
                </Stack__>
              </Stack__>
            </React.Fragment>
          }
          footer={
            <div className={classNames(projectcss.all, sty.freeBox__h6Uij)} />
          }
          heading={
            <div
              data-plasmic-name={"frame1437254018"}
              data-plasmic-override={overrides.frame1437254018}
              className={classNames(projectcss.all, sty.frame1437254018)}
            >
              <div
                data-plasmic-name={"name7"}
                data-plasmic-override={overrides.name7}
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.name7
                )}
              >
                <React.Fragment>
                  {(() => {
                    try {
                      return "Êtes-vous sûr(e) ?";
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return "Supprimer";
                      }
                      throw e;
                    }
                  })()}
                </React.Fragment>
              </div>
              <Stack__
                as={"div"}
                data-plasmic-name={"frame1437254021"}
                data-plasmic-override={overrides.frame1437254021}
                hasGap={true}
                className={classNames(projectcss.all, sty.frame1437254021)}
              >
                <LinkSimpleIcon
                  className={classNames(projectcss.all, sty.svg__cwIHy)}
                  role={"img"}
                />

                <XIcon
                  className={classNames(projectcss.all, sty.svg__mcSbA)}
                  onClick={async event => {
                    const $steps = {};

                    $steps["updateDeletePosition"] = true
                      ? (() => {
                          const actionArgs = {
                            variable: {
                              objRoot: $state,
                              variablePath: ["deletePosition"]
                            },
                            operation: 0,
                            value: false
                          };
                          return (({
                            variable,
                            value,
                            startIndex,
                            deleteCount
                          }) => {
                            if (!variable) {
                              return;
                            }
                            const { objRoot, variablePath } = variable;

                            $stateSet(objRoot, variablePath, value);
                            return value;
                          })?.apply(null, [actionArgs]);
                        })()
                      : undefined;
                    if (
                      $steps["updateDeletePosition"] != null &&
                      typeof $steps["updateDeletePosition"] === "object" &&
                      typeof $steps["updateDeletePosition"].then === "function"
                    ) {
                      $steps["updateDeletePosition"] = await $steps[
                        "updateDeletePosition"
                      ];
                    }
                  }}
                  role={"img"}
                />
              </Stack__>
            </div>
          }
          isOpen={generateStateValueProp($state, ["deletePosition2", "isOpen"])}
          noTrigger={true}
          onOpenChange={async (...eventArgs: any) => {
            generateStateOnChangeProp($state, [
              "deletePosition2",
              "isOpen"
            ]).apply(null, eventArgs);

            if (
              eventArgs.length > 1 &&
              eventArgs[1] &&
              eventArgs[1]._plasmic_state_init_
            ) {
              return;
            }

            (async val => {
              const $steps = {};

              $steps["updateDeletePosition"] = true
                ? (() => {
                    const actionArgs = {
                      variable: {
                        objRoot: $state,
                        variablePath: ["deletePosition"]
                      },
                      operation: 0
                    };
                    return (({ variable, value, startIndex, deleteCount }) => {
                      if (!variable) {
                        return;
                      }
                      const { objRoot, variablePath } = variable;

                      $stateSet(objRoot, variablePath, value);
                      return value;
                    })?.apply(null, [actionArgs]);
                  })()
                : undefined;
              if (
                $steps["updateDeletePosition"] != null &&
                typeof $steps["updateDeletePosition"] === "object" &&
                typeof $steps["updateDeletePosition"].then === "function"
              ) {
                $steps["updateDeletePosition"] = await $steps[
                  "updateDeletePosition"
                ];
              }
            }).apply(null, eventArgs);
          }}
          showFooter={false}
          trigger={null}
        />

        <Modal
          data-plasmic-name={"duplicate"}
          data-plasmic-override={overrides.duplicate}
          className={classNames("__wab_instance", sty.duplicate)}
          closeOnBackdropClick={true}
          content={
            <React.Fragment>
              {(() => {
                const child$Props = {
                  className: classNames(
                    "__wab_instance",
                    sty.formDuplicateModel
                  ),
                  extendedOnValuesChange: async (...eventArgs: any) => {
                    generateStateOnChangePropForCodeComponents(
                      $state,
                      "value",
                      ["formDuplicateModel", "value"],
                      FormWrapper_Helpers
                    ).apply(null, eventArgs);
                  },
                  formItems: [
                    { label: "Name", name: "name", inputType: "Text" },
                    {
                      label: "Message",
                      name: "message",
                      inputType: "Text Area"
                    }
                  ],
                  initialValues: (() => {
                    try {
                      return (
                        $queries.poPositions.data.find(
                          p => p.id === $state.positionId
                        ) || $queries.poPositions.data[0]
                      );
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return undefined;
                      }
                      throw e;
                    }
                  })(),
                  labelCol: { span: 8, horizontalOnly: true },
                  layout: "vertical",
                  mode: "advanced",
                  onFinish: async values => {
                    const $steps = {};

                    $steps["postgresCreate"] = true
                      ? (() => {
                          const actionArgs = {
                            dataOp: {
                              sourceId: "v6umJuHyep6kPNyCAJjouT",
                              opId: "8c9ee05b-05bb-44a3-9515-dc18ccbdebaf",
                              userArgs: {
                                variables: [
                                  ($state.formDuplicateModel.value =
                                    Object.fromEntries(
                                      Object.entries(
                                        $state.formDuplicateModel.value
                                      ).filter(([key, value]) => key !== "id")
                                    ))
                                ]
                              },
                              cacheKey: null,
                              invalidatedKeys: ["plasmic_refresh_all"],
                              roleId: null
                            }
                          };
                          return (async ({ dataOp, continueOnError }) => {
                            try {
                              const response = await executePlasmicDataOp(
                                dataOp,
                                {
                                  userAuthToken: dataSourcesCtx?.userAuthToken,
                                  user: dataSourcesCtx?.user
                                }
                              );
                              await plasmicInvalidate(dataOp.invalidatedKeys);
                              return response;
                            } catch (e) {
                              if (!continueOnError) {
                                throw e;
                              }
                              return e;
                            }
                          })?.apply(null, [actionArgs]);
                        })()
                      : undefined;
                    if (
                      $steps["postgresCreate"] != null &&
                      typeof $steps["postgresCreate"] === "object" &&
                      typeof $steps["postgresCreate"].then === "function"
                    ) {
                      $steps["postgresCreate"] = await $steps["postgresCreate"];
                    }

                    $steps["updateDuplicatePosition"] = true
                      ? (() => {
                          const actionArgs = {
                            variable: {
                              objRoot: $state,
                              variablePath: ["duplicatePosition"]
                            },
                            operation: 0,
                            value: false
                          };
                          return (({
                            variable,
                            value,
                            startIndex,
                            deleteCount
                          }) => {
                            if (!variable) {
                              return;
                            }
                            const { objRoot, variablePath } = variable;

                            $stateSet(objRoot, variablePath, value);
                            return value;
                          })?.apply(null, [actionArgs]);
                        })()
                      : undefined;
                    if (
                      $steps["updateDuplicatePosition"] != null &&
                      typeof $steps["updateDuplicatePosition"] === "object" &&
                      typeof $steps["updateDuplicatePosition"].then ===
                        "function"
                    ) {
                      $steps["updateDuplicatePosition"] = await $steps[
                        "updateDuplicatePosition"
                      ];
                    }

                    $steps["invokeGlobalAction"] = true
                      ? (() => {
                          const actionArgs = {
                            args: ["success", "Position dupliqu\u00e9e"]
                          };
                          return $globalActions[
                            "plasmic-antd5-config-provider.showNotification"
                          ]?.apply(null, [...actionArgs.args]);
                        })()
                      : undefined;
                    if (
                      $steps["invokeGlobalAction"] != null &&
                      typeof $steps["invokeGlobalAction"] === "object" &&
                      typeof $steps["invokeGlobalAction"].then === "function"
                    ) {
                      $steps["invokeGlobalAction"] = await $steps[
                        "invokeGlobalAction"
                      ];
                    }
                  },
                  onIsSubmittingChange: async (...eventArgs: any) => {
                    generateStateOnChangePropForCodeComponents(
                      $state,
                      "isSubmitting",
                      ["formDuplicateModel", "isSubmitting"],
                      FormWrapper_Helpers
                    ).apply(null, eventArgs);
                  },
                  ref: ref => {
                    $refs["formDuplicateModel"] = ref;
                  },
                  submitSlot: null,
                  wrapperCol: { span: 16, horizontalOnly: true }
                };
                initializeCodeComponentStates(
                  $state,
                  [
                    {
                      name: "value",
                      plasmicStateName: "formDuplicateModel.value"
                    },
                    {
                      name: "isSubmitting",
                      plasmicStateName: "formDuplicateModel.isSubmitting"
                    }
                  ],
                  [],
                  FormWrapper_Helpers ?? {},
                  child$Props
                );

                return (
                  <FormWrapper
                    data-plasmic-name={"formDuplicateModel"}
                    data-plasmic-override={overrides.formDuplicateModel}
                    {...child$Props}
                  >
                    <Button
                      className={classNames(
                        "__wab_instance",
                        sty.button___6ZwJk
                      )}
                      disabled={(() => {
                        try {
                          return (
                            $state.positionId === undefined ||
                            $state.positionId === 0
                          );
                        } catch (e) {
                          if (
                            e instanceof TypeError ||
                            e?.plasmicType === "PlasmicUndefinedDataError"
                          ) {
                            return undefined;
                          }
                          throw e;
                        }
                      })()}
                      label={"Dupliquer"}
                      submitsForm={true}
                    />
                  </FormWrapper>
                );
              })()}
              <Stack__
                as={"div"}
                data-plasmic-name={"content4"}
                data-plasmic-override={overrides.content4}
                hasGap={true}
                className={classNames(projectcss.all, sty.content4)}
              >
                <TextInput
                  data-plasmic-name={"titre6"}
                  data-plasmic-override={overrides.titre6}
                  className={classNames("__wab_instance", sty.titre6)}
                  isMulti={false}
                  label={"Titre*"}
                  placeholder={"Titre*"}
                  showIcon={false}
                  showLabel={true}
                  state={"default"}
                  text={``}
                  type={"text"}
                />

                <SitexTextInput
                  data-plasmic-name={"texinput24"}
                  data-plasmic-override={overrides.texinput24}
                  className={classNames("__wab_instance", sty.texinput24)}
                  initialValue={generateStateValueProp($state, [
                    "texinput24",
                    "value"
                  ])}
                  onTextChange={async (...eventArgs: any) => {
                    generateStateOnChangeProp($state, [
                      "texinput24",
                      "value"
                    ]).apply(null, eventArgs);
                  }}
                  onValidationChange={async (...eventArgs: any) => {
                    generateStateOnChangeProp($state, [
                      "texinput24",
                      "isInputValid"
                    ]).apply(null, eventArgs);
                  }}
                  placeholder={"Titre*"}
                  prefixedText={"Titre*"}
                  required={true}
                  type={"text"}
                />

                <Stack__
                  as={"div"}
                  data-plasmic-name={"date4"}
                  data-plasmic-override={overrides.date4}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.date4)}
                >
                  <div
                    data-plasmic-name={"label9"}
                    data-plasmic-override={overrides.label9}
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.label9
                    )}
                  >
                    {"Date et heure de d\u00e9but"}
                  </div>
                  {(() => {
                    const child$Props = {
                      allowClear: true,
                      className: classNames("__wab_instance", sty.timePicker10),
                      onChange: async (...eventArgs: any) => {
                        generateStateOnChangePropForCodeComponents(
                          $state,
                          "value",
                          ["timePicker10", "value"],
                          AntdDatePicker_Helpers
                        ).apply(null, eventArgs);
                      },
                      popupScopeClassName: sty["timePicker10__datePickerPopup"],
                      showTime: true,
                      value: generateStateValueProp($state, [
                        "timePicker10",
                        "value"
                      ])
                    };
                    initializeCodeComponentStates(
                      $state,
                      [
                        {
                          name: "value",
                          plasmicStateName: "timePicker10.value"
                        }
                      ],
                      [],
                      AntdDatePicker_Helpers ?? {},
                      child$Props
                    );

                    return (
                      <AntdDatePicker
                        data-plasmic-name={"timePicker10"}
                        data-plasmic-override={overrides.timePicker10}
                        {...child$Props}
                      />
                    );
                  })()}
                </Stack__>
                <DropDown
                  data-plasmic-name={"type6"}
                  data-plasmic-override={overrides.type6}
                  check={false}
                  className={classNames("__wab_instance", sty.type6)}
                  label={"Type"}
                  options={["Default", "Special"]}
                  showLabel={true}
                  state={"default"}
                  type={"default"}
                />

                <TextInput
                  data-plasmic-name={"budget6"}
                  data-plasmic-override={overrides.budget6}
                  className={classNames("__wab_instance", sty.budget6)}
                  isMulti={false}
                  label={"Budget"}
                  placeholder={"\u20ac"}
                  showIcon={false}
                  showLabel={true}
                  state={"default"}
                  text={""}
                  type={"text"}
                />

                <TextInput
                  data-plasmic-name={"comments4"}
                  data-plasmic-override={overrides.comments4}
                  className={classNames("__wab_instance", sty.comments4)}
                  isMulti={false}
                  label={"Commentaires"}
                  placeholder={"Commentaires"}
                  showIcon={false}
                  showLabel={true}
                  state={"Placeholder"}
                  text={""}
                  type={"TextArea"}
                />

                {false ? (
                  <Stack__
                    as={"div"}
                    data-plasmic-name={"input10"}
                    data-plasmic-override={overrides.input10}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.input10)}
                  >
                    <div
                      data-plasmic-name={"name8"}
                      data-plasmic-override={overrides.name8}
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.name8
                      )}
                    >
                      {"Dispositif"}
                    </div>
                    <Stack__
                      as={"div"}
                      data-plasmic-name={"datePickerWeb4"}
                      data-plasmic-override={overrides.datePickerWeb4}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.datePickerWeb4)}
                    >
                      <Stack__
                        as={"div"}
                        data-plasmic-name={"inputSelect4"}
                        data-plasmic-override={overrides.inputSelect4}
                        hasGap={true}
                        className={classNames(projectcss.all, sty.inputSelect4)}
                      >
                        {false ? (
                          <div
                            data-plasmic-name={"signedByBaseFieldGroupSmall4"}
                            data-plasmic-override={
                              overrides.signedByBaseFieldGroupSmall4
                            }
                            className={classNames(
                              projectcss.all,
                              sty.signedByBaseFieldGroupSmall4
                            )}
                          />
                        ) : null}
                        <Stack__
                          as={"div"}
                          data-plasmic-name={"endDateCalendar4"}
                          data-plasmic-override={overrides.endDateCalendar4}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.endDateCalendar4
                          )}
                        >
                          {false ? (
                            <div
                              data-plasmic-name={"inputElementTextField7"}
                              data-plasmic-override={
                                overrides.inputElementTextField7
                              }
                              className={classNames(
                                projectcss.all,
                                sty.inputElementTextField7
                              )}
                            >
                              {false ? (
                                <div
                                  data-plasmic-name={
                                    "signedByBaseInputElementTextFieldSmallEnabled4"
                                  }
                                  data-plasmic-override={
                                    overrides.signedByBaseInputElementTextFieldSmallEnabled4
                                  }
                                  className={classNames(
                                    projectcss.all,
                                    sty.signedByBaseInputElementTextFieldSmallEnabled4
                                  )}
                                />
                              ) : null}
                              {false ? (
                                <div
                                  data-plasmic-name={
                                    "leadingArtworkContainer13"
                                  }
                                  data-plasmic-override={
                                    overrides.leadingArtworkContainer13
                                  }
                                  className={classNames(
                                    projectcss.all,
                                    sty.leadingArtworkContainer13
                                  )}
                                >
                                  <div
                                    data-plasmic-name={"leadingArtwork7"}
                                    data-plasmic-override={
                                      overrides.leadingArtwork7
                                    }
                                    className={classNames(
                                      projectcss.all,
                                      sty.leadingArtwork7
                                    )}
                                  >
                                    {false ? (
                                      <OutlinedIcon
                                        className={classNames(
                                          projectcss.all,
                                          sty.svg__gcb2C
                                        )}
                                        role={"img"}
                                      />
                                    ) : null}
                                    <FilledIcon
                                      className={classNames(
                                        projectcss.all,
                                        sty.svg___4O1N
                                      )}
                                      role={"img"}
                                    />
                                  </div>
                                </div>
                              ) : null}
                              {false ? (
                                <div
                                  data-plasmic-name={"leadingLabelContainer13"}
                                  data-plasmic-override={
                                    overrides.leadingLabelContainer13
                                  }
                                  className={classNames(
                                    projectcss.all,
                                    sty.leadingLabelContainer13
                                  )}
                                >
                                  <div
                                    data-plasmic-name={"leadingLabel13"}
                                    data-plasmic-override={
                                      overrides.leadingLabel13
                                    }
                                    className={classNames(
                                      projectcss.all,
                                      sty.leadingLabel13
                                    )}
                                  >
                                    {false ? (
                                      <div
                                        data-plasmic-name={
                                          "signedByBaseTypographyLabelSmall7"
                                        }
                                        data-plasmic-override={
                                          overrides.signedByBaseTypographyLabelSmall7
                                        }
                                        className={classNames(
                                          projectcss.all,
                                          sty.signedByBaseTypographyLabelSmall7
                                        )}
                                      />
                                    ) : null}
                                    <div
                                      data-plasmic-name={"text80"}
                                      data-plasmic-override={overrides.text80}
                                      className={classNames(
                                        projectcss.all,
                                        projectcss.__wab_text,
                                        sty.text80
                                      )}
                                    >
                                      {"$"}
                                    </div>
                                    {false ? (
                                      <div
                                        data-plasmic-name={"spacer73"}
                                        data-plasmic-override={
                                          overrides.spacer73
                                        }
                                        className={classNames(
                                          projectcss.all,
                                          sty.spacer73
                                        )}
                                      />
                                    ) : null}
                                  </div>
                                </div>
                              ) : null}
                              <div
                                data-plasmic-name={"inputElementContentText13"}
                                data-plasmic-override={
                                  overrides.inputElementContentText13
                                }
                                className={classNames(
                                  projectcss.all,
                                  sty.inputElementContentText13
                                )}
                              >
                                {false ? (
                                  <div
                                    data-plasmic-name={
                                      "signedByBaseInputElementContentTextSmallOff4"
                                    }
                                    data-plasmic-override={
                                      overrides.signedByBaseInputElementContentTextSmallOff4
                                    }
                                    className={classNames(
                                      projectcss.all,
                                      sty.signedByBaseInputElementContentTextSmallOff4
                                    )}
                                  />
                                ) : null}
                                <div
                                  data-plasmic-name={"text81"}
                                  data-plasmic-override={overrides.text81}
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.__wab_text,
                                    sty.text81
                                  )}
                                >
                                  {"MM/DD/YYYY"}
                                </div>
                              </div>
                              {false ? (
                                <div
                                  data-plasmic-name={"trailingLabelEnhancer13"}
                                  data-plasmic-override={
                                    overrides.trailingLabelEnhancer13
                                  }
                                  className={classNames(
                                    projectcss.all,
                                    sty.trailingLabelEnhancer13
                                  )}
                                >
                                  {false ? (
                                    <div
                                      data-plasmic-name={"trailingLabel13"}
                                      data-plasmic-override={
                                        overrides.trailingLabel13
                                      }
                                      className={classNames(
                                        projectcss.all,
                                        sty.trailingLabel13
                                      )}
                                    >
                                      {false ? (
                                        <div
                                          data-plasmic-name={
                                            "signedByBaseTypographyLabelSmall8"
                                          }
                                          data-plasmic-override={
                                            overrides.signedByBaseTypographyLabelSmall8
                                          }
                                          className={classNames(
                                            projectcss.all,
                                            sty.signedByBaseTypographyLabelSmall8
                                          )}
                                        />
                                      ) : null}
                                      <div
                                        data-plasmic-name={"text82"}
                                        data-plasmic-override={overrides.text82}
                                        className={classNames(
                                          projectcss.all,
                                          projectcss.__wab_text,
                                          sty.text82
                                        )}
                                      >
                                        {"USD"}
                                      </div>
                                      {false ? (
                                        <div
                                          data-plasmic-name={"spacer74"}
                                          data-plasmic-override={
                                            overrides.spacer74
                                          }
                                          className={classNames(
                                            projectcss.all,
                                            sty.spacer74
                                          )}
                                        />
                                      ) : null}
                                    </div>
                                  ) : null}
                                </div>
                              ) : null}
                              {false ? (
                                <div
                                  data-plasmic-name={
                                    "trailingArtworkContainer13"
                                  }
                                  data-plasmic-override={
                                    overrides.trailingArtworkContainer13
                                  }
                                  className={classNames(
                                    projectcss.all,
                                    sty.trailingArtworkContainer13
                                  )}
                                >
                                  <div
                                    data-plasmic-name={"trailingArtwork13"}
                                    data-plasmic-override={
                                      overrides.trailingArtwork13
                                    }
                                    className={classNames(
                                      projectcss.all,
                                      sty.trailingArtwork13
                                    )}
                                  >
                                    {false ? (
                                      <OutlinedIcon
                                        className={classNames(
                                          projectcss.all,
                                          sty.svg__zioxi
                                        )}
                                        role={"img"}
                                      />
                                    ) : null}
                                    <FilledIcon
                                      className={classNames(
                                        projectcss.all,
                                        sty.svg__oMrmk
                                      )}
                                      role={"img"}
                                    />
                                  </div>
                                </div>
                              ) : null}
                            </div>
                          ) : null}
                          <div
                            data-plasmic-name={"calendar4"}
                            data-plasmic-override={overrides.calendar4}
                            className={classNames(
                              projectcss.all,
                              sty.calendar4
                            )}
                          >
                            {false ? (
                              <div
                                data-plasmic-name={
                                  "signedByBaseInputElementSelectXSmallWebSingleDefaultEnabled4"
                                }
                                data-plasmic-override={
                                  overrides.signedByBaseInputElementSelectXSmallWebSingleDefaultEnabled4
                                }
                                className={classNames(
                                  projectcss.all,
                                  sty.signedByBaseInputElementSelectXSmallWebSingleDefaultEnabled4
                                )}
                              />
                            ) : null}
                            <Stack__
                              as={"div"}
                              data-plasmic-name={"leadingArtworkContainer14"}
                              data-plasmic-override={
                                overrides.leadingArtworkContainer14
                              }
                              hasGap={true}
                              className={classNames(
                                projectcss.all,
                                sty.leadingArtworkContainer14
                              )}
                            >
                              <div
                                data-plasmic-name={"text83"}
                                data-plasmic-override={overrides.text83}
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text83
                                )}
                              >
                                {"S\u00e9lectionner..."}
                              </div>
                            </Stack__>
                            {false ? (
                              <div
                                data-plasmic-name={"leadingLabelContainer14"}
                                data-plasmic-override={
                                  overrides.leadingLabelContainer14
                                }
                                className={classNames(
                                  projectcss.all,
                                  sty.leadingLabelContainer14
                                )}
                              >
                                <div
                                  data-plasmic-name={"leadingLabel14"}
                                  data-plasmic-override={
                                    overrides.leadingLabel14
                                  }
                                  className={classNames(
                                    projectcss.all,
                                    sty.leadingLabel14
                                  )}
                                >
                                  {false ? (
                                    <div
                                      data-plasmic-name={
                                        "signedByBaseTypographyLabelXSmall7"
                                      }
                                      data-plasmic-override={
                                        overrides.signedByBaseTypographyLabelXSmall7
                                      }
                                      className={classNames(
                                        projectcss.all,
                                        sty.signedByBaseTypographyLabelXSmall7
                                      )}
                                    />
                                  ) : null}
                                  <div
                                    data-plasmic-name={"text84"}
                                    data-plasmic-override={overrides.text84}
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.__wab_text,
                                      sty.text84
                                    )}
                                  >
                                    {"$"}
                                  </div>
                                  {false ? (
                                    <div
                                      data-plasmic-name={"spacer75"}
                                      data-plasmic-override={overrides.spacer75}
                                      className={classNames(
                                        projectcss.all,
                                        sty.spacer75
                                      )}
                                    />
                                  ) : null}
                                </div>
                              </div>
                            ) : null}
                            {false ? (
                              <div
                                data-plasmic-name={"inputElementContentText14"}
                                data-plasmic-override={
                                  overrides.inputElementContentText14
                                }
                                className={classNames(
                                  projectcss.all,
                                  sty.inputElementContentText14
                                )}
                              >
                                {false ? (
                                  <div
                                    data-plasmic-name={
                                      "signedByBaseInputElementContentTextXSmallWebOff4"
                                    }
                                    data-plasmic-override={
                                      overrides.signedByBaseInputElementContentTextXSmallWebOff4
                                    }
                                    className={classNames(
                                      projectcss.all,
                                      sty.signedByBaseInputElementContentTextXSmallWebOff4
                                    )}
                                  />
                                ) : null}
                                <div
                                  data-plasmic-name={"text85"}
                                  data-plasmic-override={overrides.text85}
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.__wab_text,
                                    sty.text85
                                  )}
                                >
                                  {"Jr"}
                                </div>
                              </div>
                            ) : null}
                            {false ? (
                              <div
                                data-plasmic-name={"trailingLabelEnhancer14"}
                                data-plasmic-override={
                                  overrides.trailingLabelEnhancer14
                                }
                                className={classNames(
                                  projectcss.all,
                                  sty.trailingLabelEnhancer14
                                )}
                              >
                                {false ? (
                                  <div
                                    data-plasmic-name={"trailingLabel14"}
                                    data-plasmic-override={
                                      overrides.trailingLabel14
                                    }
                                    className={classNames(
                                      projectcss.all,
                                      sty.trailingLabel14
                                    )}
                                  >
                                    {false ? (
                                      <div
                                        data-plasmic-name={
                                          "signedByBaseTypographyLabelXSmall8"
                                        }
                                        data-plasmic-override={
                                          overrides.signedByBaseTypographyLabelXSmall8
                                        }
                                        className={classNames(
                                          projectcss.all,
                                          sty.signedByBaseTypographyLabelXSmall8
                                        )}
                                      />
                                    ) : null}
                                    <div
                                      data-plasmic-name={"text86"}
                                      data-plasmic-override={overrides.text86}
                                      className={classNames(
                                        projectcss.all,
                                        projectcss.__wab_text,
                                        sty.text86
                                      )}
                                    >
                                      {"USD"}
                                    </div>
                                    {false ? (
                                      <div
                                        data-plasmic-name={"spacer76"}
                                        data-plasmic-override={
                                          overrides.spacer76
                                        }
                                        className={classNames(
                                          projectcss.all,
                                          sty.spacer76
                                        )}
                                      />
                                    ) : null}
                                  </div>
                                ) : null}
                              </div>
                            ) : null}
                            {false ? (
                              <div
                                data-plasmic-name={"trailingArtworkContainer14"}
                                data-plasmic-override={
                                  overrides.trailingArtworkContainer14
                                }
                                className={classNames(
                                  projectcss.all,
                                  sty.trailingArtworkContainer14
                                )}
                              >
                                <div
                                  data-plasmic-name={"trailingArtwork14"}
                                  data-plasmic-override={
                                    overrides.trailingArtwork14
                                  }
                                  className={classNames(
                                    projectcss.all,
                                    sty.trailingArtwork14
                                  )}
                                >
                                  {false ? (
                                    <Outlined2Icon
                                      className={classNames(
                                        projectcss.all,
                                        sty.svg__ipMue
                                      )}
                                      role={"img"}
                                    />
                                  ) : null}
                                  <Filled2Icon
                                    className={classNames(
                                      projectcss.all,
                                      sty.svg__yUfMx
                                    )}
                                    role={"img"}
                                  />
                                </div>
                              </div>
                            ) : null}
                            <div
                              data-plasmic-name={"selectIndicatorContainer7"}
                              data-plasmic-override={
                                overrides.selectIndicatorContainer7
                              }
                              className={classNames(
                                projectcss.all,
                                sty.selectIndicatorContainer7
                              )}
                            >
                              <div
                                data-plasmic-name={"chevronIcon7"}
                                data-plasmic-override={overrides.chevronIcon7}
                                className={classNames(
                                  projectcss.all,
                                  sty.chevronIcon7
                                )}
                              >
                                {false ? (
                                  <Outlined3Icon
                                    className={classNames(
                                      projectcss.all,
                                      sty.svg___0PQa0
                                    )}
                                    role={"img"}
                                  />
                                ) : null}
                                <Outlined3Icon
                                  className={classNames(
                                    projectcss.all,
                                    sty.svg___1EUnn
                                  )}
                                  role={"img"}
                                />
                              </div>
                            </div>
                          </div>
                        </Stack__>
                        {false ? (
                          <Stack__
                            as={"div"}
                            data-plasmic-name={"inputElementHint7"}
                            data-plasmic-override={overrides.inputElementHint7}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.inputElementHint7
                            )}
                          >
                            {false ? (
                              <div
                                data-plasmic-name={"heart31"}
                                data-plasmic-override={overrides.heart31}
                                className={classNames(
                                  projectcss.all,
                                  sty.heart31
                                )}
                              >
                                {false ? (
                                  <Outlined4Icon
                                    className={classNames(
                                      projectcss.all,
                                      sty.svg___6UT63
                                    )}
                                    role={"img"}
                                  />
                                ) : null}
                                <Filled3Icon
                                  className={classNames(
                                    projectcss.all,
                                    sty.svg__t3N8D
                                  )}
                                  role={"img"}
                                />
                              </div>
                            ) : null}
                            <div
                              data-plasmic-name={"hint7"}
                              data-plasmic-override={overrides.hint7}
                              className={classNames(projectcss.all, sty.hint7)}
                            >
                              {false ? (
                                <div
                                  data-plasmic-name={
                                    "signedByBaseTypographyParagraphSmall7"
                                  }
                                  data-plasmic-override={
                                    overrides.signedByBaseTypographyParagraphSmall7
                                  }
                                  className={classNames(
                                    projectcss.all,
                                    sty.signedByBaseTypographyParagraphSmall7
                                  )}
                                />
                              ) : null}
                              <div
                                data-plasmic-name={"text87"}
                                data-plasmic-override={overrides.text87}
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text87
                                )}
                              >
                                {"MM/DD/YYYY"}
                              </div>
                              {false ? (
                                <div
                                  data-plasmic-name={"spacer77"}
                                  data-plasmic-override={overrides.spacer77}
                                  className={classNames(
                                    projectcss.all,
                                    sty.spacer77
                                  )}
                                />
                              ) : null}
                            </div>
                          </Stack__>
                        ) : null}
                      </Stack__>
                    </Stack__>
                    <div
                      data-plasmic-name={"inputElementSelect4"}
                      data-plasmic-override={overrides.inputElementSelect4}
                      className={classNames(
                        projectcss.all,
                        sty.inputElementSelect4
                      )}
                    >
                      {false ? (
                        <div
                          data-plasmic-name={
                            "signedByBaseInputElementSelectMediumSingleDefaultActive4"
                          }
                          data-plasmic-override={
                            overrides.signedByBaseInputElementSelectMediumSingleDefaultActive4
                          }
                          className={classNames(
                            projectcss.all,
                            sty.signedByBaseInputElementSelectMediumSingleDefaultActive4
                          )}
                        />
                      ) : null}
                      {false ? (
                        <div
                          data-plasmic-name={"selectFrame4"}
                          data-plasmic-override={overrides.selectFrame4}
                          className={classNames(
                            projectcss.all,
                            sty.selectFrame4
                          )}
                        >
                          {false ? (
                            <div
                              data-plasmic-name={"leadingArtworkContainer15"}
                              data-plasmic-override={
                                overrides.leadingArtworkContainer15
                              }
                              className={classNames(
                                projectcss.all,
                                sty.leadingArtworkContainer15
                              )}
                            >
                              <div
                                data-plasmic-name={"leadingArtwork8"}
                                data-plasmic-override={
                                  overrides.leadingArtwork8
                                }
                                className={classNames(
                                  projectcss.all,
                                  sty.leadingArtwork8
                                )}
                              >
                                {false ? (
                                  <Outlined5Icon
                                    className={classNames(
                                      projectcss.all,
                                      sty.svg__vZfgr
                                    )}
                                    role={"img"}
                                  />
                                ) : null}
                                <Filled4Icon
                                  className={classNames(
                                    projectcss.all,
                                    sty.svg__zyWeW
                                  )}
                                  role={"img"}
                                />
                              </div>
                            </div>
                          ) : null}
                          {false ? (
                            <div
                              data-plasmic-name={"leadingLabelContainer15"}
                              data-plasmic-override={
                                overrides.leadingLabelContainer15
                              }
                              className={classNames(
                                projectcss.all,
                                sty.leadingLabelContainer15
                              )}
                            >
                              <div
                                data-plasmic-name={"leadingLabel15"}
                                data-plasmic-override={overrides.leadingLabel15}
                                className={classNames(
                                  projectcss.all,
                                  sty.leadingLabel15
                                )}
                              >
                                {false ? (
                                  <div
                                    data-plasmic-name={
                                      "signedByBaseTypographyLabelMedium19"
                                    }
                                    data-plasmic-override={
                                      overrides.signedByBaseTypographyLabelMedium19
                                    }
                                    className={classNames(
                                      projectcss.all,
                                      sty.signedByBaseTypographyLabelMedium19
                                    )}
                                  />
                                ) : null}
                                <div
                                  data-plasmic-name={"text88"}
                                  data-plasmic-override={overrides.text88}
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.__wab_text,
                                    sty.text88
                                  )}
                                >
                                  {"$"}
                                </div>
                                {false ? (
                                  <div
                                    data-plasmic-name={"spacer78"}
                                    data-plasmic-override={overrides.spacer78}
                                    className={classNames(
                                      projectcss.all,
                                      sty.spacer78
                                    )}
                                  />
                                ) : null}
                              </div>
                            </div>
                          ) : null}
                          <div
                            data-plasmic-name={"inputElementContentText15"}
                            data-plasmic-override={
                              overrides.inputElementContentText15
                            }
                            className={classNames(
                              projectcss.all,
                              sty.inputElementContentText15
                            )}
                          >
                            {false ? (
                              <div
                                data-plasmic-name={
                                  "signedByBaseInputElementContentTextMediumOff7"
                                }
                                data-plasmic-override={
                                  overrides.signedByBaseInputElementContentTextMediumOff7
                                }
                                className={classNames(
                                  projectcss.all,
                                  sty.signedByBaseInputElementContentTextMediumOff7
                                )}
                              />
                            ) : null}
                            {false ? (
                              <div
                                data-plasmic-name={"text89"}
                                data-plasmic-override={overrides.text89}
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text89
                                )}
                              >
                                {"S\u00e9lectionner..."}
                              </div>
                            ) : null}
                          </div>
                          {false ? (
                            <div
                              data-plasmic-name={"trailingLabelEnhancer15"}
                              data-plasmic-override={
                                overrides.trailingLabelEnhancer15
                              }
                              className={classNames(
                                projectcss.all,
                                sty.trailingLabelEnhancer15
                              )}
                            >
                              {false ? (
                                <div
                                  data-plasmic-name={"trailingLabel15"}
                                  data-plasmic-override={
                                    overrides.trailingLabel15
                                  }
                                  className={classNames(
                                    projectcss.all,
                                    sty.trailingLabel15
                                  )}
                                >
                                  {false ? (
                                    <div
                                      data-plasmic-name={
                                        "signedByBaseTypographyLabelMedium20"
                                      }
                                      data-plasmic-override={
                                        overrides.signedByBaseTypographyLabelMedium20
                                      }
                                      className={classNames(
                                        projectcss.all,
                                        sty.signedByBaseTypographyLabelMedium20
                                      )}
                                    />
                                  ) : null}
                                  <div
                                    data-plasmic-name={"text90"}
                                    data-plasmic-override={overrides.text90}
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.__wab_text,
                                      sty.text90
                                    )}
                                  >
                                    {"USD"}
                                  </div>
                                  {false ? (
                                    <div
                                      data-plasmic-name={"spacer79"}
                                      data-plasmic-override={overrides.spacer79}
                                      className={classNames(
                                        projectcss.all,
                                        sty.spacer79
                                      )}
                                    />
                                  ) : null}
                                </div>
                              ) : null}
                            </div>
                          ) : null}
                          {false ? (
                            <div
                              data-plasmic-name={"trailingArtworkContainer15"}
                              data-plasmic-override={
                                overrides.trailingArtworkContainer15
                              }
                              className={classNames(
                                projectcss.all,
                                sty.trailingArtworkContainer15
                              )}
                            >
                              <div
                                data-plasmic-name={"trailingArtwork15"}
                                data-plasmic-override={
                                  overrides.trailingArtwork15
                                }
                                className={classNames(
                                  projectcss.all,
                                  sty.trailingArtwork15
                                )}
                              >
                                {false ? (
                                  <Outlined5Icon
                                    className={classNames(
                                      projectcss.all,
                                      sty.svg__m1WMg
                                    )}
                                    role={"img"}
                                  />
                                ) : null}
                                <Filled4Icon
                                  className={classNames(
                                    projectcss.all,
                                    sty.svg__bs6Tn
                                  )}
                                  role={"img"}
                                />
                              </div>
                            </div>
                          ) : null}
                          {false ? (
                            <div
                              data-plasmic-name={"selectIndicatorContainer8"}
                              data-plasmic-override={
                                overrides.selectIndicatorContainer8
                              }
                              className={classNames(
                                projectcss.all,
                                sty.selectIndicatorContainer8
                              )}
                            >
                              <div
                                data-plasmic-name={"chevronIcon8"}
                                data-plasmic-override={overrides.chevronIcon8}
                                className={classNames(
                                  projectcss.all,
                                  sty.chevronIcon8
                                )}
                              >
                                {false ? (
                                  <Outlined6Icon
                                    className={classNames(
                                      projectcss.all,
                                      sty.svg__x6C2P
                                    )}
                                    role={"img"}
                                  />
                                ) : null}
                                <Outlined6Icon
                                  className={classNames(
                                    projectcss.all,
                                    sty.svg__wAzj
                                  )}
                                  role={"img"}
                                />
                              </div>
                            </div>
                          ) : null}
                        </div>
                      ) : null}
                      <div
                        data-plasmic-name={"menu4"}
                        data-plasmic-override={overrides.menu4}
                        className={classNames(projectcss.all, sty.menu4)}
                      >
                        {false ? (
                          <div
                            data-plasmic-name={"signedByBaseMenuListMedium4"}
                            data-plasmic-override={
                              overrides.signedByBaseMenuListMedium4
                            }
                            className={classNames(
                              projectcss.all,
                              sty.signedByBaseMenuListMedium4
                            )}
                          />
                        ) : null}
                        {false ? (
                          <Stack__
                            as={"div"}
                            data-plasmic-name={"menuItem16"}
                            data-plasmic-override={overrides.menuItem16}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.menuItem16
                            )}
                          >
                            {false ? (
                              <div
                                data-plasmic-name={
                                  "signedByBaseMenuItemSearchMediumNoneEnabled4"
                                }
                                data-plasmic-override={
                                  overrides.signedByBaseMenuItemSearchMediumNoneEnabled4
                                }
                                className={classNames(
                                  projectcss.all,
                                  sty.signedByBaseMenuItemSearchMediumNoneEnabled4
                                )}
                              />
                            ) : null}
                            <Stack__
                              as={"div"}
                              data-plasmic-name={"searchField4"}
                              data-plasmic-override={overrides.searchField4}
                              hasGap={true}
                              className={classNames(
                                projectcss.all,
                                sty.searchField4
                              )}
                            >
                              {false ? (
                                <div
                                  data-plasmic-name={
                                    "signedByBaseSearchFieldMediumEnabled4"
                                  }
                                  data-plasmic-override={
                                    overrides.signedByBaseSearchFieldMediumEnabled4
                                  }
                                  className={classNames(
                                    projectcss.all,
                                    sty.signedByBaseSearchFieldMediumEnabled4
                                  )}
                                />
                              ) : null}
                              {false ? (
                                <Stack__
                                  as={"div"}
                                  data-plasmic-name={"inputElementLabel4"}
                                  data-plasmic-override={
                                    overrides.inputElementLabel4
                                  }
                                  hasGap={true}
                                  className={classNames(
                                    projectcss.all,
                                    sty.inputElementLabel4
                                  )}
                                >
                                  {false ? (
                                    <div
                                      data-plasmic-name={
                                        "signedByBaseInputElementLabelMedium4"
                                      }
                                      data-plasmic-override={
                                        overrides.signedByBaseInputElementLabelMedium4
                                      }
                                      className={classNames(
                                        projectcss.all,
                                        sty.signedByBaseInputElementLabelMedium4
                                      )}
                                    />
                                  ) : null}
                                  <div
                                    data-plasmic-name={"typography43"}
                                    data-plasmic-override={
                                      overrides.typography43
                                    }
                                    className={classNames(
                                      projectcss.all,
                                      sty.typography43
                                    )}
                                  >
                                    {false ? (
                                      <div
                                        data-plasmic-name={
                                          "signedByBaseTypographyLabelMedium21"
                                        }
                                        data-plasmic-override={
                                          overrides.signedByBaseTypographyLabelMedium21
                                        }
                                        className={classNames(
                                          projectcss.all,
                                          sty.signedByBaseTypographyLabelMedium21
                                        )}
                                      />
                                    ) : null}
                                    <div
                                      data-plasmic-name={"text91"}
                                      data-plasmic-override={overrides.text91}
                                      className={classNames(
                                        projectcss.all,
                                        projectcss.__wab_text,
                                        sty.text91
                                      )}
                                    >
                                      {"Label"}
                                    </div>
                                    {false ? (
                                      <div
                                        data-plasmic-name={"spacer80"}
                                        data-plasmic-override={
                                          overrides.spacer80
                                        }
                                        className={classNames(
                                          projectcss.all,
                                          sty.spacer80
                                        )}
                                      />
                                    ) : null}
                                  </div>
                                  {false ? (
                                    <Stack__
                                      as={"div"}
                                      data-plasmic-name={"characterCountFrame4"}
                                      data-plasmic-override={
                                        overrides.characterCountFrame4
                                      }
                                      hasGap={true}
                                      className={classNames(
                                        projectcss.all,
                                        sty.characterCountFrame4
                                      )}
                                    >
                                      {false ? (
                                        <div
                                          data-plasmic-name={"heart32"}
                                          data-plasmic-override={
                                            overrides.heart32
                                          }
                                          className={classNames(
                                            projectcss.all,
                                            sty.heart32
                                          )}
                                        >
                                          {false ? (
                                            <OutlinedIcon
                                              className={classNames(
                                                projectcss.all,
                                                sty.svg__erFzT
                                              )}
                                              role={"img"}
                                            />
                                          ) : null}
                                          <FilledIcon
                                            className={classNames(
                                              projectcss.all,
                                              sty.svg__eSzyC
                                            )}
                                            role={"img"}
                                          />
                                        </div>
                                      ) : null}
                                      <div
                                        data-plasmic-name={"typography44"}
                                        data-plasmic-override={
                                          overrides.typography44
                                        }
                                        className={classNames(
                                          projectcss.all,
                                          sty.typography44
                                        )}
                                      >
                                        {false ? (
                                          <div
                                            data-plasmic-name={
                                              "signedByBaseTypographyLabelMedium22"
                                            }
                                            data-plasmic-override={
                                              overrides.signedByBaseTypographyLabelMedium22
                                            }
                                            className={classNames(
                                              projectcss.all,
                                              sty.signedByBaseTypographyLabelMedium22
                                            )}
                                          />
                                        ) : null}
                                        <div
                                          data-plasmic-name={"text92"}
                                          data-plasmic-override={
                                            overrides.text92
                                          }
                                          className={classNames(
                                            projectcss.all,
                                            projectcss.__wab_text,
                                            sty.text92
                                          )}
                                        >
                                          {"0/100"}
                                        </div>
                                        {false ? (
                                          <div
                                            data-plasmic-name={"spacer81"}
                                            data-plasmic-override={
                                              overrides.spacer81
                                            }
                                            className={classNames(
                                              projectcss.all,
                                              sty.spacer81
                                            )}
                                          />
                                        ) : null}
                                      </div>
                                    </Stack__>
                                  ) : null}
                                </Stack__>
                              ) : null}
                              <div
                                data-plasmic-name={"inputElementTextField8"}
                                data-plasmic-override={
                                  overrides.inputElementTextField8
                                }
                                className={classNames(
                                  projectcss.all,
                                  sty.inputElementTextField8
                                )}
                              >
                                {false ? (
                                  <div
                                    data-plasmic-name={
                                      "signedByBaseInputElementTextFieldMediumEnabled4"
                                    }
                                    data-plasmic-override={
                                      overrides.signedByBaseInputElementTextFieldMediumEnabled4
                                    }
                                    className={classNames(
                                      projectcss.all,
                                      sty.signedByBaseInputElementTextFieldMediumEnabled4
                                    )}
                                  />
                                ) : null}
                                <div
                                  data-plasmic-name={
                                    "leadingArtworkContainer16"
                                  }
                                  data-plasmic-override={
                                    overrides.leadingArtworkContainer16
                                  }
                                  className={classNames(
                                    projectcss.all,
                                    sty.leadingArtworkContainer16
                                  )}
                                >
                                  <div
                                    data-plasmic-name={"search4"}
                                    data-plasmic-override={overrides.search4}
                                    className={classNames(
                                      projectcss.all,
                                      sty.search4
                                    )}
                                  >
                                    {false ? (
                                      <Outlined7Icon
                                        className={classNames(
                                          projectcss.all,
                                          sty.svg__ypIVm
                                        )}
                                        role={"img"}
                                      />
                                    ) : null}
                                    <Outlined7Icon
                                      className={classNames(
                                        projectcss.all,
                                        sty.svg__zAi3F
                                      )}
                                      role={"img"}
                                    />
                                  </div>
                                </div>
                                {false ? (
                                  <div
                                    data-plasmic-name={
                                      "leadingLabelContainer16"
                                    }
                                    data-plasmic-override={
                                      overrides.leadingLabelContainer16
                                    }
                                    className={classNames(
                                      projectcss.all,
                                      sty.leadingLabelContainer16
                                    )}
                                  >
                                    {false ? (
                                      <div
                                        data-plasmic-name={"leadingLabel16"}
                                        data-plasmic-override={
                                          overrides.leadingLabel16
                                        }
                                        className={classNames(
                                          projectcss.all,
                                          sty.leadingLabel16
                                        )}
                                      >
                                        {false ? (
                                          <div
                                            data-plasmic-name={
                                              "signedByBaseTypographyLabelMedium23"
                                            }
                                            data-plasmic-override={
                                              overrides.signedByBaseTypographyLabelMedium23
                                            }
                                            className={classNames(
                                              projectcss.all,
                                              sty.signedByBaseTypographyLabelMedium23
                                            )}
                                          />
                                        ) : null}
                                        <div
                                          data-plasmic-name={"text93"}
                                          data-plasmic-override={
                                            overrides.text93
                                          }
                                          className={classNames(
                                            projectcss.all,
                                            projectcss.__wab_text,
                                            sty.text93
                                          )}
                                        >
                                          {"$"}
                                        </div>
                                        {false ? (
                                          <div
                                            data-plasmic-name={"spacer82"}
                                            data-plasmic-override={
                                              overrides.spacer82
                                            }
                                            className={classNames(
                                              projectcss.all,
                                              sty.spacer82
                                            )}
                                          />
                                        ) : null}
                                      </div>
                                    ) : null}
                                  </div>
                                ) : null}
                                <div
                                  data-plasmic-name={
                                    "inputElementContentText16"
                                  }
                                  data-plasmic-override={
                                    overrides.inputElementContentText16
                                  }
                                  className={classNames(
                                    projectcss.all,
                                    sty.inputElementContentText16
                                  )}
                                >
                                  {false ? (
                                    <div
                                      data-plasmic-name={
                                        "signedByBaseInputElementContentTextMediumOff8"
                                      }
                                      data-plasmic-override={
                                        overrides.signedByBaseInputElementContentTextMediumOff8
                                      }
                                      className={classNames(
                                        projectcss.all,
                                        sty.signedByBaseInputElementContentTextMediumOff8
                                      )}
                                    />
                                  ) : null}
                                  <div
                                    data-plasmic-name={"text94"}
                                    data-plasmic-override={overrides.text94}
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.__wab_text,
                                      sty.text94
                                    )}
                                  >
                                    {"Placeholder"}
                                  </div>
                                </div>
                                {false ? (
                                  <div
                                    data-plasmic-name={
                                      "trailingLabelEnhancer16"
                                    }
                                    data-plasmic-override={
                                      overrides.trailingLabelEnhancer16
                                    }
                                    className={classNames(
                                      projectcss.all,
                                      sty.trailingLabelEnhancer16
                                    )}
                                  >
                                    {false ? (
                                      <div
                                        data-plasmic-name={"trailingLabel16"}
                                        data-plasmic-override={
                                          overrides.trailingLabel16
                                        }
                                        className={classNames(
                                          projectcss.all,
                                          sty.trailingLabel16
                                        )}
                                      >
                                        {false ? (
                                          <div
                                            data-plasmic-name={
                                              "signedByBaseTypographyLabelMedium24"
                                            }
                                            data-plasmic-override={
                                              overrides.signedByBaseTypographyLabelMedium24
                                            }
                                            className={classNames(
                                              projectcss.all,
                                              sty.signedByBaseTypographyLabelMedium24
                                            )}
                                          />
                                        ) : null}
                                        <div
                                          data-plasmic-name={"text95"}
                                          data-plasmic-override={
                                            overrides.text95
                                          }
                                          className={classNames(
                                            projectcss.all,
                                            projectcss.__wab_text,
                                            sty.text95
                                          )}
                                        >
                                          {"USD"}
                                        </div>
                                        {false ? (
                                          <div
                                            data-plasmic-name={"spacer83"}
                                            data-plasmic-override={
                                              overrides.spacer83
                                            }
                                            className={classNames(
                                              projectcss.all,
                                              sty.spacer83
                                            )}
                                          />
                                        ) : null}
                                      </div>
                                    ) : null}
                                  </div>
                                ) : null}
                                {false ? (
                                  <div
                                    data-plasmic-name={
                                      "trailingArtworkContainer16"
                                    }
                                    data-plasmic-override={
                                      overrides.trailingArtworkContainer16
                                    }
                                    className={classNames(
                                      projectcss.all,
                                      sty.trailingArtworkContainer16
                                    )}
                                  >
                                    {false ? (
                                      <div
                                        data-plasmic-name={"trailingArtwork16"}
                                        data-plasmic-override={
                                          overrides.trailingArtwork16
                                        }
                                        className={classNames(
                                          projectcss.all,
                                          sty.trailingArtwork16
                                        )}
                                      >
                                        {false ? (
                                          <Outlined5Icon
                                            className={classNames(
                                              projectcss.all,
                                              sty.svg__mGZoI
                                            )}
                                            role={"img"}
                                          />
                                        ) : null}
                                        <Filled4Icon
                                          className={classNames(
                                            projectcss.all,
                                            sty.svg__pQMrQ
                                          )}
                                          role={"img"}
                                        />
                                      </div>
                                    ) : null}
                                  </div>
                                ) : null}
                              </div>
                              {false ? (
                                <Stack__
                                  as={"div"}
                                  data-plasmic-name={"inputElementHint8"}
                                  data-plasmic-override={
                                    overrides.inputElementHint8
                                  }
                                  hasGap={true}
                                  className={classNames(
                                    projectcss.all,
                                    sty.inputElementHint8
                                  )}
                                >
                                  {false ? (
                                    <div
                                      data-plasmic-name={"heart33"}
                                      data-plasmic-override={overrides.heart33}
                                      className={classNames(
                                        projectcss.all,
                                        sty.heart33
                                      )}
                                    >
                                      {false ? (
                                        <Outlined4Icon
                                          className={classNames(
                                            projectcss.all,
                                            sty.svg__xrua5
                                          )}
                                          role={"img"}
                                        />
                                      ) : null}
                                      <Filled3Icon
                                        className={classNames(
                                          projectcss.all,
                                          sty.svg___9AsXj
                                        )}
                                        role={"img"}
                                      />
                                    </div>
                                  ) : null}
                                  <div
                                    data-plasmic-name={"hint8"}
                                    data-plasmic-override={overrides.hint8}
                                    className={classNames(
                                      projectcss.all,
                                      sty.hint8
                                    )}
                                  >
                                    {false ? (
                                      <div
                                        data-plasmic-name={
                                          "signedByBaseTypographyParagraphSmall8"
                                        }
                                        data-plasmic-override={
                                          overrides.signedByBaseTypographyParagraphSmall8
                                        }
                                        className={classNames(
                                          projectcss.all,
                                          sty.signedByBaseTypographyParagraphSmall8
                                        )}
                                      />
                                    ) : null}
                                    <div
                                      data-plasmic-name={"text96"}
                                      data-plasmic-override={overrides.text96}
                                      className={classNames(
                                        projectcss.all,
                                        projectcss.__wab_text,
                                        sty.text96
                                      )}
                                    >
                                      {"Hint"}
                                    </div>
                                    {false ? (
                                      <div
                                        data-plasmic-name={"spacer84"}
                                        data-plasmic-override={
                                          overrides.spacer84
                                        }
                                        className={classNames(
                                          projectcss.all,
                                          sty.spacer84
                                        )}
                                      />
                                    ) : null}
                                  </div>
                                </Stack__>
                              ) : null}
                            </Stack__>
                          </Stack__>
                        ) : null}
                        <Stack__
                          as={"div"}
                          data-plasmic-name={"menuItem17"}
                          data-plasmic-override={overrides.menuItem17}
                          hasGap={true}
                          className={classNames(projectcss.all, sty.menuItem17)}
                        >
                          {false ? (
                            <div
                              data-plasmic-name={
                                "signedByBaseMenuItemOptionMediumStandardEnabled13"
                              }
                              data-plasmic-override={
                                overrides.signedByBaseMenuItemOptionMediumStandardEnabled13
                              }
                              className={classNames(
                                projectcss.all,
                                sty.signedByBaseMenuItemOptionMediumStandardEnabled13
                              )}
                            />
                          ) : null}
                          {false ? (
                            <Stack__
                              as={"div"}
                              data-plasmic-name={
                                "menuItemControlMediumCheckboxUnchecked13"
                              }
                              data-plasmic-override={
                                overrides.menuItemControlMediumCheckboxUnchecked13
                              }
                              hasGap={true}
                              className={classNames(
                                projectcss.all,
                                sty.menuItemControlMediumCheckboxUnchecked13
                              )}
                            >
                              {false ? (
                                <div
                                  data-plasmic-name={
                                    "signedByBaseMenuItemControlMediumCheckboxUnchecked13"
                                  }
                                  data-plasmic-override={
                                    overrides.signedByBaseMenuItemControlMediumCheckboxUnchecked13
                                  }
                                  className={classNames(
                                    projectcss.all,
                                    sty.signedByBaseMenuItemControlMediumCheckboxUnchecked13
                                  )}
                                />
                              ) : null}
                              <div
                                data-plasmic-name={"icon13"}
                                data-plasmic-override={overrides.icon13}
                                className={classNames(
                                  projectcss.all,
                                  sty.icon13
                                )}
                              >
                                {false ? (
                                  <Outlined8Icon
                                    className={classNames(
                                      projectcss.all,
                                      sty.svg__lVGk
                                    )}
                                    role={"img"}
                                  />
                                ) : null}
                                <Outlined8Icon
                                  className={classNames(
                                    projectcss.all,
                                    sty.svg___2OWB
                                  )}
                                  role={"img"}
                                />
                              </div>
                            </Stack__>
                          ) : null}
                          {false ? (
                            <Stack__
                              as={"div"}
                              data-plasmic-name={"leadingEnhancer13"}
                              data-plasmic-override={
                                overrides.leadingEnhancer13
                              }
                              hasGap={true}
                              className={classNames(
                                projectcss.all,
                                sty.leadingEnhancer13
                              )}
                            >
                              <div
                                data-plasmic-name={"heart34"}
                                data-plasmic-override={overrides.heart34}
                                className={classNames(
                                  projectcss.all,
                                  sty.heart34
                                )}
                              >
                                {false ? (
                                  <Outlined5Icon
                                    className={classNames(
                                      projectcss.all,
                                      sty.svg__qmbby
                                    )}
                                    role={"img"}
                                  />
                                ) : null}
                                <Filled4Icon
                                  className={classNames(
                                    projectcss.all,
                                    sty.svg__eh79H
                                  )}
                                  role={"img"}
                                />
                              </div>
                            </Stack__>
                          ) : null}
                          <Stack__
                            as={"div"}
                            data-plasmic-name={"textFrame13"}
                            data-plasmic-override={overrides.textFrame13}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.textFrame13
                            )}
                          >
                            <div
                              data-plasmic-name={"leadingText13"}
                              data-plasmic-override={overrides.leadingText13}
                              className={classNames(
                                projectcss.all,
                                sty.leadingText13
                              )}
                            >
                              <div
                                data-plasmic-name={"typography45"}
                                data-plasmic-override={overrides.typography45}
                                className={classNames(
                                  projectcss.all,
                                  sty.typography45
                                )}
                              >
                                {false ? (
                                  <div
                                    data-plasmic-name={
                                      "signedByBaseTypographyParagraphMedium37"
                                    }
                                    data-plasmic-override={
                                      overrides.signedByBaseTypographyParagraphMedium37
                                    }
                                    className={classNames(
                                      projectcss.all,
                                      sty.signedByBaseTypographyParagraphMedium37
                                    )}
                                  />
                                ) : null}
                                <div
                                  data-plasmic-name={"text97"}
                                  data-plasmic-override={overrides.text97}
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.__wab_text,
                                    sty.text97
                                  )}
                                >
                                  {"Mod\u00e8le de concert 20h"}
                                </div>
                                {false ? (
                                  <div
                                    data-plasmic-name={"spacer85"}
                                    data-plasmic-override={overrides.spacer85}
                                    className={classNames(
                                      projectcss.all,
                                      sty.spacer85
                                    )}
                                  />
                                ) : null}
                              </div>
                              {false ? (
                                <div
                                  data-plasmic-name={"typography46"}
                                  data-plasmic-override={overrides.typography46}
                                  className={classNames(
                                    projectcss.all,
                                    sty.typography46
                                  )}
                                >
                                  {false ? (
                                    <div
                                      data-plasmic-name={
                                        "signedByBaseTypographyParagraphMedium38"
                                      }
                                      data-plasmic-override={
                                        overrides.signedByBaseTypographyParagraphMedium38
                                      }
                                      className={classNames(
                                        projectcss.all,
                                        sty.signedByBaseTypographyParagraphMedium38
                                      )}
                                    />
                                  ) : null}
                                  <div
                                    data-plasmic-name={"text98"}
                                    data-plasmic-override={overrides.text98}
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.__wab_text,
                                      sty.text98
                                    )}
                                  >
                                    {"Supporting text"}
                                  </div>
                                  {false ? (
                                    <div
                                      data-plasmic-name={"spacer86"}
                                      data-plasmic-override={overrides.spacer86}
                                      className={classNames(
                                        projectcss.all,
                                        sty.spacer86
                                      )}
                                    />
                                  ) : null}
                                </div>
                              ) : null}
                            </div>
                            {false ? (
                              <div
                                data-plasmic-name={"typography47"}
                                data-plasmic-override={overrides.typography47}
                                className={classNames(
                                  projectcss.all,
                                  sty.typography47
                                )}
                              >
                                {false ? (
                                  <div
                                    data-plasmic-name={
                                      "signedByBaseTypographyParagraphMedium39"
                                    }
                                    data-plasmic-override={
                                      overrides.signedByBaseTypographyParagraphMedium39
                                    }
                                    className={classNames(
                                      projectcss.all,
                                      sty.signedByBaseTypographyParagraphMedium39
                                    )}
                                  />
                                ) : null}
                                <div
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.__wab_text,
                                    sty.text__fYnzm
                                  )}
                                >
                                  {"Text"}
                                </div>
                                {false ? (
                                  <div
                                    data-plasmic-name={"spacer87"}
                                    data-plasmic-override={overrides.spacer87}
                                    className={classNames(
                                      projectcss.all,
                                      sty.spacer87
                                    )}
                                  />
                                ) : null}
                              </div>
                            ) : null}
                          </Stack__>
                          {false ? (
                            <Stack__
                              as={"div"}
                              data-plasmic-name={"trailingEnhancer13"}
                              data-plasmic-override={
                                overrides.trailingEnhancer13
                              }
                              hasGap={true}
                              className={classNames(
                                projectcss.all,
                                sty.trailingEnhancer13
                              )}
                            >
                              <div
                                data-plasmic-name={"heart35"}
                                data-plasmic-override={overrides.heart35}
                                className={classNames(
                                  projectcss.all,
                                  sty.heart35
                                )}
                              >
                                {false ? (
                                  <Outlined5Icon
                                    className={classNames(
                                      projectcss.all,
                                      sty.svg__yJxT
                                    )}
                                    role={"img"}
                                  />
                                ) : null}
                                <Filled4Icon
                                  className={classNames(
                                    projectcss.all,
                                    sty.svg__p1Two
                                  )}
                                  role={"img"}
                                />
                              </div>
                            </Stack__>
                          ) : null}
                        </Stack__>
                        <Stack__
                          as={"div"}
                          data-plasmic-name={"menuItem18"}
                          data-plasmic-override={overrides.menuItem18}
                          hasGap={true}
                          className={classNames(projectcss.all, sty.menuItem18)}
                        >
                          {false ? (
                            <div
                              data-plasmic-name={
                                "signedByBaseMenuItemOptionMediumStandardEnabled14"
                              }
                              data-plasmic-override={
                                overrides.signedByBaseMenuItemOptionMediumStandardEnabled14
                              }
                              className={classNames(
                                projectcss.all,
                                sty.signedByBaseMenuItemOptionMediumStandardEnabled14
                              )}
                            />
                          ) : null}
                          {false ? (
                            <Stack__
                              as={"div"}
                              data-plasmic-name={
                                "menuItemControlMediumCheckboxUnchecked14"
                              }
                              data-plasmic-override={
                                overrides.menuItemControlMediumCheckboxUnchecked14
                              }
                              hasGap={true}
                              className={classNames(
                                projectcss.all,
                                sty.menuItemControlMediumCheckboxUnchecked14
                              )}
                            >
                              {false ? (
                                <div
                                  data-plasmic-name={
                                    "signedByBaseMenuItemControlMediumCheckboxUnchecked14"
                                  }
                                  data-plasmic-override={
                                    overrides.signedByBaseMenuItemControlMediumCheckboxUnchecked14
                                  }
                                  className={classNames(
                                    projectcss.all,
                                    sty.signedByBaseMenuItemControlMediumCheckboxUnchecked14
                                  )}
                                />
                              ) : null}
                              <div
                                data-plasmic-name={"icon14"}
                                data-plasmic-override={overrides.icon14}
                                className={classNames(
                                  projectcss.all,
                                  sty.icon14
                                )}
                              >
                                {false ? (
                                  <Outlined8Icon
                                    className={classNames(
                                      projectcss.all,
                                      sty.svg___1RgC
                                    )}
                                    role={"img"}
                                  />
                                ) : null}
                                <Outlined8Icon
                                  className={classNames(
                                    projectcss.all,
                                    sty.svg__jeDrl
                                  )}
                                  role={"img"}
                                />
                              </div>
                            </Stack__>
                          ) : null}
                          {false ? (
                            <Stack__
                              as={"div"}
                              data-plasmic-name={"leadingEnhancer14"}
                              data-plasmic-override={
                                overrides.leadingEnhancer14
                              }
                              hasGap={true}
                              className={classNames(
                                projectcss.all,
                                sty.leadingEnhancer14
                              )}
                            >
                              <div
                                data-plasmic-name={"heart36"}
                                data-plasmic-override={overrides.heart36}
                                className={classNames(
                                  projectcss.all,
                                  sty.heart36
                                )}
                              >
                                {false ? (
                                  <Outlined5Icon
                                    className={classNames(
                                      projectcss.all,
                                      sty.svg__npYMf
                                    )}
                                    role={"img"}
                                  />
                                ) : null}
                                <Filled4Icon
                                  className={classNames(
                                    projectcss.all,
                                    sty.svg__f59Tm
                                  )}
                                  role={"img"}
                                />
                              </div>
                            </Stack__>
                          ) : null}
                          <Stack__
                            as={"div"}
                            data-plasmic-name={"textFrame14"}
                            data-plasmic-override={overrides.textFrame14}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.textFrame14
                            )}
                          >
                            <div
                              data-plasmic-name={"leadingText14"}
                              data-plasmic-override={overrides.leadingText14}
                              className={classNames(
                                projectcss.all,
                                sty.leadingText14
                              )}
                            >
                              <div
                                data-plasmic-name={"typography48"}
                                data-plasmic-override={overrides.typography48}
                                className={classNames(
                                  projectcss.all,
                                  sty.typography48
                                )}
                              >
                                {false ? (
                                  <div
                                    data-plasmic-name={
                                      "signedByBaseTypographyParagraphMedium40"
                                    }
                                    data-plasmic-override={
                                      overrides.signedByBaseTypographyParagraphMedium40
                                    }
                                    className={classNames(
                                      projectcss.all,
                                      sty.signedByBaseTypographyParagraphMedium40
                                    )}
                                  />
                                ) : null}
                                <div
                                  data-plasmic-name={"text99"}
                                  data-plasmic-override={overrides.text99}
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.__wab_text,
                                    sty.text99
                                  )}
                                >
                                  {"Mod\u00e8le de match 21h"}
                                </div>
                                {false ? (
                                  <div
                                    data-plasmic-name={"spacer88"}
                                    data-plasmic-override={overrides.spacer88}
                                    className={classNames(
                                      projectcss.all,
                                      sty.spacer88
                                    )}
                                  />
                                ) : null}
                              </div>
                              {false ? (
                                <div
                                  data-plasmic-name={"typography49"}
                                  data-plasmic-override={overrides.typography49}
                                  className={classNames(
                                    projectcss.all,
                                    sty.typography49
                                  )}
                                >
                                  {false ? (
                                    <div
                                      data-plasmic-name={
                                        "signedByBaseTypographyParagraphMedium41"
                                      }
                                      data-plasmic-override={
                                        overrides.signedByBaseTypographyParagraphMedium41
                                      }
                                      className={classNames(
                                        projectcss.all,
                                        sty.signedByBaseTypographyParagraphMedium41
                                      )}
                                    />
                                  ) : null}
                                  <div
                                    data-plasmic-name={"text100"}
                                    data-plasmic-override={overrides.text100}
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.__wab_text,
                                      sty.text100
                                    )}
                                  >
                                    {"Supporting text"}
                                  </div>
                                  {false ? (
                                    <div
                                      data-plasmic-name={"spacer89"}
                                      data-plasmic-override={overrides.spacer89}
                                      className={classNames(
                                        projectcss.all,
                                        sty.spacer89
                                      )}
                                    />
                                  ) : null}
                                </div>
                              ) : null}
                            </div>
                            {false ? (
                              <div
                                data-plasmic-name={"typography50"}
                                data-plasmic-override={overrides.typography50}
                                className={classNames(
                                  projectcss.all,
                                  sty.typography50
                                )}
                              >
                                {false ? (
                                  <div
                                    data-plasmic-name={
                                      "signedByBaseTypographyParagraphMedium42"
                                    }
                                    data-plasmic-override={
                                      overrides.signedByBaseTypographyParagraphMedium42
                                    }
                                    className={classNames(
                                      projectcss.all,
                                      sty.signedByBaseTypographyParagraphMedium42
                                    )}
                                  />
                                ) : null}
                                <div
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.__wab_text,
                                    sty.text___8UMld
                                  )}
                                >
                                  {"Text"}
                                </div>
                                {false ? (
                                  <div
                                    data-plasmic-name={"spacer90"}
                                    data-plasmic-override={overrides.spacer90}
                                    className={classNames(
                                      projectcss.all,
                                      sty.spacer90
                                    )}
                                  />
                                ) : null}
                              </div>
                            ) : null}
                          </Stack__>
                          {false ? (
                            <Stack__
                              as={"div"}
                              data-plasmic-name={"trailingEnhancer14"}
                              data-plasmic-override={
                                overrides.trailingEnhancer14
                              }
                              hasGap={true}
                              className={classNames(
                                projectcss.all,
                                sty.trailingEnhancer14
                              )}
                            >
                              <div
                                data-plasmic-name={"checkmarkSmall4"}
                                data-plasmic-override={
                                  overrides.checkmarkSmall4
                                }
                                className={classNames(
                                  projectcss.all,
                                  sty.checkmarkSmall4
                                )}
                              >
                                {false ? (
                                  <Outlined9Icon
                                    className={classNames(
                                      projectcss.all,
                                      sty.svg___9WE0
                                    )}
                                    role={"img"}
                                  />
                                ) : null}
                                <Outlined9Icon
                                  className={classNames(
                                    projectcss.all,
                                    sty.svg__m2Uin
                                  )}
                                  role={"img"}
                                />
                              </div>
                            </Stack__>
                          ) : null}
                        </Stack__>
                        <Stack__
                          as={"div"}
                          data-plasmic-name={"menuItem19"}
                          data-plasmic-override={overrides.menuItem19}
                          hasGap={true}
                          className={classNames(projectcss.all, sty.menuItem19)}
                        >
                          {false ? (
                            <div
                              data-plasmic-name={
                                "signedByBaseMenuItemOptionMediumStandardEnabled15"
                              }
                              data-plasmic-override={
                                overrides.signedByBaseMenuItemOptionMediumStandardEnabled15
                              }
                              className={classNames(
                                projectcss.all,
                                sty.signedByBaseMenuItemOptionMediumStandardEnabled15
                              )}
                            />
                          ) : null}
                          {false ? (
                            <Stack__
                              as={"div"}
                              data-plasmic-name={
                                "menuItemControlMediumCheckboxUnchecked15"
                              }
                              data-plasmic-override={
                                overrides.menuItemControlMediumCheckboxUnchecked15
                              }
                              hasGap={true}
                              className={classNames(
                                projectcss.all,
                                sty.menuItemControlMediumCheckboxUnchecked15
                              )}
                            >
                              {false ? (
                                <div
                                  data-plasmic-name={
                                    "signedByBaseMenuItemControlMediumCheckboxUnchecked15"
                                  }
                                  data-plasmic-override={
                                    overrides.signedByBaseMenuItemControlMediumCheckboxUnchecked15
                                  }
                                  className={classNames(
                                    projectcss.all,
                                    sty.signedByBaseMenuItemControlMediumCheckboxUnchecked15
                                  )}
                                />
                              ) : null}
                              <div
                                data-plasmic-name={"icon15"}
                                data-plasmic-override={overrides.icon15}
                                className={classNames(
                                  projectcss.all,
                                  sty.icon15
                                )}
                              >
                                {false ? (
                                  <Outlined8Icon
                                    className={classNames(
                                      projectcss.all,
                                      sty.svg__ph936
                                    )}
                                    role={"img"}
                                  />
                                ) : null}
                                <Outlined8Icon
                                  className={classNames(
                                    projectcss.all,
                                    sty.svg__iuPlA
                                  )}
                                  role={"img"}
                                />
                              </div>
                            </Stack__>
                          ) : null}
                          {false ? (
                            <Stack__
                              as={"div"}
                              data-plasmic-name={"leadingEnhancer15"}
                              data-plasmic-override={
                                overrides.leadingEnhancer15
                              }
                              hasGap={true}
                              className={classNames(
                                projectcss.all,
                                sty.leadingEnhancer15
                              )}
                            >
                              <div
                                data-plasmic-name={"heart37"}
                                data-plasmic-override={overrides.heart37}
                                className={classNames(
                                  projectcss.all,
                                  sty.heart37
                                )}
                              >
                                {false ? (
                                  <Outlined5Icon
                                    className={classNames(
                                      projectcss.all,
                                      sty.svg___73Gae
                                    )}
                                    role={"img"}
                                  />
                                ) : null}
                                <Filled4Icon
                                  className={classNames(
                                    projectcss.all,
                                    sty.svg__bhoLc
                                  )}
                                  role={"img"}
                                />
                              </div>
                            </Stack__>
                          ) : null}
                          <IcRoundPlusIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg___6Hjhw
                            )}
                            role={"img"}
                          />

                          <Stack__
                            as={"div"}
                            data-plasmic-name={"textFrame15"}
                            data-plasmic-override={overrides.textFrame15}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.textFrame15
                            )}
                          >
                            <div
                              data-plasmic-name={"leadingText15"}
                              data-plasmic-override={overrides.leadingText15}
                              className={classNames(
                                projectcss.all,
                                sty.leadingText15
                              )}
                            >
                              <div
                                data-plasmic-name={"typography51"}
                                data-plasmic-override={overrides.typography51}
                                className={classNames(
                                  projectcss.all,
                                  sty.typography51
                                )}
                              >
                                {false ? (
                                  <div
                                    data-plasmic-name={
                                      "signedByBaseTypographyParagraphMedium43"
                                    }
                                    data-plasmic-override={
                                      overrides.signedByBaseTypographyParagraphMedium43
                                    }
                                    className={classNames(
                                      projectcss.all,
                                      sty.signedByBaseTypographyParagraphMedium43
                                    )}
                                  />
                                ) : null}
                                <div
                                  data-plasmic-name={"text101"}
                                  data-plasmic-override={overrides.text101}
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.__wab_text,
                                    sty.text101
                                  )}
                                >
                                  {"Dispositif vierge"}
                                </div>
                                {false ? (
                                  <div
                                    data-plasmic-name={"spacer91"}
                                    data-plasmic-override={overrides.spacer91}
                                    className={classNames(
                                      projectcss.all,
                                      sty.spacer91
                                    )}
                                  />
                                ) : null}
                              </div>
                              {false ? (
                                <div
                                  data-plasmic-name={"typography52"}
                                  data-plasmic-override={overrides.typography52}
                                  className={classNames(
                                    projectcss.all,
                                    sty.typography52
                                  )}
                                >
                                  {false ? (
                                    <div
                                      data-plasmic-name={
                                        "signedByBaseTypographyParagraphMedium44"
                                      }
                                      data-plasmic-override={
                                        overrides.signedByBaseTypographyParagraphMedium44
                                      }
                                      className={classNames(
                                        projectcss.all,
                                        sty.signedByBaseTypographyParagraphMedium44
                                      )}
                                    />
                                  ) : null}
                                  <div
                                    data-plasmic-name={"text102"}
                                    data-plasmic-override={overrides.text102}
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.__wab_text,
                                      sty.text102
                                    )}
                                  >
                                    {"Supporting text"}
                                  </div>
                                  {false ? (
                                    <div
                                      data-plasmic-name={"spacer92"}
                                      data-plasmic-override={overrides.spacer92}
                                      className={classNames(
                                        projectcss.all,
                                        sty.spacer92
                                      )}
                                    />
                                  ) : null}
                                </div>
                              ) : null}
                            </div>
                            {false ? (
                              <div
                                data-plasmic-name={"typography53"}
                                data-plasmic-override={overrides.typography53}
                                className={classNames(
                                  projectcss.all,
                                  sty.typography53
                                )}
                              >
                                {false ? (
                                  <div
                                    data-plasmic-name={
                                      "signedByBaseTypographyParagraphMedium45"
                                    }
                                    data-plasmic-override={
                                      overrides.signedByBaseTypographyParagraphMedium45
                                    }
                                    className={classNames(
                                      projectcss.all,
                                      sty.signedByBaseTypographyParagraphMedium45
                                    )}
                                  />
                                ) : null}
                                <div
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.__wab_text,
                                    sty.text___6RsuL
                                  )}
                                >
                                  {"Text"}
                                </div>
                                {false ? (
                                  <div
                                    data-plasmic-name={"spacer93"}
                                    data-plasmic-override={overrides.spacer93}
                                    className={classNames(
                                      projectcss.all,
                                      sty.spacer93
                                    )}
                                  />
                                ) : null}
                              </div>
                            ) : null}
                          </Stack__>
                          {false ? (
                            <Stack__
                              as={"div"}
                              data-plasmic-name={"trailingEnhancer15"}
                              data-plasmic-override={
                                overrides.trailingEnhancer15
                              }
                              hasGap={true}
                              className={classNames(
                                projectcss.all,
                                sty.trailingEnhancer15
                              )}
                            >
                              <div
                                data-plasmic-name={"heart38"}
                                data-plasmic-override={overrides.heart38}
                                className={classNames(
                                  projectcss.all,
                                  sty.heart38
                                )}
                              >
                                {false ? (
                                  <Outlined5Icon
                                    className={classNames(
                                      projectcss.all,
                                      sty.svg__n3KZ3
                                    )}
                                    role={"img"}
                                  />
                                ) : null}
                                <Filled4Icon
                                  className={classNames(
                                    projectcss.all,
                                    sty.svg__d12
                                  )}
                                  role={"img"}
                                />
                              </div>
                            </Stack__>
                          ) : null}
                        </Stack__>
                        {false ? (
                          <Stack__
                            as={"div"}
                            data-plasmic-name={"menuItem20"}
                            data-plasmic-override={overrides.menuItem20}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.menuItem20
                            )}
                          >
                            {false ? (
                              <div
                                data-plasmic-name={
                                  "signedByBaseMenuItemOptionMediumStandardEnabled16"
                                }
                                data-plasmic-override={
                                  overrides.signedByBaseMenuItemOptionMediumStandardEnabled16
                                }
                                className={classNames(
                                  projectcss.all,
                                  sty.signedByBaseMenuItemOptionMediumStandardEnabled16
                                )}
                              />
                            ) : null}
                            {false ? (
                              <Stack__
                                as={"div"}
                                data-plasmic-name={
                                  "menuItemControlMediumCheckboxUnchecked16"
                                }
                                data-plasmic-override={
                                  overrides.menuItemControlMediumCheckboxUnchecked16
                                }
                                hasGap={true}
                                className={classNames(
                                  projectcss.all,
                                  sty.menuItemControlMediumCheckboxUnchecked16
                                )}
                              >
                                {false ? (
                                  <div
                                    data-plasmic-name={
                                      "signedByBaseMenuItemControlMediumCheckboxUnchecked16"
                                    }
                                    data-plasmic-override={
                                      overrides.signedByBaseMenuItemControlMediumCheckboxUnchecked16
                                    }
                                    className={classNames(
                                      projectcss.all,
                                      sty.signedByBaseMenuItemControlMediumCheckboxUnchecked16
                                    )}
                                  />
                                ) : null}
                                <div
                                  data-plasmic-name={"icon16"}
                                  data-plasmic-override={overrides.icon16}
                                  className={classNames(
                                    projectcss.all,
                                    sty.icon16
                                  )}
                                >
                                  {false ? (
                                    <Outlined8Icon
                                      className={classNames(
                                        projectcss.all,
                                        sty.svg__rSaWo
                                      )}
                                      role={"img"}
                                    />
                                  ) : null}
                                  <Outlined8Icon
                                    className={classNames(
                                      projectcss.all,
                                      sty.svg__ypxca
                                    )}
                                    role={"img"}
                                  />
                                </div>
                              </Stack__>
                            ) : null}
                            {false ? (
                              <Stack__
                                as={"div"}
                                data-plasmic-name={"leadingEnhancer16"}
                                data-plasmic-override={
                                  overrides.leadingEnhancer16
                                }
                                hasGap={true}
                                className={classNames(
                                  projectcss.all,
                                  sty.leadingEnhancer16
                                )}
                              >
                                <div
                                  data-plasmic-name={"heart39"}
                                  data-plasmic-override={overrides.heart39}
                                  className={classNames(
                                    projectcss.all,
                                    sty.heart39
                                  )}
                                >
                                  {false ? (
                                    <Outlined5Icon
                                      className={classNames(
                                        projectcss.all,
                                        sty.svg__udgKq
                                      )}
                                      role={"img"}
                                    />
                                  ) : null}
                                  <Filled4Icon
                                    className={classNames(
                                      projectcss.all,
                                      sty.svg__iRaoU
                                    )}
                                    role={"img"}
                                  />
                                </div>
                              </Stack__>
                            ) : null}
                            <Stack__
                              as={"div"}
                              data-plasmic-name={"textFrame16"}
                              data-plasmic-override={overrides.textFrame16}
                              hasGap={true}
                              className={classNames(
                                projectcss.all,
                                sty.textFrame16
                              )}
                            >
                              <div
                                data-plasmic-name={"leadingText16"}
                                data-plasmic-override={overrides.leadingText16}
                                className={classNames(
                                  projectcss.all,
                                  sty.leadingText16
                                )}
                              >
                                <div
                                  data-plasmic-name={"typography54"}
                                  data-plasmic-override={overrides.typography54}
                                  className={classNames(
                                    projectcss.all,
                                    sty.typography54
                                  )}
                                >
                                  {false ? (
                                    <div
                                      data-plasmic-name={
                                        "signedByBaseTypographyParagraphMedium46"
                                      }
                                      data-plasmic-override={
                                        overrides.signedByBaseTypographyParagraphMedium46
                                      }
                                      className={classNames(
                                        projectcss.all,
                                        sty.signedByBaseTypographyParagraphMedium46
                                      )}
                                    />
                                  ) : null}
                                  <div
                                    data-plasmic-name={"text103"}
                                    data-plasmic-override={overrides.text103}
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.__wab_text,
                                      sty.text103
                                    )}
                                  >
                                    {"Options"}
                                  </div>
                                  {false ? (
                                    <div
                                      data-plasmic-name={"spacer94"}
                                      data-plasmic-override={overrides.spacer94}
                                      className={classNames(
                                        projectcss.all,
                                        sty.spacer94
                                      )}
                                    />
                                  ) : null}
                                </div>
                                {false ? (
                                  <div
                                    data-plasmic-name={"typography55"}
                                    data-plasmic-override={
                                      overrides.typography55
                                    }
                                    className={classNames(
                                      projectcss.all,
                                      sty.typography55
                                    )}
                                  >
                                    {false ? (
                                      <div
                                        data-plasmic-name={
                                          "signedByBaseTypographyParagraphMedium47"
                                        }
                                        data-plasmic-override={
                                          overrides.signedByBaseTypographyParagraphMedium47
                                        }
                                        className={classNames(
                                          projectcss.all,
                                          sty.signedByBaseTypographyParagraphMedium47
                                        )}
                                      />
                                    ) : null}
                                    <div
                                      data-plasmic-name={"text104"}
                                      data-plasmic-override={overrides.text104}
                                      className={classNames(
                                        projectcss.all,
                                        projectcss.__wab_text,
                                        sty.text104
                                      )}
                                    >
                                      {"Supporting text"}
                                    </div>
                                    {false ? (
                                      <div
                                        data-plasmic-name={"spacer95"}
                                        data-plasmic-override={
                                          overrides.spacer95
                                        }
                                        className={classNames(
                                          projectcss.all,
                                          sty.spacer95
                                        )}
                                      />
                                    ) : null}
                                  </div>
                                ) : null}
                              </div>
                              {false ? (
                                <div
                                  data-plasmic-name={"typography56"}
                                  data-plasmic-override={overrides.typography56}
                                  className={classNames(
                                    projectcss.all,
                                    sty.typography56
                                  )}
                                >
                                  {false ? (
                                    <div
                                      data-plasmic-name={
                                        "signedByBaseTypographyParagraphMedium48"
                                      }
                                      data-plasmic-override={
                                        overrides.signedByBaseTypographyParagraphMedium48
                                      }
                                      className={classNames(
                                        projectcss.all,
                                        sty.signedByBaseTypographyParagraphMedium48
                                      )}
                                    />
                                  ) : null}
                                  <div
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.__wab_text,
                                      sty.text__qm0Sq
                                    )}
                                  >
                                    {"Text"}
                                  </div>
                                  {false ? (
                                    <div
                                      data-plasmic-name={"spacer96"}
                                      data-plasmic-override={overrides.spacer96}
                                      className={classNames(
                                        projectcss.all,
                                        sty.spacer96
                                      )}
                                    />
                                  ) : null}
                                </div>
                              ) : null}
                            </Stack__>
                            {false ? (
                              <Stack__
                                as={"div"}
                                data-plasmic-name={"trailingEnhancer16"}
                                data-plasmic-override={
                                  overrides.trailingEnhancer16
                                }
                                hasGap={true}
                                className={classNames(
                                  projectcss.all,
                                  sty.trailingEnhancer16
                                )}
                              >
                                <div
                                  data-plasmic-name={"heart40"}
                                  data-plasmic-override={overrides.heart40}
                                  className={classNames(
                                    projectcss.all,
                                    sty.heart40
                                  )}
                                >
                                  {false ? (
                                    <Outlined5Icon
                                      className={classNames(
                                        projectcss.all,
                                        sty.svg__jH3WW
                                      )}
                                      role={"img"}
                                    />
                                  ) : null}
                                  <Filled4Icon
                                    className={classNames(
                                      projectcss.all,
                                      sty.svg___6NIfE
                                    )}
                                    role={"img"}
                                  />
                                </div>
                              </Stack__>
                            ) : null}
                          </Stack__>
                        ) : null}
                        <div
                          data-plasmic-name={"scrollBar4"}
                          data-plasmic-override={overrides.scrollBar4}
                          className={classNames(projectcss.all, sty.scrollBar4)}
                        />
                      </div>
                    </div>
                  </Stack__>
                ) : null}
                <DropDown
                  data-plasmic-name={"model6"}
                  data-plasmic-override={overrides.model6}
                  check={false}
                  className={classNames("__wab_instance", sty.model6)}
                  label={"Mod\u00e8le de Runsheet & Dispositif*"}
                  options={["Default", "Special"]}
                  showLabel={true}
                  state={"default"}
                  type={"default"}
                />

                <Stack__
                  as={"div"}
                  data-plasmic-name={"buttons4"}
                  data-plasmic-override={overrides.buttons4}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.buttons4)}
                >
                  <Button
                    data-plasmic-name={"button13"}
                    data-plasmic-override={overrides.button13}
                    className={classNames("__wab_instance", sty.button13)}
                    label={
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__hyTGp
                        )}
                      >
                        {"Cr\u00e9er"}
                      </div>
                    }
                  />

                  {false ? (
                    <Stack__
                      as={"div"}
                      data-plasmic-name={"frame1073713927"}
                      data-plasmic-override={overrides.frame1073713927}
                      hasGap={true}
                      className={classNames(
                        projectcss.all,
                        sty.frame1073713927
                      )}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__wgke6
                        )}
                      >
                        <Line9Icon
                          className={classNames(projectcss.all, sty.svg__q4UBz)}
                          role={"img"}
                        />
                      </div>
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__wj0Mn
                        )}
                      >
                        {"OU"}
                      </div>
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox___43Mtv
                        )}
                      >
                        <Line9Icon
                          className={classNames(projectcss.all, sty.svg__n0T60)}
                          role={"img"}
                        />
                      </div>
                    </Stack__>
                  ) : null}
                  {false ? (
                    <Stack__
                      as={"div"}
                      data-plasmic-name={"frame1073713933"}
                      data-plasmic-override={overrides.frame1073713933}
                      hasGap={true}
                      className={classNames(
                        projectcss.all,
                        sty.frame1073713933
                      )}
                    >
                      <Button
                        data-plasmic-name={"button14"}
                        data-plasmic-override={overrides.button14}
                        className={classNames("__wab_instance", sty.button14)}
                      />

                      <Stack__
                        as={"div"}
                        data-plasmic-name={"button15"}
                        data-plasmic-override={overrides.button15}
                        hasGap={true}
                        className={classNames(projectcss.all, sty.button15)}
                      >
                        <IcTwotoneAppleIcon
                          className={classNames(projectcss.all, sty.svg__bYubq)}
                          role={"img"}
                        />

                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__gHar3
                          )}
                        >
                          {"Apple"}
                        </div>
                      </Stack__>
                      <Stack__
                        as={"div"}
                        data-plasmic-name={"button16"}
                        data-plasmic-override={overrides.button16}
                        hasGap={true}
                        className={classNames(projectcss.all, sty.button16)}
                      >
                        <MdiFacebookIcon
                          className={classNames(
                            projectcss.all,
                            sty.svg___9AeVv
                          )}
                          role={"img"}
                        />

                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__eqqV
                          )}
                        >
                          {"Facebook"}
                        </div>
                      </Stack__>
                    </Stack__>
                  ) : null}
                </Stack__>
              </Stack__>
            </React.Fragment>
          }
          footer={
            <div className={classNames(projectcss.all, sty.freeBox__rPxbw)} />
          }
          heading={
            <div
              data-plasmic-name={"frame1437254022"}
              data-plasmic-override={overrides.frame1437254022}
              className={classNames(projectcss.all, sty.frame1437254022)}
            >
              <div
                data-plasmic-name={"name9"}
                data-plasmic-override={overrides.name9}
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.name9
                )}
              >
                {"Dupliquer cet \u00e9l\u00e9ment ?"}
              </div>
              <Stack__
                as={"div"}
                data-plasmic-name={"frame1437254023"}
                data-plasmic-override={overrides.frame1437254023}
                hasGap={true}
                className={classNames(projectcss.all, sty.frame1437254023)}
              >
                <LinkSimpleIcon
                  className={classNames(projectcss.all, sty.svg__fddOh)}
                  role={"img"}
                />

                <XIcon
                  className={classNames(projectcss.all, sty.svg__b3IdB)}
                  onClick={async event => {
                    const $steps = {};

                    $steps["updateDuplicatePosition"] = true
                      ? (() => {
                          const actionArgs = {
                            variable: {
                              objRoot: $state,
                              variablePath: ["duplicatePosition"]
                            },
                            operation: 0,
                            value: false
                          };
                          return (({
                            variable,
                            value,
                            startIndex,
                            deleteCount
                          }) => {
                            if (!variable) {
                              return;
                            }
                            const { objRoot, variablePath } = variable;

                            $stateSet(objRoot, variablePath, value);
                            return value;
                          })?.apply(null, [actionArgs]);
                        })()
                      : undefined;
                    if (
                      $steps["updateDuplicatePosition"] != null &&
                      typeof $steps["updateDuplicatePosition"] === "object" &&
                      typeof $steps["updateDuplicatePosition"].then ===
                        "function"
                    ) {
                      $steps["updateDuplicatePosition"] = await $steps[
                        "updateDuplicatePosition"
                      ];
                    }
                  }}
                  role={"img"}
                />
              </Stack__>
            </div>
          }
          isOpen={generateStateValueProp($state, ["duplicate", "isOpen"])}
          noTrigger={true}
          onOpenChange={async (...eventArgs: any) => {
            generateStateOnChangeProp($state, ["duplicate", "isOpen"]).apply(
              null,
              eventArgs
            );

            if (
              eventArgs.length > 1 &&
              eventArgs[1] &&
              eventArgs[1]._plasmic_state_init_
            ) {
              return;
            }

            (async val => {
              const $steps = {};

              $steps["updateDuplicatePosition"] = true
                ? (() => {
                    const actionArgs = {
                      variable: {
                        objRoot: $state,
                        variablePath: ["duplicatePosition"]
                      },
                      operation: 4
                    };
                    return (({ variable, value, startIndex, deleteCount }) => {
                      if (!variable) {
                        return;
                      }
                      const { objRoot, variablePath } = variable;

                      const oldValue = $stateGet(objRoot, variablePath);
                      $stateSet(objRoot, variablePath, !oldValue);
                      return !oldValue;
                    })?.apply(null, [actionArgs]);
                  })()
                : undefined;
              if (
                $steps["updateDuplicatePosition"] != null &&
                typeof $steps["updateDuplicatePosition"] === "object" &&
                typeof $steps["updateDuplicatePosition"].then === "function"
              ) {
                $steps["updateDuplicatePosition"] = await $steps[
                  "updateDuplicatePosition"
                ];
              }
            }).apply(null, eventArgs);
          }}
          showFooter={false}
          trigger={null}
        />

        <div
          data-plasmic-name={"accueilDashboard"}
          data-plasmic-override={overrides.accueilDashboard}
          className={classNames(projectcss.all, sty.accueilDashboard)}
        >
          <LeftMenu
            data-plasmic-name={"leftMenu"}
            data-plasmic-override={overrides.leftMenu}
            className={classNames("__wab_instance", sty.leftMenu)}
            onSubMenuParamsChange={async (...eventArgs: any) => {
              generateStateOnChangeProp($state, [
                "leftMenu",
                "subMenuParams"
              ]).apply(null, eventArgs);

              if (
                eventArgs.length > 1 &&
                eventArgs[1] &&
                eventArgs[1]._plasmic_state_init_
              ) {
                return;
              }
            }}
          />

          <div
            data-plasmic-name={"main"}
            data-plasmic-override={overrides.main}
            className={classNames(projectcss.all, sty.main)}
          >
            <Header
              data-plasmic-name={"header"}
              data-plasmic-override={overrides.header}
              className={classNames("__wab_instance", sty.header)}
              onMoisChange={async (...eventArgs: any) => {
                generateStateOnChangeProp($state, ["header", "mois"]).apply(
                  null,
                  eventArgs
                );

                if (
                  eventArgs.length > 1 &&
                  eventArgs[1] &&
                  eventArgs[1]._plasmic_state_init_
                ) {
                  return;
                }
              }}
              onOperationIdChange2={async (...eventArgs: any) => {
                generateStateOnChangeProp($state, [
                  "header",
                  "operationId"
                ]).apply(null, eventArgs);

                if (
                  eventArgs.length > 1 &&
                  eventArgs[1] &&
                  eventArgs[1]._plasmic_state_init_
                ) {
                  return;
                }
              }}
              onRunsheetChange={async (...eventArgs: any) => {
                generateStateOnChangeProp($state, ["header", "runsheet"]).apply(
                  null,
                  eventArgs
                );

                if (
                  eventArgs.length > 1 &&
                  eventArgs[1] &&
                  eventArgs[1]._plasmic_state_init_
                ) {
                  return;
                }
              }}
              onUserClientIdChange={async (...eventArgs: any) => {
                generateStateOnChangeProp($state, [
                  "header",
                  "userClientId"
                ]).apply(null, eventArgs);

                if (
                  eventArgs.length > 1 &&
                  eventArgs[1] &&
                  eventArgs[1]._plasmic_state_init_
                ) {
                  return;
                }
              }}
              operationId={generateStateValueProp($state, [
                "header",
                "operationId"
              ])}
              runsheet={generateStateValueProp($state, ["header", "runsheet"])}
            />

            <Stack__
              as={"div"}
              data-plasmic-name={"main2"}
              data-plasmic-override={overrides.main2}
              hasGap={true}
              className={classNames(projectcss.all, sty.main2)}
            >
              <TabsContainer
                data-plasmic-name={"tabsContainer"}
                data-plasmic-override={overrides.tabsContainer}
                initialKey={(() => {
                  try {
                    return 1;
                  } catch (e) {
                    if (
                      e instanceof TypeError ||
                      e?.plasmicType === "PlasmicUndefinedDataError"
                    ) {
                      return undefined;
                    }
                    throw e;
                  }
                })()}
              >
                <DataCtxReader__>
                  {$ctx => (
                    <React.Fragment>
                      <div
                        data-plasmic-name={"tabs"}
                        data-plasmic-override={overrides.tabs}
                        className={classNames(projectcss.all, sty.tabs)}
                      >
                        {(_par =>
                          !_par ? [] : Array.isArray(_par) ? _par : [_par])(
                          (() => {
                            try {
                              return [
                                {
                                  label: "Positions sites",
                                  id: 1
                                },
                                {
                                  label: "Documents site",
                                  id: 2
                                }
                              ];
                            } catch (e) {
                              if (
                                e instanceof TypeError ||
                                e?.plasmicType === "PlasmicUndefinedDataError"
                              ) {
                                return [];
                              }
                              throw e;
                            }
                          })()
                        ).map((__plasmic_item_0, __plasmic_idx_0) => {
                          const currentItem = __plasmic_item_0;
                          const currentIndex = __plasmic_idx_0;
                          return (
                            <TabButton
                              data-plasmic-name={"tabButton"}
                              data-plasmic-override={overrides.tabButton}
                              className={classNames(
                                "__wab_instance",
                                sty.tabButton
                              )}
                              key={currentIndex}
                              tabKey={(() => {
                                try {
                                  return currentItem.id;
                                } catch (e) {
                                  if (
                                    e instanceof TypeError ||
                                    e?.plasmicType ===
                                      "PlasmicUndefinedDataError"
                                  ) {
                                    return undefined;
                                  }
                                  throw e;
                                }
                              })()}
                            >
                              <Button
                                className={classNames(
                                  "__wab_instance",
                                  sty.button___9Ryrj
                                )}
                                label={
                                  <div
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.__wab_text,
                                      sty.text__oI6H
                                    )}
                                  >
                                    <React.Fragment>
                                      {(() => {
                                        try {
                                          return currentItem.label;
                                        } catch (e) {
                                          if (
                                            e instanceof TypeError ||
                                            e?.plasmicType ===
                                              "PlasmicUndefinedDataError"
                                          ) {
                                            return "Text";
                                          }
                                          throw e;
                                        }
                                      })()}
                                    </React.Fragment>
                                  </div>
                                }
                                type={"tag"}
                              />
                            </TabButton>
                          );
                        })}
                        <TabUnderline
                          data-plasmic-name={"tabUnderline"}
                          data-plasmic-override={overrides.tabUnderline}
                          className={classNames(
                            "__wab_instance",
                            sty.tabUnderline
                          )}
                        />
                      </div>
                      <Stack__
                        as={"div"}
                        data-plasmic-name={"filter"}
                        data-plasmic-override={overrides.filter}
                        hasGap={true}
                        className={classNames(projectcss.all, sty.filter)}
                      >
                        <Button
                          data-plasmic-name={"buttonFilter"}
                          data-plasmic-override={overrides.buttonFilter}
                          className={classNames(
                            "__wab_instance",
                            sty.buttonFilter
                          )}
                          disabled={true}
                          end={
                            <PlusIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__fYhSb
                              )}
                              role={"img"}
                            />
                          }
                          iconStart={true}
                          label={
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__fbIcn
                              )}
                            >
                              {"Filtrer"}
                            </div>
                          }
                          start={
                            <SlidersHorizontalIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__el0Ph
                              )}
                              role={"img"}
                            />
                          }
                          type={"secondary"}
                        />

                        {(() => {
                          try {
                            return $ctx.currentTabKey == 1;
                          } catch (e) {
                            if (
                              e instanceof TypeError ||
                              e?.plasmicType === "PlasmicUndefinedDataError"
                            ) {
                              return true;
                            }
                            throw e;
                          }
                        })() ? (
                          <Button
                            data-plasmic-name={"buttonAdd2"}
                            data-plasmic-override={overrides.buttonAdd2}
                            className={classNames(
                              "__wab_instance",
                              sty.buttonAdd2
                            )}
                            end={
                              <PlusIcon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__j0LS
                                )}
                                role={"img"}
                              />
                            }
                            iconEnd={true}
                            label={
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__o2Bfq
                                )}
                              >
                                {"Cr\u00e9er une nouvelle position"}
                              </div>
                            }
                            onClick={async event => {
                              const $steps = {};

                              $steps["updateVariable"] = true
                                ? (() => {
                                    const actionArgs = {
                                      variable: {
                                        objRoot: $state,
                                        variablePath: ["newPosition"]
                                      },
                                      operation: 0,
                                      value: true
                                    };
                                    return (({
                                      variable,
                                      value,
                                      startIndex,
                                      deleteCount
                                    }) => {
                                      if (!variable) {
                                        return;
                                      }
                                      const { objRoot, variablePath } =
                                        variable;

                                      $stateSet(objRoot, variablePath, value);
                                      return value;
                                    })?.apply(null, [actionArgs]);
                                  })()
                                : undefined;
                              if (
                                $steps["updateVariable"] != null &&
                                typeof $steps["updateVariable"] === "object" &&
                                typeof $steps["updateVariable"].then ===
                                  "function"
                              ) {
                                $steps["updateVariable"] = await $steps[
                                  "updateVariable"
                                ];
                              }
                            }}
                          />
                        ) : null}
                        {(() => {
                          try {
                            return $ctx.currentTabKey == 2;
                          } catch (e) {
                            if (
                              e instanceof TypeError ||
                              e?.plasmicType === "PlasmicUndefinedDataError"
                            ) {
                              return true;
                            }
                            throw e;
                          }
                        })() ? (
                          <Button
                            data-plasmic-name={"buttonAddDoc"}
                            data-plasmic-override={overrides.buttonAddDoc}
                            className={classNames(
                              "__wab_instance",
                              sty.buttonAddDoc
                            )}
                            end={
                              <PlusIcon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__zldVs
                                )}
                                role={"img"}
                              />
                            }
                            iconEnd={true}
                            label={"Importer un nouveau document"}
                            onClick={async event => {
                              const $steps = {};

                              $steps["updateNewDoc"] = true
                                ? (() => {
                                    const actionArgs = {
                                      variable: {
                                        objRoot: $state,
                                        variablePath: ["newDoc"]
                                      },
                                      operation: 0,
                                      value: true
                                    };
                                    return (({
                                      variable,
                                      value,
                                      startIndex,
                                      deleteCount
                                    }) => {
                                      if (!variable) {
                                        return;
                                      }
                                      const { objRoot, variablePath } =
                                        variable;

                                      $stateSet(objRoot, variablePath, value);
                                      return value;
                                    })?.apply(null, [actionArgs]);
                                  })()
                                : undefined;
                              if (
                                $steps["updateNewDoc"] != null &&
                                typeof $steps["updateNewDoc"] === "object" &&
                                typeof $steps["updateNewDoc"].then ===
                                  "function"
                              ) {
                                $steps["updateNewDoc"] = await $steps[
                                  "updateNewDoc"
                                ];
                              }
                            }}
                          />
                        ) : null}
                      </Stack__>
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__eFfLn
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__t3JuW
                          )}
                        >
                          <TabContent
                            data-plasmic-name={"_1"}
                            data-plasmic-override={overrides._1}
                            className={classNames("__wab_instance", sty._1)}
                            tabKey={(() => {
                              try {
                                return 1;
                              } catch (e) {
                                if (
                                  e instanceof TypeError ||
                                  e?.plasmicType === "PlasmicUndefinedDataError"
                                ) {
                                  return undefined;
                                }
                                throw e;
                              }
                            })()}
                          >
                            {(() => {
                              try {
                                return $queries.poPositions.data.length > 0;
                              } catch (e) {
                                if (
                                  e instanceof TypeError ||
                                  e?.plasmicType === "PlasmicUndefinedDataError"
                                ) {
                                  return true;
                                }
                                throw e;
                              }
                            })() ? (
                              <Stack__
                                as={"div"}
                                data-plasmic-name={"table"}
                                data-plasmic-override={overrides.table}
                                hasGap={true}
                                className={classNames(
                                  projectcss.all,
                                  sty.table
                                )}
                              >
                                <DataGrid
                                  data-plasmic-name={"dataGrid"}
                                  data-plasmic-override={overrides.dataGrid}
                                  className={classNames(
                                    "__wab_instance",
                                    sty.dataGrid
                                  )}
                                  columnLabels={{}}
                                  currentPage={1}
                                  emptyStateMessage={``}
                                  enableColumnReordering={true}
                                  enableExport={false}
                                  enablePrint={false}
                                  exportFormats={"excel"}
                                  monetaryColumns={["budget"]}
                                  numericColumns={["budget"]}
                                  onCopyClick={async taskId => {
                                    const $steps = {};

                                    $steps["updateDuplicatePosition"] = true
                                      ? (() => {
                                          const actionArgs = {
                                            variable: {
                                              objRoot: $state,
                                              variablePath: [
                                                "duplicatePosition"
                                              ]
                                            },
                                            operation: 0,
                                            value: true
                                          };
                                          return (({
                                            variable,
                                            value,
                                            startIndex,
                                            deleteCount
                                          }) => {
                                            if (!variable) {
                                              return;
                                            }
                                            const { objRoot, variablePath } =
                                              variable;

                                            $stateSet(
                                              objRoot,
                                              variablePath,
                                              value
                                            );
                                            return value;
                                          })?.apply(null, [actionArgs]);
                                        })()
                                      : undefined;
                                    if (
                                      $steps["updateDuplicatePosition"] !=
                                        null &&
                                      typeof $steps[
                                        "updateDuplicatePosition"
                                      ] === "object" &&
                                      typeof $steps["updateDuplicatePosition"]
                                        .then === "function"
                                    ) {
                                      $steps["updateDuplicatePosition"] =
                                        await $steps["updateDuplicatePosition"];
                                    }

                                    $steps["updatePositionId"] = true
                                      ? (() => {
                                          const actionArgs = {
                                            variable: {
                                              objRoot: $state,
                                              variablePath: ["positionId"]
                                            },
                                            operation: 0,
                                            value: taskId
                                          };
                                          return (({
                                            variable,
                                            value,
                                            startIndex,
                                            deleteCount
                                          }) => {
                                            if (!variable) {
                                              return;
                                            }
                                            const { objRoot, variablePath } =
                                              variable;

                                            $stateSet(
                                              objRoot,
                                              variablePath,
                                              value
                                            );
                                            return value;
                                          })?.apply(null, [actionArgs]);
                                        })()
                                      : undefined;
                                    if (
                                      $steps["updatePositionId"] != null &&
                                      typeof $steps["updatePositionId"] ===
                                        "object" &&
                                      typeof $steps["updatePositionId"].then ===
                                        "function"
                                    ) {
                                      $steps["updatePositionId"] = await $steps[
                                        "updatePositionId"
                                      ];
                                    }
                                  }}
                                  onDeleteClick={async taskId => {
                                    const $steps = {};

                                    $steps["updateDeletePosition"] = true
                                      ? (() => {
                                          const actionArgs = {
                                            variable: {
                                              objRoot: $state,
                                              variablePath: ["deletePosition"]
                                            },
                                            operation: 0,
                                            value: true
                                          };
                                          return (({
                                            variable,
                                            value,
                                            startIndex,
                                            deleteCount
                                          }) => {
                                            if (!variable) {
                                              return;
                                            }
                                            const { objRoot, variablePath } =
                                              variable;

                                            $stateSet(
                                              objRoot,
                                              variablePath,
                                              value
                                            );
                                            return value;
                                          })?.apply(null, [actionArgs]);
                                        })()
                                      : undefined;
                                    if (
                                      $steps["updateDeletePosition"] != null &&
                                      typeof $steps["updateDeletePosition"] ===
                                        "object" &&
                                      typeof $steps["updateDeletePosition"]
                                        .then === "function"
                                    ) {
                                      $steps["updateDeletePosition"] =
                                        await $steps["updateDeletePosition"];
                                    }

                                    $steps["updatePositionId"] = true
                                      ? (() => {
                                          const actionArgs = {
                                            variable: {
                                              objRoot: $state,
                                              variablePath: ["positionId"]
                                            },
                                            operation: 0,
                                            value: taskId
                                          };
                                          return (({
                                            variable,
                                            value,
                                            startIndex,
                                            deleteCount
                                          }) => {
                                            if (!variable) {
                                              return;
                                            }
                                            const { objRoot, variablePath } =
                                              variable;

                                            $stateSet(
                                              objRoot,
                                              variablePath,
                                              value
                                            );
                                            return value;
                                          })?.apply(null, [actionArgs]);
                                        })()
                                      : undefined;
                                    if (
                                      $steps["updatePositionId"] != null &&
                                      typeof $steps["updatePositionId"] ===
                                        "object" &&
                                      typeof $steps["updatePositionId"].then ===
                                        "function"
                                    ) {
                                      $steps["updatePositionId"] = await $steps[
                                        "updatePositionId"
                                      ];
                                    }
                                  }}
                                  onEditClick={async taskId => {
                                    const $steps = {};

                                    $steps["updateEditPosition2"] = true
                                      ? (() => {
                                          const actionArgs = {
                                            variable: {
                                              objRoot: $state,
                                              variablePath: ["editPosition2"]
                                            },
                                            operation: 0,
                                            value: true
                                          };
                                          return (({
                                            variable,
                                            value,
                                            startIndex,
                                            deleteCount
                                          }) => {
                                            if (!variable) {
                                              return;
                                            }
                                            const { objRoot, variablePath } =
                                              variable;

                                            $stateSet(
                                              objRoot,
                                              variablePath,
                                              value
                                            );
                                            return value;
                                          })?.apply(null, [actionArgs]);
                                        })()
                                      : undefined;
                                    if (
                                      $steps["updateEditPosition2"] != null &&
                                      typeof $steps["updateEditPosition2"] ===
                                        "object" &&
                                      typeof $steps["updateEditPosition2"]
                                        .then === "function"
                                    ) {
                                      $steps["updateEditPosition2"] =
                                        await $steps["updateEditPosition2"];
                                    }

                                    $steps["updatePositionId"] = true
                                      ? (() => {
                                          const actionArgs = {
                                            variable: {
                                              objRoot: $state,
                                              variablePath: ["positionId"]
                                            },
                                            operation: 0,
                                            value: taskId
                                          };
                                          return (({
                                            variable,
                                            value,
                                            startIndex,
                                            deleteCount
                                          }) => {
                                            if (!variable) {
                                              return;
                                            }
                                            const { objRoot, variablePath } =
                                              variable;

                                            $stateSet(
                                              objRoot,
                                              variablePath,
                                              value
                                            );
                                            return value;
                                          })?.apply(null, [actionArgs]);
                                        })()
                                      : undefined;
                                    if (
                                      $steps["updatePositionId"] != null &&
                                      typeof $steps["updatePositionId"] ===
                                        "object" &&
                                      typeof $steps["updatePositionId"].then ===
                                        "function"
                                    ) {
                                      $steps["updatePositionId"] = await $steps[
                                        "updatePositionId"
                                      ];
                                    }
                                  }}
                                  pageSize={10}
                                  pdfTitle={"Sitex - Commande"}
                                  responsive={{
                                    minWidth: "100%",
                                    horizontalOverflow: "auto",
                                    verticalOverflow: "auto",
                                    stickyHeader: true,
                                    compactOnMobile: true,
                                    breakpoint: 768
                                  }}
                                  showActions={true}
                                  tasks={(() => {
                                    try {
                                      return $queries.poPositions.data.map(
                                        ({
                                          id,
                                          name,
                                          specific_name,
                                          references,
                                          sector,
                                          attached_file
                                        }) => ({
                                          id: Number(id),
                                          Nom: name,
                                          Libellé: specific_name,
                                          Secteur: sector,
                                          "Références et dimensionnement":
                                            references,
                                          "Photo de situation":
                                            attached_file || null
                                        })
                                      );
                                    } catch (e) {
                                      if (
                                        e instanceof TypeError ||
                                        e?.plasmicType ===
                                          "PlasmicUndefinedDataError"
                                      ) {
                                        return [];
                                      }
                                      throw e;
                                    }
                                  })()}
                                  theme={(() => {
                                    const __composite = {
                                      headerBgColor: "#ECE6DF",
                                      rowBgColor: "#ffffff",
                                      hoverBgColor: "#f9f5ff",
                                      borderColor: "#d9cdbf",
                                      textColor: "#333333",
                                      fontSize: "14px",
                                      dragHandleColor: null
                                    };
                                    __composite["dragHandleColor"] = "#333333";
                                    return __composite;
                                  })()}
                                />
                              </Stack__>
                            ) : null}
                          </TabContent>
                          <TabContent
                            data-plasmic-name={"_2"}
                            data-plasmic-override={overrides._2}
                            className={classNames("__wab_instance", sty._2)}
                            tabKey={(() => {
                              try {
                                return 2;
                              } catch (e) {
                                if (
                                  e instanceof TypeError ||
                                  e?.plasmicType === "PlasmicUndefinedDataError"
                                ) {
                                  return undefined;
                                }
                                throw e;
                              }
                            })()}
                          >
                            <Stack__
                              as={"div"}
                              hasGap={true}
                              className={classNames(
                                projectcss.all,
                                sty.freeBox__smvWf
                              )}
                            >
                              {(_par =>
                                !_par
                                  ? []
                                  : Array.isArray(_par)
                                  ? _par
                                  : [_par])(
                                (() => {
                                  try {
                                    return $queries.poFiles.data;
                                  } catch (e) {
                                    if (
                                      e instanceof TypeError ||
                                      e?.plasmicType ===
                                        "PlasmicUndefinedDataError"
                                    ) {
                                      return [];
                                    }
                                    throw e;
                                  }
                                })()
                              ).map((__plasmic_item_0, __plasmic_idx_0) => {
                                const currentItem = __plasmic_item_0;
                                const currentIndex = __plasmic_idx_0;
                                return (() => {
                                  const child$Props = {
                                    className: classNames(
                                      "__wab_instance",
                                      sty.file
                                    ),
                                    currentItem: currentItem,

                                    fileId: generateStateValueProp($state, [
                                      "file",
                                      __plasmic_idx_0,
                                      "fileId"
                                    ]),
                                    key: currentIndex,
                                    onFileIdChange: async (
                                      ...eventArgs: any
                                    ) => {
                                      generateStateOnChangeProp($state, [
                                        "file",
                                        __plasmic_idx_0,
                                        "fileId"
                                      ]).apply(null, eventArgs);

                                      if (
                                        eventArgs.length > 1 &&
                                        eventArgs[1] &&
                                        eventArgs[1]._plasmic_state_init_
                                      ) {
                                        return;
                                      }
                                    },
                                    onTypeChange2: async (
                                      ...eventArgs: any
                                    ) => {
                                      generateStateOnChangeProp($state, [
                                        "file",
                                        __plasmic_idx_0,
                                        "type"
                                      ]).apply(null, eventArgs);

                                      if (
                                        eventArgs.length > 1 &&
                                        eventArgs[1] &&
                                        eventArgs[1]._plasmic_state_init_
                                      ) {
                                        return;
                                      }
                                    },
                                    type: generateStateValueProp($state, [
                                      "file",
                                      __plasmic_idx_0,
                                      "type"
                                    ])
                                  };

                                  initializePlasmicStates(
                                    $state,
                                    [
                                      {
                                        name: "file[].fileId",
                                        initFunc: ({
                                          $props,
                                          $state,
                                          $queries
                                        }) =>
                                          (() => {
                                            try {
                                              return currentItem.id;
                                            } catch (e) {
                                              if (
                                                e instanceof TypeError ||
                                                e?.plasmicType ===
                                                  "PlasmicUndefinedDataError"
                                              ) {
                                                return 0;
                                              }
                                              throw e;
                                            }
                                          })()
                                      },
                                      {
                                        name: "file[].type",
                                        initFunc: ({
                                          $props,
                                          $state,
                                          $queries
                                        }) => "model"
                                      }
                                    ],
                                    [__plasmic_idx_0]
                                  );
                                  return (
                                    <File
                                      data-plasmic-name={"file"}
                                      data-plasmic-override={overrides.file}
                                      {...child$Props}
                                    />
                                  );
                                })();
                              })}
                            </Stack__>
                          </TabContent>
                        </div>
                      </div>
                    </React.Fragment>
                  )}
                </DataCtxReader__>
              </TabsContainer>
              {(() => {
                try {
                  return $queries.poPositions.data.length === 0;
                } catch (e) {
                  if (
                    e instanceof TypeError ||
                    e?.plasmicType === "PlasmicUndefinedDataError"
                  ) {
                    return true;
                  }
                  throw e;
                }
              })() ? (
                <Stack__
                  as={"div"}
                  data-plasmic-name={"noDoc"}
                  data-plasmic-override={overrides.noDoc}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.noDoc)}
                >
                  <PhCalendarBlankFillIcon
                    className={classNames(projectcss.all, sty.svg__vJd1)}
                    role={"img"}
                  />

                  <div
                    data-plasmic-name={"noDocuments"}
                    data-plasmic-override={overrides.noDocuments}
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.noDocuments
                    )}
                  >
                    {"Vous n\u2019avez pas encore de positions."}
                  </div>
                  <div
                    data-plasmic-name={"startCreatingYour"}
                    data-plasmic-override={overrides.startCreatingYour}
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.startCreatingYour
                    )}
                  >
                    {"Commencez par en cr\u00e9er une."}
                  </div>
                </Stack__>
              ) : null}
            </Stack__>
          </div>
        </div>
        <BottomMenu
          data-plasmic-name={"bottomMenu"}
          data-plasmic-override={overrides.bottomMenu}
          className={classNames("__wab_instance", sty.bottomMenu)}
        />
      </div>
    </React.Fragment>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: [
    "root",
    "uploadFile",
    "frame1437254034",
    "name16",
    "frame1437254035",
    "files2",
    "upload5",
    "createPosition",
    "frame1437254016",
    "name",
    "frame1437254019",
    "createPosition2",
    "input",
    "textArea",
    "precisions2",
    "select9",
    "generalDescription2",
    "textAreaInput",
    "upload",
    "content",
    "titre",
    "texinput2",
    "date",
    "label6",
    "timePicker",
    "type",
    "budget",
    "comments",
    "input5",
    "name2",
    "datePickerWeb",
    "inputSelect",
    "signedByBaseFieldGroupSmall",
    "endDateCalendar",
    "inputElementTextField",
    "signedByBaseInputElementTextFieldSmallEnabled",
    "leadingArtworkContainer",
    "leadingArtwork",
    "leadingLabelContainer",
    "leadingLabel",
    "signedByBaseTypographyLabelSmall",
    "text5",
    "spacer",
    "inputElementContentText",
    "signedByBaseInputElementContentTextSmallOff",
    "text6",
    "trailingLabelEnhancer",
    "trailingLabel",
    "signedByBaseTypographyLabelSmall2",
    "text7",
    "spacer2",
    "trailingArtworkContainer",
    "trailingArtwork",
    "calendar",
    "signedByBaseInputElementSelectXSmallWebSingleDefaultEnabled",
    "leadingArtworkContainer2",
    "text8",
    "leadingLabelContainer2",
    "leadingLabel2",
    "signedByBaseTypographyLabelXSmall",
    "text9",
    "spacer3",
    "inputElementContentText2",
    "signedByBaseInputElementContentTextXSmallWebOff",
    "text10",
    "trailingLabelEnhancer2",
    "trailingLabel2",
    "signedByBaseTypographyLabelXSmall2",
    "text11",
    "spacer4",
    "trailingArtworkContainer2",
    "trailingArtwork2",
    "selectIndicatorContainer",
    "chevronIcon",
    "inputElementHint",
    "heart",
    "hint",
    "signedByBaseTypographyParagraphSmall",
    "text12",
    "spacer28",
    "inputElementSelect",
    "signedByBaseInputElementSelectMediumSingleDefaultActive",
    "selectFrame",
    "leadingArtworkContainer3",
    "leadingArtwork2",
    "leadingLabelContainer3",
    "leadingLabel3",
    "signedByBaseTypographyLabelMedium",
    "text13",
    "spacer5",
    "inputElementContentText3",
    "signedByBaseInputElementContentTextMediumOff",
    "text14",
    "trailingLabelEnhancer3",
    "trailingLabel3",
    "signedByBaseTypographyLabelMedium2",
    "text15",
    "spacer6",
    "trailingArtworkContainer3",
    "trailingArtwork3",
    "selectIndicatorContainer2",
    "chevronIcon2",
    "menu",
    "signedByBaseMenuListMedium",
    "menuItem",
    "signedByBaseMenuItemSearchMediumNoneEnabled",
    "searchField",
    "signedByBaseSearchFieldMediumEnabled",
    "inputElementLabel",
    "signedByBaseInputElementLabelMedium",
    "typography",
    "signedByBaseTypographyLabelMedium3",
    "text16",
    "spacer7",
    "characterCountFrame",
    "heart2",
    "typography2",
    "signedByBaseTypographyLabelMedium4",
    "text17",
    "spacer8",
    "inputElementTextField2",
    "signedByBaseInputElementTextFieldMediumEnabled",
    "leadingArtworkContainer4",
    "search",
    "leadingLabelContainer4",
    "leadingLabel4",
    "signedByBaseTypographyLabelMedium5",
    "text18",
    "spacer9",
    "inputElementContentText4",
    "signedByBaseInputElementContentTextMediumOff2",
    "text19",
    "trailingLabelEnhancer4",
    "trailingLabel4",
    "signedByBaseTypographyLabelMedium6",
    "text20",
    "spacer10",
    "trailingArtworkContainer4",
    "trailingArtwork4",
    "inputElementHint2",
    "heart3",
    "hint2",
    "signedByBaseTypographyParagraphSmall2",
    "text21",
    "spacer29",
    "menuItem2",
    "signedByBaseMenuItemOptionMediumStandardEnabled",
    "menuItemControlMediumCheckboxUnchecked",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked",
    "icon",
    "leadingEnhancer",
    "heart4",
    "textFrame",
    "leadingText",
    "typography3",
    "signedByBaseTypographyParagraphMedium",
    "text22",
    "spacer11",
    "typography4",
    "signedByBaseTypographyParagraphMedium2",
    "text23",
    "spacer12",
    "typography5",
    "signedByBaseTypographyParagraphMedium3",
    "spacer13",
    "trailingEnhancer",
    "heart5",
    "menuItem3",
    "signedByBaseMenuItemOptionMediumStandardEnabled2",
    "menuItemControlMediumCheckboxUnchecked2",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked2",
    "icon2",
    "leadingEnhancer2",
    "heart6",
    "textFrame2",
    "leadingText2",
    "typography6",
    "signedByBaseTypographyParagraphMedium4",
    "text24",
    "spacer14",
    "typography7",
    "signedByBaseTypographyParagraphMedium5",
    "text25",
    "spacer15",
    "typography8",
    "signedByBaseTypographyParagraphMedium6",
    "spacer16",
    "trailingEnhancer2",
    "checkmarkSmall",
    "menuItem4",
    "signedByBaseMenuItemOptionMediumStandardEnabled3",
    "menuItemControlMediumCheckboxUnchecked3",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked3",
    "icon3",
    "leadingEnhancer3",
    "heart7",
    "textFrame3",
    "leadingText3",
    "typography9",
    "signedByBaseTypographyParagraphMedium7",
    "text26",
    "spacer17",
    "typography10",
    "signedByBaseTypographyParagraphMedium8",
    "text27",
    "spacer18",
    "typography11",
    "signedByBaseTypographyParagraphMedium9",
    "spacer19",
    "trailingEnhancer3",
    "heart8",
    "menuItem5",
    "signedByBaseMenuItemOptionMediumStandardEnabled4",
    "menuItemControlMediumCheckboxUnchecked4",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked4",
    "icon4",
    "leadingEnhancer4",
    "heart9",
    "textFrame4",
    "leadingText4",
    "typography12",
    "signedByBaseTypographyParagraphMedium10",
    "text28",
    "spacer20",
    "typography13",
    "signedByBaseTypographyParagraphMedium11",
    "text29",
    "spacer21",
    "typography14",
    "signedByBaseTypographyParagraphMedium12",
    "spacer22",
    "trailingEnhancer4",
    "heart10",
    "scrollBar",
    "model",
    "buttons",
    "button",
    "frame1073713924",
    "frame1073713930",
    "button2",
    "button3",
    "button4",
    "editPosition",
    "frame1437254017",
    "name3",
    "frame1437254020",
    "editPosition3",
    "input3",
    "textArea2",
    "precisions3",
    "select10",
    "generalDescription3",
    "textArea4",
    "upload22",
    "deletePosition2",
    "frame1437254018",
    "name7",
    "frame1437254021",
    "form3",
    "content3",
    "titre3",
    "texinput23",
    "date3",
    "label8",
    "timePicker9",
    "type3",
    "budget3",
    "comments3",
    "input9",
    "name6",
    "datePickerWeb3",
    "inputSelect3",
    "signedByBaseFieldGroupSmall3",
    "endDateCalendar3",
    "inputElementTextField5",
    "signedByBaseInputElementTextFieldSmallEnabled3",
    "leadingArtworkContainer9",
    "leadingArtwork5",
    "leadingLabelContainer9",
    "leadingLabel9",
    "signedByBaseTypographyLabelSmall5",
    "text55",
    "spacer49",
    "inputElementContentText9",
    "signedByBaseInputElementContentTextSmallOff3",
    "text56",
    "trailingLabelEnhancer9",
    "trailingLabel9",
    "signedByBaseTypographyLabelSmall6",
    "text57",
    "spacer50",
    "trailingArtworkContainer9",
    "trailingArtwork9",
    "calendar3",
    "signedByBaseInputElementSelectXSmallWebSingleDefaultEnabled3",
    "leadingArtworkContainer10",
    "text58",
    "leadingLabelContainer10",
    "leadingLabel10",
    "signedByBaseTypographyLabelXSmall5",
    "text59",
    "spacer51",
    "inputElementContentText10",
    "signedByBaseInputElementContentTextXSmallWebOff3",
    "text60",
    "trailingLabelEnhancer10",
    "trailingLabel10",
    "signedByBaseTypographyLabelXSmall6",
    "text61",
    "spacer52",
    "trailingArtworkContainer10",
    "trailingArtwork10",
    "selectIndicatorContainer5",
    "chevronIcon5",
    "inputElementHint5",
    "heart21",
    "hint5",
    "signedByBaseTypographyParagraphSmall5",
    "text62",
    "spacer53",
    "inputElementSelect3",
    "signedByBaseInputElementSelectMediumSingleDefaultActive3",
    "selectFrame3",
    "leadingArtworkContainer11",
    "leadingArtwork6",
    "leadingLabelContainer11",
    "leadingLabel11",
    "signedByBaseTypographyLabelMedium13",
    "text63",
    "spacer54",
    "inputElementContentText11",
    "signedByBaseInputElementContentTextMediumOff5",
    "text64",
    "trailingLabelEnhancer11",
    "trailingLabel11",
    "signedByBaseTypographyLabelMedium14",
    "text65",
    "spacer55",
    "trailingArtworkContainer11",
    "trailingArtwork11",
    "selectIndicatorContainer6",
    "chevronIcon6",
    "menu3",
    "signedByBaseMenuListMedium3",
    "menuItem11",
    "signedByBaseMenuItemSearchMediumNoneEnabled3",
    "searchField3",
    "signedByBaseSearchFieldMediumEnabled3",
    "inputElementLabel3",
    "signedByBaseInputElementLabelMedium3",
    "typography29",
    "signedByBaseTypographyLabelMedium15",
    "text66",
    "spacer56",
    "characterCountFrame3",
    "heart22",
    "typography30",
    "signedByBaseTypographyLabelMedium16",
    "text67",
    "spacer57",
    "inputElementTextField6",
    "signedByBaseInputElementTextFieldMediumEnabled3",
    "leadingArtworkContainer12",
    "search3",
    "leadingLabelContainer12",
    "leadingLabel12",
    "signedByBaseTypographyLabelMedium17",
    "text68",
    "spacer58",
    "inputElementContentText12",
    "signedByBaseInputElementContentTextMediumOff6",
    "text69",
    "trailingLabelEnhancer12",
    "trailingLabel12",
    "signedByBaseTypographyLabelMedium18",
    "text70",
    "spacer59",
    "trailingArtworkContainer12",
    "trailingArtwork12",
    "inputElementHint6",
    "heart23",
    "hint6",
    "signedByBaseTypographyParagraphSmall6",
    "text71",
    "spacer60",
    "menuItem12",
    "signedByBaseMenuItemOptionMediumStandardEnabled9",
    "menuItemControlMediumCheckboxUnchecked9",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked9",
    "icon9",
    "leadingEnhancer9",
    "heart24",
    "textFrame9",
    "leadingText9",
    "typography31",
    "signedByBaseTypographyParagraphMedium25",
    "text72",
    "spacer61",
    "typography32",
    "signedByBaseTypographyParagraphMedium26",
    "text73",
    "spacer62",
    "typography33",
    "signedByBaseTypographyParagraphMedium27",
    "spacer63",
    "trailingEnhancer9",
    "heart25",
    "menuItem13",
    "signedByBaseMenuItemOptionMediumStandardEnabled10",
    "menuItemControlMediumCheckboxUnchecked10",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked10",
    "icon10",
    "leadingEnhancer10",
    "heart26",
    "textFrame10",
    "leadingText10",
    "typography34",
    "signedByBaseTypographyParagraphMedium28",
    "text74",
    "spacer64",
    "typography35",
    "signedByBaseTypographyParagraphMedium29",
    "text75",
    "spacer65",
    "typography36",
    "signedByBaseTypographyParagraphMedium30",
    "spacer66",
    "trailingEnhancer10",
    "checkmarkSmall3",
    "menuItem14",
    "signedByBaseMenuItemOptionMediumStandardEnabled11",
    "menuItemControlMediumCheckboxUnchecked11",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked11",
    "icon11",
    "leadingEnhancer11",
    "heart27",
    "textFrame11",
    "leadingText11",
    "typography37",
    "signedByBaseTypographyParagraphMedium31",
    "text76",
    "spacer67",
    "typography38",
    "signedByBaseTypographyParagraphMedium32",
    "text77",
    "spacer68",
    "typography39",
    "signedByBaseTypographyParagraphMedium33",
    "spacer69",
    "trailingEnhancer11",
    "heart28",
    "menuItem15",
    "signedByBaseMenuItemOptionMediumStandardEnabled12",
    "menuItemControlMediumCheckboxUnchecked12",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked12",
    "icon12",
    "leadingEnhancer12",
    "heart29",
    "textFrame12",
    "leadingText12",
    "typography40",
    "signedByBaseTypographyParagraphMedium34",
    "text78",
    "spacer70",
    "typography41",
    "signedByBaseTypographyParagraphMedium35",
    "text79",
    "spacer71",
    "typography42",
    "signedByBaseTypographyParagraphMedium36",
    "spacer72",
    "trailingEnhancer12",
    "heart30",
    "scrollBar3",
    "model3",
    "buttons3",
    "button9",
    "frame1073713926",
    "frame1073713932",
    "button10",
    "button11",
    "button12",
    "duplicate",
    "frame1437254022",
    "name9",
    "frame1437254023",
    "formDuplicateModel",
    "content4",
    "titre6",
    "texinput24",
    "date4",
    "label9",
    "timePicker10",
    "type6",
    "budget6",
    "comments4",
    "input10",
    "name8",
    "datePickerWeb4",
    "inputSelect4",
    "signedByBaseFieldGroupSmall4",
    "endDateCalendar4",
    "inputElementTextField7",
    "signedByBaseInputElementTextFieldSmallEnabled4",
    "leadingArtworkContainer13",
    "leadingArtwork7",
    "leadingLabelContainer13",
    "leadingLabel13",
    "signedByBaseTypographyLabelSmall7",
    "text80",
    "spacer73",
    "inputElementContentText13",
    "signedByBaseInputElementContentTextSmallOff4",
    "text81",
    "trailingLabelEnhancer13",
    "trailingLabel13",
    "signedByBaseTypographyLabelSmall8",
    "text82",
    "spacer74",
    "trailingArtworkContainer13",
    "trailingArtwork13",
    "calendar4",
    "signedByBaseInputElementSelectXSmallWebSingleDefaultEnabled4",
    "leadingArtworkContainer14",
    "text83",
    "leadingLabelContainer14",
    "leadingLabel14",
    "signedByBaseTypographyLabelXSmall7",
    "text84",
    "spacer75",
    "inputElementContentText14",
    "signedByBaseInputElementContentTextXSmallWebOff4",
    "text85",
    "trailingLabelEnhancer14",
    "trailingLabel14",
    "signedByBaseTypographyLabelXSmall8",
    "text86",
    "spacer76",
    "trailingArtworkContainer14",
    "trailingArtwork14",
    "selectIndicatorContainer7",
    "chevronIcon7",
    "inputElementHint7",
    "heart31",
    "hint7",
    "signedByBaseTypographyParagraphSmall7",
    "text87",
    "spacer77",
    "inputElementSelect4",
    "signedByBaseInputElementSelectMediumSingleDefaultActive4",
    "selectFrame4",
    "leadingArtworkContainer15",
    "leadingArtwork8",
    "leadingLabelContainer15",
    "leadingLabel15",
    "signedByBaseTypographyLabelMedium19",
    "text88",
    "spacer78",
    "inputElementContentText15",
    "signedByBaseInputElementContentTextMediumOff7",
    "text89",
    "trailingLabelEnhancer15",
    "trailingLabel15",
    "signedByBaseTypographyLabelMedium20",
    "text90",
    "spacer79",
    "trailingArtworkContainer15",
    "trailingArtwork15",
    "selectIndicatorContainer8",
    "chevronIcon8",
    "menu4",
    "signedByBaseMenuListMedium4",
    "menuItem16",
    "signedByBaseMenuItemSearchMediumNoneEnabled4",
    "searchField4",
    "signedByBaseSearchFieldMediumEnabled4",
    "inputElementLabel4",
    "signedByBaseInputElementLabelMedium4",
    "typography43",
    "signedByBaseTypographyLabelMedium21",
    "text91",
    "spacer80",
    "characterCountFrame4",
    "heart32",
    "typography44",
    "signedByBaseTypographyLabelMedium22",
    "text92",
    "spacer81",
    "inputElementTextField8",
    "signedByBaseInputElementTextFieldMediumEnabled4",
    "leadingArtworkContainer16",
    "search4",
    "leadingLabelContainer16",
    "leadingLabel16",
    "signedByBaseTypographyLabelMedium23",
    "text93",
    "spacer82",
    "inputElementContentText16",
    "signedByBaseInputElementContentTextMediumOff8",
    "text94",
    "trailingLabelEnhancer16",
    "trailingLabel16",
    "signedByBaseTypographyLabelMedium24",
    "text95",
    "spacer83",
    "trailingArtworkContainer16",
    "trailingArtwork16",
    "inputElementHint8",
    "heart33",
    "hint8",
    "signedByBaseTypographyParagraphSmall8",
    "text96",
    "spacer84",
    "menuItem17",
    "signedByBaseMenuItemOptionMediumStandardEnabled13",
    "menuItemControlMediumCheckboxUnchecked13",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked13",
    "icon13",
    "leadingEnhancer13",
    "heart34",
    "textFrame13",
    "leadingText13",
    "typography45",
    "signedByBaseTypographyParagraphMedium37",
    "text97",
    "spacer85",
    "typography46",
    "signedByBaseTypographyParagraphMedium38",
    "text98",
    "spacer86",
    "typography47",
    "signedByBaseTypographyParagraphMedium39",
    "spacer87",
    "trailingEnhancer13",
    "heart35",
    "menuItem18",
    "signedByBaseMenuItemOptionMediumStandardEnabled14",
    "menuItemControlMediumCheckboxUnchecked14",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked14",
    "icon14",
    "leadingEnhancer14",
    "heart36",
    "textFrame14",
    "leadingText14",
    "typography48",
    "signedByBaseTypographyParagraphMedium40",
    "text99",
    "spacer88",
    "typography49",
    "signedByBaseTypographyParagraphMedium41",
    "text100",
    "spacer89",
    "typography50",
    "signedByBaseTypographyParagraphMedium42",
    "spacer90",
    "trailingEnhancer14",
    "checkmarkSmall4",
    "menuItem19",
    "signedByBaseMenuItemOptionMediumStandardEnabled15",
    "menuItemControlMediumCheckboxUnchecked15",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked15",
    "icon15",
    "leadingEnhancer15",
    "heart37",
    "textFrame15",
    "leadingText15",
    "typography51",
    "signedByBaseTypographyParagraphMedium43",
    "text101",
    "spacer91",
    "typography52",
    "signedByBaseTypographyParagraphMedium44",
    "text102",
    "spacer92",
    "typography53",
    "signedByBaseTypographyParagraphMedium45",
    "spacer93",
    "trailingEnhancer15",
    "heart38",
    "menuItem20",
    "signedByBaseMenuItemOptionMediumStandardEnabled16",
    "menuItemControlMediumCheckboxUnchecked16",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked16",
    "icon16",
    "leadingEnhancer16",
    "heart39",
    "textFrame16",
    "leadingText16",
    "typography54",
    "signedByBaseTypographyParagraphMedium46",
    "text103",
    "spacer94",
    "typography55",
    "signedByBaseTypographyParagraphMedium47",
    "text104",
    "spacer95",
    "typography56",
    "signedByBaseTypographyParagraphMedium48",
    "spacer96",
    "trailingEnhancer16",
    "heart40",
    "scrollBar4",
    "model6",
    "buttons4",
    "button13",
    "frame1073713927",
    "frame1073713933",
    "button14",
    "button15",
    "button16",
    "accueilDashboard",
    "leftMenu",
    "main",
    "header",
    "main2",
    "tabsContainer",
    "tabs",
    "tabButton",
    "tabUnderline",
    "filter",
    "buttonFilter",
    "buttonAdd2",
    "buttonAddDoc",
    "_1",
    "table",
    "dataGrid",
    "_2",
    "file",
    "noDoc",
    "noDocuments",
    "startCreatingYour",
    "bottomMenu"
  ],
  uploadFile: [
    "uploadFile",
    "frame1437254034",
    "name16",
    "frame1437254035",
    "files2",
    "upload5"
  ],
  frame1437254034: ["frame1437254034", "name16", "frame1437254035"],
  name16: ["name16"],
  frame1437254035: ["frame1437254035"],
  files2: ["files2", "upload5"],
  upload5: ["upload5"],
  createPosition: [
    "createPosition",
    "frame1437254016",
    "name",
    "frame1437254019",
    "createPosition2",
    "input",
    "textArea",
    "precisions2",
    "select9",
    "generalDescription2",
    "textAreaInput",
    "upload",
    "content",
    "titre",
    "texinput2",
    "date",
    "label6",
    "timePicker",
    "type",
    "budget",
    "comments",
    "input5",
    "name2",
    "datePickerWeb",
    "inputSelect",
    "signedByBaseFieldGroupSmall",
    "endDateCalendar",
    "inputElementTextField",
    "signedByBaseInputElementTextFieldSmallEnabled",
    "leadingArtworkContainer",
    "leadingArtwork",
    "leadingLabelContainer",
    "leadingLabel",
    "signedByBaseTypographyLabelSmall",
    "text5",
    "spacer",
    "inputElementContentText",
    "signedByBaseInputElementContentTextSmallOff",
    "text6",
    "trailingLabelEnhancer",
    "trailingLabel",
    "signedByBaseTypographyLabelSmall2",
    "text7",
    "spacer2",
    "trailingArtworkContainer",
    "trailingArtwork",
    "calendar",
    "signedByBaseInputElementSelectXSmallWebSingleDefaultEnabled",
    "leadingArtworkContainer2",
    "text8",
    "leadingLabelContainer2",
    "leadingLabel2",
    "signedByBaseTypographyLabelXSmall",
    "text9",
    "spacer3",
    "inputElementContentText2",
    "signedByBaseInputElementContentTextXSmallWebOff",
    "text10",
    "trailingLabelEnhancer2",
    "trailingLabel2",
    "signedByBaseTypographyLabelXSmall2",
    "text11",
    "spacer4",
    "trailingArtworkContainer2",
    "trailingArtwork2",
    "selectIndicatorContainer",
    "chevronIcon",
    "inputElementHint",
    "heart",
    "hint",
    "signedByBaseTypographyParagraphSmall",
    "text12",
    "spacer28",
    "inputElementSelect",
    "signedByBaseInputElementSelectMediumSingleDefaultActive",
    "selectFrame",
    "leadingArtworkContainer3",
    "leadingArtwork2",
    "leadingLabelContainer3",
    "leadingLabel3",
    "signedByBaseTypographyLabelMedium",
    "text13",
    "spacer5",
    "inputElementContentText3",
    "signedByBaseInputElementContentTextMediumOff",
    "text14",
    "trailingLabelEnhancer3",
    "trailingLabel3",
    "signedByBaseTypographyLabelMedium2",
    "text15",
    "spacer6",
    "trailingArtworkContainer3",
    "trailingArtwork3",
    "selectIndicatorContainer2",
    "chevronIcon2",
    "menu",
    "signedByBaseMenuListMedium",
    "menuItem",
    "signedByBaseMenuItemSearchMediumNoneEnabled",
    "searchField",
    "signedByBaseSearchFieldMediumEnabled",
    "inputElementLabel",
    "signedByBaseInputElementLabelMedium",
    "typography",
    "signedByBaseTypographyLabelMedium3",
    "text16",
    "spacer7",
    "characterCountFrame",
    "heart2",
    "typography2",
    "signedByBaseTypographyLabelMedium4",
    "text17",
    "spacer8",
    "inputElementTextField2",
    "signedByBaseInputElementTextFieldMediumEnabled",
    "leadingArtworkContainer4",
    "search",
    "leadingLabelContainer4",
    "leadingLabel4",
    "signedByBaseTypographyLabelMedium5",
    "text18",
    "spacer9",
    "inputElementContentText4",
    "signedByBaseInputElementContentTextMediumOff2",
    "text19",
    "trailingLabelEnhancer4",
    "trailingLabel4",
    "signedByBaseTypographyLabelMedium6",
    "text20",
    "spacer10",
    "trailingArtworkContainer4",
    "trailingArtwork4",
    "inputElementHint2",
    "heart3",
    "hint2",
    "signedByBaseTypographyParagraphSmall2",
    "text21",
    "spacer29",
    "menuItem2",
    "signedByBaseMenuItemOptionMediumStandardEnabled",
    "menuItemControlMediumCheckboxUnchecked",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked",
    "icon",
    "leadingEnhancer",
    "heart4",
    "textFrame",
    "leadingText",
    "typography3",
    "signedByBaseTypographyParagraphMedium",
    "text22",
    "spacer11",
    "typography4",
    "signedByBaseTypographyParagraphMedium2",
    "text23",
    "spacer12",
    "typography5",
    "signedByBaseTypographyParagraphMedium3",
    "spacer13",
    "trailingEnhancer",
    "heart5",
    "menuItem3",
    "signedByBaseMenuItemOptionMediumStandardEnabled2",
    "menuItemControlMediumCheckboxUnchecked2",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked2",
    "icon2",
    "leadingEnhancer2",
    "heart6",
    "textFrame2",
    "leadingText2",
    "typography6",
    "signedByBaseTypographyParagraphMedium4",
    "text24",
    "spacer14",
    "typography7",
    "signedByBaseTypographyParagraphMedium5",
    "text25",
    "spacer15",
    "typography8",
    "signedByBaseTypographyParagraphMedium6",
    "spacer16",
    "trailingEnhancer2",
    "checkmarkSmall",
    "menuItem4",
    "signedByBaseMenuItemOptionMediumStandardEnabled3",
    "menuItemControlMediumCheckboxUnchecked3",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked3",
    "icon3",
    "leadingEnhancer3",
    "heart7",
    "textFrame3",
    "leadingText3",
    "typography9",
    "signedByBaseTypographyParagraphMedium7",
    "text26",
    "spacer17",
    "typography10",
    "signedByBaseTypographyParagraphMedium8",
    "text27",
    "spacer18",
    "typography11",
    "signedByBaseTypographyParagraphMedium9",
    "spacer19",
    "trailingEnhancer3",
    "heart8",
    "menuItem5",
    "signedByBaseMenuItemOptionMediumStandardEnabled4",
    "menuItemControlMediumCheckboxUnchecked4",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked4",
    "icon4",
    "leadingEnhancer4",
    "heart9",
    "textFrame4",
    "leadingText4",
    "typography12",
    "signedByBaseTypographyParagraphMedium10",
    "text28",
    "spacer20",
    "typography13",
    "signedByBaseTypographyParagraphMedium11",
    "text29",
    "spacer21",
    "typography14",
    "signedByBaseTypographyParagraphMedium12",
    "spacer22",
    "trailingEnhancer4",
    "heart10",
    "scrollBar",
    "model",
    "buttons",
    "button",
    "frame1073713924",
    "frame1073713930",
    "button2",
    "button3",
    "button4"
  ],
  frame1437254016: ["frame1437254016", "name", "frame1437254019"],
  name: ["name"],
  frame1437254019: ["frame1437254019"],
  createPosition2: [
    "createPosition2",
    "input",
    "textArea",
    "precisions2",
    "select9",
    "generalDescription2",
    "textAreaInput",
    "upload"
  ],
  input: ["input"],
  textArea: ["textArea"],
  precisions2: ["precisions2", "select9"],
  select9: ["select9"],
  generalDescription2: ["generalDescription2", "textAreaInput"],
  textAreaInput: ["textAreaInput"],
  upload: ["upload"],
  content: [
    "content",
    "titre",
    "texinput2",
    "date",
    "label6",
    "timePicker",
    "type",
    "budget",
    "comments",
    "input5",
    "name2",
    "datePickerWeb",
    "inputSelect",
    "signedByBaseFieldGroupSmall",
    "endDateCalendar",
    "inputElementTextField",
    "signedByBaseInputElementTextFieldSmallEnabled",
    "leadingArtworkContainer",
    "leadingArtwork",
    "leadingLabelContainer",
    "leadingLabel",
    "signedByBaseTypographyLabelSmall",
    "text5",
    "spacer",
    "inputElementContentText",
    "signedByBaseInputElementContentTextSmallOff",
    "text6",
    "trailingLabelEnhancer",
    "trailingLabel",
    "signedByBaseTypographyLabelSmall2",
    "text7",
    "spacer2",
    "trailingArtworkContainer",
    "trailingArtwork",
    "calendar",
    "signedByBaseInputElementSelectXSmallWebSingleDefaultEnabled",
    "leadingArtworkContainer2",
    "text8",
    "leadingLabelContainer2",
    "leadingLabel2",
    "signedByBaseTypographyLabelXSmall",
    "text9",
    "spacer3",
    "inputElementContentText2",
    "signedByBaseInputElementContentTextXSmallWebOff",
    "text10",
    "trailingLabelEnhancer2",
    "trailingLabel2",
    "signedByBaseTypographyLabelXSmall2",
    "text11",
    "spacer4",
    "trailingArtworkContainer2",
    "trailingArtwork2",
    "selectIndicatorContainer",
    "chevronIcon",
    "inputElementHint",
    "heart",
    "hint",
    "signedByBaseTypographyParagraphSmall",
    "text12",
    "spacer28",
    "inputElementSelect",
    "signedByBaseInputElementSelectMediumSingleDefaultActive",
    "selectFrame",
    "leadingArtworkContainer3",
    "leadingArtwork2",
    "leadingLabelContainer3",
    "leadingLabel3",
    "signedByBaseTypographyLabelMedium",
    "text13",
    "spacer5",
    "inputElementContentText3",
    "signedByBaseInputElementContentTextMediumOff",
    "text14",
    "trailingLabelEnhancer3",
    "trailingLabel3",
    "signedByBaseTypographyLabelMedium2",
    "text15",
    "spacer6",
    "trailingArtworkContainer3",
    "trailingArtwork3",
    "selectIndicatorContainer2",
    "chevronIcon2",
    "menu",
    "signedByBaseMenuListMedium",
    "menuItem",
    "signedByBaseMenuItemSearchMediumNoneEnabled",
    "searchField",
    "signedByBaseSearchFieldMediumEnabled",
    "inputElementLabel",
    "signedByBaseInputElementLabelMedium",
    "typography",
    "signedByBaseTypographyLabelMedium3",
    "text16",
    "spacer7",
    "characterCountFrame",
    "heart2",
    "typography2",
    "signedByBaseTypographyLabelMedium4",
    "text17",
    "spacer8",
    "inputElementTextField2",
    "signedByBaseInputElementTextFieldMediumEnabled",
    "leadingArtworkContainer4",
    "search",
    "leadingLabelContainer4",
    "leadingLabel4",
    "signedByBaseTypographyLabelMedium5",
    "text18",
    "spacer9",
    "inputElementContentText4",
    "signedByBaseInputElementContentTextMediumOff2",
    "text19",
    "trailingLabelEnhancer4",
    "trailingLabel4",
    "signedByBaseTypographyLabelMedium6",
    "text20",
    "spacer10",
    "trailingArtworkContainer4",
    "trailingArtwork4",
    "inputElementHint2",
    "heart3",
    "hint2",
    "signedByBaseTypographyParagraphSmall2",
    "text21",
    "spacer29",
    "menuItem2",
    "signedByBaseMenuItemOptionMediumStandardEnabled",
    "menuItemControlMediumCheckboxUnchecked",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked",
    "icon",
    "leadingEnhancer",
    "heart4",
    "textFrame",
    "leadingText",
    "typography3",
    "signedByBaseTypographyParagraphMedium",
    "text22",
    "spacer11",
    "typography4",
    "signedByBaseTypographyParagraphMedium2",
    "text23",
    "spacer12",
    "typography5",
    "signedByBaseTypographyParagraphMedium3",
    "spacer13",
    "trailingEnhancer",
    "heart5",
    "menuItem3",
    "signedByBaseMenuItemOptionMediumStandardEnabled2",
    "menuItemControlMediumCheckboxUnchecked2",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked2",
    "icon2",
    "leadingEnhancer2",
    "heart6",
    "textFrame2",
    "leadingText2",
    "typography6",
    "signedByBaseTypographyParagraphMedium4",
    "text24",
    "spacer14",
    "typography7",
    "signedByBaseTypographyParagraphMedium5",
    "text25",
    "spacer15",
    "typography8",
    "signedByBaseTypographyParagraphMedium6",
    "spacer16",
    "trailingEnhancer2",
    "checkmarkSmall",
    "menuItem4",
    "signedByBaseMenuItemOptionMediumStandardEnabled3",
    "menuItemControlMediumCheckboxUnchecked3",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked3",
    "icon3",
    "leadingEnhancer3",
    "heart7",
    "textFrame3",
    "leadingText3",
    "typography9",
    "signedByBaseTypographyParagraphMedium7",
    "text26",
    "spacer17",
    "typography10",
    "signedByBaseTypographyParagraphMedium8",
    "text27",
    "spacer18",
    "typography11",
    "signedByBaseTypographyParagraphMedium9",
    "spacer19",
    "trailingEnhancer3",
    "heart8",
    "menuItem5",
    "signedByBaseMenuItemOptionMediumStandardEnabled4",
    "menuItemControlMediumCheckboxUnchecked4",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked4",
    "icon4",
    "leadingEnhancer4",
    "heart9",
    "textFrame4",
    "leadingText4",
    "typography12",
    "signedByBaseTypographyParagraphMedium10",
    "text28",
    "spacer20",
    "typography13",
    "signedByBaseTypographyParagraphMedium11",
    "text29",
    "spacer21",
    "typography14",
    "signedByBaseTypographyParagraphMedium12",
    "spacer22",
    "trailingEnhancer4",
    "heart10",
    "scrollBar",
    "model",
    "buttons",
    "button",
    "frame1073713924",
    "frame1073713930",
    "button2",
    "button3",
    "button4"
  ],
  titre: ["titre"],
  texinput2: ["texinput2"],
  date: ["date", "label6", "timePicker"],
  label6: ["label6"],
  timePicker: ["timePicker"],
  type: ["type"],
  budget: ["budget"],
  comments: ["comments"],
  input5: [
    "input5",
    "name2",
    "datePickerWeb",
    "inputSelect",
    "signedByBaseFieldGroupSmall",
    "endDateCalendar",
    "inputElementTextField",
    "signedByBaseInputElementTextFieldSmallEnabled",
    "leadingArtworkContainer",
    "leadingArtwork",
    "leadingLabelContainer",
    "leadingLabel",
    "signedByBaseTypographyLabelSmall",
    "text5",
    "spacer",
    "inputElementContentText",
    "signedByBaseInputElementContentTextSmallOff",
    "text6",
    "trailingLabelEnhancer",
    "trailingLabel",
    "signedByBaseTypographyLabelSmall2",
    "text7",
    "spacer2",
    "trailingArtworkContainer",
    "trailingArtwork",
    "calendar",
    "signedByBaseInputElementSelectXSmallWebSingleDefaultEnabled",
    "leadingArtworkContainer2",
    "text8",
    "leadingLabelContainer2",
    "leadingLabel2",
    "signedByBaseTypographyLabelXSmall",
    "text9",
    "spacer3",
    "inputElementContentText2",
    "signedByBaseInputElementContentTextXSmallWebOff",
    "text10",
    "trailingLabelEnhancer2",
    "trailingLabel2",
    "signedByBaseTypographyLabelXSmall2",
    "text11",
    "spacer4",
    "trailingArtworkContainer2",
    "trailingArtwork2",
    "selectIndicatorContainer",
    "chevronIcon",
    "inputElementHint",
    "heart",
    "hint",
    "signedByBaseTypographyParagraphSmall",
    "text12",
    "spacer28",
    "inputElementSelect",
    "signedByBaseInputElementSelectMediumSingleDefaultActive",
    "selectFrame",
    "leadingArtworkContainer3",
    "leadingArtwork2",
    "leadingLabelContainer3",
    "leadingLabel3",
    "signedByBaseTypographyLabelMedium",
    "text13",
    "spacer5",
    "inputElementContentText3",
    "signedByBaseInputElementContentTextMediumOff",
    "text14",
    "trailingLabelEnhancer3",
    "trailingLabel3",
    "signedByBaseTypographyLabelMedium2",
    "text15",
    "spacer6",
    "trailingArtworkContainer3",
    "trailingArtwork3",
    "selectIndicatorContainer2",
    "chevronIcon2",
    "menu",
    "signedByBaseMenuListMedium",
    "menuItem",
    "signedByBaseMenuItemSearchMediumNoneEnabled",
    "searchField",
    "signedByBaseSearchFieldMediumEnabled",
    "inputElementLabel",
    "signedByBaseInputElementLabelMedium",
    "typography",
    "signedByBaseTypographyLabelMedium3",
    "text16",
    "spacer7",
    "characterCountFrame",
    "heart2",
    "typography2",
    "signedByBaseTypographyLabelMedium4",
    "text17",
    "spacer8",
    "inputElementTextField2",
    "signedByBaseInputElementTextFieldMediumEnabled",
    "leadingArtworkContainer4",
    "search",
    "leadingLabelContainer4",
    "leadingLabel4",
    "signedByBaseTypographyLabelMedium5",
    "text18",
    "spacer9",
    "inputElementContentText4",
    "signedByBaseInputElementContentTextMediumOff2",
    "text19",
    "trailingLabelEnhancer4",
    "trailingLabel4",
    "signedByBaseTypographyLabelMedium6",
    "text20",
    "spacer10",
    "trailingArtworkContainer4",
    "trailingArtwork4",
    "inputElementHint2",
    "heart3",
    "hint2",
    "signedByBaseTypographyParagraphSmall2",
    "text21",
    "spacer29",
    "menuItem2",
    "signedByBaseMenuItemOptionMediumStandardEnabled",
    "menuItemControlMediumCheckboxUnchecked",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked",
    "icon",
    "leadingEnhancer",
    "heart4",
    "textFrame",
    "leadingText",
    "typography3",
    "signedByBaseTypographyParagraphMedium",
    "text22",
    "spacer11",
    "typography4",
    "signedByBaseTypographyParagraphMedium2",
    "text23",
    "spacer12",
    "typography5",
    "signedByBaseTypographyParagraphMedium3",
    "spacer13",
    "trailingEnhancer",
    "heart5",
    "menuItem3",
    "signedByBaseMenuItemOptionMediumStandardEnabled2",
    "menuItemControlMediumCheckboxUnchecked2",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked2",
    "icon2",
    "leadingEnhancer2",
    "heart6",
    "textFrame2",
    "leadingText2",
    "typography6",
    "signedByBaseTypographyParagraphMedium4",
    "text24",
    "spacer14",
    "typography7",
    "signedByBaseTypographyParagraphMedium5",
    "text25",
    "spacer15",
    "typography8",
    "signedByBaseTypographyParagraphMedium6",
    "spacer16",
    "trailingEnhancer2",
    "checkmarkSmall",
    "menuItem4",
    "signedByBaseMenuItemOptionMediumStandardEnabled3",
    "menuItemControlMediumCheckboxUnchecked3",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked3",
    "icon3",
    "leadingEnhancer3",
    "heart7",
    "textFrame3",
    "leadingText3",
    "typography9",
    "signedByBaseTypographyParagraphMedium7",
    "text26",
    "spacer17",
    "typography10",
    "signedByBaseTypographyParagraphMedium8",
    "text27",
    "spacer18",
    "typography11",
    "signedByBaseTypographyParagraphMedium9",
    "spacer19",
    "trailingEnhancer3",
    "heart8",
    "menuItem5",
    "signedByBaseMenuItemOptionMediumStandardEnabled4",
    "menuItemControlMediumCheckboxUnchecked4",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked4",
    "icon4",
    "leadingEnhancer4",
    "heart9",
    "textFrame4",
    "leadingText4",
    "typography12",
    "signedByBaseTypographyParagraphMedium10",
    "text28",
    "spacer20",
    "typography13",
    "signedByBaseTypographyParagraphMedium11",
    "text29",
    "spacer21",
    "typography14",
    "signedByBaseTypographyParagraphMedium12",
    "spacer22",
    "trailingEnhancer4",
    "heart10",
    "scrollBar"
  ],
  name2: ["name2"],
  datePickerWeb: [
    "datePickerWeb",
    "inputSelect",
    "signedByBaseFieldGroupSmall",
    "endDateCalendar",
    "inputElementTextField",
    "signedByBaseInputElementTextFieldSmallEnabled",
    "leadingArtworkContainer",
    "leadingArtwork",
    "leadingLabelContainer",
    "leadingLabel",
    "signedByBaseTypographyLabelSmall",
    "text5",
    "spacer",
    "inputElementContentText",
    "signedByBaseInputElementContentTextSmallOff",
    "text6",
    "trailingLabelEnhancer",
    "trailingLabel",
    "signedByBaseTypographyLabelSmall2",
    "text7",
    "spacer2",
    "trailingArtworkContainer",
    "trailingArtwork",
    "calendar",
    "signedByBaseInputElementSelectXSmallWebSingleDefaultEnabled",
    "leadingArtworkContainer2",
    "text8",
    "leadingLabelContainer2",
    "leadingLabel2",
    "signedByBaseTypographyLabelXSmall",
    "text9",
    "spacer3",
    "inputElementContentText2",
    "signedByBaseInputElementContentTextXSmallWebOff",
    "text10",
    "trailingLabelEnhancer2",
    "trailingLabel2",
    "signedByBaseTypographyLabelXSmall2",
    "text11",
    "spacer4",
    "trailingArtworkContainer2",
    "trailingArtwork2",
    "selectIndicatorContainer",
    "chevronIcon",
    "inputElementHint",
    "heart",
    "hint",
    "signedByBaseTypographyParagraphSmall",
    "text12",
    "spacer28"
  ],
  inputSelect: [
    "inputSelect",
    "signedByBaseFieldGroupSmall",
    "endDateCalendar",
    "inputElementTextField",
    "signedByBaseInputElementTextFieldSmallEnabled",
    "leadingArtworkContainer",
    "leadingArtwork",
    "leadingLabelContainer",
    "leadingLabel",
    "signedByBaseTypographyLabelSmall",
    "text5",
    "spacer",
    "inputElementContentText",
    "signedByBaseInputElementContentTextSmallOff",
    "text6",
    "trailingLabelEnhancer",
    "trailingLabel",
    "signedByBaseTypographyLabelSmall2",
    "text7",
    "spacer2",
    "trailingArtworkContainer",
    "trailingArtwork",
    "calendar",
    "signedByBaseInputElementSelectXSmallWebSingleDefaultEnabled",
    "leadingArtworkContainer2",
    "text8",
    "leadingLabelContainer2",
    "leadingLabel2",
    "signedByBaseTypographyLabelXSmall",
    "text9",
    "spacer3",
    "inputElementContentText2",
    "signedByBaseInputElementContentTextXSmallWebOff",
    "text10",
    "trailingLabelEnhancer2",
    "trailingLabel2",
    "signedByBaseTypographyLabelXSmall2",
    "text11",
    "spacer4",
    "trailingArtworkContainer2",
    "trailingArtwork2",
    "selectIndicatorContainer",
    "chevronIcon",
    "inputElementHint",
    "heart",
    "hint",
    "signedByBaseTypographyParagraphSmall",
    "text12",
    "spacer28"
  ],
  signedByBaseFieldGroupSmall: ["signedByBaseFieldGroupSmall"],
  endDateCalendar: [
    "endDateCalendar",
    "inputElementTextField",
    "signedByBaseInputElementTextFieldSmallEnabled",
    "leadingArtworkContainer",
    "leadingArtwork",
    "leadingLabelContainer",
    "leadingLabel",
    "signedByBaseTypographyLabelSmall",
    "text5",
    "spacer",
    "inputElementContentText",
    "signedByBaseInputElementContentTextSmallOff",
    "text6",
    "trailingLabelEnhancer",
    "trailingLabel",
    "signedByBaseTypographyLabelSmall2",
    "text7",
    "spacer2",
    "trailingArtworkContainer",
    "trailingArtwork",
    "calendar",
    "signedByBaseInputElementSelectXSmallWebSingleDefaultEnabled",
    "leadingArtworkContainer2",
    "text8",
    "leadingLabelContainer2",
    "leadingLabel2",
    "signedByBaseTypographyLabelXSmall",
    "text9",
    "spacer3",
    "inputElementContentText2",
    "signedByBaseInputElementContentTextXSmallWebOff",
    "text10",
    "trailingLabelEnhancer2",
    "trailingLabel2",
    "signedByBaseTypographyLabelXSmall2",
    "text11",
    "spacer4",
    "trailingArtworkContainer2",
    "trailingArtwork2",
    "selectIndicatorContainer",
    "chevronIcon"
  ],
  inputElementTextField: [
    "inputElementTextField",
    "signedByBaseInputElementTextFieldSmallEnabled",
    "leadingArtworkContainer",
    "leadingArtwork",
    "leadingLabelContainer",
    "leadingLabel",
    "signedByBaseTypographyLabelSmall",
    "text5",
    "spacer",
    "inputElementContentText",
    "signedByBaseInputElementContentTextSmallOff",
    "text6",
    "trailingLabelEnhancer",
    "trailingLabel",
    "signedByBaseTypographyLabelSmall2",
    "text7",
    "spacer2",
    "trailingArtworkContainer",
    "trailingArtwork"
  ],
  signedByBaseInputElementTextFieldSmallEnabled: [
    "signedByBaseInputElementTextFieldSmallEnabled"
  ],
  leadingArtworkContainer: ["leadingArtworkContainer", "leadingArtwork"],
  leadingArtwork: ["leadingArtwork"],
  leadingLabelContainer: [
    "leadingLabelContainer",
    "leadingLabel",
    "signedByBaseTypographyLabelSmall",
    "text5",
    "spacer"
  ],
  leadingLabel: [
    "leadingLabel",
    "signedByBaseTypographyLabelSmall",
    "text5",
    "spacer"
  ],
  signedByBaseTypographyLabelSmall: ["signedByBaseTypographyLabelSmall"],
  text5: ["text5"],
  spacer: ["spacer"],
  inputElementContentText: [
    "inputElementContentText",
    "signedByBaseInputElementContentTextSmallOff",
    "text6"
  ],
  signedByBaseInputElementContentTextSmallOff: [
    "signedByBaseInputElementContentTextSmallOff"
  ],
  text6: ["text6"],
  trailingLabelEnhancer: [
    "trailingLabelEnhancer",
    "trailingLabel",
    "signedByBaseTypographyLabelSmall2",
    "text7",
    "spacer2"
  ],
  trailingLabel: [
    "trailingLabel",
    "signedByBaseTypographyLabelSmall2",
    "text7",
    "spacer2"
  ],
  signedByBaseTypographyLabelSmall2: ["signedByBaseTypographyLabelSmall2"],
  text7: ["text7"],
  spacer2: ["spacer2"],
  trailingArtworkContainer: ["trailingArtworkContainer", "trailingArtwork"],
  trailingArtwork: ["trailingArtwork"],
  calendar: [
    "calendar",
    "signedByBaseInputElementSelectXSmallWebSingleDefaultEnabled",
    "leadingArtworkContainer2",
    "text8",
    "leadingLabelContainer2",
    "leadingLabel2",
    "signedByBaseTypographyLabelXSmall",
    "text9",
    "spacer3",
    "inputElementContentText2",
    "signedByBaseInputElementContentTextXSmallWebOff",
    "text10",
    "trailingLabelEnhancer2",
    "trailingLabel2",
    "signedByBaseTypographyLabelXSmall2",
    "text11",
    "spacer4",
    "trailingArtworkContainer2",
    "trailingArtwork2",
    "selectIndicatorContainer",
    "chevronIcon"
  ],
  signedByBaseInputElementSelectXSmallWebSingleDefaultEnabled: [
    "signedByBaseInputElementSelectXSmallWebSingleDefaultEnabled"
  ],
  leadingArtworkContainer2: ["leadingArtworkContainer2", "text8"],
  text8: ["text8"],
  leadingLabelContainer2: [
    "leadingLabelContainer2",
    "leadingLabel2",
    "signedByBaseTypographyLabelXSmall",
    "text9",
    "spacer3"
  ],
  leadingLabel2: [
    "leadingLabel2",
    "signedByBaseTypographyLabelXSmall",
    "text9",
    "spacer3"
  ],
  signedByBaseTypographyLabelXSmall: ["signedByBaseTypographyLabelXSmall"],
  text9: ["text9"],
  spacer3: ["spacer3"],
  inputElementContentText2: [
    "inputElementContentText2",
    "signedByBaseInputElementContentTextXSmallWebOff",
    "text10"
  ],
  signedByBaseInputElementContentTextXSmallWebOff: [
    "signedByBaseInputElementContentTextXSmallWebOff"
  ],
  text10: ["text10"],
  trailingLabelEnhancer2: [
    "trailingLabelEnhancer2",
    "trailingLabel2",
    "signedByBaseTypographyLabelXSmall2",
    "text11",
    "spacer4"
  ],
  trailingLabel2: [
    "trailingLabel2",
    "signedByBaseTypographyLabelXSmall2",
    "text11",
    "spacer4"
  ],
  signedByBaseTypographyLabelXSmall2: ["signedByBaseTypographyLabelXSmall2"],
  text11: ["text11"],
  spacer4: ["spacer4"],
  trailingArtworkContainer2: ["trailingArtworkContainer2", "trailingArtwork2"],
  trailingArtwork2: ["trailingArtwork2"],
  selectIndicatorContainer: ["selectIndicatorContainer", "chevronIcon"],
  chevronIcon: ["chevronIcon"],
  inputElementHint: [
    "inputElementHint",
    "heart",
    "hint",
    "signedByBaseTypographyParagraphSmall",
    "text12",
    "spacer28"
  ],
  heart: ["heart"],
  hint: ["hint", "signedByBaseTypographyParagraphSmall", "text12", "spacer28"],
  signedByBaseTypographyParagraphSmall: [
    "signedByBaseTypographyParagraphSmall"
  ],
  text12: ["text12"],
  spacer28: ["spacer28"],
  inputElementSelect: [
    "inputElementSelect",
    "signedByBaseInputElementSelectMediumSingleDefaultActive",
    "selectFrame",
    "leadingArtworkContainer3",
    "leadingArtwork2",
    "leadingLabelContainer3",
    "leadingLabel3",
    "signedByBaseTypographyLabelMedium",
    "text13",
    "spacer5",
    "inputElementContentText3",
    "signedByBaseInputElementContentTextMediumOff",
    "text14",
    "trailingLabelEnhancer3",
    "trailingLabel3",
    "signedByBaseTypographyLabelMedium2",
    "text15",
    "spacer6",
    "trailingArtworkContainer3",
    "trailingArtwork3",
    "selectIndicatorContainer2",
    "chevronIcon2",
    "menu",
    "signedByBaseMenuListMedium",
    "menuItem",
    "signedByBaseMenuItemSearchMediumNoneEnabled",
    "searchField",
    "signedByBaseSearchFieldMediumEnabled",
    "inputElementLabel",
    "signedByBaseInputElementLabelMedium",
    "typography",
    "signedByBaseTypographyLabelMedium3",
    "text16",
    "spacer7",
    "characterCountFrame",
    "heart2",
    "typography2",
    "signedByBaseTypographyLabelMedium4",
    "text17",
    "spacer8",
    "inputElementTextField2",
    "signedByBaseInputElementTextFieldMediumEnabled",
    "leadingArtworkContainer4",
    "search",
    "leadingLabelContainer4",
    "leadingLabel4",
    "signedByBaseTypographyLabelMedium5",
    "text18",
    "spacer9",
    "inputElementContentText4",
    "signedByBaseInputElementContentTextMediumOff2",
    "text19",
    "trailingLabelEnhancer4",
    "trailingLabel4",
    "signedByBaseTypographyLabelMedium6",
    "text20",
    "spacer10",
    "trailingArtworkContainer4",
    "trailingArtwork4",
    "inputElementHint2",
    "heart3",
    "hint2",
    "signedByBaseTypographyParagraphSmall2",
    "text21",
    "spacer29",
    "menuItem2",
    "signedByBaseMenuItemOptionMediumStandardEnabled",
    "menuItemControlMediumCheckboxUnchecked",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked",
    "icon",
    "leadingEnhancer",
    "heart4",
    "textFrame",
    "leadingText",
    "typography3",
    "signedByBaseTypographyParagraphMedium",
    "text22",
    "spacer11",
    "typography4",
    "signedByBaseTypographyParagraphMedium2",
    "text23",
    "spacer12",
    "typography5",
    "signedByBaseTypographyParagraphMedium3",
    "spacer13",
    "trailingEnhancer",
    "heart5",
    "menuItem3",
    "signedByBaseMenuItemOptionMediumStandardEnabled2",
    "menuItemControlMediumCheckboxUnchecked2",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked2",
    "icon2",
    "leadingEnhancer2",
    "heart6",
    "textFrame2",
    "leadingText2",
    "typography6",
    "signedByBaseTypographyParagraphMedium4",
    "text24",
    "spacer14",
    "typography7",
    "signedByBaseTypographyParagraphMedium5",
    "text25",
    "spacer15",
    "typography8",
    "signedByBaseTypographyParagraphMedium6",
    "spacer16",
    "trailingEnhancer2",
    "checkmarkSmall",
    "menuItem4",
    "signedByBaseMenuItemOptionMediumStandardEnabled3",
    "menuItemControlMediumCheckboxUnchecked3",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked3",
    "icon3",
    "leadingEnhancer3",
    "heart7",
    "textFrame3",
    "leadingText3",
    "typography9",
    "signedByBaseTypographyParagraphMedium7",
    "text26",
    "spacer17",
    "typography10",
    "signedByBaseTypographyParagraphMedium8",
    "text27",
    "spacer18",
    "typography11",
    "signedByBaseTypographyParagraphMedium9",
    "spacer19",
    "trailingEnhancer3",
    "heart8",
    "menuItem5",
    "signedByBaseMenuItemOptionMediumStandardEnabled4",
    "menuItemControlMediumCheckboxUnchecked4",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked4",
    "icon4",
    "leadingEnhancer4",
    "heart9",
    "textFrame4",
    "leadingText4",
    "typography12",
    "signedByBaseTypographyParagraphMedium10",
    "text28",
    "spacer20",
    "typography13",
    "signedByBaseTypographyParagraphMedium11",
    "text29",
    "spacer21",
    "typography14",
    "signedByBaseTypographyParagraphMedium12",
    "spacer22",
    "trailingEnhancer4",
    "heart10",
    "scrollBar"
  ],
  signedByBaseInputElementSelectMediumSingleDefaultActive: [
    "signedByBaseInputElementSelectMediumSingleDefaultActive"
  ],
  selectFrame: [
    "selectFrame",
    "leadingArtworkContainer3",
    "leadingArtwork2",
    "leadingLabelContainer3",
    "leadingLabel3",
    "signedByBaseTypographyLabelMedium",
    "text13",
    "spacer5",
    "inputElementContentText3",
    "signedByBaseInputElementContentTextMediumOff",
    "text14",
    "trailingLabelEnhancer3",
    "trailingLabel3",
    "signedByBaseTypographyLabelMedium2",
    "text15",
    "spacer6",
    "trailingArtworkContainer3",
    "trailingArtwork3",
    "selectIndicatorContainer2",
    "chevronIcon2"
  ],
  leadingArtworkContainer3: ["leadingArtworkContainer3", "leadingArtwork2"],
  leadingArtwork2: ["leadingArtwork2"],
  leadingLabelContainer3: [
    "leadingLabelContainer3",
    "leadingLabel3",
    "signedByBaseTypographyLabelMedium",
    "text13",
    "spacer5"
  ],
  leadingLabel3: [
    "leadingLabel3",
    "signedByBaseTypographyLabelMedium",
    "text13",
    "spacer5"
  ],
  signedByBaseTypographyLabelMedium: ["signedByBaseTypographyLabelMedium"],
  text13: ["text13"],
  spacer5: ["spacer5"],
  inputElementContentText3: [
    "inputElementContentText3",
    "signedByBaseInputElementContentTextMediumOff",
    "text14"
  ],
  signedByBaseInputElementContentTextMediumOff: [
    "signedByBaseInputElementContentTextMediumOff"
  ],
  text14: ["text14"],
  trailingLabelEnhancer3: [
    "trailingLabelEnhancer3",
    "trailingLabel3",
    "signedByBaseTypographyLabelMedium2",
    "text15",
    "spacer6"
  ],
  trailingLabel3: [
    "trailingLabel3",
    "signedByBaseTypographyLabelMedium2",
    "text15",
    "spacer6"
  ],
  signedByBaseTypographyLabelMedium2: ["signedByBaseTypographyLabelMedium2"],
  text15: ["text15"],
  spacer6: ["spacer6"],
  trailingArtworkContainer3: ["trailingArtworkContainer3", "trailingArtwork3"],
  trailingArtwork3: ["trailingArtwork3"],
  selectIndicatorContainer2: ["selectIndicatorContainer2", "chevronIcon2"],
  chevronIcon2: ["chevronIcon2"],
  menu: [
    "menu",
    "signedByBaseMenuListMedium",
    "menuItem",
    "signedByBaseMenuItemSearchMediumNoneEnabled",
    "searchField",
    "signedByBaseSearchFieldMediumEnabled",
    "inputElementLabel",
    "signedByBaseInputElementLabelMedium",
    "typography",
    "signedByBaseTypographyLabelMedium3",
    "text16",
    "spacer7",
    "characterCountFrame",
    "heart2",
    "typography2",
    "signedByBaseTypographyLabelMedium4",
    "text17",
    "spacer8",
    "inputElementTextField2",
    "signedByBaseInputElementTextFieldMediumEnabled",
    "leadingArtworkContainer4",
    "search",
    "leadingLabelContainer4",
    "leadingLabel4",
    "signedByBaseTypographyLabelMedium5",
    "text18",
    "spacer9",
    "inputElementContentText4",
    "signedByBaseInputElementContentTextMediumOff2",
    "text19",
    "trailingLabelEnhancer4",
    "trailingLabel4",
    "signedByBaseTypographyLabelMedium6",
    "text20",
    "spacer10",
    "trailingArtworkContainer4",
    "trailingArtwork4",
    "inputElementHint2",
    "heart3",
    "hint2",
    "signedByBaseTypographyParagraphSmall2",
    "text21",
    "spacer29",
    "menuItem2",
    "signedByBaseMenuItemOptionMediumStandardEnabled",
    "menuItemControlMediumCheckboxUnchecked",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked",
    "icon",
    "leadingEnhancer",
    "heart4",
    "textFrame",
    "leadingText",
    "typography3",
    "signedByBaseTypographyParagraphMedium",
    "text22",
    "spacer11",
    "typography4",
    "signedByBaseTypographyParagraphMedium2",
    "text23",
    "spacer12",
    "typography5",
    "signedByBaseTypographyParagraphMedium3",
    "spacer13",
    "trailingEnhancer",
    "heart5",
    "menuItem3",
    "signedByBaseMenuItemOptionMediumStandardEnabled2",
    "menuItemControlMediumCheckboxUnchecked2",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked2",
    "icon2",
    "leadingEnhancer2",
    "heart6",
    "textFrame2",
    "leadingText2",
    "typography6",
    "signedByBaseTypographyParagraphMedium4",
    "text24",
    "spacer14",
    "typography7",
    "signedByBaseTypographyParagraphMedium5",
    "text25",
    "spacer15",
    "typography8",
    "signedByBaseTypographyParagraphMedium6",
    "spacer16",
    "trailingEnhancer2",
    "checkmarkSmall",
    "menuItem4",
    "signedByBaseMenuItemOptionMediumStandardEnabled3",
    "menuItemControlMediumCheckboxUnchecked3",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked3",
    "icon3",
    "leadingEnhancer3",
    "heart7",
    "textFrame3",
    "leadingText3",
    "typography9",
    "signedByBaseTypographyParagraphMedium7",
    "text26",
    "spacer17",
    "typography10",
    "signedByBaseTypographyParagraphMedium8",
    "text27",
    "spacer18",
    "typography11",
    "signedByBaseTypographyParagraphMedium9",
    "spacer19",
    "trailingEnhancer3",
    "heart8",
    "menuItem5",
    "signedByBaseMenuItemOptionMediumStandardEnabled4",
    "menuItemControlMediumCheckboxUnchecked4",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked4",
    "icon4",
    "leadingEnhancer4",
    "heart9",
    "textFrame4",
    "leadingText4",
    "typography12",
    "signedByBaseTypographyParagraphMedium10",
    "text28",
    "spacer20",
    "typography13",
    "signedByBaseTypographyParagraphMedium11",
    "text29",
    "spacer21",
    "typography14",
    "signedByBaseTypographyParagraphMedium12",
    "spacer22",
    "trailingEnhancer4",
    "heart10",
    "scrollBar"
  ],
  signedByBaseMenuListMedium: ["signedByBaseMenuListMedium"],
  menuItem: [
    "menuItem",
    "signedByBaseMenuItemSearchMediumNoneEnabled",
    "searchField",
    "signedByBaseSearchFieldMediumEnabled",
    "inputElementLabel",
    "signedByBaseInputElementLabelMedium",
    "typography",
    "signedByBaseTypographyLabelMedium3",
    "text16",
    "spacer7",
    "characterCountFrame",
    "heart2",
    "typography2",
    "signedByBaseTypographyLabelMedium4",
    "text17",
    "spacer8",
    "inputElementTextField2",
    "signedByBaseInputElementTextFieldMediumEnabled",
    "leadingArtworkContainer4",
    "search",
    "leadingLabelContainer4",
    "leadingLabel4",
    "signedByBaseTypographyLabelMedium5",
    "text18",
    "spacer9",
    "inputElementContentText4",
    "signedByBaseInputElementContentTextMediumOff2",
    "text19",
    "trailingLabelEnhancer4",
    "trailingLabel4",
    "signedByBaseTypographyLabelMedium6",
    "text20",
    "spacer10",
    "trailingArtworkContainer4",
    "trailingArtwork4",
    "inputElementHint2",
    "heart3",
    "hint2",
    "signedByBaseTypographyParagraphSmall2",
    "text21",
    "spacer29"
  ],
  signedByBaseMenuItemSearchMediumNoneEnabled: [
    "signedByBaseMenuItemSearchMediumNoneEnabled"
  ],
  searchField: [
    "searchField",
    "signedByBaseSearchFieldMediumEnabled",
    "inputElementLabel",
    "signedByBaseInputElementLabelMedium",
    "typography",
    "signedByBaseTypographyLabelMedium3",
    "text16",
    "spacer7",
    "characterCountFrame",
    "heart2",
    "typography2",
    "signedByBaseTypographyLabelMedium4",
    "text17",
    "spacer8",
    "inputElementTextField2",
    "signedByBaseInputElementTextFieldMediumEnabled",
    "leadingArtworkContainer4",
    "search",
    "leadingLabelContainer4",
    "leadingLabel4",
    "signedByBaseTypographyLabelMedium5",
    "text18",
    "spacer9",
    "inputElementContentText4",
    "signedByBaseInputElementContentTextMediumOff2",
    "text19",
    "trailingLabelEnhancer4",
    "trailingLabel4",
    "signedByBaseTypographyLabelMedium6",
    "text20",
    "spacer10",
    "trailingArtworkContainer4",
    "trailingArtwork4",
    "inputElementHint2",
    "heart3",
    "hint2",
    "signedByBaseTypographyParagraphSmall2",
    "text21",
    "spacer29"
  ],
  signedByBaseSearchFieldMediumEnabled: [
    "signedByBaseSearchFieldMediumEnabled"
  ],
  inputElementLabel: [
    "inputElementLabel",
    "signedByBaseInputElementLabelMedium",
    "typography",
    "signedByBaseTypographyLabelMedium3",
    "text16",
    "spacer7",
    "characterCountFrame",
    "heart2",
    "typography2",
    "signedByBaseTypographyLabelMedium4",
    "text17",
    "spacer8"
  ],
  signedByBaseInputElementLabelMedium: ["signedByBaseInputElementLabelMedium"],
  typography: [
    "typography",
    "signedByBaseTypographyLabelMedium3",
    "text16",
    "spacer7"
  ],
  signedByBaseTypographyLabelMedium3: ["signedByBaseTypographyLabelMedium3"],
  text16: ["text16"],
  spacer7: ["spacer7"],
  characterCountFrame: [
    "characterCountFrame",
    "heart2",
    "typography2",
    "signedByBaseTypographyLabelMedium4",
    "text17",
    "spacer8"
  ],
  heart2: ["heart2"],
  typography2: [
    "typography2",
    "signedByBaseTypographyLabelMedium4",
    "text17",
    "spacer8"
  ],
  signedByBaseTypographyLabelMedium4: ["signedByBaseTypographyLabelMedium4"],
  text17: ["text17"],
  spacer8: ["spacer8"],
  inputElementTextField2: [
    "inputElementTextField2",
    "signedByBaseInputElementTextFieldMediumEnabled",
    "leadingArtworkContainer4",
    "search",
    "leadingLabelContainer4",
    "leadingLabel4",
    "signedByBaseTypographyLabelMedium5",
    "text18",
    "spacer9",
    "inputElementContentText4",
    "signedByBaseInputElementContentTextMediumOff2",
    "text19",
    "trailingLabelEnhancer4",
    "trailingLabel4",
    "signedByBaseTypographyLabelMedium6",
    "text20",
    "spacer10",
    "trailingArtworkContainer4",
    "trailingArtwork4"
  ],
  signedByBaseInputElementTextFieldMediumEnabled: [
    "signedByBaseInputElementTextFieldMediumEnabled"
  ],
  leadingArtworkContainer4: ["leadingArtworkContainer4", "search"],
  search: ["search"],
  leadingLabelContainer4: [
    "leadingLabelContainer4",
    "leadingLabel4",
    "signedByBaseTypographyLabelMedium5",
    "text18",
    "spacer9"
  ],
  leadingLabel4: [
    "leadingLabel4",
    "signedByBaseTypographyLabelMedium5",
    "text18",
    "spacer9"
  ],
  signedByBaseTypographyLabelMedium5: ["signedByBaseTypographyLabelMedium5"],
  text18: ["text18"],
  spacer9: ["spacer9"],
  inputElementContentText4: [
    "inputElementContentText4",
    "signedByBaseInputElementContentTextMediumOff2",
    "text19"
  ],
  signedByBaseInputElementContentTextMediumOff2: [
    "signedByBaseInputElementContentTextMediumOff2"
  ],
  text19: ["text19"],
  trailingLabelEnhancer4: [
    "trailingLabelEnhancer4",
    "trailingLabel4",
    "signedByBaseTypographyLabelMedium6",
    "text20",
    "spacer10"
  ],
  trailingLabel4: [
    "trailingLabel4",
    "signedByBaseTypographyLabelMedium6",
    "text20",
    "spacer10"
  ],
  signedByBaseTypographyLabelMedium6: ["signedByBaseTypographyLabelMedium6"],
  text20: ["text20"],
  spacer10: ["spacer10"],
  trailingArtworkContainer4: ["trailingArtworkContainer4", "trailingArtwork4"],
  trailingArtwork4: ["trailingArtwork4"],
  inputElementHint2: [
    "inputElementHint2",
    "heart3",
    "hint2",
    "signedByBaseTypographyParagraphSmall2",
    "text21",
    "spacer29"
  ],
  heart3: ["heart3"],
  hint2: [
    "hint2",
    "signedByBaseTypographyParagraphSmall2",
    "text21",
    "spacer29"
  ],
  signedByBaseTypographyParagraphSmall2: [
    "signedByBaseTypographyParagraphSmall2"
  ],
  text21: ["text21"],
  spacer29: ["spacer29"],
  menuItem2: [
    "menuItem2",
    "signedByBaseMenuItemOptionMediumStandardEnabled",
    "menuItemControlMediumCheckboxUnchecked",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked",
    "icon",
    "leadingEnhancer",
    "heart4",
    "textFrame",
    "leadingText",
    "typography3",
    "signedByBaseTypographyParagraphMedium",
    "text22",
    "spacer11",
    "typography4",
    "signedByBaseTypographyParagraphMedium2",
    "text23",
    "spacer12",
    "typography5",
    "signedByBaseTypographyParagraphMedium3",
    "spacer13",
    "trailingEnhancer",
    "heart5"
  ],
  signedByBaseMenuItemOptionMediumStandardEnabled: [
    "signedByBaseMenuItemOptionMediumStandardEnabled"
  ],
  menuItemControlMediumCheckboxUnchecked: [
    "menuItemControlMediumCheckboxUnchecked",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked",
    "icon"
  ],
  signedByBaseMenuItemControlMediumCheckboxUnchecked: [
    "signedByBaseMenuItemControlMediumCheckboxUnchecked"
  ],
  icon: ["icon"],
  leadingEnhancer: ["leadingEnhancer", "heart4"],
  heart4: ["heart4"],
  textFrame: [
    "textFrame",
    "leadingText",
    "typography3",
    "signedByBaseTypographyParagraphMedium",
    "text22",
    "spacer11",
    "typography4",
    "signedByBaseTypographyParagraphMedium2",
    "text23",
    "spacer12",
    "typography5",
    "signedByBaseTypographyParagraphMedium3",
    "spacer13"
  ],
  leadingText: [
    "leadingText",
    "typography3",
    "signedByBaseTypographyParagraphMedium",
    "text22",
    "spacer11",
    "typography4",
    "signedByBaseTypographyParagraphMedium2",
    "text23",
    "spacer12"
  ],
  typography3: [
    "typography3",
    "signedByBaseTypographyParagraphMedium",
    "text22",
    "spacer11"
  ],
  signedByBaseTypographyParagraphMedium: [
    "signedByBaseTypographyParagraphMedium"
  ],
  text22: ["text22"],
  spacer11: ["spacer11"],
  typography4: [
    "typography4",
    "signedByBaseTypographyParagraphMedium2",
    "text23",
    "spacer12"
  ],
  signedByBaseTypographyParagraphMedium2: [
    "signedByBaseTypographyParagraphMedium2"
  ],
  text23: ["text23"],
  spacer12: ["spacer12"],
  typography5: [
    "typography5",
    "signedByBaseTypographyParagraphMedium3",
    "spacer13"
  ],
  signedByBaseTypographyParagraphMedium3: [
    "signedByBaseTypographyParagraphMedium3"
  ],
  spacer13: ["spacer13"],
  trailingEnhancer: ["trailingEnhancer", "heart5"],
  heart5: ["heart5"],
  menuItem3: [
    "menuItem3",
    "signedByBaseMenuItemOptionMediumStandardEnabled2",
    "menuItemControlMediumCheckboxUnchecked2",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked2",
    "icon2",
    "leadingEnhancer2",
    "heart6",
    "textFrame2",
    "leadingText2",
    "typography6",
    "signedByBaseTypographyParagraphMedium4",
    "text24",
    "spacer14",
    "typography7",
    "signedByBaseTypographyParagraphMedium5",
    "text25",
    "spacer15",
    "typography8",
    "signedByBaseTypographyParagraphMedium6",
    "spacer16",
    "trailingEnhancer2",
    "checkmarkSmall"
  ],
  signedByBaseMenuItemOptionMediumStandardEnabled2: [
    "signedByBaseMenuItemOptionMediumStandardEnabled2"
  ],
  menuItemControlMediumCheckboxUnchecked2: [
    "menuItemControlMediumCheckboxUnchecked2",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked2",
    "icon2"
  ],
  signedByBaseMenuItemControlMediumCheckboxUnchecked2: [
    "signedByBaseMenuItemControlMediumCheckboxUnchecked2"
  ],
  icon2: ["icon2"],
  leadingEnhancer2: ["leadingEnhancer2", "heart6"],
  heart6: ["heart6"],
  textFrame2: [
    "textFrame2",
    "leadingText2",
    "typography6",
    "signedByBaseTypographyParagraphMedium4",
    "text24",
    "spacer14",
    "typography7",
    "signedByBaseTypographyParagraphMedium5",
    "text25",
    "spacer15",
    "typography8",
    "signedByBaseTypographyParagraphMedium6",
    "spacer16"
  ],
  leadingText2: [
    "leadingText2",
    "typography6",
    "signedByBaseTypographyParagraphMedium4",
    "text24",
    "spacer14",
    "typography7",
    "signedByBaseTypographyParagraphMedium5",
    "text25",
    "spacer15"
  ],
  typography6: [
    "typography6",
    "signedByBaseTypographyParagraphMedium4",
    "text24",
    "spacer14"
  ],
  signedByBaseTypographyParagraphMedium4: [
    "signedByBaseTypographyParagraphMedium4"
  ],
  text24: ["text24"],
  spacer14: ["spacer14"],
  typography7: [
    "typography7",
    "signedByBaseTypographyParagraphMedium5",
    "text25",
    "spacer15"
  ],
  signedByBaseTypographyParagraphMedium5: [
    "signedByBaseTypographyParagraphMedium5"
  ],
  text25: ["text25"],
  spacer15: ["spacer15"],
  typography8: [
    "typography8",
    "signedByBaseTypographyParagraphMedium6",
    "spacer16"
  ],
  signedByBaseTypographyParagraphMedium6: [
    "signedByBaseTypographyParagraphMedium6"
  ],
  spacer16: ["spacer16"],
  trailingEnhancer2: ["trailingEnhancer2", "checkmarkSmall"],
  checkmarkSmall: ["checkmarkSmall"],
  menuItem4: [
    "menuItem4",
    "signedByBaseMenuItemOptionMediumStandardEnabled3",
    "menuItemControlMediumCheckboxUnchecked3",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked3",
    "icon3",
    "leadingEnhancer3",
    "heart7",
    "textFrame3",
    "leadingText3",
    "typography9",
    "signedByBaseTypographyParagraphMedium7",
    "text26",
    "spacer17",
    "typography10",
    "signedByBaseTypographyParagraphMedium8",
    "text27",
    "spacer18",
    "typography11",
    "signedByBaseTypographyParagraphMedium9",
    "spacer19",
    "trailingEnhancer3",
    "heart8"
  ],
  signedByBaseMenuItemOptionMediumStandardEnabled3: [
    "signedByBaseMenuItemOptionMediumStandardEnabled3"
  ],
  menuItemControlMediumCheckboxUnchecked3: [
    "menuItemControlMediumCheckboxUnchecked3",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked3",
    "icon3"
  ],
  signedByBaseMenuItemControlMediumCheckboxUnchecked3: [
    "signedByBaseMenuItemControlMediumCheckboxUnchecked3"
  ],
  icon3: ["icon3"],
  leadingEnhancer3: ["leadingEnhancer3", "heart7"],
  heart7: ["heart7"],
  textFrame3: [
    "textFrame3",
    "leadingText3",
    "typography9",
    "signedByBaseTypographyParagraphMedium7",
    "text26",
    "spacer17",
    "typography10",
    "signedByBaseTypographyParagraphMedium8",
    "text27",
    "spacer18",
    "typography11",
    "signedByBaseTypographyParagraphMedium9",
    "spacer19"
  ],
  leadingText3: [
    "leadingText3",
    "typography9",
    "signedByBaseTypographyParagraphMedium7",
    "text26",
    "spacer17",
    "typography10",
    "signedByBaseTypographyParagraphMedium8",
    "text27",
    "spacer18"
  ],
  typography9: [
    "typography9",
    "signedByBaseTypographyParagraphMedium7",
    "text26",
    "spacer17"
  ],
  signedByBaseTypographyParagraphMedium7: [
    "signedByBaseTypographyParagraphMedium7"
  ],
  text26: ["text26"],
  spacer17: ["spacer17"],
  typography10: [
    "typography10",
    "signedByBaseTypographyParagraphMedium8",
    "text27",
    "spacer18"
  ],
  signedByBaseTypographyParagraphMedium8: [
    "signedByBaseTypographyParagraphMedium8"
  ],
  text27: ["text27"],
  spacer18: ["spacer18"],
  typography11: [
    "typography11",
    "signedByBaseTypographyParagraphMedium9",
    "spacer19"
  ],
  signedByBaseTypographyParagraphMedium9: [
    "signedByBaseTypographyParagraphMedium9"
  ],
  spacer19: ["spacer19"],
  trailingEnhancer3: ["trailingEnhancer3", "heart8"],
  heart8: ["heart8"],
  menuItem5: [
    "menuItem5",
    "signedByBaseMenuItemOptionMediumStandardEnabled4",
    "menuItemControlMediumCheckboxUnchecked4",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked4",
    "icon4",
    "leadingEnhancer4",
    "heart9",
    "textFrame4",
    "leadingText4",
    "typography12",
    "signedByBaseTypographyParagraphMedium10",
    "text28",
    "spacer20",
    "typography13",
    "signedByBaseTypographyParagraphMedium11",
    "text29",
    "spacer21",
    "typography14",
    "signedByBaseTypographyParagraphMedium12",
    "spacer22",
    "trailingEnhancer4",
    "heart10"
  ],
  signedByBaseMenuItemOptionMediumStandardEnabled4: [
    "signedByBaseMenuItemOptionMediumStandardEnabled4"
  ],
  menuItemControlMediumCheckboxUnchecked4: [
    "menuItemControlMediumCheckboxUnchecked4",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked4",
    "icon4"
  ],
  signedByBaseMenuItemControlMediumCheckboxUnchecked4: [
    "signedByBaseMenuItemControlMediumCheckboxUnchecked4"
  ],
  icon4: ["icon4"],
  leadingEnhancer4: ["leadingEnhancer4", "heart9"],
  heart9: ["heart9"],
  textFrame4: [
    "textFrame4",
    "leadingText4",
    "typography12",
    "signedByBaseTypographyParagraphMedium10",
    "text28",
    "spacer20",
    "typography13",
    "signedByBaseTypographyParagraphMedium11",
    "text29",
    "spacer21",
    "typography14",
    "signedByBaseTypographyParagraphMedium12",
    "spacer22"
  ],
  leadingText4: [
    "leadingText4",
    "typography12",
    "signedByBaseTypographyParagraphMedium10",
    "text28",
    "spacer20",
    "typography13",
    "signedByBaseTypographyParagraphMedium11",
    "text29",
    "spacer21"
  ],
  typography12: [
    "typography12",
    "signedByBaseTypographyParagraphMedium10",
    "text28",
    "spacer20"
  ],
  signedByBaseTypographyParagraphMedium10: [
    "signedByBaseTypographyParagraphMedium10"
  ],
  text28: ["text28"],
  spacer20: ["spacer20"],
  typography13: [
    "typography13",
    "signedByBaseTypographyParagraphMedium11",
    "text29",
    "spacer21"
  ],
  signedByBaseTypographyParagraphMedium11: [
    "signedByBaseTypographyParagraphMedium11"
  ],
  text29: ["text29"],
  spacer21: ["spacer21"],
  typography14: [
    "typography14",
    "signedByBaseTypographyParagraphMedium12",
    "spacer22"
  ],
  signedByBaseTypographyParagraphMedium12: [
    "signedByBaseTypographyParagraphMedium12"
  ],
  spacer22: ["spacer22"],
  trailingEnhancer4: ["trailingEnhancer4", "heart10"],
  heart10: ["heart10"],
  scrollBar: ["scrollBar"],
  model: ["model"],
  buttons: [
    "buttons",
    "button",
    "frame1073713924",
    "frame1073713930",
    "button2",
    "button3",
    "button4"
  ],
  button: ["button"],
  frame1073713924: ["frame1073713924"],
  frame1073713930: ["frame1073713930", "button2", "button3", "button4"],
  button2: ["button2"],
  button3: ["button3"],
  button4: ["button4"],
  editPosition: [
    "editPosition",
    "frame1437254017",
    "name3",
    "frame1437254020",
    "editPosition3",
    "input3",
    "textArea2",
    "precisions3",
    "select10",
    "generalDescription3",
    "textArea4",
    "upload22"
  ],
  frame1437254017: ["frame1437254017", "name3", "frame1437254020"],
  name3: ["name3"],
  frame1437254020: ["frame1437254020"],
  editPosition3: [
    "editPosition3",
    "input3",
    "textArea2",
    "precisions3",
    "select10",
    "generalDescription3",
    "textArea4",
    "upload22"
  ],
  input3: ["input3"],
  textArea2: ["textArea2"],
  precisions3: ["precisions3", "select10"],
  select10: ["select10"],
  generalDescription3: ["generalDescription3", "textArea4"],
  textArea4: ["textArea4"],
  upload22: ["upload22"],
  deletePosition2: [
    "deletePosition2",
    "frame1437254018",
    "name7",
    "frame1437254021",
    "form3",
    "content3",
    "titre3",
    "texinput23",
    "date3",
    "label8",
    "timePicker9",
    "type3",
    "budget3",
    "comments3",
    "input9",
    "name6",
    "datePickerWeb3",
    "inputSelect3",
    "signedByBaseFieldGroupSmall3",
    "endDateCalendar3",
    "inputElementTextField5",
    "signedByBaseInputElementTextFieldSmallEnabled3",
    "leadingArtworkContainer9",
    "leadingArtwork5",
    "leadingLabelContainer9",
    "leadingLabel9",
    "signedByBaseTypographyLabelSmall5",
    "text55",
    "spacer49",
    "inputElementContentText9",
    "signedByBaseInputElementContentTextSmallOff3",
    "text56",
    "trailingLabelEnhancer9",
    "trailingLabel9",
    "signedByBaseTypographyLabelSmall6",
    "text57",
    "spacer50",
    "trailingArtworkContainer9",
    "trailingArtwork9",
    "calendar3",
    "signedByBaseInputElementSelectXSmallWebSingleDefaultEnabled3",
    "leadingArtworkContainer10",
    "text58",
    "leadingLabelContainer10",
    "leadingLabel10",
    "signedByBaseTypographyLabelXSmall5",
    "text59",
    "spacer51",
    "inputElementContentText10",
    "signedByBaseInputElementContentTextXSmallWebOff3",
    "text60",
    "trailingLabelEnhancer10",
    "trailingLabel10",
    "signedByBaseTypographyLabelXSmall6",
    "text61",
    "spacer52",
    "trailingArtworkContainer10",
    "trailingArtwork10",
    "selectIndicatorContainer5",
    "chevronIcon5",
    "inputElementHint5",
    "heart21",
    "hint5",
    "signedByBaseTypographyParagraphSmall5",
    "text62",
    "spacer53",
    "inputElementSelect3",
    "signedByBaseInputElementSelectMediumSingleDefaultActive3",
    "selectFrame3",
    "leadingArtworkContainer11",
    "leadingArtwork6",
    "leadingLabelContainer11",
    "leadingLabel11",
    "signedByBaseTypographyLabelMedium13",
    "text63",
    "spacer54",
    "inputElementContentText11",
    "signedByBaseInputElementContentTextMediumOff5",
    "text64",
    "trailingLabelEnhancer11",
    "trailingLabel11",
    "signedByBaseTypographyLabelMedium14",
    "text65",
    "spacer55",
    "trailingArtworkContainer11",
    "trailingArtwork11",
    "selectIndicatorContainer6",
    "chevronIcon6",
    "menu3",
    "signedByBaseMenuListMedium3",
    "menuItem11",
    "signedByBaseMenuItemSearchMediumNoneEnabled3",
    "searchField3",
    "signedByBaseSearchFieldMediumEnabled3",
    "inputElementLabel3",
    "signedByBaseInputElementLabelMedium3",
    "typography29",
    "signedByBaseTypographyLabelMedium15",
    "text66",
    "spacer56",
    "characterCountFrame3",
    "heart22",
    "typography30",
    "signedByBaseTypographyLabelMedium16",
    "text67",
    "spacer57",
    "inputElementTextField6",
    "signedByBaseInputElementTextFieldMediumEnabled3",
    "leadingArtworkContainer12",
    "search3",
    "leadingLabelContainer12",
    "leadingLabel12",
    "signedByBaseTypographyLabelMedium17",
    "text68",
    "spacer58",
    "inputElementContentText12",
    "signedByBaseInputElementContentTextMediumOff6",
    "text69",
    "trailingLabelEnhancer12",
    "trailingLabel12",
    "signedByBaseTypographyLabelMedium18",
    "text70",
    "spacer59",
    "trailingArtworkContainer12",
    "trailingArtwork12",
    "inputElementHint6",
    "heart23",
    "hint6",
    "signedByBaseTypographyParagraphSmall6",
    "text71",
    "spacer60",
    "menuItem12",
    "signedByBaseMenuItemOptionMediumStandardEnabled9",
    "menuItemControlMediumCheckboxUnchecked9",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked9",
    "icon9",
    "leadingEnhancer9",
    "heart24",
    "textFrame9",
    "leadingText9",
    "typography31",
    "signedByBaseTypographyParagraphMedium25",
    "text72",
    "spacer61",
    "typography32",
    "signedByBaseTypographyParagraphMedium26",
    "text73",
    "spacer62",
    "typography33",
    "signedByBaseTypographyParagraphMedium27",
    "spacer63",
    "trailingEnhancer9",
    "heart25",
    "menuItem13",
    "signedByBaseMenuItemOptionMediumStandardEnabled10",
    "menuItemControlMediumCheckboxUnchecked10",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked10",
    "icon10",
    "leadingEnhancer10",
    "heart26",
    "textFrame10",
    "leadingText10",
    "typography34",
    "signedByBaseTypographyParagraphMedium28",
    "text74",
    "spacer64",
    "typography35",
    "signedByBaseTypographyParagraphMedium29",
    "text75",
    "spacer65",
    "typography36",
    "signedByBaseTypographyParagraphMedium30",
    "spacer66",
    "trailingEnhancer10",
    "checkmarkSmall3",
    "menuItem14",
    "signedByBaseMenuItemOptionMediumStandardEnabled11",
    "menuItemControlMediumCheckboxUnchecked11",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked11",
    "icon11",
    "leadingEnhancer11",
    "heart27",
    "textFrame11",
    "leadingText11",
    "typography37",
    "signedByBaseTypographyParagraphMedium31",
    "text76",
    "spacer67",
    "typography38",
    "signedByBaseTypographyParagraphMedium32",
    "text77",
    "spacer68",
    "typography39",
    "signedByBaseTypographyParagraphMedium33",
    "spacer69",
    "trailingEnhancer11",
    "heart28",
    "menuItem15",
    "signedByBaseMenuItemOptionMediumStandardEnabled12",
    "menuItemControlMediumCheckboxUnchecked12",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked12",
    "icon12",
    "leadingEnhancer12",
    "heart29",
    "textFrame12",
    "leadingText12",
    "typography40",
    "signedByBaseTypographyParagraphMedium34",
    "text78",
    "spacer70",
    "typography41",
    "signedByBaseTypographyParagraphMedium35",
    "text79",
    "spacer71",
    "typography42",
    "signedByBaseTypographyParagraphMedium36",
    "spacer72",
    "trailingEnhancer12",
    "heart30",
    "scrollBar3",
    "model3",
    "buttons3",
    "button9",
    "frame1073713926",
    "frame1073713932",
    "button10",
    "button11",
    "button12"
  ],
  frame1437254018: ["frame1437254018", "name7", "frame1437254021"],
  name7: ["name7"],
  frame1437254021: ["frame1437254021"],
  form3: ["form3"],
  content3: [
    "content3",
    "titre3",
    "texinput23",
    "date3",
    "label8",
    "timePicker9",
    "type3",
    "budget3",
    "comments3",
    "input9",
    "name6",
    "datePickerWeb3",
    "inputSelect3",
    "signedByBaseFieldGroupSmall3",
    "endDateCalendar3",
    "inputElementTextField5",
    "signedByBaseInputElementTextFieldSmallEnabled3",
    "leadingArtworkContainer9",
    "leadingArtwork5",
    "leadingLabelContainer9",
    "leadingLabel9",
    "signedByBaseTypographyLabelSmall5",
    "text55",
    "spacer49",
    "inputElementContentText9",
    "signedByBaseInputElementContentTextSmallOff3",
    "text56",
    "trailingLabelEnhancer9",
    "trailingLabel9",
    "signedByBaseTypographyLabelSmall6",
    "text57",
    "spacer50",
    "trailingArtworkContainer9",
    "trailingArtwork9",
    "calendar3",
    "signedByBaseInputElementSelectXSmallWebSingleDefaultEnabled3",
    "leadingArtworkContainer10",
    "text58",
    "leadingLabelContainer10",
    "leadingLabel10",
    "signedByBaseTypographyLabelXSmall5",
    "text59",
    "spacer51",
    "inputElementContentText10",
    "signedByBaseInputElementContentTextXSmallWebOff3",
    "text60",
    "trailingLabelEnhancer10",
    "trailingLabel10",
    "signedByBaseTypographyLabelXSmall6",
    "text61",
    "spacer52",
    "trailingArtworkContainer10",
    "trailingArtwork10",
    "selectIndicatorContainer5",
    "chevronIcon5",
    "inputElementHint5",
    "heart21",
    "hint5",
    "signedByBaseTypographyParagraphSmall5",
    "text62",
    "spacer53",
    "inputElementSelect3",
    "signedByBaseInputElementSelectMediumSingleDefaultActive3",
    "selectFrame3",
    "leadingArtworkContainer11",
    "leadingArtwork6",
    "leadingLabelContainer11",
    "leadingLabel11",
    "signedByBaseTypographyLabelMedium13",
    "text63",
    "spacer54",
    "inputElementContentText11",
    "signedByBaseInputElementContentTextMediumOff5",
    "text64",
    "trailingLabelEnhancer11",
    "trailingLabel11",
    "signedByBaseTypographyLabelMedium14",
    "text65",
    "spacer55",
    "trailingArtworkContainer11",
    "trailingArtwork11",
    "selectIndicatorContainer6",
    "chevronIcon6",
    "menu3",
    "signedByBaseMenuListMedium3",
    "menuItem11",
    "signedByBaseMenuItemSearchMediumNoneEnabled3",
    "searchField3",
    "signedByBaseSearchFieldMediumEnabled3",
    "inputElementLabel3",
    "signedByBaseInputElementLabelMedium3",
    "typography29",
    "signedByBaseTypographyLabelMedium15",
    "text66",
    "spacer56",
    "characterCountFrame3",
    "heart22",
    "typography30",
    "signedByBaseTypographyLabelMedium16",
    "text67",
    "spacer57",
    "inputElementTextField6",
    "signedByBaseInputElementTextFieldMediumEnabled3",
    "leadingArtworkContainer12",
    "search3",
    "leadingLabelContainer12",
    "leadingLabel12",
    "signedByBaseTypographyLabelMedium17",
    "text68",
    "spacer58",
    "inputElementContentText12",
    "signedByBaseInputElementContentTextMediumOff6",
    "text69",
    "trailingLabelEnhancer12",
    "trailingLabel12",
    "signedByBaseTypographyLabelMedium18",
    "text70",
    "spacer59",
    "trailingArtworkContainer12",
    "trailingArtwork12",
    "inputElementHint6",
    "heart23",
    "hint6",
    "signedByBaseTypographyParagraphSmall6",
    "text71",
    "spacer60",
    "menuItem12",
    "signedByBaseMenuItemOptionMediumStandardEnabled9",
    "menuItemControlMediumCheckboxUnchecked9",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked9",
    "icon9",
    "leadingEnhancer9",
    "heart24",
    "textFrame9",
    "leadingText9",
    "typography31",
    "signedByBaseTypographyParagraphMedium25",
    "text72",
    "spacer61",
    "typography32",
    "signedByBaseTypographyParagraphMedium26",
    "text73",
    "spacer62",
    "typography33",
    "signedByBaseTypographyParagraphMedium27",
    "spacer63",
    "trailingEnhancer9",
    "heart25",
    "menuItem13",
    "signedByBaseMenuItemOptionMediumStandardEnabled10",
    "menuItemControlMediumCheckboxUnchecked10",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked10",
    "icon10",
    "leadingEnhancer10",
    "heart26",
    "textFrame10",
    "leadingText10",
    "typography34",
    "signedByBaseTypographyParagraphMedium28",
    "text74",
    "spacer64",
    "typography35",
    "signedByBaseTypographyParagraphMedium29",
    "text75",
    "spacer65",
    "typography36",
    "signedByBaseTypographyParagraphMedium30",
    "spacer66",
    "trailingEnhancer10",
    "checkmarkSmall3",
    "menuItem14",
    "signedByBaseMenuItemOptionMediumStandardEnabled11",
    "menuItemControlMediumCheckboxUnchecked11",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked11",
    "icon11",
    "leadingEnhancer11",
    "heart27",
    "textFrame11",
    "leadingText11",
    "typography37",
    "signedByBaseTypographyParagraphMedium31",
    "text76",
    "spacer67",
    "typography38",
    "signedByBaseTypographyParagraphMedium32",
    "text77",
    "spacer68",
    "typography39",
    "signedByBaseTypographyParagraphMedium33",
    "spacer69",
    "trailingEnhancer11",
    "heart28",
    "menuItem15",
    "signedByBaseMenuItemOptionMediumStandardEnabled12",
    "menuItemControlMediumCheckboxUnchecked12",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked12",
    "icon12",
    "leadingEnhancer12",
    "heart29",
    "textFrame12",
    "leadingText12",
    "typography40",
    "signedByBaseTypographyParagraphMedium34",
    "text78",
    "spacer70",
    "typography41",
    "signedByBaseTypographyParagraphMedium35",
    "text79",
    "spacer71",
    "typography42",
    "signedByBaseTypographyParagraphMedium36",
    "spacer72",
    "trailingEnhancer12",
    "heart30",
    "scrollBar3",
    "model3",
    "buttons3",
    "button9",
    "frame1073713926",
    "frame1073713932",
    "button10",
    "button11",
    "button12"
  ],
  titre3: ["titre3"],
  texinput23: ["texinput23"],
  date3: ["date3", "label8", "timePicker9"],
  label8: ["label8"],
  timePicker9: ["timePicker9"],
  type3: ["type3"],
  budget3: ["budget3"],
  comments3: ["comments3"],
  input9: [
    "input9",
    "name6",
    "datePickerWeb3",
    "inputSelect3",
    "signedByBaseFieldGroupSmall3",
    "endDateCalendar3",
    "inputElementTextField5",
    "signedByBaseInputElementTextFieldSmallEnabled3",
    "leadingArtworkContainer9",
    "leadingArtwork5",
    "leadingLabelContainer9",
    "leadingLabel9",
    "signedByBaseTypographyLabelSmall5",
    "text55",
    "spacer49",
    "inputElementContentText9",
    "signedByBaseInputElementContentTextSmallOff3",
    "text56",
    "trailingLabelEnhancer9",
    "trailingLabel9",
    "signedByBaseTypographyLabelSmall6",
    "text57",
    "spacer50",
    "trailingArtworkContainer9",
    "trailingArtwork9",
    "calendar3",
    "signedByBaseInputElementSelectXSmallWebSingleDefaultEnabled3",
    "leadingArtworkContainer10",
    "text58",
    "leadingLabelContainer10",
    "leadingLabel10",
    "signedByBaseTypographyLabelXSmall5",
    "text59",
    "spacer51",
    "inputElementContentText10",
    "signedByBaseInputElementContentTextXSmallWebOff3",
    "text60",
    "trailingLabelEnhancer10",
    "trailingLabel10",
    "signedByBaseTypographyLabelXSmall6",
    "text61",
    "spacer52",
    "trailingArtworkContainer10",
    "trailingArtwork10",
    "selectIndicatorContainer5",
    "chevronIcon5",
    "inputElementHint5",
    "heart21",
    "hint5",
    "signedByBaseTypographyParagraphSmall5",
    "text62",
    "spacer53",
    "inputElementSelect3",
    "signedByBaseInputElementSelectMediumSingleDefaultActive3",
    "selectFrame3",
    "leadingArtworkContainer11",
    "leadingArtwork6",
    "leadingLabelContainer11",
    "leadingLabel11",
    "signedByBaseTypographyLabelMedium13",
    "text63",
    "spacer54",
    "inputElementContentText11",
    "signedByBaseInputElementContentTextMediumOff5",
    "text64",
    "trailingLabelEnhancer11",
    "trailingLabel11",
    "signedByBaseTypographyLabelMedium14",
    "text65",
    "spacer55",
    "trailingArtworkContainer11",
    "trailingArtwork11",
    "selectIndicatorContainer6",
    "chevronIcon6",
    "menu3",
    "signedByBaseMenuListMedium3",
    "menuItem11",
    "signedByBaseMenuItemSearchMediumNoneEnabled3",
    "searchField3",
    "signedByBaseSearchFieldMediumEnabled3",
    "inputElementLabel3",
    "signedByBaseInputElementLabelMedium3",
    "typography29",
    "signedByBaseTypographyLabelMedium15",
    "text66",
    "spacer56",
    "characterCountFrame3",
    "heart22",
    "typography30",
    "signedByBaseTypographyLabelMedium16",
    "text67",
    "spacer57",
    "inputElementTextField6",
    "signedByBaseInputElementTextFieldMediumEnabled3",
    "leadingArtworkContainer12",
    "search3",
    "leadingLabelContainer12",
    "leadingLabel12",
    "signedByBaseTypographyLabelMedium17",
    "text68",
    "spacer58",
    "inputElementContentText12",
    "signedByBaseInputElementContentTextMediumOff6",
    "text69",
    "trailingLabelEnhancer12",
    "trailingLabel12",
    "signedByBaseTypographyLabelMedium18",
    "text70",
    "spacer59",
    "trailingArtworkContainer12",
    "trailingArtwork12",
    "inputElementHint6",
    "heart23",
    "hint6",
    "signedByBaseTypographyParagraphSmall6",
    "text71",
    "spacer60",
    "menuItem12",
    "signedByBaseMenuItemOptionMediumStandardEnabled9",
    "menuItemControlMediumCheckboxUnchecked9",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked9",
    "icon9",
    "leadingEnhancer9",
    "heart24",
    "textFrame9",
    "leadingText9",
    "typography31",
    "signedByBaseTypographyParagraphMedium25",
    "text72",
    "spacer61",
    "typography32",
    "signedByBaseTypographyParagraphMedium26",
    "text73",
    "spacer62",
    "typography33",
    "signedByBaseTypographyParagraphMedium27",
    "spacer63",
    "trailingEnhancer9",
    "heart25",
    "menuItem13",
    "signedByBaseMenuItemOptionMediumStandardEnabled10",
    "menuItemControlMediumCheckboxUnchecked10",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked10",
    "icon10",
    "leadingEnhancer10",
    "heart26",
    "textFrame10",
    "leadingText10",
    "typography34",
    "signedByBaseTypographyParagraphMedium28",
    "text74",
    "spacer64",
    "typography35",
    "signedByBaseTypographyParagraphMedium29",
    "text75",
    "spacer65",
    "typography36",
    "signedByBaseTypographyParagraphMedium30",
    "spacer66",
    "trailingEnhancer10",
    "checkmarkSmall3",
    "menuItem14",
    "signedByBaseMenuItemOptionMediumStandardEnabled11",
    "menuItemControlMediumCheckboxUnchecked11",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked11",
    "icon11",
    "leadingEnhancer11",
    "heart27",
    "textFrame11",
    "leadingText11",
    "typography37",
    "signedByBaseTypographyParagraphMedium31",
    "text76",
    "spacer67",
    "typography38",
    "signedByBaseTypographyParagraphMedium32",
    "text77",
    "spacer68",
    "typography39",
    "signedByBaseTypographyParagraphMedium33",
    "spacer69",
    "trailingEnhancer11",
    "heart28",
    "menuItem15",
    "signedByBaseMenuItemOptionMediumStandardEnabled12",
    "menuItemControlMediumCheckboxUnchecked12",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked12",
    "icon12",
    "leadingEnhancer12",
    "heart29",
    "textFrame12",
    "leadingText12",
    "typography40",
    "signedByBaseTypographyParagraphMedium34",
    "text78",
    "spacer70",
    "typography41",
    "signedByBaseTypographyParagraphMedium35",
    "text79",
    "spacer71",
    "typography42",
    "signedByBaseTypographyParagraphMedium36",
    "spacer72",
    "trailingEnhancer12",
    "heart30",
    "scrollBar3"
  ],
  name6: ["name6"],
  datePickerWeb3: [
    "datePickerWeb3",
    "inputSelect3",
    "signedByBaseFieldGroupSmall3",
    "endDateCalendar3",
    "inputElementTextField5",
    "signedByBaseInputElementTextFieldSmallEnabled3",
    "leadingArtworkContainer9",
    "leadingArtwork5",
    "leadingLabelContainer9",
    "leadingLabel9",
    "signedByBaseTypographyLabelSmall5",
    "text55",
    "spacer49",
    "inputElementContentText9",
    "signedByBaseInputElementContentTextSmallOff3",
    "text56",
    "trailingLabelEnhancer9",
    "trailingLabel9",
    "signedByBaseTypographyLabelSmall6",
    "text57",
    "spacer50",
    "trailingArtworkContainer9",
    "trailingArtwork9",
    "calendar3",
    "signedByBaseInputElementSelectXSmallWebSingleDefaultEnabled3",
    "leadingArtworkContainer10",
    "text58",
    "leadingLabelContainer10",
    "leadingLabel10",
    "signedByBaseTypographyLabelXSmall5",
    "text59",
    "spacer51",
    "inputElementContentText10",
    "signedByBaseInputElementContentTextXSmallWebOff3",
    "text60",
    "trailingLabelEnhancer10",
    "trailingLabel10",
    "signedByBaseTypographyLabelXSmall6",
    "text61",
    "spacer52",
    "trailingArtworkContainer10",
    "trailingArtwork10",
    "selectIndicatorContainer5",
    "chevronIcon5",
    "inputElementHint5",
    "heart21",
    "hint5",
    "signedByBaseTypographyParagraphSmall5",
    "text62",
    "spacer53"
  ],
  inputSelect3: [
    "inputSelect3",
    "signedByBaseFieldGroupSmall3",
    "endDateCalendar3",
    "inputElementTextField5",
    "signedByBaseInputElementTextFieldSmallEnabled3",
    "leadingArtworkContainer9",
    "leadingArtwork5",
    "leadingLabelContainer9",
    "leadingLabel9",
    "signedByBaseTypographyLabelSmall5",
    "text55",
    "spacer49",
    "inputElementContentText9",
    "signedByBaseInputElementContentTextSmallOff3",
    "text56",
    "trailingLabelEnhancer9",
    "trailingLabel9",
    "signedByBaseTypographyLabelSmall6",
    "text57",
    "spacer50",
    "trailingArtworkContainer9",
    "trailingArtwork9",
    "calendar3",
    "signedByBaseInputElementSelectXSmallWebSingleDefaultEnabled3",
    "leadingArtworkContainer10",
    "text58",
    "leadingLabelContainer10",
    "leadingLabel10",
    "signedByBaseTypographyLabelXSmall5",
    "text59",
    "spacer51",
    "inputElementContentText10",
    "signedByBaseInputElementContentTextXSmallWebOff3",
    "text60",
    "trailingLabelEnhancer10",
    "trailingLabel10",
    "signedByBaseTypographyLabelXSmall6",
    "text61",
    "spacer52",
    "trailingArtworkContainer10",
    "trailingArtwork10",
    "selectIndicatorContainer5",
    "chevronIcon5",
    "inputElementHint5",
    "heart21",
    "hint5",
    "signedByBaseTypographyParagraphSmall5",
    "text62",
    "spacer53"
  ],
  signedByBaseFieldGroupSmall3: ["signedByBaseFieldGroupSmall3"],
  endDateCalendar3: [
    "endDateCalendar3",
    "inputElementTextField5",
    "signedByBaseInputElementTextFieldSmallEnabled3",
    "leadingArtworkContainer9",
    "leadingArtwork5",
    "leadingLabelContainer9",
    "leadingLabel9",
    "signedByBaseTypographyLabelSmall5",
    "text55",
    "spacer49",
    "inputElementContentText9",
    "signedByBaseInputElementContentTextSmallOff3",
    "text56",
    "trailingLabelEnhancer9",
    "trailingLabel9",
    "signedByBaseTypographyLabelSmall6",
    "text57",
    "spacer50",
    "trailingArtworkContainer9",
    "trailingArtwork9",
    "calendar3",
    "signedByBaseInputElementSelectXSmallWebSingleDefaultEnabled3",
    "leadingArtworkContainer10",
    "text58",
    "leadingLabelContainer10",
    "leadingLabel10",
    "signedByBaseTypographyLabelXSmall5",
    "text59",
    "spacer51",
    "inputElementContentText10",
    "signedByBaseInputElementContentTextXSmallWebOff3",
    "text60",
    "trailingLabelEnhancer10",
    "trailingLabel10",
    "signedByBaseTypographyLabelXSmall6",
    "text61",
    "spacer52",
    "trailingArtworkContainer10",
    "trailingArtwork10",
    "selectIndicatorContainer5",
    "chevronIcon5"
  ],
  inputElementTextField5: [
    "inputElementTextField5",
    "signedByBaseInputElementTextFieldSmallEnabled3",
    "leadingArtworkContainer9",
    "leadingArtwork5",
    "leadingLabelContainer9",
    "leadingLabel9",
    "signedByBaseTypographyLabelSmall5",
    "text55",
    "spacer49",
    "inputElementContentText9",
    "signedByBaseInputElementContentTextSmallOff3",
    "text56",
    "trailingLabelEnhancer9",
    "trailingLabel9",
    "signedByBaseTypographyLabelSmall6",
    "text57",
    "spacer50",
    "trailingArtworkContainer9",
    "trailingArtwork9"
  ],
  signedByBaseInputElementTextFieldSmallEnabled3: [
    "signedByBaseInputElementTextFieldSmallEnabled3"
  ],
  leadingArtworkContainer9: ["leadingArtworkContainer9", "leadingArtwork5"],
  leadingArtwork5: ["leadingArtwork5"],
  leadingLabelContainer9: [
    "leadingLabelContainer9",
    "leadingLabel9",
    "signedByBaseTypographyLabelSmall5",
    "text55",
    "spacer49"
  ],
  leadingLabel9: [
    "leadingLabel9",
    "signedByBaseTypographyLabelSmall5",
    "text55",
    "spacer49"
  ],
  signedByBaseTypographyLabelSmall5: ["signedByBaseTypographyLabelSmall5"],
  text55: ["text55"],
  spacer49: ["spacer49"],
  inputElementContentText9: [
    "inputElementContentText9",
    "signedByBaseInputElementContentTextSmallOff3",
    "text56"
  ],
  signedByBaseInputElementContentTextSmallOff3: [
    "signedByBaseInputElementContentTextSmallOff3"
  ],
  text56: ["text56"],
  trailingLabelEnhancer9: [
    "trailingLabelEnhancer9",
    "trailingLabel9",
    "signedByBaseTypographyLabelSmall6",
    "text57",
    "spacer50"
  ],
  trailingLabel9: [
    "trailingLabel9",
    "signedByBaseTypographyLabelSmall6",
    "text57",
    "spacer50"
  ],
  signedByBaseTypographyLabelSmall6: ["signedByBaseTypographyLabelSmall6"],
  text57: ["text57"],
  spacer50: ["spacer50"],
  trailingArtworkContainer9: ["trailingArtworkContainer9", "trailingArtwork9"],
  trailingArtwork9: ["trailingArtwork9"],
  calendar3: [
    "calendar3",
    "signedByBaseInputElementSelectXSmallWebSingleDefaultEnabled3",
    "leadingArtworkContainer10",
    "text58",
    "leadingLabelContainer10",
    "leadingLabel10",
    "signedByBaseTypographyLabelXSmall5",
    "text59",
    "spacer51",
    "inputElementContentText10",
    "signedByBaseInputElementContentTextXSmallWebOff3",
    "text60",
    "trailingLabelEnhancer10",
    "trailingLabel10",
    "signedByBaseTypographyLabelXSmall6",
    "text61",
    "spacer52",
    "trailingArtworkContainer10",
    "trailingArtwork10",
    "selectIndicatorContainer5",
    "chevronIcon5"
  ],
  signedByBaseInputElementSelectXSmallWebSingleDefaultEnabled3: [
    "signedByBaseInputElementSelectXSmallWebSingleDefaultEnabled3"
  ],
  leadingArtworkContainer10: ["leadingArtworkContainer10", "text58"],
  text58: ["text58"],
  leadingLabelContainer10: [
    "leadingLabelContainer10",
    "leadingLabel10",
    "signedByBaseTypographyLabelXSmall5",
    "text59",
    "spacer51"
  ],
  leadingLabel10: [
    "leadingLabel10",
    "signedByBaseTypographyLabelXSmall5",
    "text59",
    "spacer51"
  ],
  signedByBaseTypographyLabelXSmall5: ["signedByBaseTypographyLabelXSmall5"],
  text59: ["text59"],
  spacer51: ["spacer51"],
  inputElementContentText10: [
    "inputElementContentText10",
    "signedByBaseInputElementContentTextXSmallWebOff3",
    "text60"
  ],
  signedByBaseInputElementContentTextXSmallWebOff3: [
    "signedByBaseInputElementContentTextXSmallWebOff3"
  ],
  text60: ["text60"],
  trailingLabelEnhancer10: [
    "trailingLabelEnhancer10",
    "trailingLabel10",
    "signedByBaseTypographyLabelXSmall6",
    "text61",
    "spacer52"
  ],
  trailingLabel10: [
    "trailingLabel10",
    "signedByBaseTypographyLabelXSmall6",
    "text61",
    "spacer52"
  ],
  signedByBaseTypographyLabelXSmall6: ["signedByBaseTypographyLabelXSmall6"],
  text61: ["text61"],
  spacer52: ["spacer52"],
  trailingArtworkContainer10: [
    "trailingArtworkContainer10",
    "trailingArtwork10"
  ],
  trailingArtwork10: ["trailingArtwork10"],
  selectIndicatorContainer5: ["selectIndicatorContainer5", "chevronIcon5"],
  chevronIcon5: ["chevronIcon5"],
  inputElementHint5: [
    "inputElementHint5",
    "heart21",
    "hint5",
    "signedByBaseTypographyParagraphSmall5",
    "text62",
    "spacer53"
  ],
  heart21: ["heart21"],
  hint5: [
    "hint5",
    "signedByBaseTypographyParagraphSmall5",
    "text62",
    "spacer53"
  ],
  signedByBaseTypographyParagraphSmall5: [
    "signedByBaseTypographyParagraphSmall5"
  ],
  text62: ["text62"],
  spacer53: ["spacer53"],
  inputElementSelect3: [
    "inputElementSelect3",
    "signedByBaseInputElementSelectMediumSingleDefaultActive3",
    "selectFrame3",
    "leadingArtworkContainer11",
    "leadingArtwork6",
    "leadingLabelContainer11",
    "leadingLabel11",
    "signedByBaseTypographyLabelMedium13",
    "text63",
    "spacer54",
    "inputElementContentText11",
    "signedByBaseInputElementContentTextMediumOff5",
    "text64",
    "trailingLabelEnhancer11",
    "trailingLabel11",
    "signedByBaseTypographyLabelMedium14",
    "text65",
    "spacer55",
    "trailingArtworkContainer11",
    "trailingArtwork11",
    "selectIndicatorContainer6",
    "chevronIcon6",
    "menu3",
    "signedByBaseMenuListMedium3",
    "menuItem11",
    "signedByBaseMenuItemSearchMediumNoneEnabled3",
    "searchField3",
    "signedByBaseSearchFieldMediumEnabled3",
    "inputElementLabel3",
    "signedByBaseInputElementLabelMedium3",
    "typography29",
    "signedByBaseTypographyLabelMedium15",
    "text66",
    "spacer56",
    "characterCountFrame3",
    "heart22",
    "typography30",
    "signedByBaseTypographyLabelMedium16",
    "text67",
    "spacer57",
    "inputElementTextField6",
    "signedByBaseInputElementTextFieldMediumEnabled3",
    "leadingArtworkContainer12",
    "search3",
    "leadingLabelContainer12",
    "leadingLabel12",
    "signedByBaseTypographyLabelMedium17",
    "text68",
    "spacer58",
    "inputElementContentText12",
    "signedByBaseInputElementContentTextMediumOff6",
    "text69",
    "trailingLabelEnhancer12",
    "trailingLabel12",
    "signedByBaseTypographyLabelMedium18",
    "text70",
    "spacer59",
    "trailingArtworkContainer12",
    "trailingArtwork12",
    "inputElementHint6",
    "heart23",
    "hint6",
    "signedByBaseTypographyParagraphSmall6",
    "text71",
    "spacer60",
    "menuItem12",
    "signedByBaseMenuItemOptionMediumStandardEnabled9",
    "menuItemControlMediumCheckboxUnchecked9",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked9",
    "icon9",
    "leadingEnhancer9",
    "heart24",
    "textFrame9",
    "leadingText9",
    "typography31",
    "signedByBaseTypographyParagraphMedium25",
    "text72",
    "spacer61",
    "typography32",
    "signedByBaseTypographyParagraphMedium26",
    "text73",
    "spacer62",
    "typography33",
    "signedByBaseTypographyParagraphMedium27",
    "spacer63",
    "trailingEnhancer9",
    "heart25",
    "menuItem13",
    "signedByBaseMenuItemOptionMediumStandardEnabled10",
    "menuItemControlMediumCheckboxUnchecked10",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked10",
    "icon10",
    "leadingEnhancer10",
    "heart26",
    "textFrame10",
    "leadingText10",
    "typography34",
    "signedByBaseTypographyParagraphMedium28",
    "text74",
    "spacer64",
    "typography35",
    "signedByBaseTypographyParagraphMedium29",
    "text75",
    "spacer65",
    "typography36",
    "signedByBaseTypographyParagraphMedium30",
    "spacer66",
    "trailingEnhancer10",
    "checkmarkSmall3",
    "menuItem14",
    "signedByBaseMenuItemOptionMediumStandardEnabled11",
    "menuItemControlMediumCheckboxUnchecked11",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked11",
    "icon11",
    "leadingEnhancer11",
    "heart27",
    "textFrame11",
    "leadingText11",
    "typography37",
    "signedByBaseTypographyParagraphMedium31",
    "text76",
    "spacer67",
    "typography38",
    "signedByBaseTypographyParagraphMedium32",
    "text77",
    "spacer68",
    "typography39",
    "signedByBaseTypographyParagraphMedium33",
    "spacer69",
    "trailingEnhancer11",
    "heart28",
    "menuItem15",
    "signedByBaseMenuItemOptionMediumStandardEnabled12",
    "menuItemControlMediumCheckboxUnchecked12",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked12",
    "icon12",
    "leadingEnhancer12",
    "heart29",
    "textFrame12",
    "leadingText12",
    "typography40",
    "signedByBaseTypographyParagraphMedium34",
    "text78",
    "spacer70",
    "typography41",
    "signedByBaseTypographyParagraphMedium35",
    "text79",
    "spacer71",
    "typography42",
    "signedByBaseTypographyParagraphMedium36",
    "spacer72",
    "trailingEnhancer12",
    "heart30",
    "scrollBar3"
  ],
  signedByBaseInputElementSelectMediumSingleDefaultActive3: [
    "signedByBaseInputElementSelectMediumSingleDefaultActive3"
  ],
  selectFrame3: [
    "selectFrame3",
    "leadingArtworkContainer11",
    "leadingArtwork6",
    "leadingLabelContainer11",
    "leadingLabel11",
    "signedByBaseTypographyLabelMedium13",
    "text63",
    "spacer54",
    "inputElementContentText11",
    "signedByBaseInputElementContentTextMediumOff5",
    "text64",
    "trailingLabelEnhancer11",
    "trailingLabel11",
    "signedByBaseTypographyLabelMedium14",
    "text65",
    "spacer55",
    "trailingArtworkContainer11",
    "trailingArtwork11",
    "selectIndicatorContainer6",
    "chevronIcon6"
  ],
  leadingArtworkContainer11: ["leadingArtworkContainer11", "leadingArtwork6"],
  leadingArtwork6: ["leadingArtwork6"],
  leadingLabelContainer11: [
    "leadingLabelContainer11",
    "leadingLabel11",
    "signedByBaseTypographyLabelMedium13",
    "text63",
    "spacer54"
  ],
  leadingLabel11: [
    "leadingLabel11",
    "signedByBaseTypographyLabelMedium13",
    "text63",
    "spacer54"
  ],
  signedByBaseTypographyLabelMedium13: ["signedByBaseTypographyLabelMedium13"],
  text63: ["text63"],
  spacer54: ["spacer54"],
  inputElementContentText11: [
    "inputElementContentText11",
    "signedByBaseInputElementContentTextMediumOff5",
    "text64"
  ],
  signedByBaseInputElementContentTextMediumOff5: [
    "signedByBaseInputElementContentTextMediumOff5"
  ],
  text64: ["text64"],
  trailingLabelEnhancer11: [
    "trailingLabelEnhancer11",
    "trailingLabel11",
    "signedByBaseTypographyLabelMedium14",
    "text65",
    "spacer55"
  ],
  trailingLabel11: [
    "trailingLabel11",
    "signedByBaseTypographyLabelMedium14",
    "text65",
    "spacer55"
  ],
  signedByBaseTypographyLabelMedium14: ["signedByBaseTypographyLabelMedium14"],
  text65: ["text65"],
  spacer55: ["spacer55"],
  trailingArtworkContainer11: [
    "trailingArtworkContainer11",
    "trailingArtwork11"
  ],
  trailingArtwork11: ["trailingArtwork11"],
  selectIndicatorContainer6: ["selectIndicatorContainer6", "chevronIcon6"],
  chevronIcon6: ["chevronIcon6"],
  menu3: [
    "menu3",
    "signedByBaseMenuListMedium3",
    "menuItem11",
    "signedByBaseMenuItemSearchMediumNoneEnabled3",
    "searchField3",
    "signedByBaseSearchFieldMediumEnabled3",
    "inputElementLabel3",
    "signedByBaseInputElementLabelMedium3",
    "typography29",
    "signedByBaseTypographyLabelMedium15",
    "text66",
    "spacer56",
    "characterCountFrame3",
    "heart22",
    "typography30",
    "signedByBaseTypographyLabelMedium16",
    "text67",
    "spacer57",
    "inputElementTextField6",
    "signedByBaseInputElementTextFieldMediumEnabled3",
    "leadingArtworkContainer12",
    "search3",
    "leadingLabelContainer12",
    "leadingLabel12",
    "signedByBaseTypographyLabelMedium17",
    "text68",
    "spacer58",
    "inputElementContentText12",
    "signedByBaseInputElementContentTextMediumOff6",
    "text69",
    "trailingLabelEnhancer12",
    "trailingLabel12",
    "signedByBaseTypographyLabelMedium18",
    "text70",
    "spacer59",
    "trailingArtworkContainer12",
    "trailingArtwork12",
    "inputElementHint6",
    "heart23",
    "hint6",
    "signedByBaseTypographyParagraphSmall6",
    "text71",
    "spacer60",
    "menuItem12",
    "signedByBaseMenuItemOptionMediumStandardEnabled9",
    "menuItemControlMediumCheckboxUnchecked9",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked9",
    "icon9",
    "leadingEnhancer9",
    "heart24",
    "textFrame9",
    "leadingText9",
    "typography31",
    "signedByBaseTypographyParagraphMedium25",
    "text72",
    "spacer61",
    "typography32",
    "signedByBaseTypographyParagraphMedium26",
    "text73",
    "spacer62",
    "typography33",
    "signedByBaseTypographyParagraphMedium27",
    "spacer63",
    "trailingEnhancer9",
    "heart25",
    "menuItem13",
    "signedByBaseMenuItemOptionMediumStandardEnabled10",
    "menuItemControlMediumCheckboxUnchecked10",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked10",
    "icon10",
    "leadingEnhancer10",
    "heart26",
    "textFrame10",
    "leadingText10",
    "typography34",
    "signedByBaseTypographyParagraphMedium28",
    "text74",
    "spacer64",
    "typography35",
    "signedByBaseTypographyParagraphMedium29",
    "text75",
    "spacer65",
    "typography36",
    "signedByBaseTypographyParagraphMedium30",
    "spacer66",
    "trailingEnhancer10",
    "checkmarkSmall3",
    "menuItem14",
    "signedByBaseMenuItemOptionMediumStandardEnabled11",
    "menuItemControlMediumCheckboxUnchecked11",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked11",
    "icon11",
    "leadingEnhancer11",
    "heart27",
    "textFrame11",
    "leadingText11",
    "typography37",
    "signedByBaseTypographyParagraphMedium31",
    "text76",
    "spacer67",
    "typography38",
    "signedByBaseTypographyParagraphMedium32",
    "text77",
    "spacer68",
    "typography39",
    "signedByBaseTypographyParagraphMedium33",
    "spacer69",
    "trailingEnhancer11",
    "heart28",
    "menuItem15",
    "signedByBaseMenuItemOptionMediumStandardEnabled12",
    "menuItemControlMediumCheckboxUnchecked12",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked12",
    "icon12",
    "leadingEnhancer12",
    "heart29",
    "textFrame12",
    "leadingText12",
    "typography40",
    "signedByBaseTypographyParagraphMedium34",
    "text78",
    "spacer70",
    "typography41",
    "signedByBaseTypographyParagraphMedium35",
    "text79",
    "spacer71",
    "typography42",
    "signedByBaseTypographyParagraphMedium36",
    "spacer72",
    "trailingEnhancer12",
    "heart30",
    "scrollBar3"
  ],
  signedByBaseMenuListMedium3: ["signedByBaseMenuListMedium3"],
  menuItem11: [
    "menuItem11",
    "signedByBaseMenuItemSearchMediumNoneEnabled3",
    "searchField3",
    "signedByBaseSearchFieldMediumEnabled3",
    "inputElementLabel3",
    "signedByBaseInputElementLabelMedium3",
    "typography29",
    "signedByBaseTypographyLabelMedium15",
    "text66",
    "spacer56",
    "characterCountFrame3",
    "heart22",
    "typography30",
    "signedByBaseTypographyLabelMedium16",
    "text67",
    "spacer57",
    "inputElementTextField6",
    "signedByBaseInputElementTextFieldMediumEnabled3",
    "leadingArtworkContainer12",
    "search3",
    "leadingLabelContainer12",
    "leadingLabel12",
    "signedByBaseTypographyLabelMedium17",
    "text68",
    "spacer58",
    "inputElementContentText12",
    "signedByBaseInputElementContentTextMediumOff6",
    "text69",
    "trailingLabelEnhancer12",
    "trailingLabel12",
    "signedByBaseTypographyLabelMedium18",
    "text70",
    "spacer59",
    "trailingArtworkContainer12",
    "trailingArtwork12",
    "inputElementHint6",
    "heart23",
    "hint6",
    "signedByBaseTypographyParagraphSmall6",
    "text71",
    "spacer60"
  ],
  signedByBaseMenuItemSearchMediumNoneEnabled3: [
    "signedByBaseMenuItemSearchMediumNoneEnabled3"
  ],
  searchField3: [
    "searchField3",
    "signedByBaseSearchFieldMediumEnabled3",
    "inputElementLabel3",
    "signedByBaseInputElementLabelMedium3",
    "typography29",
    "signedByBaseTypographyLabelMedium15",
    "text66",
    "spacer56",
    "characterCountFrame3",
    "heart22",
    "typography30",
    "signedByBaseTypographyLabelMedium16",
    "text67",
    "spacer57",
    "inputElementTextField6",
    "signedByBaseInputElementTextFieldMediumEnabled3",
    "leadingArtworkContainer12",
    "search3",
    "leadingLabelContainer12",
    "leadingLabel12",
    "signedByBaseTypographyLabelMedium17",
    "text68",
    "spacer58",
    "inputElementContentText12",
    "signedByBaseInputElementContentTextMediumOff6",
    "text69",
    "trailingLabelEnhancer12",
    "trailingLabel12",
    "signedByBaseTypographyLabelMedium18",
    "text70",
    "spacer59",
    "trailingArtworkContainer12",
    "trailingArtwork12",
    "inputElementHint6",
    "heart23",
    "hint6",
    "signedByBaseTypographyParagraphSmall6",
    "text71",
    "spacer60"
  ],
  signedByBaseSearchFieldMediumEnabled3: [
    "signedByBaseSearchFieldMediumEnabled3"
  ],
  inputElementLabel3: [
    "inputElementLabel3",
    "signedByBaseInputElementLabelMedium3",
    "typography29",
    "signedByBaseTypographyLabelMedium15",
    "text66",
    "spacer56",
    "characterCountFrame3",
    "heart22",
    "typography30",
    "signedByBaseTypographyLabelMedium16",
    "text67",
    "spacer57"
  ],
  signedByBaseInputElementLabelMedium3: [
    "signedByBaseInputElementLabelMedium3"
  ],
  typography29: [
    "typography29",
    "signedByBaseTypographyLabelMedium15",
    "text66",
    "spacer56"
  ],
  signedByBaseTypographyLabelMedium15: ["signedByBaseTypographyLabelMedium15"],
  text66: ["text66"],
  spacer56: ["spacer56"],
  characterCountFrame3: [
    "characterCountFrame3",
    "heart22",
    "typography30",
    "signedByBaseTypographyLabelMedium16",
    "text67",
    "spacer57"
  ],
  heart22: ["heart22"],
  typography30: [
    "typography30",
    "signedByBaseTypographyLabelMedium16",
    "text67",
    "spacer57"
  ],
  signedByBaseTypographyLabelMedium16: ["signedByBaseTypographyLabelMedium16"],
  text67: ["text67"],
  spacer57: ["spacer57"],
  inputElementTextField6: [
    "inputElementTextField6",
    "signedByBaseInputElementTextFieldMediumEnabled3",
    "leadingArtworkContainer12",
    "search3",
    "leadingLabelContainer12",
    "leadingLabel12",
    "signedByBaseTypographyLabelMedium17",
    "text68",
    "spacer58",
    "inputElementContentText12",
    "signedByBaseInputElementContentTextMediumOff6",
    "text69",
    "trailingLabelEnhancer12",
    "trailingLabel12",
    "signedByBaseTypographyLabelMedium18",
    "text70",
    "spacer59",
    "trailingArtworkContainer12",
    "trailingArtwork12"
  ],
  signedByBaseInputElementTextFieldMediumEnabled3: [
    "signedByBaseInputElementTextFieldMediumEnabled3"
  ],
  leadingArtworkContainer12: ["leadingArtworkContainer12", "search3"],
  search3: ["search3"],
  leadingLabelContainer12: [
    "leadingLabelContainer12",
    "leadingLabel12",
    "signedByBaseTypographyLabelMedium17",
    "text68",
    "spacer58"
  ],
  leadingLabel12: [
    "leadingLabel12",
    "signedByBaseTypographyLabelMedium17",
    "text68",
    "spacer58"
  ],
  signedByBaseTypographyLabelMedium17: ["signedByBaseTypographyLabelMedium17"],
  text68: ["text68"],
  spacer58: ["spacer58"],
  inputElementContentText12: [
    "inputElementContentText12",
    "signedByBaseInputElementContentTextMediumOff6",
    "text69"
  ],
  signedByBaseInputElementContentTextMediumOff6: [
    "signedByBaseInputElementContentTextMediumOff6"
  ],
  text69: ["text69"],
  trailingLabelEnhancer12: [
    "trailingLabelEnhancer12",
    "trailingLabel12",
    "signedByBaseTypographyLabelMedium18",
    "text70",
    "spacer59"
  ],
  trailingLabel12: [
    "trailingLabel12",
    "signedByBaseTypographyLabelMedium18",
    "text70",
    "spacer59"
  ],
  signedByBaseTypographyLabelMedium18: ["signedByBaseTypographyLabelMedium18"],
  text70: ["text70"],
  spacer59: ["spacer59"],
  trailingArtworkContainer12: [
    "trailingArtworkContainer12",
    "trailingArtwork12"
  ],
  trailingArtwork12: ["trailingArtwork12"],
  inputElementHint6: [
    "inputElementHint6",
    "heart23",
    "hint6",
    "signedByBaseTypographyParagraphSmall6",
    "text71",
    "spacer60"
  ],
  heart23: ["heart23"],
  hint6: [
    "hint6",
    "signedByBaseTypographyParagraphSmall6",
    "text71",
    "spacer60"
  ],
  signedByBaseTypographyParagraphSmall6: [
    "signedByBaseTypographyParagraphSmall6"
  ],
  text71: ["text71"],
  spacer60: ["spacer60"],
  menuItem12: [
    "menuItem12",
    "signedByBaseMenuItemOptionMediumStandardEnabled9",
    "menuItemControlMediumCheckboxUnchecked9",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked9",
    "icon9",
    "leadingEnhancer9",
    "heart24",
    "textFrame9",
    "leadingText9",
    "typography31",
    "signedByBaseTypographyParagraphMedium25",
    "text72",
    "spacer61",
    "typography32",
    "signedByBaseTypographyParagraphMedium26",
    "text73",
    "spacer62",
    "typography33",
    "signedByBaseTypographyParagraphMedium27",
    "spacer63",
    "trailingEnhancer9",
    "heart25"
  ],
  signedByBaseMenuItemOptionMediumStandardEnabled9: [
    "signedByBaseMenuItemOptionMediumStandardEnabled9"
  ],
  menuItemControlMediumCheckboxUnchecked9: [
    "menuItemControlMediumCheckboxUnchecked9",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked9",
    "icon9"
  ],
  signedByBaseMenuItemControlMediumCheckboxUnchecked9: [
    "signedByBaseMenuItemControlMediumCheckboxUnchecked9"
  ],
  icon9: ["icon9"],
  leadingEnhancer9: ["leadingEnhancer9", "heart24"],
  heart24: ["heart24"],
  textFrame9: [
    "textFrame9",
    "leadingText9",
    "typography31",
    "signedByBaseTypographyParagraphMedium25",
    "text72",
    "spacer61",
    "typography32",
    "signedByBaseTypographyParagraphMedium26",
    "text73",
    "spacer62",
    "typography33",
    "signedByBaseTypographyParagraphMedium27",
    "spacer63"
  ],
  leadingText9: [
    "leadingText9",
    "typography31",
    "signedByBaseTypographyParagraphMedium25",
    "text72",
    "spacer61",
    "typography32",
    "signedByBaseTypographyParagraphMedium26",
    "text73",
    "spacer62"
  ],
  typography31: [
    "typography31",
    "signedByBaseTypographyParagraphMedium25",
    "text72",
    "spacer61"
  ],
  signedByBaseTypographyParagraphMedium25: [
    "signedByBaseTypographyParagraphMedium25"
  ],
  text72: ["text72"],
  spacer61: ["spacer61"],
  typography32: [
    "typography32",
    "signedByBaseTypographyParagraphMedium26",
    "text73",
    "spacer62"
  ],
  signedByBaseTypographyParagraphMedium26: [
    "signedByBaseTypographyParagraphMedium26"
  ],
  text73: ["text73"],
  spacer62: ["spacer62"],
  typography33: [
    "typography33",
    "signedByBaseTypographyParagraphMedium27",
    "spacer63"
  ],
  signedByBaseTypographyParagraphMedium27: [
    "signedByBaseTypographyParagraphMedium27"
  ],
  spacer63: ["spacer63"],
  trailingEnhancer9: ["trailingEnhancer9", "heart25"],
  heart25: ["heart25"],
  menuItem13: [
    "menuItem13",
    "signedByBaseMenuItemOptionMediumStandardEnabled10",
    "menuItemControlMediumCheckboxUnchecked10",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked10",
    "icon10",
    "leadingEnhancer10",
    "heart26",
    "textFrame10",
    "leadingText10",
    "typography34",
    "signedByBaseTypographyParagraphMedium28",
    "text74",
    "spacer64",
    "typography35",
    "signedByBaseTypographyParagraphMedium29",
    "text75",
    "spacer65",
    "typography36",
    "signedByBaseTypographyParagraphMedium30",
    "spacer66",
    "trailingEnhancer10",
    "checkmarkSmall3"
  ],
  signedByBaseMenuItemOptionMediumStandardEnabled10: [
    "signedByBaseMenuItemOptionMediumStandardEnabled10"
  ],
  menuItemControlMediumCheckboxUnchecked10: [
    "menuItemControlMediumCheckboxUnchecked10",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked10",
    "icon10"
  ],
  signedByBaseMenuItemControlMediumCheckboxUnchecked10: [
    "signedByBaseMenuItemControlMediumCheckboxUnchecked10"
  ],
  icon10: ["icon10"],
  leadingEnhancer10: ["leadingEnhancer10", "heart26"],
  heart26: ["heart26"],
  textFrame10: [
    "textFrame10",
    "leadingText10",
    "typography34",
    "signedByBaseTypographyParagraphMedium28",
    "text74",
    "spacer64",
    "typography35",
    "signedByBaseTypographyParagraphMedium29",
    "text75",
    "spacer65",
    "typography36",
    "signedByBaseTypographyParagraphMedium30",
    "spacer66"
  ],
  leadingText10: [
    "leadingText10",
    "typography34",
    "signedByBaseTypographyParagraphMedium28",
    "text74",
    "spacer64",
    "typography35",
    "signedByBaseTypographyParagraphMedium29",
    "text75",
    "spacer65"
  ],
  typography34: [
    "typography34",
    "signedByBaseTypographyParagraphMedium28",
    "text74",
    "spacer64"
  ],
  signedByBaseTypographyParagraphMedium28: [
    "signedByBaseTypographyParagraphMedium28"
  ],
  text74: ["text74"],
  spacer64: ["spacer64"],
  typography35: [
    "typography35",
    "signedByBaseTypographyParagraphMedium29",
    "text75",
    "spacer65"
  ],
  signedByBaseTypographyParagraphMedium29: [
    "signedByBaseTypographyParagraphMedium29"
  ],
  text75: ["text75"],
  spacer65: ["spacer65"],
  typography36: [
    "typography36",
    "signedByBaseTypographyParagraphMedium30",
    "spacer66"
  ],
  signedByBaseTypographyParagraphMedium30: [
    "signedByBaseTypographyParagraphMedium30"
  ],
  spacer66: ["spacer66"],
  trailingEnhancer10: ["trailingEnhancer10", "checkmarkSmall3"],
  checkmarkSmall3: ["checkmarkSmall3"],
  menuItem14: [
    "menuItem14",
    "signedByBaseMenuItemOptionMediumStandardEnabled11",
    "menuItemControlMediumCheckboxUnchecked11",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked11",
    "icon11",
    "leadingEnhancer11",
    "heart27",
    "textFrame11",
    "leadingText11",
    "typography37",
    "signedByBaseTypographyParagraphMedium31",
    "text76",
    "spacer67",
    "typography38",
    "signedByBaseTypographyParagraphMedium32",
    "text77",
    "spacer68",
    "typography39",
    "signedByBaseTypographyParagraphMedium33",
    "spacer69",
    "trailingEnhancer11",
    "heart28"
  ],
  signedByBaseMenuItemOptionMediumStandardEnabled11: [
    "signedByBaseMenuItemOptionMediumStandardEnabled11"
  ],
  menuItemControlMediumCheckboxUnchecked11: [
    "menuItemControlMediumCheckboxUnchecked11",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked11",
    "icon11"
  ],
  signedByBaseMenuItemControlMediumCheckboxUnchecked11: [
    "signedByBaseMenuItemControlMediumCheckboxUnchecked11"
  ],
  icon11: ["icon11"],
  leadingEnhancer11: ["leadingEnhancer11", "heart27"],
  heart27: ["heart27"],
  textFrame11: [
    "textFrame11",
    "leadingText11",
    "typography37",
    "signedByBaseTypographyParagraphMedium31",
    "text76",
    "spacer67",
    "typography38",
    "signedByBaseTypographyParagraphMedium32",
    "text77",
    "spacer68",
    "typography39",
    "signedByBaseTypographyParagraphMedium33",
    "spacer69"
  ],
  leadingText11: [
    "leadingText11",
    "typography37",
    "signedByBaseTypographyParagraphMedium31",
    "text76",
    "spacer67",
    "typography38",
    "signedByBaseTypographyParagraphMedium32",
    "text77",
    "spacer68"
  ],
  typography37: [
    "typography37",
    "signedByBaseTypographyParagraphMedium31",
    "text76",
    "spacer67"
  ],
  signedByBaseTypographyParagraphMedium31: [
    "signedByBaseTypographyParagraphMedium31"
  ],
  text76: ["text76"],
  spacer67: ["spacer67"],
  typography38: [
    "typography38",
    "signedByBaseTypographyParagraphMedium32",
    "text77",
    "spacer68"
  ],
  signedByBaseTypographyParagraphMedium32: [
    "signedByBaseTypographyParagraphMedium32"
  ],
  text77: ["text77"],
  spacer68: ["spacer68"],
  typography39: [
    "typography39",
    "signedByBaseTypographyParagraphMedium33",
    "spacer69"
  ],
  signedByBaseTypographyParagraphMedium33: [
    "signedByBaseTypographyParagraphMedium33"
  ],
  spacer69: ["spacer69"],
  trailingEnhancer11: ["trailingEnhancer11", "heart28"],
  heart28: ["heart28"],
  menuItem15: [
    "menuItem15",
    "signedByBaseMenuItemOptionMediumStandardEnabled12",
    "menuItemControlMediumCheckboxUnchecked12",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked12",
    "icon12",
    "leadingEnhancer12",
    "heart29",
    "textFrame12",
    "leadingText12",
    "typography40",
    "signedByBaseTypographyParagraphMedium34",
    "text78",
    "spacer70",
    "typography41",
    "signedByBaseTypographyParagraphMedium35",
    "text79",
    "spacer71",
    "typography42",
    "signedByBaseTypographyParagraphMedium36",
    "spacer72",
    "trailingEnhancer12",
    "heart30"
  ],
  signedByBaseMenuItemOptionMediumStandardEnabled12: [
    "signedByBaseMenuItemOptionMediumStandardEnabled12"
  ],
  menuItemControlMediumCheckboxUnchecked12: [
    "menuItemControlMediumCheckboxUnchecked12",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked12",
    "icon12"
  ],
  signedByBaseMenuItemControlMediumCheckboxUnchecked12: [
    "signedByBaseMenuItemControlMediumCheckboxUnchecked12"
  ],
  icon12: ["icon12"],
  leadingEnhancer12: ["leadingEnhancer12", "heart29"],
  heart29: ["heart29"],
  textFrame12: [
    "textFrame12",
    "leadingText12",
    "typography40",
    "signedByBaseTypographyParagraphMedium34",
    "text78",
    "spacer70",
    "typography41",
    "signedByBaseTypographyParagraphMedium35",
    "text79",
    "spacer71",
    "typography42",
    "signedByBaseTypographyParagraphMedium36",
    "spacer72"
  ],
  leadingText12: [
    "leadingText12",
    "typography40",
    "signedByBaseTypographyParagraphMedium34",
    "text78",
    "spacer70",
    "typography41",
    "signedByBaseTypographyParagraphMedium35",
    "text79",
    "spacer71"
  ],
  typography40: [
    "typography40",
    "signedByBaseTypographyParagraphMedium34",
    "text78",
    "spacer70"
  ],
  signedByBaseTypographyParagraphMedium34: [
    "signedByBaseTypographyParagraphMedium34"
  ],
  text78: ["text78"],
  spacer70: ["spacer70"],
  typography41: [
    "typography41",
    "signedByBaseTypographyParagraphMedium35",
    "text79",
    "spacer71"
  ],
  signedByBaseTypographyParagraphMedium35: [
    "signedByBaseTypographyParagraphMedium35"
  ],
  text79: ["text79"],
  spacer71: ["spacer71"],
  typography42: [
    "typography42",
    "signedByBaseTypographyParagraphMedium36",
    "spacer72"
  ],
  signedByBaseTypographyParagraphMedium36: [
    "signedByBaseTypographyParagraphMedium36"
  ],
  spacer72: ["spacer72"],
  trailingEnhancer12: ["trailingEnhancer12", "heart30"],
  heart30: ["heart30"],
  scrollBar3: ["scrollBar3"],
  model3: ["model3"],
  buttons3: [
    "buttons3",
    "button9",
    "frame1073713926",
    "frame1073713932",
    "button10",
    "button11",
    "button12"
  ],
  button9: ["button9"],
  frame1073713926: ["frame1073713926"],
  frame1073713932: ["frame1073713932", "button10", "button11", "button12"],
  button10: ["button10"],
  button11: ["button11"],
  button12: ["button12"],
  duplicate: [
    "duplicate",
    "frame1437254022",
    "name9",
    "frame1437254023",
    "formDuplicateModel",
    "content4",
    "titre6",
    "texinput24",
    "date4",
    "label9",
    "timePicker10",
    "type6",
    "budget6",
    "comments4",
    "input10",
    "name8",
    "datePickerWeb4",
    "inputSelect4",
    "signedByBaseFieldGroupSmall4",
    "endDateCalendar4",
    "inputElementTextField7",
    "signedByBaseInputElementTextFieldSmallEnabled4",
    "leadingArtworkContainer13",
    "leadingArtwork7",
    "leadingLabelContainer13",
    "leadingLabel13",
    "signedByBaseTypographyLabelSmall7",
    "text80",
    "spacer73",
    "inputElementContentText13",
    "signedByBaseInputElementContentTextSmallOff4",
    "text81",
    "trailingLabelEnhancer13",
    "trailingLabel13",
    "signedByBaseTypographyLabelSmall8",
    "text82",
    "spacer74",
    "trailingArtworkContainer13",
    "trailingArtwork13",
    "calendar4",
    "signedByBaseInputElementSelectXSmallWebSingleDefaultEnabled4",
    "leadingArtworkContainer14",
    "text83",
    "leadingLabelContainer14",
    "leadingLabel14",
    "signedByBaseTypographyLabelXSmall7",
    "text84",
    "spacer75",
    "inputElementContentText14",
    "signedByBaseInputElementContentTextXSmallWebOff4",
    "text85",
    "trailingLabelEnhancer14",
    "trailingLabel14",
    "signedByBaseTypographyLabelXSmall8",
    "text86",
    "spacer76",
    "trailingArtworkContainer14",
    "trailingArtwork14",
    "selectIndicatorContainer7",
    "chevronIcon7",
    "inputElementHint7",
    "heart31",
    "hint7",
    "signedByBaseTypographyParagraphSmall7",
    "text87",
    "spacer77",
    "inputElementSelect4",
    "signedByBaseInputElementSelectMediumSingleDefaultActive4",
    "selectFrame4",
    "leadingArtworkContainer15",
    "leadingArtwork8",
    "leadingLabelContainer15",
    "leadingLabel15",
    "signedByBaseTypographyLabelMedium19",
    "text88",
    "spacer78",
    "inputElementContentText15",
    "signedByBaseInputElementContentTextMediumOff7",
    "text89",
    "trailingLabelEnhancer15",
    "trailingLabel15",
    "signedByBaseTypographyLabelMedium20",
    "text90",
    "spacer79",
    "trailingArtworkContainer15",
    "trailingArtwork15",
    "selectIndicatorContainer8",
    "chevronIcon8",
    "menu4",
    "signedByBaseMenuListMedium4",
    "menuItem16",
    "signedByBaseMenuItemSearchMediumNoneEnabled4",
    "searchField4",
    "signedByBaseSearchFieldMediumEnabled4",
    "inputElementLabel4",
    "signedByBaseInputElementLabelMedium4",
    "typography43",
    "signedByBaseTypographyLabelMedium21",
    "text91",
    "spacer80",
    "characterCountFrame4",
    "heart32",
    "typography44",
    "signedByBaseTypographyLabelMedium22",
    "text92",
    "spacer81",
    "inputElementTextField8",
    "signedByBaseInputElementTextFieldMediumEnabled4",
    "leadingArtworkContainer16",
    "search4",
    "leadingLabelContainer16",
    "leadingLabel16",
    "signedByBaseTypographyLabelMedium23",
    "text93",
    "spacer82",
    "inputElementContentText16",
    "signedByBaseInputElementContentTextMediumOff8",
    "text94",
    "trailingLabelEnhancer16",
    "trailingLabel16",
    "signedByBaseTypographyLabelMedium24",
    "text95",
    "spacer83",
    "trailingArtworkContainer16",
    "trailingArtwork16",
    "inputElementHint8",
    "heart33",
    "hint8",
    "signedByBaseTypographyParagraphSmall8",
    "text96",
    "spacer84",
    "menuItem17",
    "signedByBaseMenuItemOptionMediumStandardEnabled13",
    "menuItemControlMediumCheckboxUnchecked13",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked13",
    "icon13",
    "leadingEnhancer13",
    "heart34",
    "textFrame13",
    "leadingText13",
    "typography45",
    "signedByBaseTypographyParagraphMedium37",
    "text97",
    "spacer85",
    "typography46",
    "signedByBaseTypographyParagraphMedium38",
    "text98",
    "spacer86",
    "typography47",
    "signedByBaseTypographyParagraphMedium39",
    "spacer87",
    "trailingEnhancer13",
    "heart35",
    "menuItem18",
    "signedByBaseMenuItemOptionMediumStandardEnabled14",
    "menuItemControlMediumCheckboxUnchecked14",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked14",
    "icon14",
    "leadingEnhancer14",
    "heart36",
    "textFrame14",
    "leadingText14",
    "typography48",
    "signedByBaseTypographyParagraphMedium40",
    "text99",
    "spacer88",
    "typography49",
    "signedByBaseTypographyParagraphMedium41",
    "text100",
    "spacer89",
    "typography50",
    "signedByBaseTypographyParagraphMedium42",
    "spacer90",
    "trailingEnhancer14",
    "checkmarkSmall4",
    "menuItem19",
    "signedByBaseMenuItemOptionMediumStandardEnabled15",
    "menuItemControlMediumCheckboxUnchecked15",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked15",
    "icon15",
    "leadingEnhancer15",
    "heart37",
    "textFrame15",
    "leadingText15",
    "typography51",
    "signedByBaseTypographyParagraphMedium43",
    "text101",
    "spacer91",
    "typography52",
    "signedByBaseTypographyParagraphMedium44",
    "text102",
    "spacer92",
    "typography53",
    "signedByBaseTypographyParagraphMedium45",
    "spacer93",
    "trailingEnhancer15",
    "heart38",
    "menuItem20",
    "signedByBaseMenuItemOptionMediumStandardEnabled16",
    "menuItemControlMediumCheckboxUnchecked16",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked16",
    "icon16",
    "leadingEnhancer16",
    "heart39",
    "textFrame16",
    "leadingText16",
    "typography54",
    "signedByBaseTypographyParagraphMedium46",
    "text103",
    "spacer94",
    "typography55",
    "signedByBaseTypographyParagraphMedium47",
    "text104",
    "spacer95",
    "typography56",
    "signedByBaseTypographyParagraphMedium48",
    "spacer96",
    "trailingEnhancer16",
    "heart40",
    "scrollBar4",
    "model6",
    "buttons4",
    "button13",
    "frame1073713927",
    "frame1073713933",
    "button14",
    "button15",
    "button16"
  ],
  frame1437254022: ["frame1437254022", "name9", "frame1437254023"],
  name9: ["name9"],
  frame1437254023: ["frame1437254023"],
  formDuplicateModel: ["formDuplicateModel"],
  content4: [
    "content4",
    "titre6",
    "texinput24",
    "date4",
    "label9",
    "timePicker10",
    "type6",
    "budget6",
    "comments4",
    "input10",
    "name8",
    "datePickerWeb4",
    "inputSelect4",
    "signedByBaseFieldGroupSmall4",
    "endDateCalendar4",
    "inputElementTextField7",
    "signedByBaseInputElementTextFieldSmallEnabled4",
    "leadingArtworkContainer13",
    "leadingArtwork7",
    "leadingLabelContainer13",
    "leadingLabel13",
    "signedByBaseTypographyLabelSmall7",
    "text80",
    "spacer73",
    "inputElementContentText13",
    "signedByBaseInputElementContentTextSmallOff4",
    "text81",
    "trailingLabelEnhancer13",
    "trailingLabel13",
    "signedByBaseTypographyLabelSmall8",
    "text82",
    "spacer74",
    "trailingArtworkContainer13",
    "trailingArtwork13",
    "calendar4",
    "signedByBaseInputElementSelectXSmallWebSingleDefaultEnabled4",
    "leadingArtworkContainer14",
    "text83",
    "leadingLabelContainer14",
    "leadingLabel14",
    "signedByBaseTypographyLabelXSmall7",
    "text84",
    "spacer75",
    "inputElementContentText14",
    "signedByBaseInputElementContentTextXSmallWebOff4",
    "text85",
    "trailingLabelEnhancer14",
    "trailingLabel14",
    "signedByBaseTypographyLabelXSmall8",
    "text86",
    "spacer76",
    "trailingArtworkContainer14",
    "trailingArtwork14",
    "selectIndicatorContainer7",
    "chevronIcon7",
    "inputElementHint7",
    "heart31",
    "hint7",
    "signedByBaseTypographyParagraphSmall7",
    "text87",
    "spacer77",
    "inputElementSelect4",
    "signedByBaseInputElementSelectMediumSingleDefaultActive4",
    "selectFrame4",
    "leadingArtworkContainer15",
    "leadingArtwork8",
    "leadingLabelContainer15",
    "leadingLabel15",
    "signedByBaseTypographyLabelMedium19",
    "text88",
    "spacer78",
    "inputElementContentText15",
    "signedByBaseInputElementContentTextMediumOff7",
    "text89",
    "trailingLabelEnhancer15",
    "trailingLabel15",
    "signedByBaseTypographyLabelMedium20",
    "text90",
    "spacer79",
    "trailingArtworkContainer15",
    "trailingArtwork15",
    "selectIndicatorContainer8",
    "chevronIcon8",
    "menu4",
    "signedByBaseMenuListMedium4",
    "menuItem16",
    "signedByBaseMenuItemSearchMediumNoneEnabled4",
    "searchField4",
    "signedByBaseSearchFieldMediumEnabled4",
    "inputElementLabel4",
    "signedByBaseInputElementLabelMedium4",
    "typography43",
    "signedByBaseTypographyLabelMedium21",
    "text91",
    "spacer80",
    "characterCountFrame4",
    "heart32",
    "typography44",
    "signedByBaseTypographyLabelMedium22",
    "text92",
    "spacer81",
    "inputElementTextField8",
    "signedByBaseInputElementTextFieldMediumEnabled4",
    "leadingArtworkContainer16",
    "search4",
    "leadingLabelContainer16",
    "leadingLabel16",
    "signedByBaseTypographyLabelMedium23",
    "text93",
    "spacer82",
    "inputElementContentText16",
    "signedByBaseInputElementContentTextMediumOff8",
    "text94",
    "trailingLabelEnhancer16",
    "trailingLabel16",
    "signedByBaseTypographyLabelMedium24",
    "text95",
    "spacer83",
    "trailingArtworkContainer16",
    "trailingArtwork16",
    "inputElementHint8",
    "heart33",
    "hint8",
    "signedByBaseTypographyParagraphSmall8",
    "text96",
    "spacer84",
    "menuItem17",
    "signedByBaseMenuItemOptionMediumStandardEnabled13",
    "menuItemControlMediumCheckboxUnchecked13",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked13",
    "icon13",
    "leadingEnhancer13",
    "heart34",
    "textFrame13",
    "leadingText13",
    "typography45",
    "signedByBaseTypographyParagraphMedium37",
    "text97",
    "spacer85",
    "typography46",
    "signedByBaseTypographyParagraphMedium38",
    "text98",
    "spacer86",
    "typography47",
    "signedByBaseTypographyParagraphMedium39",
    "spacer87",
    "trailingEnhancer13",
    "heart35",
    "menuItem18",
    "signedByBaseMenuItemOptionMediumStandardEnabled14",
    "menuItemControlMediumCheckboxUnchecked14",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked14",
    "icon14",
    "leadingEnhancer14",
    "heart36",
    "textFrame14",
    "leadingText14",
    "typography48",
    "signedByBaseTypographyParagraphMedium40",
    "text99",
    "spacer88",
    "typography49",
    "signedByBaseTypographyParagraphMedium41",
    "text100",
    "spacer89",
    "typography50",
    "signedByBaseTypographyParagraphMedium42",
    "spacer90",
    "trailingEnhancer14",
    "checkmarkSmall4",
    "menuItem19",
    "signedByBaseMenuItemOptionMediumStandardEnabled15",
    "menuItemControlMediumCheckboxUnchecked15",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked15",
    "icon15",
    "leadingEnhancer15",
    "heart37",
    "textFrame15",
    "leadingText15",
    "typography51",
    "signedByBaseTypographyParagraphMedium43",
    "text101",
    "spacer91",
    "typography52",
    "signedByBaseTypographyParagraphMedium44",
    "text102",
    "spacer92",
    "typography53",
    "signedByBaseTypographyParagraphMedium45",
    "spacer93",
    "trailingEnhancer15",
    "heart38",
    "menuItem20",
    "signedByBaseMenuItemOptionMediumStandardEnabled16",
    "menuItemControlMediumCheckboxUnchecked16",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked16",
    "icon16",
    "leadingEnhancer16",
    "heart39",
    "textFrame16",
    "leadingText16",
    "typography54",
    "signedByBaseTypographyParagraphMedium46",
    "text103",
    "spacer94",
    "typography55",
    "signedByBaseTypographyParagraphMedium47",
    "text104",
    "spacer95",
    "typography56",
    "signedByBaseTypographyParagraphMedium48",
    "spacer96",
    "trailingEnhancer16",
    "heart40",
    "scrollBar4",
    "model6",
    "buttons4",
    "button13",
    "frame1073713927",
    "frame1073713933",
    "button14",
    "button15",
    "button16"
  ],
  titre6: ["titre6"],
  texinput24: ["texinput24"],
  date4: ["date4", "label9", "timePicker10"],
  label9: ["label9"],
  timePicker10: ["timePicker10"],
  type6: ["type6"],
  budget6: ["budget6"],
  comments4: ["comments4"],
  input10: [
    "input10",
    "name8",
    "datePickerWeb4",
    "inputSelect4",
    "signedByBaseFieldGroupSmall4",
    "endDateCalendar4",
    "inputElementTextField7",
    "signedByBaseInputElementTextFieldSmallEnabled4",
    "leadingArtworkContainer13",
    "leadingArtwork7",
    "leadingLabelContainer13",
    "leadingLabel13",
    "signedByBaseTypographyLabelSmall7",
    "text80",
    "spacer73",
    "inputElementContentText13",
    "signedByBaseInputElementContentTextSmallOff4",
    "text81",
    "trailingLabelEnhancer13",
    "trailingLabel13",
    "signedByBaseTypographyLabelSmall8",
    "text82",
    "spacer74",
    "trailingArtworkContainer13",
    "trailingArtwork13",
    "calendar4",
    "signedByBaseInputElementSelectXSmallWebSingleDefaultEnabled4",
    "leadingArtworkContainer14",
    "text83",
    "leadingLabelContainer14",
    "leadingLabel14",
    "signedByBaseTypographyLabelXSmall7",
    "text84",
    "spacer75",
    "inputElementContentText14",
    "signedByBaseInputElementContentTextXSmallWebOff4",
    "text85",
    "trailingLabelEnhancer14",
    "trailingLabel14",
    "signedByBaseTypographyLabelXSmall8",
    "text86",
    "spacer76",
    "trailingArtworkContainer14",
    "trailingArtwork14",
    "selectIndicatorContainer7",
    "chevronIcon7",
    "inputElementHint7",
    "heart31",
    "hint7",
    "signedByBaseTypographyParagraphSmall7",
    "text87",
    "spacer77",
    "inputElementSelect4",
    "signedByBaseInputElementSelectMediumSingleDefaultActive4",
    "selectFrame4",
    "leadingArtworkContainer15",
    "leadingArtwork8",
    "leadingLabelContainer15",
    "leadingLabel15",
    "signedByBaseTypographyLabelMedium19",
    "text88",
    "spacer78",
    "inputElementContentText15",
    "signedByBaseInputElementContentTextMediumOff7",
    "text89",
    "trailingLabelEnhancer15",
    "trailingLabel15",
    "signedByBaseTypographyLabelMedium20",
    "text90",
    "spacer79",
    "trailingArtworkContainer15",
    "trailingArtwork15",
    "selectIndicatorContainer8",
    "chevronIcon8",
    "menu4",
    "signedByBaseMenuListMedium4",
    "menuItem16",
    "signedByBaseMenuItemSearchMediumNoneEnabled4",
    "searchField4",
    "signedByBaseSearchFieldMediumEnabled4",
    "inputElementLabel4",
    "signedByBaseInputElementLabelMedium4",
    "typography43",
    "signedByBaseTypographyLabelMedium21",
    "text91",
    "spacer80",
    "characterCountFrame4",
    "heart32",
    "typography44",
    "signedByBaseTypographyLabelMedium22",
    "text92",
    "spacer81",
    "inputElementTextField8",
    "signedByBaseInputElementTextFieldMediumEnabled4",
    "leadingArtworkContainer16",
    "search4",
    "leadingLabelContainer16",
    "leadingLabel16",
    "signedByBaseTypographyLabelMedium23",
    "text93",
    "spacer82",
    "inputElementContentText16",
    "signedByBaseInputElementContentTextMediumOff8",
    "text94",
    "trailingLabelEnhancer16",
    "trailingLabel16",
    "signedByBaseTypographyLabelMedium24",
    "text95",
    "spacer83",
    "trailingArtworkContainer16",
    "trailingArtwork16",
    "inputElementHint8",
    "heart33",
    "hint8",
    "signedByBaseTypographyParagraphSmall8",
    "text96",
    "spacer84",
    "menuItem17",
    "signedByBaseMenuItemOptionMediumStandardEnabled13",
    "menuItemControlMediumCheckboxUnchecked13",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked13",
    "icon13",
    "leadingEnhancer13",
    "heart34",
    "textFrame13",
    "leadingText13",
    "typography45",
    "signedByBaseTypographyParagraphMedium37",
    "text97",
    "spacer85",
    "typography46",
    "signedByBaseTypographyParagraphMedium38",
    "text98",
    "spacer86",
    "typography47",
    "signedByBaseTypographyParagraphMedium39",
    "spacer87",
    "trailingEnhancer13",
    "heart35",
    "menuItem18",
    "signedByBaseMenuItemOptionMediumStandardEnabled14",
    "menuItemControlMediumCheckboxUnchecked14",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked14",
    "icon14",
    "leadingEnhancer14",
    "heart36",
    "textFrame14",
    "leadingText14",
    "typography48",
    "signedByBaseTypographyParagraphMedium40",
    "text99",
    "spacer88",
    "typography49",
    "signedByBaseTypographyParagraphMedium41",
    "text100",
    "spacer89",
    "typography50",
    "signedByBaseTypographyParagraphMedium42",
    "spacer90",
    "trailingEnhancer14",
    "checkmarkSmall4",
    "menuItem19",
    "signedByBaseMenuItemOptionMediumStandardEnabled15",
    "menuItemControlMediumCheckboxUnchecked15",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked15",
    "icon15",
    "leadingEnhancer15",
    "heart37",
    "textFrame15",
    "leadingText15",
    "typography51",
    "signedByBaseTypographyParagraphMedium43",
    "text101",
    "spacer91",
    "typography52",
    "signedByBaseTypographyParagraphMedium44",
    "text102",
    "spacer92",
    "typography53",
    "signedByBaseTypographyParagraphMedium45",
    "spacer93",
    "trailingEnhancer15",
    "heart38",
    "menuItem20",
    "signedByBaseMenuItemOptionMediumStandardEnabled16",
    "menuItemControlMediumCheckboxUnchecked16",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked16",
    "icon16",
    "leadingEnhancer16",
    "heart39",
    "textFrame16",
    "leadingText16",
    "typography54",
    "signedByBaseTypographyParagraphMedium46",
    "text103",
    "spacer94",
    "typography55",
    "signedByBaseTypographyParagraphMedium47",
    "text104",
    "spacer95",
    "typography56",
    "signedByBaseTypographyParagraphMedium48",
    "spacer96",
    "trailingEnhancer16",
    "heart40",
    "scrollBar4"
  ],
  name8: ["name8"],
  datePickerWeb4: [
    "datePickerWeb4",
    "inputSelect4",
    "signedByBaseFieldGroupSmall4",
    "endDateCalendar4",
    "inputElementTextField7",
    "signedByBaseInputElementTextFieldSmallEnabled4",
    "leadingArtworkContainer13",
    "leadingArtwork7",
    "leadingLabelContainer13",
    "leadingLabel13",
    "signedByBaseTypographyLabelSmall7",
    "text80",
    "spacer73",
    "inputElementContentText13",
    "signedByBaseInputElementContentTextSmallOff4",
    "text81",
    "trailingLabelEnhancer13",
    "trailingLabel13",
    "signedByBaseTypographyLabelSmall8",
    "text82",
    "spacer74",
    "trailingArtworkContainer13",
    "trailingArtwork13",
    "calendar4",
    "signedByBaseInputElementSelectXSmallWebSingleDefaultEnabled4",
    "leadingArtworkContainer14",
    "text83",
    "leadingLabelContainer14",
    "leadingLabel14",
    "signedByBaseTypographyLabelXSmall7",
    "text84",
    "spacer75",
    "inputElementContentText14",
    "signedByBaseInputElementContentTextXSmallWebOff4",
    "text85",
    "trailingLabelEnhancer14",
    "trailingLabel14",
    "signedByBaseTypographyLabelXSmall8",
    "text86",
    "spacer76",
    "trailingArtworkContainer14",
    "trailingArtwork14",
    "selectIndicatorContainer7",
    "chevronIcon7",
    "inputElementHint7",
    "heart31",
    "hint7",
    "signedByBaseTypographyParagraphSmall7",
    "text87",
    "spacer77"
  ],
  inputSelect4: [
    "inputSelect4",
    "signedByBaseFieldGroupSmall4",
    "endDateCalendar4",
    "inputElementTextField7",
    "signedByBaseInputElementTextFieldSmallEnabled4",
    "leadingArtworkContainer13",
    "leadingArtwork7",
    "leadingLabelContainer13",
    "leadingLabel13",
    "signedByBaseTypographyLabelSmall7",
    "text80",
    "spacer73",
    "inputElementContentText13",
    "signedByBaseInputElementContentTextSmallOff4",
    "text81",
    "trailingLabelEnhancer13",
    "trailingLabel13",
    "signedByBaseTypographyLabelSmall8",
    "text82",
    "spacer74",
    "trailingArtworkContainer13",
    "trailingArtwork13",
    "calendar4",
    "signedByBaseInputElementSelectXSmallWebSingleDefaultEnabled4",
    "leadingArtworkContainer14",
    "text83",
    "leadingLabelContainer14",
    "leadingLabel14",
    "signedByBaseTypographyLabelXSmall7",
    "text84",
    "spacer75",
    "inputElementContentText14",
    "signedByBaseInputElementContentTextXSmallWebOff4",
    "text85",
    "trailingLabelEnhancer14",
    "trailingLabel14",
    "signedByBaseTypographyLabelXSmall8",
    "text86",
    "spacer76",
    "trailingArtworkContainer14",
    "trailingArtwork14",
    "selectIndicatorContainer7",
    "chevronIcon7",
    "inputElementHint7",
    "heart31",
    "hint7",
    "signedByBaseTypographyParagraphSmall7",
    "text87",
    "spacer77"
  ],
  signedByBaseFieldGroupSmall4: ["signedByBaseFieldGroupSmall4"],
  endDateCalendar4: [
    "endDateCalendar4",
    "inputElementTextField7",
    "signedByBaseInputElementTextFieldSmallEnabled4",
    "leadingArtworkContainer13",
    "leadingArtwork7",
    "leadingLabelContainer13",
    "leadingLabel13",
    "signedByBaseTypographyLabelSmall7",
    "text80",
    "spacer73",
    "inputElementContentText13",
    "signedByBaseInputElementContentTextSmallOff4",
    "text81",
    "trailingLabelEnhancer13",
    "trailingLabel13",
    "signedByBaseTypographyLabelSmall8",
    "text82",
    "spacer74",
    "trailingArtworkContainer13",
    "trailingArtwork13",
    "calendar4",
    "signedByBaseInputElementSelectXSmallWebSingleDefaultEnabled4",
    "leadingArtworkContainer14",
    "text83",
    "leadingLabelContainer14",
    "leadingLabel14",
    "signedByBaseTypographyLabelXSmall7",
    "text84",
    "spacer75",
    "inputElementContentText14",
    "signedByBaseInputElementContentTextXSmallWebOff4",
    "text85",
    "trailingLabelEnhancer14",
    "trailingLabel14",
    "signedByBaseTypographyLabelXSmall8",
    "text86",
    "spacer76",
    "trailingArtworkContainer14",
    "trailingArtwork14",
    "selectIndicatorContainer7",
    "chevronIcon7"
  ],
  inputElementTextField7: [
    "inputElementTextField7",
    "signedByBaseInputElementTextFieldSmallEnabled4",
    "leadingArtworkContainer13",
    "leadingArtwork7",
    "leadingLabelContainer13",
    "leadingLabel13",
    "signedByBaseTypographyLabelSmall7",
    "text80",
    "spacer73",
    "inputElementContentText13",
    "signedByBaseInputElementContentTextSmallOff4",
    "text81",
    "trailingLabelEnhancer13",
    "trailingLabel13",
    "signedByBaseTypographyLabelSmall8",
    "text82",
    "spacer74",
    "trailingArtworkContainer13",
    "trailingArtwork13"
  ],
  signedByBaseInputElementTextFieldSmallEnabled4: [
    "signedByBaseInputElementTextFieldSmallEnabled4"
  ],
  leadingArtworkContainer13: ["leadingArtworkContainer13", "leadingArtwork7"],
  leadingArtwork7: ["leadingArtwork7"],
  leadingLabelContainer13: [
    "leadingLabelContainer13",
    "leadingLabel13",
    "signedByBaseTypographyLabelSmall7",
    "text80",
    "spacer73"
  ],
  leadingLabel13: [
    "leadingLabel13",
    "signedByBaseTypographyLabelSmall7",
    "text80",
    "spacer73"
  ],
  signedByBaseTypographyLabelSmall7: ["signedByBaseTypographyLabelSmall7"],
  text80: ["text80"],
  spacer73: ["spacer73"],
  inputElementContentText13: [
    "inputElementContentText13",
    "signedByBaseInputElementContentTextSmallOff4",
    "text81"
  ],
  signedByBaseInputElementContentTextSmallOff4: [
    "signedByBaseInputElementContentTextSmallOff4"
  ],
  text81: ["text81"],
  trailingLabelEnhancer13: [
    "trailingLabelEnhancer13",
    "trailingLabel13",
    "signedByBaseTypographyLabelSmall8",
    "text82",
    "spacer74"
  ],
  trailingLabel13: [
    "trailingLabel13",
    "signedByBaseTypographyLabelSmall8",
    "text82",
    "spacer74"
  ],
  signedByBaseTypographyLabelSmall8: ["signedByBaseTypographyLabelSmall8"],
  text82: ["text82"],
  spacer74: ["spacer74"],
  trailingArtworkContainer13: [
    "trailingArtworkContainer13",
    "trailingArtwork13"
  ],
  trailingArtwork13: ["trailingArtwork13"],
  calendar4: [
    "calendar4",
    "signedByBaseInputElementSelectXSmallWebSingleDefaultEnabled4",
    "leadingArtworkContainer14",
    "text83",
    "leadingLabelContainer14",
    "leadingLabel14",
    "signedByBaseTypographyLabelXSmall7",
    "text84",
    "spacer75",
    "inputElementContentText14",
    "signedByBaseInputElementContentTextXSmallWebOff4",
    "text85",
    "trailingLabelEnhancer14",
    "trailingLabel14",
    "signedByBaseTypographyLabelXSmall8",
    "text86",
    "spacer76",
    "trailingArtworkContainer14",
    "trailingArtwork14",
    "selectIndicatorContainer7",
    "chevronIcon7"
  ],
  signedByBaseInputElementSelectXSmallWebSingleDefaultEnabled4: [
    "signedByBaseInputElementSelectXSmallWebSingleDefaultEnabled4"
  ],
  leadingArtworkContainer14: ["leadingArtworkContainer14", "text83"],
  text83: ["text83"],
  leadingLabelContainer14: [
    "leadingLabelContainer14",
    "leadingLabel14",
    "signedByBaseTypographyLabelXSmall7",
    "text84",
    "spacer75"
  ],
  leadingLabel14: [
    "leadingLabel14",
    "signedByBaseTypographyLabelXSmall7",
    "text84",
    "spacer75"
  ],
  signedByBaseTypographyLabelXSmall7: ["signedByBaseTypographyLabelXSmall7"],
  text84: ["text84"],
  spacer75: ["spacer75"],
  inputElementContentText14: [
    "inputElementContentText14",
    "signedByBaseInputElementContentTextXSmallWebOff4",
    "text85"
  ],
  signedByBaseInputElementContentTextXSmallWebOff4: [
    "signedByBaseInputElementContentTextXSmallWebOff4"
  ],
  text85: ["text85"],
  trailingLabelEnhancer14: [
    "trailingLabelEnhancer14",
    "trailingLabel14",
    "signedByBaseTypographyLabelXSmall8",
    "text86",
    "spacer76"
  ],
  trailingLabel14: [
    "trailingLabel14",
    "signedByBaseTypographyLabelXSmall8",
    "text86",
    "spacer76"
  ],
  signedByBaseTypographyLabelXSmall8: ["signedByBaseTypographyLabelXSmall8"],
  text86: ["text86"],
  spacer76: ["spacer76"],
  trailingArtworkContainer14: [
    "trailingArtworkContainer14",
    "trailingArtwork14"
  ],
  trailingArtwork14: ["trailingArtwork14"],
  selectIndicatorContainer7: ["selectIndicatorContainer7", "chevronIcon7"],
  chevronIcon7: ["chevronIcon7"],
  inputElementHint7: [
    "inputElementHint7",
    "heart31",
    "hint7",
    "signedByBaseTypographyParagraphSmall7",
    "text87",
    "spacer77"
  ],
  heart31: ["heart31"],
  hint7: [
    "hint7",
    "signedByBaseTypographyParagraphSmall7",
    "text87",
    "spacer77"
  ],
  signedByBaseTypographyParagraphSmall7: [
    "signedByBaseTypographyParagraphSmall7"
  ],
  text87: ["text87"],
  spacer77: ["spacer77"],
  inputElementSelect4: [
    "inputElementSelect4",
    "signedByBaseInputElementSelectMediumSingleDefaultActive4",
    "selectFrame4",
    "leadingArtworkContainer15",
    "leadingArtwork8",
    "leadingLabelContainer15",
    "leadingLabel15",
    "signedByBaseTypographyLabelMedium19",
    "text88",
    "spacer78",
    "inputElementContentText15",
    "signedByBaseInputElementContentTextMediumOff7",
    "text89",
    "trailingLabelEnhancer15",
    "trailingLabel15",
    "signedByBaseTypographyLabelMedium20",
    "text90",
    "spacer79",
    "trailingArtworkContainer15",
    "trailingArtwork15",
    "selectIndicatorContainer8",
    "chevronIcon8",
    "menu4",
    "signedByBaseMenuListMedium4",
    "menuItem16",
    "signedByBaseMenuItemSearchMediumNoneEnabled4",
    "searchField4",
    "signedByBaseSearchFieldMediumEnabled4",
    "inputElementLabel4",
    "signedByBaseInputElementLabelMedium4",
    "typography43",
    "signedByBaseTypographyLabelMedium21",
    "text91",
    "spacer80",
    "characterCountFrame4",
    "heart32",
    "typography44",
    "signedByBaseTypographyLabelMedium22",
    "text92",
    "spacer81",
    "inputElementTextField8",
    "signedByBaseInputElementTextFieldMediumEnabled4",
    "leadingArtworkContainer16",
    "search4",
    "leadingLabelContainer16",
    "leadingLabel16",
    "signedByBaseTypographyLabelMedium23",
    "text93",
    "spacer82",
    "inputElementContentText16",
    "signedByBaseInputElementContentTextMediumOff8",
    "text94",
    "trailingLabelEnhancer16",
    "trailingLabel16",
    "signedByBaseTypographyLabelMedium24",
    "text95",
    "spacer83",
    "trailingArtworkContainer16",
    "trailingArtwork16",
    "inputElementHint8",
    "heart33",
    "hint8",
    "signedByBaseTypographyParagraphSmall8",
    "text96",
    "spacer84",
    "menuItem17",
    "signedByBaseMenuItemOptionMediumStandardEnabled13",
    "menuItemControlMediumCheckboxUnchecked13",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked13",
    "icon13",
    "leadingEnhancer13",
    "heart34",
    "textFrame13",
    "leadingText13",
    "typography45",
    "signedByBaseTypographyParagraphMedium37",
    "text97",
    "spacer85",
    "typography46",
    "signedByBaseTypographyParagraphMedium38",
    "text98",
    "spacer86",
    "typography47",
    "signedByBaseTypographyParagraphMedium39",
    "spacer87",
    "trailingEnhancer13",
    "heart35",
    "menuItem18",
    "signedByBaseMenuItemOptionMediumStandardEnabled14",
    "menuItemControlMediumCheckboxUnchecked14",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked14",
    "icon14",
    "leadingEnhancer14",
    "heart36",
    "textFrame14",
    "leadingText14",
    "typography48",
    "signedByBaseTypographyParagraphMedium40",
    "text99",
    "spacer88",
    "typography49",
    "signedByBaseTypographyParagraphMedium41",
    "text100",
    "spacer89",
    "typography50",
    "signedByBaseTypographyParagraphMedium42",
    "spacer90",
    "trailingEnhancer14",
    "checkmarkSmall4",
    "menuItem19",
    "signedByBaseMenuItemOptionMediumStandardEnabled15",
    "menuItemControlMediumCheckboxUnchecked15",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked15",
    "icon15",
    "leadingEnhancer15",
    "heart37",
    "textFrame15",
    "leadingText15",
    "typography51",
    "signedByBaseTypographyParagraphMedium43",
    "text101",
    "spacer91",
    "typography52",
    "signedByBaseTypographyParagraphMedium44",
    "text102",
    "spacer92",
    "typography53",
    "signedByBaseTypographyParagraphMedium45",
    "spacer93",
    "trailingEnhancer15",
    "heart38",
    "menuItem20",
    "signedByBaseMenuItemOptionMediumStandardEnabled16",
    "menuItemControlMediumCheckboxUnchecked16",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked16",
    "icon16",
    "leadingEnhancer16",
    "heart39",
    "textFrame16",
    "leadingText16",
    "typography54",
    "signedByBaseTypographyParagraphMedium46",
    "text103",
    "spacer94",
    "typography55",
    "signedByBaseTypographyParagraphMedium47",
    "text104",
    "spacer95",
    "typography56",
    "signedByBaseTypographyParagraphMedium48",
    "spacer96",
    "trailingEnhancer16",
    "heart40",
    "scrollBar4"
  ],
  signedByBaseInputElementSelectMediumSingleDefaultActive4: [
    "signedByBaseInputElementSelectMediumSingleDefaultActive4"
  ],
  selectFrame4: [
    "selectFrame4",
    "leadingArtworkContainer15",
    "leadingArtwork8",
    "leadingLabelContainer15",
    "leadingLabel15",
    "signedByBaseTypographyLabelMedium19",
    "text88",
    "spacer78",
    "inputElementContentText15",
    "signedByBaseInputElementContentTextMediumOff7",
    "text89",
    "trailingLabelEnhancer15",
    "trailingLabel15",
    "signedByBaseTypographyLabelMedium20",
    "text90",
    "spacer79",
    "trailingArtworkContainer15",
    "trailingArtwork15",
    "selectIndicatorContainer8",
    "chevronIcon8"
  ],
  leadingArtworkContainer15: ["leadingArtworkContainer15", "leadingArtwork8"],
  leadingArtwork8: ["leadingArtwork8"],
  leadingLabelContainer15: [
    "leadingLabelContainer15",
    "leadingLabel15",
    "signedByBaseTypographyLabelMedium19",
    "text88",
    "spacer78"
  ],
  leadingLabel15: [
    "leadingLabel15",
    "signedByBaseTypographyLabelMedium19",
    "text88",
    "spacer78"
  ],
  signedByBaseTypographyLabelMedium19: ["signedByBaseTypographyLabelMedium19"],
  text88: ["text88"],
  spacer78: ["spacer78"],
  inputElementContentText15: [
    "inputElementContentText15",
    "signedByBaseInputElementContentTextMediumOff7",
    "text89"
  ],
  signedByBaseInputElementContentTextMediumOff7: [
    "signedByBaseInputElementContentTextMediumOff7"
  ],
  text89: ["text89"],
  trailingLabelEnhancer15: [
    "trailingLabelEnhancer15",
    "trailingLabel15",
    "signedByBaseTypographyLabelMedium20",
    "text90",
    "spacer79"
  ],
  trailingLabel15: [
    "trailingLabel15",
    "signedByBaseTypographyLabelMedium20",
    "text90",
    "spacer79"
  ],
  signedByBaseTypographyLabelMedium20: ["signedByBaseTypographyLabelMedium20"],
  text90: ["text90"],
  spacer79: ["spacer79"],
  trailingArtworkContainer15: [
    "trailingArtworkContainer15",
    "trailingArtwork15"
  ],
  trailingArtwork15: ["trailingArtwork15"],
  selectIndicatorContainer8: ["selectIndicatorContainer8", "chevronIcon8"],
  chevronIcon8: ["chevronIcon8"],
  menu4: [
    "menu4",
    "signedByBaseMenuListMedium4",
    "menuItem16",
    "signedByBaseMenuItemSearchMediumNoneEnabled4",
    "searchField4",
    "signedByBaseSearchFieldMediumEnabled4",
    "inputElementLabel4",
    "signedByBaseInputElementLabelMedium4",
    "typography43",
    "signedByBaseTypographyLabelMedium21",
    "text91",
    "spacer80",
    "characterCountFrame4",
    "heart32",
    "typography44",
    "signedByBaseTypographyLabelMedium22",
    "text92",
    "spacer81",
    "inputElementTextField8",
    "signedByBaseInputElementTextFieldMediumEnabled4",
    "leadingArtworkContainer16",
    "search4",
    "leadingLabelContainer16",
    "leadingLabel16",
    "signedByBaseTypographyLabelMedium23",
    "text93",
    "spacer82",
    "inputElementContentText16",
    "signedByBaseInputElementContentTextMediumOff8",
    "text94",
    "trailingLabelEnhancer16",
    "trailingLabel16",
    "signedByBaseTypographyLabelMedium24",
    "text95",
    "spacer83",
    "trailingArtworkContainer16",
    "trailingArtwork16",
    "inputElementHint8",
    "heart33",
    "hint8",
    "signedByBaseTypographyParagraphSmall8",
    "text96",
    "spacer84",
    "menuItem17",
    "signedByBaseMenuItemOptionMediumStandardEnabled13",
    "menuItemControlMediumCheckboxUnchecked13",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked13",
    "icon13",
    "leadingEnhancer13",
    "heart34",
    "textFrame13",
    "leadingText13",
    "typography45",
    "signedByBaseTypographyParagraphMedium37",
    "text97",
    "spacer85",
    "typography46",
    "signedByBaseTypographyParagraphMedium38",
    "text98",
    "spacer86",
    "typography47",
    "signedByBaseTypographyParagraphMedium39",
    "spacer87",
    "trailingEnhancer13",
    "heart35",
    "menuItem18",
    "signedByBaseMenuItemOptionMediumStandardEnabled14",
    "menuItemControlMediumCheckboxUnchecked14",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked14",
    "icon14",
    "leadingEnhancer14",
    "heart36",
    "textFrame14",
    "leadingText14",
    "typography48",
    "signedByBaseTypographyParagraphMedium40",
    "text99",
    "spacer88",
    "typography49",
    "signedByBaseTypographyParagraphMedium41",
    "text100",
    "spacer89",
    "typography50",
    "signedByBaseTypographyParagraphMedium42",
    "spacer90",
    "trailingEnhancer14",
    "checkmarkSmall4",
    "menuItem19",
    "signedByBaseMenuItemOptionMediumStandardEnabled15",
    "menuItemControlMediumCheckboxUnchecked15",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked15",
    "icon15",
    "leadingEnhancer15",
    "heart37",
    "textFrame15",
    "leadingText15",
    "typography51",
    "signedByBaseTypographyParagraphMedium43",
    "text101",
    "spacer91",
    "typography52",
    "signedByBaseTypographyParagraphMedium44",
    "text102",
    "spacer92",
    "typography53",
    "signedByBaseTypographyParagraphMedium45",
    "spacer93",
    "trailingEnhancer15",
    "heart38",
    "menuItem20",
    "signedByBaseMenuItemOptionMediumStandardEnabled16",
    "menuItemControlMediumCheckboxUnchecked16",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked16",
    "icon16",
    "leadingEnhancer16",
    "heart39",
    "textFrame16",
    "leadingText16",
    "typography54",
    "signedByBaseTypographyParagraphMedium46",
    "text103",
    "spacer94",
    "typography55",
    "signedByBaseTypographyParagraphMedium47",
    "text104",
    "spacer95",
    "typography56",
    "signedByBaseTypographyParagraphMedium48",
    "spacer96",
    "trailingEnhancer16",
    "heart40",
    "scrollBar4"
  ],
  signedByBaseMenuListMedium4: ["signedByBaseMenuListMedium4"],
  menuItem16: [
    "menuItem16",
    "signedByBaseMenuItemSearchMediumNoneEnabled4",
    "searchField4",
    "signedByBaseSearchFieldMediumEnabled4",
    "inputElementLabel4",
    "signedByBaseInputElementLabelMedium4",
    "typography43",
    "signedByBaseTypographyLabelMedium21",
    "text91",
    "spacer80",
    "characterCountFrame4",
    "heart32",
    "typography44",
    "signedByBaseTypographyLabelMedium22",
    "text92",
    "spacer81",
    "inputElementTextField8",
    "signedByBaseInputElementTextFieldMediumEnabled4",
    "leadingArtworkContainer16",
    "search4",
    "leadingLabelContainer16",
    "leadingLabel16",
    "signedByBaseTypographyLabelMedium23",
    "text93",
    "spacer82",
    "inputElementContentText16",
    "signedByBaseInputElementContentTextMediumOff8",
    "text94",
    "trailingLabelEnhancer16",
    "trailingLabel16",
    "signedByBaseTypographyLabelMedium24",
    "text95",
    "spacer83",
    "trailingArtworkContainer16",
    "trailingArtwork16",
    "inputElementHint8",
    "heart33",
    "hint8",
    "signedByBaseTypographyParagraphSmall8",
    "text96",
    "spacer84"
  ],
  signedByBaseMenuItemSearchMediumNoneEnabled4: [
    "signedByBaseMenuItemSearchMediumNoneEnabled4"
  ],
  searchField4: [
    "searchField4",
    "signedByBaseSearchFieldMediumEnabled4",
    "inputElementLabel4",
    "signedByBaseInputElementLabelMedium4",
    "typography43",
    "signedByBaseTypographyLabelMedium21",
    "text91",
    "spacer80",
    "characterCountFrame4",
    "heart32",
    "typography44",
    "signedByBaseTypographyLabelMedium22",
    "text92",
    "spacer81",
    "inputElementTextField8",
    "signedByBaseInputElementTextFieldMediumEnabled4",
    "leadingArtworkContainer16",
    "search4",
    "leadingLabelContainer16",
    "leadingLabel16",
    "signedByBaseTypographyLabelMedium23",
    "text93",
    "spacer82",
    "inputElementContentText16",
    "signedByBaseInputElementContentTextMediumOff8",
    "text94",
    "trailingLabelEnhancer16",
    "trailingLabel16",
    "signedByBaseTypographyLabelMedium24",
    "text95",
    "spacer83",
    "trailingArtworkContainer16",
    "trailingArtwork16",
    "inputElementHint8",
    "heart33",
    "hint8",
    "signedByBaseTypographyParagraphSmall8",
    "text96",
    "spacer84"
  ],
  signedByBaseSearchFieldMediumEnabled4: [
    "signedByBaseSearchFieldMediumEnabled4"
  ],
  inputElementLabel4: [
    "inputElementLabel4",
    "signedByBaseInputElementLabelMedium4",
    "typography43",
    "signedByBaseTypographyLabelMedium21",
    "text91",
    "spacer80",
    "characterCountFrame4",
    "heart32",
    "typography44",
    "signedByBaseTypographyLabelMedium22",
    "text92",
    "spacer81"
  ],
  signedByBaseInputElementLabelMedium4: [
    "signedByBaseInputElementLabelMedium4"
  ],
  typography43: [
    "typography43",
    "signedByBaseTypographyLabelMedium21",
    "text91",
    "spacer80"
  ],
  signedByBaseTypographyLabelMedium21: ["signedByBaseTypographyLabelMedium21"],
  text91: ["text91"],
  spacer80: ["spacer80"],
  characterCountFrame4: [
    "characterCountFrame4",
    "heart32",
    "typography44",
    "signedByBaseTypographyLabelMedium22",
    "text92",
    "spacer81"
  ],
  heart32: ["heart32"],
  typography44: [
    "typography44",
    "signedByBaseTypographyLabelMedium22",
    "text92",
    "spacer81"
  ],
  signedByBaseTypographyLabelMedium22: ["signedByBaseTypographyLabelMedium22"],
  text92: ["text92"],
  spacer81: ["spacer81"],
  inputElementTextField8: [
    "inputElementTextField8",
    "signedByBaseInputElementTextFieldMediumEnabled4",
    "leadingArtworkContainer16",
    "search4",
    "leadingLabelContainer16",
    "leadingLabel16",
    "signedByBaseTypographyLabelMedium23",
    "text93",
    "spacer82",
    "inputElementContentText16",
    "signedByBaseInputElementContentTextMediumOff8",
    "text94",
    "trailingLabelEnhancer16",
    "trailingLabel16",
    "signedByBaseTypographyLabelMedium24",
    "text95",
    "spacer83",
    "trailingArtworkContainer16",
    "trailingArtwork16"
  ],
  signedByBaseInputElementTextFieldMediumEnabled4: [
    "signedByBaseInputElementTextFieldMediumEnabled4"
  ],
  leadingArtworkContainer16: ["leadingArtworkContainer16", "search4"],
  search4: ["search4"],
  leadingLabelContainer16: [
    "leadingLabelContainer16",
    "leadingLabel16",
    "signedByBaseTypographyLabelMedium23",
    "text93",
    "spacer82"
  ],
  leadingLabel16: [
    "leadingLabel16",
    "signedByBaseTypographyLabelMedium23",
    "text93",
    "spacer82"
  ],
  signedByBaseTypographyLabelMedium23: ["signedByBaseTypographyLabelMedium23"],
  text93: ["text93"],
  spacer82: ["spacer82"],
  inputElementContentText16: [
    "inputElementContentText16",
    "signedByBaseInputElementContentTextMediumOff8",
    "text94"
  ],
  signedByBaseInputElementContentTextMediumOff8: [
    "signedByBaseInputElementContentTextMediumOff8"
  ],
  text94: ["text94"],
  trailingLabelEnhancer16: [
    "trailingLabelEnhancer16",
    "trailingLabel16",
    "signedByBaseTypographyLabelMedium24",
    "text95",
    "spacer83"
  ],
  trailingLabel16: [
    "trailingLabel16",
    "signedByBaseTypographyLabelMedium24",
    "text95",
    "spacer83"
  ],
  signedByBaseTypographyLabelMedium24: ["signedByBaseTypographyLabelMedium24"],
  text95: ["text95"],
  spacer83: ["spacer83"],
  trailingArtworkContainer16: [
    "trailingArtworkContainer16",
    "trailingArtwork16"
  ],
  trailingArtwork16: ["trailingArtwork16"],
  inputElementHint8: [
    "inputElementHint8",
    "heart33",
    "hint8",
    "signedByBaseTypographyParagraphSmall8",
    "text96",
    "spacer84"
  ],
  heart33: ["heart33"],
  hint8: [
    "hint8",
    "signedByBaseTypographyParagraphSmall8",
    "text96",
    "spacer84"
  ],
  signedByBaseTypographyParagraphSmall8: [
    "signedByBaseTypographyParagraphSmall8"
  ],
  text96: ["text96"],
  spacer84: ["spacer84"],
  menuItem17: [
    "menuItem17",
    "signedByBaseMenuItemOptionMediumStandardEnabled13",
    "menuItemControlMediumCheckboxUnchecked13",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked13",
    "icon13",
    "leadingEnhancer13",
    "heart34",
    "textFrame13",
    "leadingText13",
    "typography45",
    "signedByBaseTypographyParagraphMedium37",
    "text97",
    "spacer85",
    "typography46",
    "signedByBaseTypographyParagraphMedium38",
    "text98",
    "spacer86",
    "typography47",
    "signedByBaseTypographyParagraphMedium39",
    "spacer87",
    "trailingEnhancer13",
    "heart35"
  ],
  signedByBaseMenuItemOptionMediumStandardEnabled13: [
    "signedByBaseMenuItemOptionMediumStandardEnabled13"
  ],
  menuItemControlMediumCheckboxUnchecked13: [
    "menuItemControlMediumCheckboxUnchecked13",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked13",
    "icon13"
  ],
  signedByBaseMenuItemControlMediumCheckboxUnchecked13: [
    "signedByBaseMenuItemControlMediumCheckboxUnchecked13"
  ],
  icon13: ["icon13"],
  leadingEnhancer13: ["leadingEnhancer13", "heart34"],
  heart34: ["heart34"],
  textFrame13: [
    "textFrame13",
    "leadingText13",
    "typography45",
    "signedByBaseTypographyParagraphMedium37",
    "text97",
    "spacer85",
    "typography46",
    "signedByBaseTypographyParagraphMedium38",
    "text98",
    "spacer86",
    "typography47",
    "signedByBaseTypographyParagraphMedium39",
    "spacer87"
  ],
  leadingText13: [
    "leadingText13",
    "typography45",
    "signedByBaseTypographyParagraphMedium37",
    "text97",
    "spacer85",
    "typography46",
    "signedByBaseTypographyParagraphMedium38",
    "text98",
    "spacer86"
  ],
  typography45: [
    "typography45",
    "signedByBaseTypographyParagraphMedium37",
    "text97",
    "spacer85"
  ],
  signedByBaseTypographyParagraphMedium37: [
    "signedByBaseTypographyParagraphMedium37"
  ],
  text97: ["text97"],
  spacer85: ["spacer85"],
  typography46: [
    "typography46",
    "signedByBaseTypographyParagraphMedium38",
    "text98",
    "spacer86"
  ],
  signedByBaseTypographyParagraphMedium38: [
    "signedByBaseTypographyParagraphMedium38"
  ],
  text98: ["text98"],
  spacer86: ["spacer86"],
  typography47: [
    "typography47",
    "signedByBaseTypographyParagraphMedium39",
    "spacer87"
  ],
  signedByBaseTypographyParagraphMedium39: [
    "signedByBaseTypographyParagraphMedium39"
  ],
  spacer87: ["spacer87"],
  trailingEnhancer13: ["trailingEnhancer13", "heart35"],
  heart35: ["heart35"],
  menuItem18: [
    "menuItem18",
    "signedByBaseMenuItemOptionMediumStandardEnabled14",
    "menuItemControlMediumCheckboxUnchecked14",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked14",
    "icon14",
    "leadingEnhancer14",
    "heart36",
    "textFrame14",
    "leadingText14",
    "typography48",
    "signedByBaseTypographyParagraphMedium40",
    "text99",
    "spacer88",
    "typography49",
    "signedByBaseTypographyParagraphMedium41",
    "text100",
    "spacer89",
    "typography50",
    "signedByBaseTypographyParagraphMedium42",
    "spacer90",
    "trailingEnhancer14",
    "checkmarkSmall4"
  ],
  signedByBaseMenuItemOptionMediumStandardEnabled14: [
    "signedByBaseMenuItemOptionMediumStandardEnabled14"
  ],
  menuItemControlMediumCheckboxUnchecked14: [
    "menuItemControlMediumCheckboxUnchecked14",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked14",
    "icon14"
  ],
  signedByBaseMenuItemControlMediumCheckboxUnchecked14: [
    "signedByBaseMenuItemControlMediumCheckboxUnchecked14"
  ],
  icon14: ["icon14"],
  leadingEnhancer14: ["leadingEnhancer14", "heart36"],
  heart36: ["heart36"],
  textFrame14: [
    "textFrame14",
    "leadingText14",
    "typography48",
    "signedByBaseTypographyParagraphMedium40",
    "text99",
    "spacer88",
    "typography49",
    "signedByBaseTypographyParagraphMedium41",
    "text100",
    "spacer89",
    "typography50",
    "signedByBaseTypographyParagraphMedium42",
    "spacer90"
  ],
  leadingText14: [
    "leadingText14",
    "typography48",
    "signedByBaseTypographyParagraphMedium40",
    "text99",
    "spacer88",
    "typography49",
    "signedByBaseTypographyParagraphMedium41",
    "text100",
    "spacer89"
  ],
  typography48: [
    "typography48",
    "signedByBaseTypographyParagraphMedium40",
    "text99",
    "spacer88"
  ],
  signedByBaseTypographyParagraphMedium40: [
    "signedByBaseTypographyParagraphMedium40"
  ],
  text99: ["text99"],
  spacer88: ["spacer88"],
  typography49: [
    "typography49",
    "signedByBaseTypographyParagraphMedium41",
    "text100",
    "spacer89"
  ],
  signedByBaseTypographyParagraphMedium41: [
    "signedByBaseTypographyParagraphMedium41"
  ],
  text100: ["text100"],
  spacer89: ["spacer89"],
  typography50: [
    "typography50",
    "signedByBaseTypographyParagraphMedium42",
    "spacer90"
  ],
  signedByBaseTypographyParagraphMedium42: [
    "signedByBaseTypographyParagraphMedium42"
  ],
  spacer90: ["spacer90"],
  trailingEnhancer14: ["trailingEnhancer14", "checkmarkSmall4"],
  checkmarkSmall4: ["checkmarkSmall4"],
  menuItem19: [
    "menuItem19",
    "signedByBaseMenuItemOptionMediumStandardEnabled15",
    "menuItemControlMediumCheckboxUnchecked15",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked15",
    "icon15",
    "leadingEnhancer15",
    "heart37",
    "textFrame15",
    "leadingText15",
    "typography51",
    "signedByBaseTypographyParagraphMedium43",
    "text101",
    "spacer91",
    "typography52",
    "signedByBaseTypographyParagraphMedium44",
    "text102",
    "spacer92",
    "typography53",
    "signedByBaseTypographyParagraphMedium45",
    "spacer93",
    "trailingEnhancer15",
    "heart38"
  ],
  signedByBaseMenuItemOptionMediumStandardEnabled15: [
    "signedByBaseMenuItemOptionMediumStandardEnabled15"
  ],
  menuItemControlMediumCheckboxUnchecked15: [
    "menuItemControlMediumCheckboxUnchecked15",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked15",
    "icon15"
  ],
  signedByBaseMenuItemControlMediumCheckboxUnchecked15: [
    "signedByBaseMenuItemControlMediumCheckboxUnchecked15"
  ],
  icon15: ["icon15"],
  leadingEnhancer15: ["leadingEnhancer15", "heart37"],
  heart37: ["heart37"],
  textFrame15: [
    "textFrame15",
    "leadingText15",
    "typography51",
    "signedByBaseTypographyParagraphMedium43",
    "text101",
    "spacer91",
    "typography52",
    "signedByBaseTypographyParagraphMedium44",
    "text102",
    "spacer92",
    "typography53",
    "signedByBaseTypographyParagraphMedium45",
    "spacer93"
  ],
  leadingText15: [
    "leadingText15",
    "typography51",
    "signedByBaseTypographyParagraphMedium43",
    "text101",
    "spacer91",
    "typography52",
    "signedByBaseTypographyParagraphMedium44",
    "text102",
    "spacer92"
  ],
  typography51: [
    "typography51",
    "signedByBaseTypographyParagraphMedium43",
    "text101",
    "spacer91"
  ],
  signedByBaseTypographyParagraphMedium43: [
    "signedByBaseTypographyParagraphMedium43"
  ],
  text101: ["text101"],
  spacer91: ["spacer91"],
  typography52: [
    "typography52",
    "signedByBaseTypographyParagraphMedium44",
    "text102",
    "spacer92"
  ],
  signedByBaseTypographyParagraphMedium44: [
    "signedByBaseTypographyParagraphMedium44"
  ],
  text102: ["text102"],
  spacer92: ["spacer92"],
  typography53: [
    "typography53",
    "signedByBaseTypographyParagraphMedium45",
    "spacer93"
  ],
  signedByBaseTypographyParagraphMedium45: [
    "signedByBaseTypographyParagraphMedium45"
  ],
  spacer93: ["spacer93"],
  trailingEnhancer15: ["trailingEnhancer15", "heart38"],
  heart38: ["heart38"],
  menuItem20: [
    "menuItem20",
    "signedByBaseMenuItemOptionMediumStandardEnabled16",
    "menuItemControlMediumCheckboxUnchecked16",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked16",
    "icon16",
    "leadingEnhancer16",
    "heart39",
    "textFrame16",
    "leadingText16",
    "typography54",
    "signedByBaseTypographyParagraphMedium46",
    "text103",
    "spacer94",
    "typography55",
    "signedByBaseTypographyParagraphMedium47",
    "text104",
    "spacer95",
    "typography56",
    "signedByBaseTypographyParagraphMedium48",
    "spacer96",
    "trailingEnhancer16",
    "heart40"
  ],
  signedByBaseMenuItemOptionMediumStandardEnabled16: [
    "signedByBaseMenuItemOptionMediumStandardEnabled16"
  ],
  menuItemControlMediumCheckboxUnchecked16: [
    "menuItemControlMediumCheckboxUnchecked16",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked16",
    "icon16"
  ],
  signedByBaseMenuItemControlMediumCheckboxUnchecked16: [
    "signedByBaseMenuItemControlMediumCheckboxUnchecked16"
  ],
  icon16: ["icon16"],
  leadingEnhancer16: ["leadingEnhancer16", "heart39"],
  heart39: ["heart39"],
  textFrame16: [
    "textFrame16",
    "leadingText16",
    "typography54",
    "signedByBaseTypographyParagraphMedium46",
    "text103",
    "spacer94",
    "typography55",
    "signedByBaseTypographyParagraphMedium47",
    "text104",
    "spacer95",
    "typography56",
    "signedByBaseTypographyParagraphMedium48",
    "spacer96"
  ],
  leadingText16: [
    "leadingText16",
    "typography54",
    "signedByBaseTypographyParagraphMedium46",
    "text103",
    "spacer94",
    "typography55",
    "signedByBaseTypographyParagraphMedium47",
    "text104",
    "spacer95"
  ],
  typography54: [
    "typography54",
    "signedByBaseTypographyParagraphMedium46",
    "text103",
    "spacer94"
  ],
  signedByBaseTypographyParagraphMedium46: [
    "signedByBaseTypographyParagraphMedium46"
  ],
  text103: ["text103"],
  spacer94: ["spacer94"],
  typography55: [
    "typography55",
    "signedByBaseTypographyParagraphMedium47",
    "text104",
    "spacer95"
  ],
  signedByBaseTypographyParagraphMedium47: [
    "signedByBaseTypographyParagraphMedium47"
  ],
  text104: ["text104"],
  spacer95: ["spacer95"],
  typography56: [
    "typography56",
    "signedByBaseTypographyParagraphMedium48",
    "spacer96"
  ],
  signedByBaseTypographyParagraphMedium48: [
    "signedByBaseTypographyParagraphMedium48"
  ],
  spacer96: ["spacer96"],
  trailingEnhancer16: ["trailingEnhancer16", "heart40"],
  heart40: ["heart40"],
  scrollBar4: ["scrollBar4"],
  model6: ["model6"],
  buttons4: [
    "buttons4",
    "button13",
    "frame1073713927",
    "frame1073713933",
    "button14",
    "button15",
    "button16"
  ],
  button13: ["button13"],
  frame1073713927: ["frame1073713927"],
  frame1073713933: ["frame1073713933", "button14", "button15", "button16"],
  button14: ["button14"],
  button15: ["button15"],
  button16: ["button16"],
  accueilDashboard: [
    "accueilDashboard",
    "leftMenu",
    "main",
    "header",
    "main2",
    "tabsContainer",
    "tabs",
    "tabButton",
    "tabUnderline",
    "filter",
    "buttonFilter",
    "buttonAdd2",
    "buttonAddDoc",
    "_1",
    "table",
    "dataGrid",
    "_2",
    "file",
    "noDoc",
    "noDocuments",
    "startCreatingYour"
  ],
  leftMenu: ["leftMenu"],
  main: [
    "main",
    "header",
    "main2",
    "tabsContainer",
    "tabs",
    "tabButton",
    "tabUnderline",
    "filter",
    "buttonFilter",
    "buttonAdd2",
    "buttonAddDoc",
    "_1",
    "table",
    "dataGrid",
    "_2",
    "file",
    "noDoc",
    "noDocuments",
    "startCreatingYour"
  ],
  header: ["header"],
  main2: [
    "main2",
    "tabsContainer",
    "tabs",
    "tabButton",
    "tabUnderline",
    "filter",
    "buttonFilter",
    "buttonAdd2",
    "buttonAddDoc",
    "_1",
    "table",
    "dataGrid",
    "_2",
    "file",
    "noDoc",
    "noDocuments",
    "startCreatingYour"
  ],
  tabsContainer: [
    "tabsContainer",
    "tabs",
    "tabButton",
    "tabUnderline",
    "filter",
    "buttonFilter",
    "buttonAdd2",
    "buttonAddDoc",
    "_1",
    "table",
    "dataGrid",
    "_2",
    "file"
  ],
  tabs: ["tabs", "tabButton", "tabUnderline"],
  tabButton: ["tabButton"],
  tabUnderline: ["tabUnderline"],
  filter: ["filter", "buttonFilter", "buttonAdd2", "buttonAddDoc"],
  buttonFilter: ["buttonFilter"],
  buttonAdd2: ["buttonAdd2"],
  buttonAddDoc: ["buttonAddDoc"],
  _1: ["_1", "table", "dataGrid"],
  table: ["table", "dataGrid"],
  dataGrid: ["dataGrid"],
  _2: ["_2", "file"],
  file: ["file"],
  noDoc: ["noDoc", "noDocuments", "startCreatingYour"],
  noDocuments: ["noDocuments"],
  startCreatingYour: ["startCreatingYour"],
  bottomMenu: ["bottomMenu"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  (typeof PlasmicDescendants)[T][number];
type NodeDefaultElementType = {
  root: "div";
  uploadFile: typeof Modal;
  frame1437254034: "div";
  name16: "div";
  frame1437254035: "div";
  files2: "div";
  upload5: typeof UploadWrapper;
  createPosition: typeof Modal;
  frame1437254016: "div";
  name: "div";
  frame1437254019: "div";
  createPosition2: typeof FormWrapper;
  input: typeof AntdInput;
  textArea: typeof AntdTextArea;
  precisions2: typeof FormItemWrapper;
  select9: typeof AntdSelect;
  generalDescription2: typeof FormItemWrapper;
  textAreaInput: typeof TextAreaInput;
  upload: typeof UploadWrapper;
  content: "div";
  titre: typeof TextInput;
  texinput2: typeof SitexTextInput;
  date: "div";
  label6: "div";
  timePicker: typeof AntdDatePicker;
  type: typeof DropDown;
  budget: typeof TextInput;
  comments: typeof TextInput;
  input5: "div";
  name2: "div";
  datePickerWeb: "div";
  inputSelect: "div";
  signedByBaseFieldGroupSmall: "div";
  endDateCalendar: "div";
  inputElementTextField: "div";
  signedByBaseInputElementTextFieldSmallEnabled: "div";
  leadingArtworkContainer: "div";
  leadingArtwork: "div";
  leadingLabelContainer: "div";
  leadingLabel: "div";
  signedByBaseTypographyLabelSmall: "div";
  text5: "div";
  spacer: "div";
  inputElementContentText: "div";
  signedByBaseInputElementContentTextSmallOff: "div";
  text6: "div";
  trailingLabelEnhancer: "div";
  trailingLabel: "div";
  signedByBaseTypographyLabelSmall2: "div";
  text7: "div";
  spacer2: "div";
  trailingArtworkContainer: "div";
  trailingArtwork: "div";
  calendar: "div";
  signedByBaseInputElementSelectXSmallWebSingleDefaultEnabled: "div";
  leadingArtworkContainer2: "div";
  text8: "div";
  leadingLabelContainer2: "div";
  leadingLabel2: "div";
  signedByBaseTypographyLabelXSmall: "div";
  text9: "div";
  spacer3: "div";
  inputElementContentText2: "div";
  signedByBaseInputElementContentTextXSmallWebOff: "div";
  text10: "div";
  trailingLabelEnhancer2: "div";
  trailingLabel2: "div";
  signedByBaseTypographyLabelXSmall2: "div";
  text11: "div";
  spacer4: "div";
  trailingArtworkContainer2: "div";
  trailingArtwork2: "div";
  selectIndicatorContainer: "div";
  chevronIcon: "div";
  inputElementHint: "div";
  heart: "div";
  hint: "div";
  signedByBaseTypographyParagraphSmall: "div";
  text12: "div";
  spacer28: "div";
  inputElementSelect: "div";
  signedByBaseInputElementSelectMediumSingleDefaultActive: "div";
  selectFrame: "div";
  leadingArtworkContainer3: "div";
  leadingArtwork2: "div";
  leadingLabelContainer3: "div";
  leadingLabel3: "div";
  signedByBaseTypographyLabelMedium: "div";
  text13: "div";
  spacer5: "div";
  inputElementContentText3: "div";
  signedByBaseInputElementContentTextMediumOff: "div";
  text14: "div";
  trailingLabelEnhancer3: "div";
  trailingLabel3: "div";
  signedByBaseTypographyLabelMedium2: "div";
  text15: "div";
  spacer6: "div";
  trailingArtworkContainer3: "div";
  trailingArtwork3: "div";
  selectIndicatorContainer2: "div";
  chevronIcon2: "div";
  menu: "div";
  signedByBaseMenuListMedium: "div";
  menuItem: "div";
  signedByBaseMenuItemSearchMediumNoneEnabled: "div";
  searchField: "div";
  signedByBaseSearchFieldMediumEnabled: "div";
  inputElementLabel: "div";
  signedByBaseInputElementLabelMedium: "div";
  typography: "div";
  signedByBaseTypographyLabelMedium3: "div";
  text16: "div";
  spacer7: "div";
  characterCountFrame: "div";
  heart2: "div";
  typography2: "div";
  signedByBaseTypographyLabelMedium4: "div";
  text17: "div";
  spacer8: "div";
  inputElementTextField2: "div";
  signedByBaseInputElementTextFieldMediumEnabled: "div";
  leadingArtworkContainer4: "div";
  search: "div";
  leadingLabelContainer4: "div";
  leadingLabel4: "div";
  signedByBaseTypographyLabelMedium5: "div";
  text18: "div";
  spacer9: "div";
  inputElementContentText4: "div";
  signedByBaseInputElementContentTextMediumOff2: "div";
  text19: "div";
  trailingLabelEnhancer4: "div";
  trailingLabel4: "div";
  signedByBaseTypographyLabelMedium6: "div";
  text20: "div";
  spacer10: "div";
  trailingArtworkContainer4: "div";
  trailingArtwork4: "div";
  inputElementHint2: "div";
  heart3: "div";
  hint2: "div";
  signedByBaseTypographyParagraphSmall2: "div";
  text21: "div";
  spacer29: "div";
  menuItem2: "div";
  signedByBaseMenuItemOptionMediumStandardEnabled: "div";
  menuItemControlMediumCheckboxUnchecked: "div";
  signedByBaseMenuItemControlMediumCheckboxUnchecked: "div";
  icon: "div";
  leadingEnhancer: "div";
  heart4: "div";
  textFrame: "div";
  leadingText: "div";
  typography3: "div";
  signedByBaseTypographyParagraphMedium: "div";
  text22: "div";
  spacer11: "div";
  typography4: "div";
  signedByBaseTypographyParagraphMedium2: "div";
  text23: "div";
  spacer12: "div";
  typography5: "div";
  signedByBaseTypographyParagraphMedium3: "div";
  spacer13: "div";
  trailingEnhancer: "div";
  heart5: "div";
  menuItem3: "div";
  signedByBaseMenuItemOptionMediumStandardEnabled2: "div";
  menuItemControlMediumCheckboxUnchecked2: "div";
  signedByBaseMenuItemControlMediumCheckboxUnchecked2: "div";
  icon2: "div";
  leadingEnhancer2: "div";
  heart6: "div";
  textFrame2: "div";
  leadingText2: "div";
  typography6: "div";
  signedByBaseTypographyParagraphMedium4: "div";
  text24: "div";
  spacer14: "div";
  typography7: "div";
  signedByBaseTypographyParagraphMedium5: "div";
  text25: "div";
  spacer15: "div";
  typography8: "div";
  signedByBaseTypographyParagraphMedium6: "div";
  spacer16: "div";
  trailingEnhancer2: "div";
  checkmarkSmall: "div";
  menuItem4: "div";
  signedByBaseMenuItemOptionMediumStandardEnabled3: "div";
  menuItemControlMediumCheckboxUnchecked3: "div";
  signedByBaseMenuItemControlMediumCheckboxUnchecked3: "div";
  icon3: "div";
  leadingEnhancer3: "div";
  heart7: "div";
  textFrame3: "div";
  leadingText3: "div";
  typography9: "div";
  signedByBaseTypographyParagraphMedium7: "div";
  text26: "div";
  spacer17: "div";
  typography10: "div";
  signedByBaseTypographyParagraphMedium8: "div";
  text27: "div";
  spacer18: "div";
  typography11: "div";
  signedByBaseTypographyParagraphMedium9: "div";
  spacer19: "div";
  trailingEnhancer3: "div";
  heart8: "div";
  menuItem5: "div";
  signedByBaseMenuItemOptionMediumStandardEnabled4: "div";
  menuItemControlMediumCheckboxUnchecked4: "div";
  signedByBaseMenuItemControlMediumCheckboxUnchecked4: "div";
  icon4: "div";
  leadingEnhancer4: "div";
  heart9: "div";
  textFrame4: "div";
  leadingText4: "div";
  typography12: "div";
  signedByBaseTypographyParagraphMedium10: "div";
  text28: "div";
  spacer20: "div";
  typography13: "div";
  signedByBaseTypographyParagraphMedium11: "div";
  text29: "div";
  spacer21: "div";
  typography14: "div";
  signedByBaseTypographyParagraphMedium12: "div";
  spacer22: "div";
  trailingEnhancer4: "div";
  heart10: "div";
  scrollBar: "div";
  model: typeof DropDown;
  buttons: "div";
  button: typeof Button;
  frame1073713924: "div";
  frame1073713930: "div";
  button2: typeof Button;
  button3: "div";
  button4: "div";
  editPosition: typeof Modal;
  frame1437254017: "div";
  name3: "div";
  frame1437254020: "div";
  editPosition3: typeof FormWrapper;
  input3: typeof AntdInput;
  textArea2: typeof AntdTextArea;
  precisions3: typeof FormItemWrapper;
  select10: typeof AntdSelect;
  generalDescription3: typeof FormItemWrapper;
  textArea4: typeof AntdTextArea;
  upload22: typeof UploadWrapper;
  deletePosition2: typeof Modal;
  frame1437254018: "div";
  name7: "div";
  frame1437254021: "div";
  form3: typeof FormWrapper;
  content3: "div";
  titre3: typeof TextInput;
  texinput23: typeof SitexTextInput;
  date3: "div";
  label8: "div";
  timePicker9: typeof AntdDatePicker;
  type3: typeof DropDown;
  budget3: typeof TextInput;
  comments3: typeof TextInput;
  input9: "div";
  name6: "div";
  datePickerWeb3: "div";
  inputSelect3: "div";
  signedByBaseFieldGroupSmall3: "div";
  endDateCalendar3: "div";
  inputElementTextField5: "div";
  signedByBaseInputElementTextFieldSmallEnabled3: "div";
  leadingArtworkContainer9: "div";
  leadingArtwork5: "div";
  leadingLabelContainer9: "div";
  leadingLabel9: "div";
  signedByBaseTypographyLabelSmall5: "div";
  text55: "div";
  spacer49: "div";
  inputElementContentText9: "div";
  signedByBaseInputElementContentTextSmallOff3: "div";
  text56: "div";
  trailingLabelEnhancer9: "div";
  trailingLabel9: "div";
  signedByBaseTypographyLabelSmall6: "div";
  text57: "div";
  spacer50: "div";
  trailingArtworkContainer9: "div";
  trailingArtwork9: "div";
  calendar3: "div";
  signedByBaseInputElementSelectXSmallWebSingleDefaultEnabled3: "div";
  leadingArtworkContainer10: "div";
  text58: "div";
  leadingLabelContainer10: "div";
  leadingLabel10: "div";
  signedByBaseTypographyLabelXSmall5: "div";
  text59: "div";
  spacer51: "div";
  inputElementContentText10: "div";
  signedByBaseInputElementContentTextXSmallWebOff3: "div";
  text60: "div";
  trailingLabelEnhancer10: "div";
  trailingLabel10: "div";
  signedByBaseTypographyLabelXSmall6: "div";
  text61: "div";
  spacer52: "div";
  trailingArtworkContainer10: "div";
  trailingArtwork10: "div";
  selectIndicatorContainer5: "div";
  chevronIcon5: "div";
  inputElementHint5: "div";
  heart21: "div";
  hint5: "div";
  signedByBaseTypographyParagraphSmall5: "div";
  text62: "div";
  spacer53: "div";
  inputElementSelect3: "div";
  signedByBaseInputElementSelectMediumSingleDefaultActive3: "div";
  selectFrame3: "div";
  leadingArtworkContainer11: "div";
  leadingArtwork6: "div";
  leadingLabelContainer11: "div";
  leadingLabel11: "div";
  signedByBaseTypographyLabelMedium13: "div";
  text63: "div";
  spacer54: "div";
  inputElementContentText11: "div";
  signedByBaseInputElementContentTextMediumOff5: "div";
  text64: "div";
  trailingLabelEnhancer11: "div";
  trailingLabel11: "div";
  signedByBaseTypographyLabelMedium14: "div";
  text65: "div";
  spacer55: "div";
  trailingArtworkContainer11: "div";
  trailingArtwork11: "div";
  selectIndicatorContainer6: "div";
  chevronIcon6: "div";
  menu3: "div";
  signedByBaseMenuListMedium3: "div";
  menuItem11: "div";
  signedByBaseMenuItemSearchMediumNoneEnabled3: "div";
  searchField3: "div";
  signedByBaseSearchFieldMediumEnabled3: "div";
  inputElementLabel3: "div";
  signedByBaseInputElementLabelMedium3: "div";
  typography29: "div";
  signedByBaseTypographyLabelMedium15: "div";
  text66: "div";
  spacer56: "div";
  characterCountFrame3: "div";
  heart22: "div";
  typography30: "div";
  signedByBaseTypographyLabelMedium16: "div";
  text67: "div";
  spacer57: "div";
  inputElementTextField6: "div";
  signedByBaseInputElementTextFieldMediumEnabled3: "div";
  leadingArtworkContainer12: "div";
  search3: "div";
  leadingLabelContainer12: "div";
  leadingLabel12: "div";
  signedByBaseTypographyLabelMedium17: "div";
  text68: "div";
  spacer58: "div";
  inputElementContentText12: "div";
  signedByBaseInputElementContentTextMediumOff6: "div";
  text69: "div";
  trailingLabelEnhancer12: "div";
  trailingLabel12: "div";
  signedByBaseTypographyLabelMedium18: "div";
  text70: "div";
  spacer59: "div";
  trailingArtworkContainer12: "div";
  trailingArtwork12: "div";
  inputElementHint6: "div";
  heart23: "div";
  hint6: "div";
  signedByBaseTypographyParagraphSmall6: "div";
  text71: "div";
  spacer60: "div";
  menuItem12: "div";
  signedByBaseMenuItemOptionMediumStandardEnabled9: "div";
  menuItemControlMediumCheckboxUnchecked9: "div";
  signedByBaseMenuItemControlMediumCheckboxUnchecked9: "div";
  icon9: "div";
  leadingEnhancer9: "div";
  heart24: "div";
  textFrame9: "div";
  leadingText9: "div";
  typography31: "div";
  signedByBaseTypographyParagraphMedium25: "div";
  text72: "div";
  spacer61: "div";
  typography32: "div";
  signedByBaseTypographyParagraphMedium26: "div";
  text73: "div";
  spacer62: "div";
  typography33: "div";
  signedByBaseTypographyParagraphMedium27: "div";
  spacer63: "div";
  trailingEnhancer9: "div";
  heart25: "div";
  menuItem13: "div";
  signedByBaseMenuItemOptionMediumStandardEnabled10: "div";
  menuItemControlMediumCheckboxUnchecked10: "div";
  signedByBaseMenuItemControlMediumCheckboxUnchecked10: "div";
  icon10: "div";
  leadingEnhancer10: "div";
  heart26: "div";
  textFrame10: "div";
  leadingText10: "div";
  typography34: "div";
  signedByBaseTypographyParagraphMedium28: "div";
  text74: "div";
  spacer64: "div";
  typography35: "div";
  signedByBaseTypographyParagraphMedium29: "div";
  text75: "div";
  spacer65: "div";
  typography36: "div";
  signedByBaseTypographyParagraphMedium30: "div";
  spacer66: "div";
  trailingEnhancer10: "div";
  checkmarkSmall3: "div";
  menuItem14: "div";
  signedByBaseMenuItemOptionMediumStandardEnabled11: "div";
  menuItemControlMediumCheckboxUnchecked11: "div";
  signedByBaseMenuItemControlMediumCheckboxUnchecked11: "div";
  icon11: "div";
  leadingEnhancer11: "div";
  heart27: "div";
  textFrame11: "div";
  leadingText11: "div";
  typography37: "div";
  signedByBaseTypographyParagraphMedium31: "div";
  text76: "div";
  spacer67: "div";
  typography38: "div";
  signedByBaseTypographyParagraphMedium32: "div";
  text77: "div";
  spacer68: "div";
  typography39: "div";
  signedByBaseTypographyParagraphMedium33: "div";
  spacer69: "div";
  trailingEnhancer11: "div";
  heart28: "div";
  menuItem15: "div";
  signedByBaseMenuItemOptionMediumStandardEnabled12: "div";
  menuItemControlMediumCheckboxUnchecked12: "div";
  signedByBaseMenuItemControlMediumCheckboxUnchecked12: "div";
  icon12: "div";
  leadingEnhancer12: "div";
  heart29: "div";
  textFrame12: "div";
  leadingText12: "div";
  typography40: "div";
  signedByBaseTypographyParagraphMedium34: "div";
  text78: "div";
  spacer70: "div";
  typography41: "div";
  signedByBaseTypographyParagraphMedium35: "div";
  text79: "div";
  spacer71: "div";
  typography42: "div";
  signedByBaseTypographyParagraphMedium36: "div";
  spacer72: "div";
  trailingEnhancer12: "div";
  heart30: "div";
  scrollBar3: "div";
  model3: typeof DropDown;
  buttons3: "div";
  button9: typeof Button;
  frame1073713926: "div";
  frame1073713932: "div";
  button10: typeof Button;
  button11: "div";
  button12: "div";
  duplicate: typeof Modal;
  frame1437254022: "div";
  name9: "div";
  frame1437254023: "div";
  formDuplicateModel: typeof FormWrapper;
  content4: "div";
  titre6: typeof TextInput;
  texinput24: typeof SitexTextInput;
  date4: "div";
  label9: "div";
  timePicker10: typeof AntdDatePicker;
  type6: typeof DropDown;
  budget6: typeof TextInput;
  comments4: typeof TextInput;
  input10: "div";
  name8: "div";
  datePickerWeb4: "div";
  inputSelect4: "div";
  signedByBaseFieldGroupSmall4: "div";
  endDateCalendar4: "div";
  inputElementTextField7: "div";
  signedByBaseInputElementTextFieldSmallEnabled4: "div";
  leadingArtworkContainer13: "div";
  leadingArtwork7: "div";
  leadingLabelContainer13: "div";
  leadingLabel13: "div";
  signedByBaseTypographyLabelSmall7: "div";
  text80: "div";
  spacer73: "div";
  inputElementContentText13: "div";
  signedByBaseInputElementContentTextSmallOff4: "div";
  text81: "div";
  trailingLabelEnhancer13: "div";
  trailingLabel13: "div";
  signedByBaseTypographyLabelSmall8: "div";
  text82: "div";
  spacer74: "div";
  trailingArtworkContainer13: "div";
  trailingArtwork13: "div";
  calendar4: "div";
  signedByBaseInputElementSelectXSmallWebSingleDefaultEnabled4: "div";
  leadingArtworkContainer14: "div";
  text83: "div";
  leadingLabelContainer14: "div";
  leadingLabel14: "div";
  signedByBaseTypographyLabelXSmall7: "div";
  text84: "div";
  spacer75: "div";
  inputElementContentText14: "div";
  signedByBaseInputElementContentTextXSmallWebOff4: "div";
  text85: "div";
  trailingLabelEnhancer14: "div";
  trailingLabel14: "div";
  signedByBaseTypographyLabelXSmall8: "div";
  text86: "div";
  spacer76: "div";
  trailingArtworkContainer14: "div";
  trailingArtwork14: "div";
  selectIndicatorContainer7: "div";
  chevronIcon7: "div";
  inputElementHint7: "div";
  heart31: "div";
  hint7: "div";
  signedByBaseTypographyParagraphSmall7: "div";
  text87: "div";
  spacer77: "div";
  inputElementSelect4: "div";
  signedByBaseInputElementSelectMediumSingleDefaultActive4: "div";
  selectFrame4: "div";
  leadingArtworkContainer15: "div";
  leadingArtwork8: "div";
  leadingLabelContainer15: "div";
  leadingLabel15: "div";
  signedByBaseTypographyLabelMedium19: "div";
  text88: "div";
  spacer78: "div";
  inputElementContentText15: "div";
  signedByBaseInputElementContentTextMediumOff7: "div";
  text89: "div";
  trailingLabelEnhancer15: "div";
  trailingLabel15: "div";
  signedByBaseTypographyLabelMedium20: "div";
  text90: "div";
  spacer79: "div";
  trailingArtworkContainer15: "div";
  trailingArtwork15: "div";
  selectIndicatorContainer8: "div";
  chevronIcon8: "div";
  menu4: "div";
  signedByBaseMenuListMedium4: "div";
  menuItem16: "div";
  signedByBaseMenuItemSearchMediumNoneEnabled4: "div";
  searchField4: "div";
  signedByBaseSearchFieldMediumEnabled4: "div";
  inputElementLabel4: "div";
  signedByBaseInputElementLabelMedium4: "div";
  typography43: "div";
  signedByBaseTypographyLabelMedium21: "div";
  text91: "div";
  spacer80: "div";
  characterCountFrame4: "div";
  heart32: "div";
  typography44: "div";
  signedByBaseTypographyLabelMedium22: "div";
  text92: "div";
  spacer81: "div";
  inputElementTextField8: "div";
  signedByBaseInputElementTextFieldMediumEnabled4: "div";
  leadingArtworkContainer16: "div";
  search4: "div";
  leadingLabelContainer16: "div";
  leadingLabel16: "div";
  signedByBaseTypographyLabelMedium23: "div";
  text93: "div";
  spacer82: "div";
  inputElementContentText16: "div";
  signedByBaseInputElementContentTextMediumOff8: "div";
  text94: "div";
  trailingLabelEnhancer16: "div";
  trailingLabel16: "div";
  signedByBaseTypographyLabelMedium24: "div";
  text95: "div";
  spacer83: "div";
  trailingArtworkContainer16: "div";
  trailingArtwork16: "div";
  inputElementHint8: "div";
  heart33: "div";
  hint8: "div";
  signedByBaseTypographyParagraphSmall8: "div";
  text96: "div";
  spacer84: "div";
  menuItem17: "div";
  signedByBaseMenuItemOptionMediumStandardEnabled13: "div";
  menuItemControlMediumCheckboxUnchecked13: "div";
  signedByBaseMenuItemControlMediumCheckboxUnchecked13: "div";
  icon13: "div";
  leadingEnhancer13: "div";
  heart34: "div";
  textFrame13: "div";
  leadingText13: "div";
  typography45: "div";
  signedByBaseTypographyParagraphMedium37: "div";
  text97: "div";
  spacer85: "div";
  typography46: "div";
  signedByBaseTypographyParagraphMedium38: "div";
  text98: "div";
  spacer86: "div";
  typography47: "div";
  signedByBaseTypographyParagraphMedium39: "div";
  spacer87: "div";
  trailingEnhancer13: "div";
  heart35: "div";
  menuItem18: "div";
  signedByBaseMenuItemOptionMediumStandardEnabled14: "div";
  menuItemControlMediumCheckboxUnchecked14: "div";
  signedByBaseMenuItemControlMediumCheckboxUnchecked14: "div";
  icon14: "div";
  leadingEnhancer14: "div";
  heart36: "div";
  textFrame14: "div";
  leadingText14: "div";
  typography48: "div";
  signedByBaseTypographyParagraphMedium40: "div";
  text99: "div";
  spacer88: "div";
  typography49: "div";
  signedByBaseTypographyParagraphMedium41: "div";
  text100: "div";
  spacer89: "div";
  typography50: "div";
  signedByBaseTypographyParagraphMedium42: "div";
  spacer90: "div";
  trailingEnhancer14: "div";
  checkmarkSmall4: "div";
  menuItem19: "div";
  signedByBaseMenuItemOptionMediumStandardEnabled15: "div";
  menuItemControlMediumCheckboxUnchecked15: "div";
  signedByBaseMenuItemControlMediumCheckboxUnchecked15: "div";
  icon15: "div";
  leadingEnhancer15: "div";
  heart37: "div";
  textFrame15: "div";
  leadingText15: "div";
  typography51: "div";
  signedByBaseTypographyParagraphMedium43: "div";
  text101: "div";
  spacer91: "div";
  typography52: "div";
  signedByBaseTypographyParagraphMedium44: "div";
  text102: "div";
  spacer92: "div";
  typography53: "div";
  signedByBaseTypographyParagraphMedium45: "div";
  spacer93: "div";
  trailingEnhancer15: "div";
  heart38: "div";
  menuItem20: "div";
  signedByBaseMenuItemOptionMediumStandardEnabled16: "div";
  menuItemControlMediumCheckboxUnchecked16: "div";
  signedByBaseMenuItemControlMediumCheckboxUnchecked16: "div";
  icon16: "div";
  leadingEnhancer16: "div";
  heart39: "div";
  textFrame16: "div";
  leadingText16: "div";
  typography54: "div";
  signedByBaseTypographyParagraphMedium46: "div";
  text103: "div";
  spacer94: "div";
  typography55: "div";
  signedByBaseTypographyParagraphMedium47: "div";
  text104: "div";
  spacer95: "div";
  typography56: "div";
  signedByBaseTypographyParagraphMedium48: "div";
  spacer96: "div";
  trailingEnhancer16: "div";
  heart40: "div";
  scrollBar4: "div";
  model6: typeof DropDown;
  buttons4: "div";
  button13: typeof Button;
  frame1073713927: "div";
  frame1073713933: "div";
  button14: typeof Button;
  button15: "div";
  button16: "div";
  accueilDashboard: "div";
  leftMenu: typeof LeftMenu;
  main: "div";
  header: typeof Header;
  main2: "div";
  tabsContainer: typeof TabsContainer;
  tabs: "div";
  tabButton: typeof TabButton;
  tabUnderline: typeof TabUnderline;
  filter: "div";
  buttonFilter: typeof Button;
  buttonAdd2: typeof Button;
  buttonAddDoc: typeof Button;
  _1: typeof TabContent;
  table: "div";
  dataGrid: typeof DataGrid;
  _2: typeof TabContent;
  file: typeof File;
  noDoc: "div";
  noDocuments: "div";
  startCreatingYour: "div";
  bottomMenu: typeof BottomMenu;
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicPositions__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicPositions__VariantsArgs;
    args?: PlasmicPositions__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicPositions__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    // Specify args directly as props
    Omit<PlasmicPositions__ArgsType, ReservedPropsType> &
    // Specify overrides for each element directly as props
    Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    // Specify props for the root element
    Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: PlasmicDescendants[nodeName],
          internalArgPropNames: PlasmicPositions__ArgProps,
          internalVariantPropNames: PlasmicPositions__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicPositions__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicPositions";
  } else {
    func.displayName = `PlasmicPositions.${nodeName}`;
  }
  return func;
}

export const PlasmicPositions = Object.assign(
  // Top-level PlasmicPositions renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    uploadFile: makeNodeComponent("uploadFile"),
    frame1437254034: makeNodeComponent("frame1437254034"),
    name16: makeNodeComponent("name16"),
    frame1437254035: makeNodeComponent("frame1437254035"),
    files2: makeNodeComponent("files2"),
    upload5: makeNodeComponent("upload5"),
    createPosition: makeNodeComponent("createPosition"),
    frame1437254016: makeNodeComponent("frame1437254016"),
    _name: makeNodeComponent("name"),
    frame1437254019: makeNodeComponent("frame1437254019"),
    createPosition2: makeNodeComponent("createPosition2"),
    input: makeNodeComponent("input"),
    textArea: makeNodeComponent("textArea"),
    precisions2: makeNodeComponent("precisions2"),
    select9: makeNodeComponent("select9"),
    generalDescription2: makeNodeComponent("generalDescription2"),
    textAreaInput: makeNodeComponent("textAreaInput"),
    upload: makeNodeComponent("upload"),
    content: makeNodeComponent("content"),
    titre: makeNodeComponent("titre"),
    texinput2: makeNodeComponent("texinput2"),
    date: makeNodeComponent("date"),
    label6: makeNodeComponent("label6"),
    timePicker: makeNodeComponent("timePicker"),
    type: makeNodeComponent("type"),
    budget: makeNodeComponent("budget"),
    comments: makeNodeComponent("comments"),
    input5: makeNodeComponent("input5"),
    name2: makeNodeComponent("name2"),
    datePickerWeb: makeNodeComponent("datePickerWeb"),
    inputSelect: makeNodeComponent("inputSelect"),
    signedByBaseFieldGroupSmall: makeNodeComponent(
      "signedByBaseFieldGroupSmall"
    ),
    endDateCalendar: makeNodeComponent("endDateCalendar"),
    inputElementTextField: makeNodeComponent("inputElementTextField"),
    signedByBaseInputElementTextFieldSmallEnabled: makeNodeComponent(
      "signedByBaseInputElementTextFieldSmallEnabled"
    ),
    leadingArtworkContainer: makeNodeComponent("leadingArtworkContainer"),
    leadingArtwork: makeNodeComponent("leadingArtwork"),
    leadingLabelContainer: makeNodeComponent("leadingLabelContainer"),
    leadingLabel: makeNodeComponent("leadingLabel"),
    signedByBaseTypographyLabelSmall: makeNodeComponent(
      "signedByBaseTypographyLabelSmall"
    ),
    text5: makeNodeComponent("text5"),
    spacer: makeNodeComponent("spacer"),
    inputElementContentText: makeNodeComponent("inputElementContentText"),
    signedByBaseInputElementContentTextSmallOff: makeNodeComponent(
      "signedByBaseInputElementContentTextSmallOff"
    ),
    text6: makeNodeComponent("text6"),
    trailingLabelEnhancer: makeNodeComponent("trailingLabelEnhancer"),
    trailingLabel: makeNodeComponent("trailingLabel"),
    signedByBaseTypographyLabelSmall2: makeNodeComponent(
      "signedByBaseTypographyLabelSmall2"
    ),
    text7: makeNodeComponent("text7"),
    spacer2: makeNodeComponent("spacer2"),
    trailingArtworkContainer: makeNodeComponent("trailingArtworkContainer"),
    trailingArtwork: makeNodeComponent("trailingArtwork"),
    calendar: makeNodeComponent("calendar"),
    signedByBaseInputElementSelectXSmallWebSingleDefaultEnabled:
      makeNodeComponent(
        "signedByBaseInputElementSelectXSmallWebSingleDefaultEnabled"
      ),
    leadingArtworkContainer2: makeNodeComponent("leadingArtworkContainer2"),
    text8: makeNodeComponent("text8"),
    leadingLabelContainer2: makeNodeComponent("leadingLabelContainer2"),
    leadingLabel2: makeNodeComponent("leadingLabel2"),
    signedByBaseTypographyLabelXSmall: makeNodeComponent(
      "signedByBaseTypographyLabelXSmall"
    ),
    text9: makeNodeComponent("text9"),
    spacer3: makeNodeComponent("spacer3"),
    inputElementContentText2: makeNodeComponent("inputElementContentText2"),
    signedByBaseInputElementContentTextXSmallWebOff: makeNodeComponent(
      "signedByBaseInputElementContentTextXSmallWebOff"
    ),
    text10: makeNodeComponent("text10"),
    trailingLabelEnhancer2: makeNodeComponent("trailingLabelEnhancer2"),
    trailingLabel2: makeNodeComponent("trailingLabel2"),
    signedByBaseTypographyLabelXSmall2: makeNodeComponent(
      "signedByBaseTypographyLabelXSmall2"
    ),
    text11: makeNodeComponent("text11"),
    spacer4: makeNodeComponent("spacer4"),
    trailingArtworkContainer2: makeNodeComponent("trailingArtworkContainer2"),
    trailingArtwork2: makeNodeComponent("trailingArtwork2"),
    selectIndicatorContainer: makeNodeComponent("selectIndicatorContainer"),
    chevronIcon: makeNodeComponent("chevronIcon"),
    inputElementHint: makeNodeComponent("inputElementHint"),
    heart: makeNodeComponent("heart"),
    hint: makeNodeComponent("hint"),
    signedByBaseTypographyParagraphSmall: makeNodeComponent(
      "signedByBaseTypographyParagraphSmall"
    ),
    text12: makeNodeComponent("text12"),
    spacer28: makeNodeComponent("spacer28"),
    inputElementSelect: makeNodeComponent("inputElementSelect"),
    signedByBaseInputElementSelectMediumSingleDefaultActive: makeNodeComponent(
      "signedByBaseInputElementSelectMediumSingleDefaultActive"
    ),
    selectFrame: makeNodeComponent("selectFrame"),
    leadingArtworkContainer3: makeNodeComponent("leadingArtworkContainer3"),
    leadingArtwork2: makeNodeComponent("leadingArtwork2"),
    leadingLabelContainer3: makeNodeComponent("leadingLabelContainer3"),
    leadingLabel3: makeNodeComponent("leadingLabel3"),
    signedByBaseTypographyLabelMedium: makeNodeComponent(
      "signedByBaseTypographyLabelMedium"
    ),
    text13: makeNodeComponent("text13"),
    spacer5: makeNodeComponent("spacer5"),
    inputElementContentText3: makeNodeComponent("inputElementContentText3"),
    signedByBaseInputElementContentTextMediumOff: makeNodeComponent(
      "signedByBaseInputElementContentTextMediumOff"
    ),
    text14: makeNodeComponent("text14"),
    trailingLabelEnhancer3: makeNodeComponent("trailingLabelEnhancer3"),
    trailingLabel3: makeNodeComponent("trailingLabel3"),
    signedByBaseTypographyLabelMedium2: makeNodeComponent(
      "signedByBaseTypographyLabelMedium2"
    ),
    text15: makeNodeComponent("text15"),
    spacer6: makeNodeComponent("spacer6"),
    trailingArtworkContainer3: makeNodeComponent("trailingArtworkContainer3"),
    trailingArtwork3: makeNodeComponent("trailingArtwork3"),
    selectIndicatorContainer2: makeNodeComponent("selectIndicatorContainer2"),
    chevronIcon2: makeNodeComponent("chevronIcon2"),
    menu: makeNodeComponent("menu"),
    signedByBaseMenuListMedium: makeNodeComponent("signedByBaseMenuListMedium"),
    menuItem: makeNodeComponent("menuItem"),
    signedByBaseMenuItemSearchMediumNoneEnabled: makeNodeComponent(
      "signedByBaseMenuItemSearchMediumNoneEnabled"
    ),
    searchField: makeNodeComponent("searchField"),
    signedByBaseSearchFieldMediumEnabled: makeNodeComponent(
      "signedByBaseSearchFieldMediumEnabled"
    ),
    inputElementLabel: makeNodeComponent("inputElementLabel"),
    signedByBaseInputElementLabelMedium: makeNodeComponent(
      "signedByBaseInputElementLabelMedium"
    ),
    typography: makeNodeComponent("typography"),
    signedByBaseTypographyLabelMedium3: makeNodeComponent(
      "signedByBaseTypographyLabelMedium3"
    ),
    text16: makeNodeComponent("text16"),
    spacer7: makeNodeComponent("spacer7"),
    characterCountFrame: makeNodeComponent("characterCountFrame"),
    heart2: makeNodeComponent("heart2"),
    typography2: makeNodeComponent("typography2"),
    signedByBaseTypographyLabelMedium4: makeNodeComponent(
      "signedByBaseTypographyLabelMedium4"
    ),
    text17: makeNodeComponent("text17"),
    spacer8: makeNodeComponent("spacer8"),
    inputElementTextField2: makeNodeComponent("inputElementTextField2"),
    signedByBaseInputElementTextFieldMediumEnabled: makeNodeComponent(
      "signedByBaseInputElementTextFieldMediumEnabled"
    ),
    leadingArtworkContainer4: makeNodeComponent("leadingArtworkContainer4"),
    search: makeNodeComponent("search"),
    leadingLabelContainer4: makeNodeComponent("leadingLabelContainer4"),
    leadingLabel4: makeNodeComponent("leadingLabel4"),
    signedByBaseTypographyLabelMedium5: makeNodeComponent(
      "signedByBaseTypographyLabelMedium5"
    ),
    text18: makeNodeComponent("text18"),
    spacer9: makeNodeComponent("spacer9"),
    inputElementContentText4: makeNodeComponent("inputElementContentText4"),
    signedByBaseInputElementContentTextMediumOff2: makeNodeComponent(
      "signedByBaseInputElementContentTextMediumOff2"
    ),
    text19: makeNodeComponent("text19"),
    trailingLabelEnhancer4: makeNodeComponent("trailingLabelEnhancer4"),
    trailingLabel4: makeNodeComponent("trailingLabel4"),
    signedByBaseTypographyLabelMedium6: makeNodeComponent(
      "signedByBaseTypographyLabelMedium6"
    ),
    text20: makeNodeComponent("text20"),
    spacer10: makeNodeComponent("spacer10"),
    trailingArtworkContainer4: makeNodeComponent("trailingArtworkContainer4"),
    trailingArtwork4: makeNodeComponent("trailingArtwork4"),
    inputElementHint2: makeNodeComponent("inputElementHint2"),
    heart3: makeNodeComponent("heart3"),
    hint2: makeNodeComponent("hint2"),
    signedByBaseTypographyParagraphSmall2: makeNodeComponent(
      "signedByBaseTypographyParagraphSmall2"
    ),
    text21: makeNodeComponent("text21"),
    spacer29: makeNodeComponent("spacer29"),
    menuItem2: makeNodeComponent("menuItem2"),
    signedByBaseMenuItemOptionMediumStandardEnabled: makeNodeComponent(
      "signedByBaseMenuItemOptionMediumStandardEnabled"
    ),
    menuItemControlMediumCheckboxUnchecked: makeNodeComponent(
      "menuItemControlMediumCheckboxUnchecked"
    ),
    signedByBaseMenuItemControlMediumCheckboxUnchecked: makeNodeComponent(
      "signedByBaseMenuItemControlMediumCheckboxUnchecked"
    ),
    icon: makeNodeComponent("icon"),
    leadingEnhancer: makeNodeComponent("leadingEnhancer"),
    heart4: makeNodeComponent("heart4"),
    textFrame: makeNodeComponent("textFrame"),
    leadingText: makeNodeComponent("leadingText"),
    typography3: makeNodeComponent("typography3"),
    signedByBaseTypographyParagraphMedium: makeNodeComponent(
      "signedByBaseTypographyParagraphMedium"
    ),
    text22: makeNodeComponent("text22"),
    spacer11: makeNodeComponent("spacer11"),
    typography4: makeNodeComponent("typography4"),
    signedByBaseTypographyParagraphMedium2: makeNodeComponent(
      "signedByBaseTypographyParagraphMedium2"
    ),
    text23: makeNodeComponent("text23"),
    spacer12: makeNodeComponent("spacer12"),
    typography5: makeNodeComponent("typography5"),
    signedByBaseTypographyParagraphMedium3: makeNodeComponent(
      "signedByBaseTypographyParagraphMedium3"
    ),
    spacer13: makeNodeComponent("spacer13"),
    trailingEnhancer: makeNodeComponent("trailingEnhancer"),
    heart5: makeNodeComponent("heart5"),
    menuItem3: makeNodeComponent("menuItem3"),
    signedByBaseMenuItemOptionMediumStandardEnabled2: makeNodeComponent(
      "signedByBaseMenuItemOptionMediumStandardEnabled2"
    ),
    menuItemControlMediumCheckboxUnchecked2: makeNodeComponent(
      "menuItemControlMediumCheckboxUnchecked2"
    ),
    signedByBaseMenuItemControlMediumCheckboxUnchecked2: makeNodeComponent(
      "signedByBaseMenuItemControlMediumCheckboxUnchecked2"
    ),
    icon2: makeNodeComponent("icon2"),
    leadingEnhancer2: makeNodeComponent("leadingEnhancer2"),
    heart6: makeNodeComponent("heart6"),
    textFrame2: makeNodeComponent("textFrame2"),
    leadingText2: makeNodeComponent("leadingText2"),
    typography6: makeNodeComponent("typography6"),
    signedByBaseTypographyParagraphMedium4: makeNodeComponent(
      "signedByBaseTypographyParagraphMedium4"
    ),
    text24: makeNodeComponent("text24"),
    spacer14: makeNodeComponent("spacer14"),
    typography7: makeNodeComponent("typography7"),
    signedByBaseTypographyParagraphMedium5: makeNodeComponent(
      "signedByBaseTypographyParagraphMedium5"
    ),
    text25: makeNodeComponent("text25"),
    spacer15: makeNodeComponent("spacer15"),
    typography8: makeNodeComponent("typography8"),
    signedByBaseTypographyParagraphMedium6: makeNodeComponent(
      "signedByBaseTypographyParagraphMedium6"
    ),
    spacer16: makeNodeComponent("spacer16"),
    trailingEnhancer2: makeNodeComponent("trailingEnhancer2"),
    checkmarkSmall: makeNodeComponent("checkmarkSmall"),
    menuItem4: makeNodeComponent("menuItem4"),
    signedByBaseMenuItemOptionMediumStandardEnabled3: makeNodeComponent(
      "signedByBaseMenuItemOptionMediumStandardEnabled3"
    ),
    menuItemControlMediumCheckboxUnchecked3: makeNodeComponent(
      "menuItemControlMediumCheckboxUnchecked3"
    ),
    signedByBaseMenuItemControlMediumCheckboxUnchecked3: makeNodeComponent(
      "signedByBaseMenuItemControlMediumCheckboxUnchecked3"
    ),
    icon3: makeNodeComponent("icon3"),
    leadingEnhancer3: makeNodeComponent("leadingEnhancer3"),
    heart7: makeNodeComponent("heart7"),
    textFrame3: makeNodeComponent("textFrame3"),
    leadingText3: makeNodeComponent("leadingText3"),
    typography9: makeNodeComponent("typography9"),
    signedByBaseTypographyParagraphMedium7: makeNodeComponent(
      "signedByBaseTypographyParagraphMedium7"
    ),
    text26: makeNodeComponent("text26"),
    spacer17: makeNodeComponent("spacer17"),
    typography10: makeNodeComponent("typography10"),
    signedByBaseTypographyParagraphMedium8: makeNodeComponent(
      "signedByBaseTypographyParagraphMedium8"
    ),
    text27: makeNodeComponent("text27"),
    spacer18: makeNodeComponent("spacer18"),
    typography11: makeNodeComponent("typography11"),
    signedByBaseTypographyParagraphMedium9: makeNodeComponent(
      "signedByBaseTypographyParagraphMedium9"
    ),
    spacer19: makeNodeComponent("spacer19"),
    trailingEnhancer3: makeNodeComponent("trailingEnhancer3"),
    heart8: makeNodeComponent("heart8"),
    menuItem5: makeNodeComponent("menuItem5"),
    signedByBaseMenuItemOptionMediumStandardEnabled4: makeNodeComponent(
      "signedByBaseMenuItemOptionMediumStandardEnabled4"
    ),
    menuItemControlMediumCheckboxUnchecked4: makeNodeComponent(
      "menuItemControlMediumCheckboxUnchecked4"
    ),
    signedByBaseMenuItemControlMediumCheckboxUnchecked4: makeNodeComponent(
      "signedByBaseMenuItemControlMediumCheckboxUnchecked4"
    ),
    icon4: makeNodeComponent("icon4"),
    leadingEnhancer4: makeNodeComponent("leadingEnhancer4"),
    heart9: makeNodeComponent("heart9"),
    textFrame4: makeNodeComponent("textFrame4"),
    leadingText4: makeNodeComponent("leadingText4"),
    typography12: makeNodeComponent("typography12"),
    signedByBaseTypographyParagraphMedium10: makeNodeComponent(
      "signedByBaseTypographyParagraphMedium10"
    ),
    text28: makeNodeComponent("text28"),
    spacer20: makeNodeComponent("spacer20"),
    typography13: makeNodeComponent("typography13"),
    signedByBaseTypographyParagraphMedium11: makeNodeComponent(
      "signedByBaseTypographyParagraphMedium11"
    ),
    text29: makeNodeComponent("text29"),
    spacer21: makeNodeComponent("spacer21"),
    typography14: makeNodeComponent("typography14"),
    signedByBaseTypographyParagraphMedium12: makeNodeComponent(
      "signedByBaseTypographyParagraphMedium12"
    ),
    spacer22: makeNodeComponent("spacer22"),
    trailingEnhancer4: makeNodeComponent("trailingEnhancer4"),
    heart10: makeNodeComponent("heart10"),
    scrollBar: makeNodeComponent("scrollBar"),
    model: makeNodeComponent("model"),
    buttons: makeNodeComponent("buttons"),
    button: makeNodeComponent("button"),
    frame1073713924: makeNodeComponent("frame1073713924"),
    frame1073713930: makeNodeComponent("frame1073713930"),
    button2: makeNodeComponent("button2"),
    button3: makeNodeComponent("button3"),
    button4: makeNodeComponent("button4"),
    editPosition: makeNodeComponent("editPosition"),
    frame1437254017: makeNodeComponent("frame1437254017"),
    name3: makeNodeComponent("name3"),
    frame1437254020: makeNodeComponent("frame1437254020"),
    editPosition3: makeNodeComponent("editPosition3"),
    input3: makeNodeComponent("input3"),
    textArea2: makeNodeComponent("textArea2"),
    precisions3: makeNodeComponent("precisions3"),
    select10: makeNodeComponent("select10"),
    generalDescription3: makeNodeComponent("generalDescription3"),
    textArea4: makeNodeComponent("textArea4"),
    upload22: makeNodeComponent("upload22"),
    deletePosition2: makeNodeComponent("deletePosition2"),
    frame1437254018: makeNodeComponent("frame1437254018"),
    name7: makeNodeComponent("name7"),
    frame1437254021: makeNodeComponent("frame1437254021"),
    form3: makeNodeComponent("form3"),
    content3: makeNodeComponent("content3"),
    titre3: makeNodeComponent("titre3"),
    texinput23: makeNodeComponent("texinput23"),
    date3: makeNodeComponent("date3"),
    label8: makeNodeComponent("label8"),
    timePicker9: makeNodeComponent("timePicker9"),
    type3: makeNodeComponent("type3"),
    budget3: makeNodeComponent("budget3"),
    comments3: makeNodeComponent("comments3"),
    input9: makeNodeComponent("input9"),
    name6: makeNodeComponent("name6"),
    datePickerWeb3: makeNodeComponent("datePickerWeb3"),
    inputSelect3: makeNodeComponent("inputSelect3"),
    signedByBaseFieldGroupSmall3: makeNodeComponent(
      "signedByBaseFieldGroupSmall3"
    ),
    endDateCalendar3: makeNodeComponent("endDateCalendar3"),
    inputElementTextField5: makeNodeComponent("inputElementTextField5"),
    signedByBaseInputElementTextFieldSmallEnabled3: makeNodeComponent(
      "signedByBaseInputElementTextFieldSmallEnabled3"
    ),
    leadingArtworkContainer9: makeNodeComponent("leadingArtworkContainer9"),
    leadingArtwork5: makeNodeComponent("leadingArtwork5"),
    leadingLabelContainer9: makeNodeComponent("leadingLabelContainer9"),
    leadingLabel9: makeNodeComponent("leadingLabel9"),
    signedByBaseTypographyLabelSmall5: makeNodeComponent(
      "signedByBaseTypographyLabelSmall5"
    ),
    text55: makeNodeComponent("text55"),
    spacer49: makeNodeComponent("spacer49"),
    inputElementContentText9: makeNodeComponent("inputElementContentText9"),
    signedByBaseInputElementContentTextSmallOff3: makeNodeComponent(
      "signedByBaseInputElementContentTextSmallOff3"
    ),
    text56: makeNodeComponent("text56"),
    trailingLabelEnhancer9: makeNodeComponent("trailingLabelEnhancer9"),
    trailingLabel9: makeNodeComponent("trailingLabel9"),
    signedByBaseTypographyLabelSmall6: makeNodeComponent(
      "signedByBaseTypographyLabelSmall6"
    ),
    text57: makeNodeComponent("text57"),
    spacer50: makeNodeComponent("spacer50"),
    trailingArtworkContainer9: makeNodeComponent("trailingArtworkContainer9"),
    trailingArtwork9: makeNodeComponent("trailingArtwork9"),
    calendar3: makeNodeComponent("calendar3"),
    signedByBaseInputElementSelectXSmallWebSingleDefaultEnabled3:
      makeNodeComponent(
        "signedByBaseInputElementSelectXSmallWebSingleDefaultEnabled3"
      ),
    leadingArtworkContainer10: makeNodeComponent("leadingArtworkContainer10"),
    text58: makeNodeComponent("text58"),
    leadingLabelContainer10: makeNodeComponent("leadingLabelContainer10"),
    leadingLabel10: makeNodeComponent("leadingLabel10"),
    signedByBaseTypographyLabelXSmall5: makeNodeComponent(
      "signedByBaseTypographyLabelXSmall5"
    ),
    text59: makeNodeComponent("text59"),
    spacer51: makeNodeComponent("spacer51"),
    inputElementContentText10: makeNodeComponent("inputElementContentText10"),
    signedByBaseInputElementContentTextXSmallWebOff3: makeNodeComponent(
      "signedByBaseInputElementContentTextXSmallWebOff3"
    ),
    text60: makeNodeComponent("text60"),
    trailingLabelEnhancer10: makeNodeComponent("trailingLabelEnhancer10"),
    trailingLabel10: makeNodeComponent("trailingLabel10"),
    signedByBaseTypographyLabelXSmall6: makeNodeComponent(
      "signedByBaseTypographyLabelXSmall6"
    ),
    text61: makeNodeComponent("text61"),
    spacer52: makeNodeComponent("spacer52"),
    trailingArtworkContainer10: makeNodeComponent("trailingArtworkContainer10"),
    trailingArtwork10: makeNodeComponent("trailingArtwork10"),
    selectIndicatorContainer5: makeNodeComponent("selectIndicatorContainer5"),
    chevronIcon5: makeNodeComponent("chevronIcon5"),
    inputElementHint5: makeNodeComponent("inputElementHint5"),
    heart21: makeNodeComponent("heart21"),
    hint5: makeNodeComponent("hint5"),
    signedByBaseTypographyParagraphSmall5: makeNodeComponent(
      "signedByBaseTypographyParagraphSmall5"
    ),
    text62: makeNodeComponent("text62"),
    spacer53: makeNodeComponent("spacer53"),
    inputElementSelect3: makeNodeComponent("inputElementSelect3"),
    signedByBaseInputElementSelectMediumSingleDefaultActive3: makeNodeComponent(
      "signedByBaseInputElementSelectMediumSingleDefaultActive3"
    ),
    selectFrame3: makeNodeComponent("selectFrame3"),
    leadingArtworkContainer11: makeNodeComponent("leadingArtworkContainer11"),
    leadingArtwork6: makeNodeComponent("leadingArtwork6"),
    leadingLabelContainer11: makeNodeComponent("leadingLabelContainer11"),
    leadingLabel11: makeNodeComponent("leadingLabel11"),
    signedByBaseTypographyLabelMedium13: makeNodeComponent(
      "signedByBaseTypographyLabelMedium13"
    ),
    text63: makeNodeComponent("text63"),
    spacer54: makeNodeComponent("spacer54"),
    inputElementContentText11: makeNodeComponent("inputElementContentText11"),
    signedByBaseInputElementContentTextMediumOff5: makeNodeComponent(
      "signedByBaseInputElementContentTextMediumOff5"
    ),
    text64: makeNodeComponent("text64"),
    trailingLabelEnhancer11: makeNodeComponent("trailingLabelEnhancer11"),
    trailingLabel11: makeNodeComponent("trailingLabel11"),
    signedByBaseTypographyLabelMedium14: makeNodeComponent(
      "signedByBaseTypographyLabelMedium14"
    ),
    text65: makeNodeComponent("text65"),
    spacer55: makeNodeComponent("spacer55"),
    trailingArtworkContainer11: makeNodeComponent("trailingArtworkContainer11"),
    trailingArtwork11: makeNodeComponent("trailingArtwork11"),
    selectIndicatorContainer6: makeNodeComponent("selectIndicatorContainer6"),
    chevronIcon6: makeNodeComponent("chevronIcon6"),
    menu3: makeNodeComponent("menu3"),
    signedByBaseMenuListMedium3: makeNodeComponent(
      "signedByBaseMenuListMedium3"
    ),
    menuItem11: makeNodeComponent("menuItem11"),
    signedByBaseMenuItemSearchMediumNoneEnabled3: makeNodeComponent(
      "signedByBaseMenuItemSearchMediumNoneEnabled3"
    ),
    searchField3: makeNodeComponent("searchField3"),
    signedByBaseSearchFieldMediumEnabled3: makeNodeComponent(
      "signedByBaseSearchFieldMediumEnabled3"
    ),
    inputElementLabel3: makeNodeComponent("inputElementLabel3"),
    signedByBaseInputElementLabelMedium3: makeNodeComponent(
      "signedByBaseInputElementLabelMedium3"
    ),
    typography29: makeNodeComponent("typography29"),
    signedByBaseTypographyLabelMedium15: makeNodeComponent(
      "signedByBaseTypographyLabelMedium15"
    ),
    text66: makeNodeComponent("text66"),
    spacer56: makeNodeComponent("spacer56"),
    characterCountFrame3: makeNodeComponent("characterCountFrame3"),
    heart22: makeNodeComponent("heart22"),
    typography30: makeNodeComponent("typography30"),
    signedByBaseTypographyLabelMedium16: makeNodeComponent(
      "signedByBaseTypographyLabelMedium16"
    ),
    text67: makeNodeComponent("text67"),
    spacer57: makeNodeComponent("spacer57"),
    inputElementTextField6: makeNodeComponent("inputElementTextField6"),
    signedByBaseInputElementTextFieldMediumEnabled3: makeNodeComponent(
      "signedByBaseInputElementTextFieldMediumEnabled3"
    ),
    leadingArtworkContainer12: makeNodeComponent("leadingArtworkContainer12"),
    search3: makeNodeComponent("search3"),
    leadingLabelContainer12: makeNodeComponent("leadingLabelContainer12"),
    leadingLabel12: makeNodeComponent("leadingLabel12"),
    signedByBaseTypographyLabelMedium17: makeNodeComponent(
      "signedByBaseTypographyLabelMedium17"
    ),
    text68: makeNodeComponent("text68"),
    spacer58: makeNodeComponent("spacer58"),
    inputElementContentText12: makeNodeComponent("inputElementContentText12"),
    signedByBaseInputElementContentTextMediumOff6: makeNodeComponent(
      "signedByBaseInputElementContentTextMediumOff6"
    ),
    text69: makeNodeComponent("text69"),
    trailingLabelEnhancer12: makeNodeComponent("trailingLabelEnhancer12"),
    trailingLabel12: makeNodeComponent("trailingLabel12"),
    signedByBaseTypographyLabelMedium18: makeNodeComponent(
      "signedByBaseTypographyLabelMedium18"
    ),
    text70: makeNodeComponent("text70"),
    spacer59: makeNodeComponent("spacer59"),
    trailingArtworkContainer12: makeNodeComponent("trailingArtworkContainer12"),
    trailingArtwork12: makeNodeComponent("trailingArtwork12"),
    inputElementHint6: makeNodeComponent("inputElementHint6"),
    heart23: makeNodeComponent("heart23"),
    hint6: makeNodeComponent("hint6"),
    signedByBaseTypographyParagraphSmall6: makeNodeComponent(
      "signedByBaseTypographyParagraphSmall6"
    ),
    text71: makeNodeComponent("text71"),
    spacer60: makeNodeComponent("spacer60"),
    menuItem12: makeNodeComponent("menuItem12"),
    signedByBaseMenuItemOptionMediumStandardEnabled9: makeNodeComponent(
      "signedByBaseMenuItemOptionMediumStandardEnabled9"
    ),
    menuItemControlMediumCheckboxUnchecked9: makeNodeComponent(
      "menuItemControlMediumCheckboxUnchecked9"
    ),
    signedByBaseMenuItemControlMediumCheckboxUnchecked9: makeNodeComponent(
      "signedByBaseMenuItemControlMediumCheckboxUnchecked9"
    ),
    icon9: makeNodeComponent("icon9"),
    leadingEnhancer9: makeNodeComponent("leadingEnhancer9"),
    heart24: makeNodeComponent("heart24"),
    textFrame9: makeNodeComponent("textFrame9"),
    leadingText9: makeNodeComponent("leadingText9"),
    typography31: makeNodeComponent("typography31"),
    signedByBaseTypographyParagraphMedium25: makeNodeComponent(
      "signedByBaseTypographyParagraphMedium25"
    ),
    text72: makeNodeComponent("text72"),
    spacer61: makeNodeComponent("spacer61"),
    typography32: makeNodeComponent("typography32"),
    signedByBaseTypographyParagraphMedium26: makeNodeComponent(
      "signedByBaseTypographyParagraphMedium26"
    ),
    text73: makeNodeComponent("text73"),
    spacer62: makeNodeComponent("spacer62"),
    typography33: makeNodeComponent("typography33"),
    signedByBaseTypographyParagraphMedium27: makeNodeComponent(
      "signedByBaseTypographyParagraphMedium27"
    ),
    spacer63: makeNodeComponent("spacer63"),
    trailingEnhancer9: makeNodeComponent("trailingEnhancer9"),
    heart25: makeNodeComponent("heart25"),
    menuItem13: makeNodeComponent("menuItem13"),
    signedByBaseMenuItemOptionMediumStandardEnabled10: makeNodeComponent(
      "signedByBaseMenuItemOptionMediumStandardEnabled10"
    ),
    menuItemControlMediumCheckboxUnchecked10: makeNodeComponent(
      "menuItemControlMediumCheckboxUnchecked10"
    ),
    signedByBaseMenuItemControlMediumCheckboxUnchecked10: makeNodeComponent(
      "signedByBaseMenuItemControlMediumCheckboxUnchecked10"
    ),
    icon10: makeNodeComponent("icon10"),
    leadingEnhancer10: makeNodeComponent("leadingEnhancer10"),
    heart26: makeNodeComponent("heart26"),
    textFrame10: makeNodeComponent("textFrame10"),
    leadingText10: makeNodeComponent("leadingText10"),
    typography34: makeNodeComponent("typography34"),
    signedByBaseTypographyParagraphMedium28: makeNodeComponent(
      "signedByBaseTypographyParagraphMedium28"
    ),
    text74: makeNodeComponent("text74"),
    spacer64: makeNodeComponent("spacer64"),
    typography35: makeNodeComponent("typography35"),
    signedByBaseTypographyParagraphMedium29: makeNodeComponent(
      "signedByBaseTypographyParagraphMedium29"
    ),
    text75: makeNodeComponent("text75"),
    spacer65: makeNodeComponent("spacer65"),
    typography36: makeNodeComponent("typography36"),
    signedByBaseTypographyParagraphMedium30: makeNodeComponent(
      "signedByBaseTypographyParagraphMedium30"
    ),
    spacer66: makeNodeComponent("spacer66"),
    trailingEnhancer10: makeNodeComponent("trailingEnhancer10"),
    checkmarkSmall3: makeNodeComponent("checkmarkSmall3"),
    menuItem14: makeNodeComponent("menuItem14"),
    signedByBaseMenuItemOptionMediumStandardEnabled11: makeNodeComponent(
      "signedByBaseMenuItemOptionMediumStandardEnabled11"
    ),
    menuItemControlMediumCheckboxUnchecked11: makeNodeComponent(
      "menuItemControlMediumCheckboxUnchecked11"
    ),
    signedByBaseMenuItemControlMediumCheckboxUnchecked11: makeNodeComponent(
      "signedByBaseMenuItemControlMediumCheckboxUnchecked11"
    ),
    icon11: makeNodeComponent("icon11"),
    leadingEnhancer11: makeNodeComponent("leadingEnhancer11"),
    heart27: makeNodeComponent("heart27"),
    textFrame11: makeNodeComponent("textFrame11"),
    leadingText11: makeNodeComponent("leadingText11"),
    typography37: makeNodeComponent("typography37"),
    signedByBaseTypographyParagraphMedium31: makeNodeComponent(
      "signedByBaseTypographyParagraphMedium31"
    ),
    text76: makeNodeComponent("text76"),
    spacer67: makeNodeComponent("spacer67"),
    typography38: makeNodeComponent("typography38"),
    signedByBaseTypographyParagraphMedium32: makeNodeComponent(
      "signedByBaseTypographyParagraphMedium32"
    ),
    text77: makeNodeComponent("text77"),
    spacer68: makeNodeComponent("spacer68"),
    typography39: makeNodeComponent("typography39"),
    signedByBaseTypographyParagraphMedium33: makeNodeComponent(
      "signedByBaseTypographyParagraphMedium33"
    ),
    spacer69: makeNodeComponent("spacer69"),
    trailingEnhancer11: makeNodeComponent("trailingEnhancer11"),
    heart28: makeNodeComponent("heart28"),
    menuItem15: makeNodeComponent("menuItem15"),
    signedByBaseMenuItemOptionMediumStandardEnabled12: makeNodeComponent(
      "signedByBaseMenuItemOptionMediumStandardEnabled12"
    ),
    menuItemControlMediumCheckboxUnchecked12: makeNodeComponent(
      "menuItemControlMediumCheckboxUnchecked12"
    ),
    signedByBaseMenuItemControlMediumCheckboxUnchecked12: makeNodeComponent(
      "signedByBaseMenuItemControlMediumCheckboxUnchecked12"
    ),
    icon12: makeNodeComponent("icon12"),
    leadingEnhancer12: makeNodeComponent("leadingEnhancer12"),
    heart29: makeNodeComponent("heart29"),
    textFrame12: makeNodeComponent("textFrame12"),
    leadingText12: makeNodeComponent("leadingText12"),
    typography40: makeNodeComponent("typography40"),
    signedByBaseTypographyParagraphMedium34: makeNodeComponent(
      "signedByBaseTypographyParagraphMedium34"
    ),
    text78: makeNodeComponent("text78"),
    spacer70: makeNodeComponent("spacer70"),
    typography41: makeNodeComponent("typography41"),
    signedByBaseTypographyParagraphMedium35: makeNodeComponent(
      "signedByBaseTypographyParagraphMedium35"
    ),
    text79: makeNodeComponent("text79"),
    spacer71: makeNodeComponent("spacer71"),
    typography42: makeNodeComponent("typography42"),
    signedByBaseTypographyParagraphMedium36: makeNodeComponent(
      "signedByBaseTypographyParagraphMedium36"
    ),
    spacer72: makeNodeComponent("spacer72"),
    trailingEnhancer12: makeNodeComponent("trailingEnhancer12"),
    heart30: makeNodeComponent("heart30"),
    scrollBar3: makeNodeComponent("scrollBar3"),
    model3: makeNodeComponent("model3"),
    buttons3: makeNodeComponent("buttons3"),
    button9: makeNodeComponent("button9"),
    frame1073713926: makeNodeComponent("frame1073713926"),
    frame1073713932: makeNodeComponent("frame1073713932"),
    button10: makeNodeComponent("button10"),
    button11: makeNodeComponent("button11"),
    button12: makeNodeComponent("button12"),
    duplicate: makeNodeComponent("duplicate"),
    frame1437254022: makeNodeComponent("frame1437254022"),
    name9: makeNodeComponent("name9"),
    frame1437254023: makeNodeComponent("frame1437254023"),
    formDuplicateModel: makeNodeComponent("formDuplicateModel"),
    content4: makeNodeComponent("content4"),
    titre6: makeNodeComponent("titre6"),
    texinput24: makeNodeComponent("texinput24"),
    date4: makeNodeComponent("date4"),
    label9: makeNodeComponent("label9"),
    timePicker10: makeNodeComponent("timePicker10"),
    type6: makeNodeComponent("type6"),
    budget6: makeNodeComponent("budget6"),
    comments4: makeNodeComponent("comments4"),
    input10: makeNodeComponent("input10"),
    name8: makeNodeComponent("name8"),
    datePickerWeb4: makeNodeComponent("datePickerWeb4"),
    inputSelect4: makeNodeComponent("inputSelect4"),
    signedByBaseFieldGroupSmall4: makeNodeComponent(
      "signedByBaseFieldGroupSmall4"
    ),
    endDateCalendar4: makeNodeComponent("endDateCalendar4"),
    inputElementTextField7: makeNodeComponent("inputElementTextField7"),
    signedByBaseInputElementTextFieldSmallEnabled4: makeNodeComponent(
      "signedByBaseInputElementTextFieldSmallEnabled4"
    ),
    leadingArtworkContainer13: makeNodeComponent("leadingArtworkContainer13"),
    leadingArtwork7: makeNodeComponent("leadingArtwork7"),
    leadingLabelContainer13: makeNodeComponent("leadingLabelContainer13"),
    leadingLabel13: makeNodeComponent("leadingLabel13"),
    signedByBaseTypographyLabelSmall7: makeNodeComponent(
      "signedByBaseTypographyLabelSmall7"
    ),
    text80: makeNodeComponent("text80"),
    spacer73: makeNodeComponent("spacer73"),
    inputElementContentText13: makeNodeComponent("inputElementContentText13"),
    signedByBaseInputElementContentTextSmallOff4: makeNodeComponent(
      "signedByBaseInputElementContentTextSmallOff4"
    ),
    text81: makeNodeComponent("text81"),
    trailingLabelEnhancer13: makeNodeComponent("trailingLabelEnhancer13"),
    trailingLabel13: makeNodeComponent("trailingLabel13"),
    signedByBaseTypographyLabelSmall8: makeNodeComponent(
      "signedByBaseTypographyLabelSmall8"
    ),
    text82: makeNodeComponent("text82"),
    spacer74: makeNodeComponent("spacer74"),
    trailingArtworkContainer13: makeNodeComponent("trailingArtworkContainer13"),
    trailingArtwork13: makeNodeComponent("trailingArtwork13"),
    calendar4: makeNodeComponent("calendar4"),
    signedByBaseInputElementSelectXSmallWebSingleDefaultEnabled4:
      makeNodeComponent(
        "signedByBaseInputElementSelectXSmallWebSingleDefaultEnabled4"
      ),
    leadingArtworkContainer14: makeNodeComponent("leadingArtworkContainer14"),
    text83: makeNodeComponent("text83"),
    leadingLabelContainer14: makeNodeComponent("leadingLabelContainer14"),
    leadingLabel14: makeNodeComponent("leadingLabel14"),
    signedByBaseTypographyLabelXSmall7: makeNodeComponent(
      "signedByBaseTypographyLabelXSmall7"
    ),
    text84: makeNodeComponent("text84"),
    spacer75: makeNodeComponent("spacer75"),
    inputElementContentText14: makeNodeComponent("inputElementContentText14"),
    signedByBaseInputElementContentTextXSmallWebOff4: makeNodeComponent(
      "signedByBaseInputElementContentTextXSmallWebOff4"
    ),
    text85: makeNodeComponent("text85"),
    trailingLabelEnhancer14: makeNodeComponent("trailingLabelEnhancer14"),
    trailingLabel14: makeNodeComponent("trailingLabel14"),
    signedByBaseTypographyLabelXSmall8: makeNodeComponent(
      "signedByBaseTypographyLabelXSmall8"
    ),
    text86: makeNodeComponent("text86"),
    spacer76: makeNodeComponent("spacer76"),
    trailingArtworkContainer14: makeNodeComponent("trailingArtworkContainer14"),
    trailingArtwork14: makeNodeComponent("trailingArtwork14"),
    selectIndicatorContainer7: makeNodeComponent("selectIndicatorContainer7"),
    chevronIcon7: makeNodeComponent("chevronIcon7"),
    inputElementHint7: makeNodeComponent("inputElementHint7"),
    heart31: makeNodeComponent("heart31"),
    hint7: makeNodeComponent("hint7"),
    signedByBaseTypographyParagraphSmall7: makeNodeComponent(
      "signedByBaseTypographyParagraphSmall7"
    ),
    text87: makeNodeComponent("text87"),
    spacer77: makeNodeComponent("spacer77"),
    inputElementSelect4: makeNodeComponent("inputElementSelect4"),
    signedByBaseInputElementSelectMediumSingleDefaultActive4: makeNodeComponent(
      "signedByBaseInputElementSelectMediumSingleDefaultActive4"
    ),
    selectFrame4: makeNodeComponent("selectFrame4"),
    leadingArtworkContainer15: makeNodeComponent("leadingArtworkContainer15"),
    leadingArtwork8: makeNodeComponent("leadingArtwork8"),
    leadingLabelContainer15: makeNodeComponent("leadingLabelContainer15"),
    leadingLabel15: makeNodeComponent("leadingLabel15"),
    signedByBaseTypographyLabelMedium19: makeNodeComponent(
      "signedByBaseTypographyLabelMedium19"
    ),
    text88: makeNodeComponent("text88"),
    spacer78: makeNodeComponent("spacer78"),
    inputElementContentText15: makeNodeComponent("inputElementContentText15"),
    signedByBaseInputElementContentTextMediumOff7: makeNodeComponent(
      "signedByBaseInputElementContentTextMediumOff7"
    ),
    text89: makeNodeComponent("text89"),
    trailingLabelEnhancer15: makeNodeComponent("trailingLabelEnhancer15"),
    trailingLabel15: makeNodeComponent("trailingLabel15"),
    signedByBaseTypographyLabelMedium20: makeNodeComponent(
      "signedByBaseTypographyLabelMedium20"
    ),
    text90: makeNodeComponent("text90"),
    spacer79: makeNodeComponent("spacer79"),
    trailingArtworkContainer15: makeNodeComponent("trailingArtworkContainer15"),
    trailingArtwork15: makeNodeComponent("trailingArtwork15"),
    selectIndicatorContainer8: makeNodeComponent("selectIndicatorContainer8"),
    chevronIcon8: makeNodeComponent("chevronIcon8"),
    menu4: makeNodeComponent("menu4"),
    signedByBaseMenuListMedium4: makeNodeComponent(
      "signedByBaseMenuListMedium4"
    ),
    menuItem16: makeNodeComponent("menuItem16"),
    signedByBaseMenuItemSearchMediumNoneEnabled4: makeNodeComponent(
      "signedByBaseMenuItemSearchMediumNoneEnabled4"
    ),
    searchField4: makeNodeComponent("searchField4"),
    signedByBaseSearchFieldMediumEnabled4: makeNodeComponent(
      "signedByBaseSearchFieldMediumEnabled4"
    ),
    inputElementLabel4: makeNodeComponent("inputElementLabel4"),
    signedByBaseInputElementLabelMedium4: makeNodeComponent(
      "signedByBaseInputElementLabelMedium4"
    ),
    typography43: makeNodeComponent("typography43"),
    signedByBaseTypographyLabelMedium21: makeNodeComponent(
      "signedByBaseTypographyLabelMedium21"
    ),
    text91: makeNodeComponent("text91"),
    spacer80: makeNodeComponent("spacer80"),
    characterCountFrame4: makeNodeComponent("characterCountFrame4"),
    heart32: makeNodeComponent("heart32"),
    typography44: makeNodeComponent("typography44"),
    signedByBaseTypographyLabelMedium22: makeNodeComponent(
      "signedByBaseTypographyLabelMedium22"
    ),
    text92: makeNodeComponent("text92"),
    spacer81: makeNodeComponent("spacer81"),
    inputElementTextField8: makeNodeComponent("inputElementTextField8"),
    signedByBaseInputElementTextFieldMediumEnabled4: makeNodeComponent(
      "signedByBaseInputElementTextFieldMediumEnabled4"
    ),
    leadingArtworkContainer16: makeNodeComponent("leadingArtworkContainer16"),
    search4: makeNodeComponent("search4"),
    leadingLabelContainer16: makeNodeComponent("leadingLabelContainer16"),
    leadingLabel16: makeNodeComponent("leadingLabel16"),
    signedByBaseTypographyLabelMedium23: makeNodeComponent(
      "signedByBaseTypographyLabelMedium23"
    ),
    text93: makeNodeComponent("text93"),
    spacer82: makeNodeComponent("spacer82"),
    inputElementContentText16: makeNodeComponent("inputElementContentText16"),
    signedByBaseInputElementContentTextMediumOff8: makeNodeComponent(
      "signedByBaseInputElementContentTextMediumOff8"
    ),
    text94: makeNodeComponent("text94"),
    trailingLabelEnhancer16: makeNodeComponent("trailingLabelEnhancer16"),
    trailingLabel16: makeNodeComponent("trailingLabel16"),
    signedByBaseTypographyLabelMedium24: makeNodeComponent(
      "signedByBaseTypographyLabelMedium24"
    ),
    text95: makeNodeComponent("text95"),
    spacer83: makeNodeComponent("spacer83"),
    trailingArtworkContainer16: makeNodeComponent("trailingArtworkContainer16"),
    trailingArtwork16: makeNodeComponent("trailingArtwork16"),
    inputElementHint8: makeNodeComponent("inputElementHint8"),
    heart33: makeNodeComponent("heart33"),
    hint8: makeNodeComponent("hint8"),
    signedByBaseTypographyParagraphSmall8: makeNodeComponent(
      "signedByBaseTypographyParagraphSmall8"
    ),
    text96: makeNodeComponent("text96"),
    spacer84: makeNodeComponent("spacer84"),
    menuItem17: makeNodeComponent("menuItem17"),
    signedByBaseMenuItemOptionMediumStandardEnabled13: makeNodeComponent(
      "signedByBaseMenuItemOptionMediumStandardEnabled13"
    ),
    menuItemControlMediumCheckboxUnchecked13: makeNodeComponent(
      "menuItemControlMediumCheckboxUnchecked13"
    ),
    signedByBaseMenuItemControlMediumCheckboxUnchecked13: makeNodeComponent(
      "signedByBaseMenuItemControlMediumCheckboxUnchecked13"
    ),
    icon13: makeNodeComponent("icon13"),
    leadingEnhancer13: makeNodeComponent("leadingEnhancer13"),
    heart34: makeNodeComponent("heart34"),
    textFrame13: makeNodeComponent("textFrame13"),
    leadingText13: makeNodeComponent("leadingText13"),
    typography45: makeNodeComponent("typography45"),
    signedByBaseTypographyParagraphMedium37: makeNodeComponent(
      "signedByBaseTypographyParagraphMedium37"
    ),
    text97: makeNodeComponent("text97"),
    spacer85: makeNodeComponent("spacer85"),
    typography46: makeNodeComponent("typography46"),
    signedByBaseTypographyParagraphMedium38: makeNodeComponent(
      "signedByBaseTypographyParagraphMedium38"
    ),
    text98: makeNodeComponent("text98"),
    spacer86: makeNodeComponent("spacer86"),
    typography47: makeNodeComponent("typography47"),
    signedByBaseTypographyParagraphMedium39: makeNodeComponent(
      "signedByBaseTypographyParagraphMedium39"
    ),
    spacer87: makeNodeComponent("spacer87"),
    trailingEnhancer13: makeNodeComponent("trailingEnhancer13"),
    heart35: makeNodeComponent("heart35"),
    menuItem18: makeNodeComponent("menuItem18"),
    signedByBaseMenuItemOptionMediumStandardEnabled14: makeNodeComponent(
      "signedByBaseMenuItemOptionMediumStandardEnabled14"
    ),
    menuItemControlMediumCheckboxUnchecked14: makeNodeComponent(
      "menuItemControlMediumCheckboxUnchecked14"
    ),
    signedByBaseMenuItemControlMediumCheckboxUnchecked14: makeNodeComponent(
      "signedByBaseMenuItemControlMediumCheckboxUnchecked14"
    ),
    icon14: makeNodeComponent("icon14"),
    leadingEnhancer14: makeNodeComponent("leadingEnhancer14"),
    heart36: makeNodeComponent("heart36"),
    textFrame14: makeNodeComponent("textFrame14"),
    leadingText14: makeNodeComponent("leadingText14"),
    typography48: makeNodeComponent("typography48"),
    signedByBaseTypographyParagraphMedium40: makeNodeComponent(
      "signedByBaseTypographyParagraphMedium40"
    ),
    text99: makeNodeComponent("text99"),
    spacer88: makeNodeComponent("spacer88"),
    typography49: makeNodeComponent("typography49"),
    signedByBaseTypographyParagraphMedium41: makeNodeComponent(
      "signedByBaseTypographyParagraphMedium41"
    ),
    text100: makeNodeComponent("text100"),
    spacer89: makeNodeComponent("spacer89"),
    typography50: makeNodeComponent("typography50"),
    signedByBaseTypographyParagraphMedium42: makeNodeComponent(
      "signedByBaseTypographyParagraphMedium42"
    ),
    spacer90: makeNodeComponent("spacer90"),
    trailingEnhancer14: makeNodeComponent("trailingEnhancer14"),
    checkmarkSmall4: makeNodeComponent("checkmarkSmall4"),
    menuItem19: makeNodeComponent("menuItem19"),
    signedByBaseMenuItemOptionMediumStandardEnabled15: makeNodeComponent(
      "signedByBaseMenuItemOptionMediumStandardEnabled15"
    ),
    menuItemControlMediumCheckboxUnchecked15: makeNodeComponent(
      "menuItemControlMediumCheckboxUnchecked15"
    ),
    signedByBaseMenuItemControlMediumCheckboxUnchecked15: makeNodeComponent(
      "signedByBaseMenuItemControlMediumCheckboxUnchecked15"
    ),
    icon15: makeNodeComponent("icon15"),
    leadingEnhancer15: makeNodeComponent("leadingEnhancer15"),
    heart37: makeNodeComponent("heart37"),
    textFrame15: makeNodeComponent("textFrame15"),
    leadingText15: makeNodeComponent("leadingText15"),
    typography51: makeNodeComponent("typography51"),
    signedByBaseTypographyParagraphMedium43: makeNodeComponent(
      "signedByBaseTypographyParagraphMedium43"
    ),
    text101: makeNodeComponent("text101"),
    spacer91: makeNodeComponent("spacer91"),
    typography52: makeNodeComponent("typography52"),
    signedByBaseTypographyParagraphMedium44: makeNodeComponent(
      "signedByBaseTypographyParagraphMedium44"
    ),
    text102: makeNodeComponent("text102"),
    spacer92: makeNodeComponent("spacer92"),
    typography53: makeNodeComponent("typography53"),
    signedByBaseTypographyParagraphMedium45: makeNodeComponent(
      "signedByBaseTypographyParagraphMedium45"
    ),
    spacer93: makeNodeComponent("spacer93"),
    trailingEnhancer15: makeNodeComponent("trailingEnhancer15"),
    heart38: makeNodeComponent("heart38"),
    menuItem20: makeNodeComponent("menuItem20"),
    signedByBaseMenuItemOptionMediumStandardEnabled16: makeNodeComponent(
      "signedByBaseMenuItemOptionMediumStandardEnabled16"
    ),
    menuItemControlMediumCheckboxUnchecked16: makeNodeComponent(
      "menuItemControlMediumCheckboxUnchecked16"
    ),
    signedByBaseMenuItemControlMediumCheckboxUnchecked16: makeNodeComponent(
      "signedByBaseMenuItemControlMediumCheckboxUnchecked16"
    ),
    icon16: makeNodeComponent("icon16"),
    leadingEnhancer16: makeNodeComponent("leadingEnhancer16"),
    heart39: makeNodeComponent("heart39"),
    textFrame16: makeNodeComponent("textFrame16"),
    leadingText16: makeNodeComponent("leadingText16"),
    typography54: makeNodeComponent("typography54"),
    signedByBaseTypographyParagraphMedium46: makeNodeComponent(
      "signedByBaseTypographyParagraphMedium46"
    ),
    text103: makeNodeComponent("text103"),
    spacer94: makeNodeComponent("spacer94"),
    typography55: makeNodeComponent("typography55"),
    signedByBaseTypographyParagraphMedium47: makeNodeComponent(
      "signedByBaseTypographyParagraphMedium47"
    ),
    text104: makeNodeComponent("text104"),
    spacer95: makeNodeComponent("spacer95"),
    typography56: makeNodeComponent("typography56"),
    signedByBaseTypographyParagraphMedium48: makeNodeComponent(
      "signedByBaseTypographyParagraphMedium48"
    ),
    spacer96: makeNodeComponent("spacer96"),
    trailingEnhancer16: makeNodeComponent("trailingEnhancer16"),
    heart40: makeNodeComponent("heart40"),
    scrollBar4: makeNodeComponent("scrollBar4"),
    model6: makeNodeComponent("model6"),
    buttons4: makeNodeComponent("buttons4"),
    button13: makeNodeComponent("button13"),
    frame1073713927: makeNodeComponent("frame1073713927"),
    frame1073713933: makeNodeComponent("frame1073713933"),
    button14: makeNodeComponent("button14"),
    button15: makeNodeComponent("button15"),
    button16: makeNodeComponent("button16"),
    accueilDashboard: makeNodeComponent("accueilDashboard"),
    leftMenu: makeNodeComponent("leftMenu"),
    main: makeNodeComponent("main"),
    header: makeNodeComponent("header"),
    main2: makeNodeComponent("main2"),
    tabsContainer: makeNodeComponent("tabsContainer"),
    tabs: makeNodeComponent("tabs"),
    tabButton: makeNodeComponent("tabButton"),
    tabUnderline: makeNodeComponent("tabUnderline"),
    filter: makeNodeComponent("filter"),
    buttonFilter: makeNodeComponent("buttonFilter"),
    buttonAdd2: makeNodeComponent("buttonAdd2"),
    buttonAddDoc: makeNodeComponent("buttonAddDoc"),
    _1: makeNodeComponent("_1"),
    table: makeNodeComponent("table"),
    dataGrid: makeNodeComponent("dataGrid"),
    _2: makeNodeComponent("_2"),
    file: makeNodeComponent("file"),
    noDoc: makeNodeComponent("noDoc"),
    noDocuments: makeNodeComponent("noDocuments"),
    startCreatingYour: makeNodeComponent("startCreatingYour"),
    bottomMenu: makeNodeComponent("bottomMenu"),

    // Metadata about props expected for PlasmicPositions
    internalVariantProps: PlasmicPositions__VariantProps,
    internalArgProps: PlasmicPositions__ArgProps,

    // Page metadata
    pageMetadata: {
      title: "Positions",
      description: "",
      ogImageSrc: "",
      canonical: ""
    }
  }
);

export default PlasmicPositions;
/* prettier-ignore-end */
