/* eslint-disable */
/* tslint:disable */
// @ts-nocheck
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: 341WB3S6fAjbZggAzyKhr1
// Component: -lmfrn-r2gVM

import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";
import { useRouter } from "next/router";

import {
  Flex as Flex__,
  MultiChoiceArg,
  PlasmicDataSourceContextProvider as PlasmicDataSourceContextProvider__,
  PlasmicIcon as PlasmicIcon__,
  PlasmicImg as PlasmicImg__,
  PlasmicLink as PlasmicLink__,
  PlasmicPageGuard as PlasmicPageGuard__,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  Stack as Stack__,
  StrictProps,
  Trans as Trans__,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants,
  generateOnMutateForSpec,
  generateStateOnChangeProp,
  generateStateOnChangePropForCodeComponents,
  generateStateValueProp,
  get as $stateGet,
  hasVariant,
  initializeCodeComponentStates,
  initializePlasmicStates,
  makeFragment,
  omit,
  pick,
  renderPlasmicSlot,
  set as $stateSet,
  useCurrentUser,
  useDollarState,
  usePlasmicTranslator,
  useTrigger,
  wrapWithClassName
} from "@plasmicapp/react-web";
import {
  DataCtxReader as DataCtxReader__,
  useDataEnv,
  useGlobalActions
} from "@plasmicapp/react-web/lib/host";

import { usePlasmicDataSourceContext } from "@plasmicapp/data-sources-context";
import {
  executePlasmicDataOp,
  usePlasmicDataOp,
  usePlasmicInvalidate
} from "@plasmicapp/react-web/lib/data-sources";

import CreateTask from "../../CreateTask"; // plasmic-import: zV_rzxoZsY7r/component
import CreateDispo from "../../CreateDispo"; // plasmic-import: HVRo_Ra5E0gW/component
import UpdateDispo from "../../UpdateDispo"; // plasmic-import: gIRAoWCoKmMg/component
import UpdateTask from "../../UpdateTask"; // plasmic-import: dNZpqitvFdjI/component
import Modal from "../../Modal"; // plasmic-import: 2dhqWpUZxzEb/component
import { FormWrapper } from "@plasmicpkgs/antd5/skinny/Form";
import { formHelpers as FormWrapper_Helpers } from "@plasmicpkgs/antd5/skinny/Form";
import Button from "../../Button"; // plasmic-import: lcnlii-Mi9bF/component
import { TextInput } from "../../../plasmic-library/forms/TextInput"; // plasmic-import: L-RrflTRMMhf/codeComponent
import { SitexTextInput } from "../../../plasmic-library/forms/SitexTextInput"; // plasmic-import: FXhuSzutgVdR/codeComponent
import { AntdDatePicker } from "@plasmicpkgs/antd5/skinny/registerDatePicker";
import { datePickerHelpers as AntdDatePicker_Helpers } from "@plasmicpkgs/antd5/skinny/registerDatePicker";
import { DropDown } from "../../../plasmic-library/forms/DropDown"; // plasmic-import: iAtbmaEieqny/codeComponent
import LeftMenu from "../../LeftMenu"; // plasmic-import: P7MLNCNmfe0b/component
import Header from "../../Header"; // plasmic-import: 2eAt6bzh0iAt/component
import { TabsContainer } from "@plasmicpkgs/plasmic-tabs";
import { TabButton } from "@plasmicpkgs/plasmic-tabs";
import { TabUnderline } from "@plasmicpkgs/plasmic-tabs";
import { TabContent } from "@plasmicpkgs/plasmic-tabs";
import { DataGrid } from "../../../plasmic-library/ui/data_grid"; // plasmic-import: UgPv5Wh-TKEv/codeComponent
import { UploadWrapper } from "@plasmicpkgs/antd5/skinny/registerUpload";
import { AntdButton } from "@plasmicpkgs/antd5/skinny/registerButton";
import File from "../../File"; // plasmic-import: kvtu7IVvZKcp/component
import BottomMenu from "../../BottomMenu"; // plasmic-import: x-phPVP8sWsV/component
import { Fetcher } from "@plasmicapp/react-web/lib/data-sources";

import { useScreenVariants as useScreenVariantsjdkNhxaWnKvk } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: JdkNHXAWnKVK/globalVariant

import "@plasmicapp/react-web/lib/plasmic.css";

import plasmic_antd_5_hostless_css from "../antd_5_hostless/plasmic.module.css"; // plasmic-import: ohDidvG9XsCeFumugENU3J/projectcss
import projectcss from "./plasmic.module.css"; // plasmic-import: 341WB3S6fAjbZggAzyKhr1/projectcss
import sty from "./PlasmicModele.module.css"; // plasmic-import: -lmfrn-r2gVM/css

import LinkSimpleIcon from "./icons/PlasmicIcon__LinkSimple"; // plasmic-import: j1hFSwL8QFW8/icon
import XIcon from "./icons/PlasmicIcon__X"; // plasmic-import: Ciiq3-41nfH3/icon
import CircleIcon from "./icons/PlasmicIcon__Circle"; // plasmic-import: GXxwbmvNEgwq/icon
import ChevronDownIcon from "./icons/PlasmicIcon__ChevronDown"; // plasmic-import: t_DMhjzzg7u-/icon
import OutlinedIcon from "./icons/PlasmicIcon__Outlined"; // plasmic-import: KSDVg8pxipFP/icon
import FilledIcon from "./icons/PlasmicIcon__Filled"; // plasmic-import: hf9VaFZryDjW/icon
import Outlined2Icon from "./icons/PlasmicIcon__Outlined2"; // plasmic-import: KUj1hb82lL9p/icon
import Filled2Icon from "./icons/PlasmicIcon__Filled2"; // plasmic-import: bV2Rhoi89Nbo/icon
import Outlined3Icon from "./icons/PlasmicIcon__Outlined3"; // plasmic-import: F-p0hJ-0w6np/icon
import Outlined4Icon from "./icons/PlasmicIcon__Outlined4"; // plasmic-import: 0betudEa-qOp/icon
import Filled3Icon from "./icons/PlasmicIcon__Filled3"; // plasmic-import: 0fyEdXS8b5qB/icon
import Outlined5Icon from "./icons/PlasmicIcon__Outlined5"; // plasmic-import: KELtri34ORgp/icon
import Filled4Icon from "./icons/PlasmicIcon__Filled4"; // plasmic-import: 8jxFG1oHtkw2/icon
import Outlined6Icon from "./icons/PlasmicIcon__Outlined6"; // plasmic-import: vsSe2R3hqp-H/icon
import Outlined7Icon from "./icons/PlasmicIcon__Outlined7"; // plasmic-import: 9CfLC5ZQ7veK/icon
import Outlined8Icon from "./icons/PlasmicIcon__Outlined8"; // plasmic-import: 4UmaWISAaqWp/icon
import Outlined9Icon from "./icons/PlasmicIcon__Outlined9"; // plasmic-import: PWnzGUKO-rFw/icon
import IcRoundPlusIcon from "./icons/PlasmicIcon__IcRoundPlus"; // plasmic-import: 8J79OcNmiVuF/icon
import Line9Icon from "./icons/PlasmicIcon__Line9"; // plasmic-import: IdP8XmyKAA75/icon
import IcTwotoneAppleIcon from "./icons/PlasmicIcon__IcTwotoneApple"; // plasmic-import: EW8lvp8Rllk4/icon
import MdiFacebookIcon from "./icons/PlasmicIcon__MdiFacebook"; // plasmic-import: b-hWlWAZSFUh/icon
import SlidersHorizontalIcon from "./icons/PlasmicIcon__SlidersHorizontal"; // plasmic-import: yp2q2x7jxhyF/icon
import PlusIcon from "./icons/PlasmicIcon__Plus"; // plasmic-import: 7-eqbUfgKU33/icon

createPlasmicElementProxy;

export type PlasmicModele__VariantMembers = {};
export type PlasmicModele__VariantsArgs = {};
type VariantPropType = keyof PlasmicModele__VariantsArgs;
export const PlasmicModele__VariantProps = new Array<VariantPropType>();

export type PlasmicModele__ArgsType = {};
type ArgPropType = keyof PlasmicModele__ArgsType;
export const PlasmicModele__ArgProps = new Array<ArgPropType>();

export type PlasmicModele__OverridesType = {
  root?: Flex__<"div">;
  createTask?: Flex__<typeof CreateTask>;
  createDispo?: Flex__<typeof CreateDispo>;
  updateDispo?: Flex__<typeof UpdateDispo>;
  updateTask2?: Flex__<typeof UpdateTask>;
  deleteDispo?: Flex__<typeof Modal>;
  frame1437254026?: Flex__<"div">;
  name8?: Flex__<"div">;
  frame1437254027?: Flex__<"div">;
  delteDispo?: Flex__<typeof FormWrapper>;
  content4?: Flex__<"div">;
  titre4?: Flex__<typeof TextInput>;
  texinput24?: Flex__<typeof SitexTextInput>;
  date4?: Flex__<"div">;
  label9?: Flex__<"div">;
  timePicker10?: Flex__<typeof AntdDatePicker>;
  type4?: Flex__<typeof DropDown>;
  budget4?: Flex__<typeof TextInput>;
  comments4?: Flex__<typeof TextInput>;
  input15?: Flex__<"div">;
  name9?: Flex__<"div">;
  datePickerWeb4?: Flex__<"div">;
  inputSelect4?: Flex__<"div">;
  signedByBaseFieldGroupSmall4?: Flex__<"div">;
  endDateCalendar4?: Flex__<"div">;
  inputElementTextField7?: Flex__<"div">;
  signedByBaseInputElementTextFieldSmallEnabled4?: Flex__<"div">;
  leadingArtworkContainer13?: Flex__<"div">;
  leadingArtwork7?: Flex__<"div">;
  leadingLabelContainer13?: Flex__<"div">;
  leadingLabel13?: Flex__<"div">;
  signedByBaseTypographyLabelSmall7?: Flex__<"div">;
  text80?: Flex__<"div">;
  spacer73?: Flex__<"div">;
  inputElementContentText13?: Flex__<"div">;
  signedByBaseInputElementContentTextSmallOff4?: Flex__<"div">;
  text81?: Flex__<"div">;
  trailingLabelEnhancer13?: Flex__<"div">;
  trailingLabel13?: Flex__<"div">;
  signedByBaseTypographyLabelSmall8?: Flex__<"div">;
  text82?: Flex__<"div">;
  spacer74?: Flex__<"div">;
  trailingArtworkContainer13?: Flex__<"div">;
  trailingArtwork13?: Flex__<"div">;
  calendar4?: Flex__<"div">;
  signedByBaseInputElementSelectXSmallWebSingleDefaultEnabled4?: Flex__<"div">;
  leadingArtworkContainer14?: Flex__<"div">;
  text83?: Flex__<"div">;
  leadingLabelContainer14?: Flex__<"div">;
  leadingLabel14?: Flex__<"div">;
  signedByBaseTypographyLabelXSmall7?: Flex__<"div">;
  text84?: Flex__<"div">;
  spacer75?: Flex__<"div">;
  inputElementContentText14?: Flex__<"div">;
  signedByBaseInputElementContentTextXSmallWebOff4?: Flex__<"div">;
  text85?: Flex__<"div">;
  trailingLabelEnhancer14?: Flex__<"div">;
  trailingLabel14?: Flex__<"div">;
  signedByBaseTypographyLabelXSmall8?: Flex__<"div">;
  text86?: Flex__<"div">;
  spacer76?: Flex__<"div">;
  trailingArtworkContainer14?: Flex__<"div">;
  trailingArtwork14?: Flex__<"div">;
  selectIndicatorContainer7?: Flex__<"div">;
  chevronIcon7?: Flex__<"div">;
  inputElementHint7?: Flex__<"div">;
  heart31?: Flex__<"div">;
  hint7?: Flex__<"div">;
  signedByBaseTypographyParagraphSmall7?: Flex__<"div">;
  text87?: Flex__<"div">;
  spacer77?: Flex__<"div">;
  inputElementSelect4?: Flex__<"div">;
  signedByBaseInputElementSelectMediumSingleDefaultActive4?: Flex__<"div">;
  selectFrame4?: Flex__<"div">;
  leadingArtworkContainer15?: Flex__<"div">;
  leadingArtwork8?: Flex__<"div">;
  leadingLabelContainer15?: Flex__<"div">;
  leadingLabel15?: Flex__<"div">;
  signedByBaseTypographyLabelMedium19?: Flex__<"div">;
  text88?: Flex__<"div">;
  spacer78?: Flex__<"div">;
  inputElementContentText15?: Flex__<"div">;
  signedByBaseInputElementContentTextMediumOff7?: Flex__<"div">;
  text89?: Flex__<"div">;
  trailingLabelEnhancer15?: Flex__<"div">;
  trailingLabel15?: Flex__<"div">;
  signedByBaseTypographyLabelMedium20?: Flex__<"div">;
  text90?: Flex__<"div">;
  spacer79?: Flex__<"div">;
  trailingArtworkContainer15?: Flex__<"div">;
  trailingArtwork15?: Flex__<"div">;
  selectIndicatorContainer8?: Flex__<"div">;
  chevronIcon8?: Flex__<"div">;
  menu4?: Flex__<"div">;
  signedByBaseMenuListMedium4?: Flex__<"div">;
  menuItem16?: Flex__<"div">;
  signedByBaseMenuItemSearchMediumNoneEnabled4?: Flex__<"div">;
  searchField4?: Flex__<"div">;
  signedByBaseSearchFieldMediumEnabled4?: Flex__<"div">;
  inputElementLabel4?: Flex__<"div">;
  signedByBaseInputElementLabelMedium4?: Flex__<"div">;
  typography43?: Flex__<"div">;
  signedByBaseTypographyLabelMedium21?: Flex__<"div">;
  text91?: Flex__<"div">;
  spacer80?: Flex__<"div">;
  characterCountFrame4?: Flex__<"div">;
  heart32?: Flex__<"div">;
  typography44?: Flex__<"div">;
  signedByBaseTypographyLabelMedium22?: Flex__<"div">;
  text92?: Flex__<"div">;
  spacer81?: Flex__<"div">;
  inputElementTextField8?: Flex__<"div">;
  signedByBaseInputElementTextFieldMediumEnabled4?: Flex__<"div">;
  leadingArtworkContainer16?: Flex__<"div">;
  search4?: Flex__<"div">;
  leadingLabelContainer16?: Flex__<"div">;
  leadingLabel16?: Flex__<"div">;
  signedByBaseTypographyLabelMedium23?: Flex__<"div">;
  text93?: Flex__<"div">;
  spacer82?: Flex__<"div">;
  inputElementContentText16?: Flex__<"div">;
  signedByBaseInputElementContentTextMediumOff8?: Flex__<"div">;
  text94?: Flex__<"div">;
  trailingLabelEnhancer16?: Flex__<"div">;
  trailingLabel16?: Flex__<"div">;
  signedByBaseTypographyLabelMedium24?: Flex__<"div">;
  text95?: Flex__<"div">;
  spacer83?: Flex__<"div">;
  trailingArtworkContainer16?: Flex__<"div">;
  trailingArtwork16?: Flex__<"div">;
  inputElementHint8?: Flex__<"div">;
  heart33?: Flex__<"div">;
  hint8?: Flex__<"div">;
  signedByBaseTypographyParagraphSmall8?: Flex__<"div">;
  text96?: Flex__<"div">;
  spacer84?: Flex__<"div">;
  menuItem17?: Flex__<"div">;
  signedByBaseMenuItemOptionMediumStandardEnabled13?: Flex__<"div">;
  menuItemControlMediumCheckboxUnchecked13?: Flex__<"div">;
  signedByBaseMenuItemControlMediumCheckboxUnchecked13?: Flex__<"div">;
  icon13?: Flex__<"div">;
  leadingEnhancer13?: Flex__<"div">;
  heart34?: Flex__<"div">;
  textFrame13?: Flex__<"div">;
  leadingText13?: Flex__<"div">;
  typography45?: Flex__<"div">;
  signedByBaseTypographyParagraphMedium37?: Flex__<"div">;
  text97?: Flex__<"div">;
  spacer85?: Flex__<"div">;
  typography46?: Flex__<"div">;
  signedByBaseTypographyParagraphMedium38?: Flex__<"div">;
  text98?: Flex__<"div">;
  spacer86?: Flex__<"div">;
  typography47?: Flex__<"div">;
  signedByBaseTypographyParagraphMedium39?: Flex__<"div">;
  spacer87?: Flex__<"div">;
  trailingEnhancer13?: Flex__<"div">;
  heart35?: Flex__<"div">;
  menuItem18?: Flex__<"div">;
  signedByBaseMenuItemOptionMediumStandardEnabled14?: Flex__<"div">;
  menuItemControlMediumCheckboxUnchecked14?: Flex__<"div">;
  signedByBaseMenuItemControlMediumCheckboxUnchecked14?: Flex__<"div">;
  icon14?: Flex__<"div">;
  leadingEnhancer14?: Flex__<"div">;
  heart36?: Flex__<"div">;
  textFrame14?: Flex__<"div">;
  leadingText14?: Flex__<"div">;
  typography48?: Flex__<"div">;
  signedByBaseTypographyParagraphMedium40?: Flex__<"div">;
  text99?: Flex__<"div">;
  spacer88?: Flex__<"div">;
  typography49?: Flex__<"div">;
  signedByBaseTypographyParagraphMedium41?: Flex__<"div">;
  text100?: Flex__<"div">;
  spacer89?: Flex__<"div">;
  typography50?: Flex__<"div">;
  signedByBaseTypographyParagraphMedium42?: Flex__<"div">;
  spacer90?: Flex__<"div">;
  trailingEnhancer14?: Flex__<"div">;
  checkmarkSmall4?: Flex__<"div">;
  menuItem19?: Flex__<"div">;
  signedByBaseMenuItemOptionMediumStandardEnabled15?: Flex__<"div">;
  menuItemControlMediumCheckboxUnchecked15?: Flex__<"div">;
  signedByBaseMenuItemControlMediumCheckboxUnchecked15?: Flex__<"div">;
  icon15?: Flex__<"div">;
  leadingEnhancer15?: Flex__<"div">;
  heart37?: Flex__<"div">;
  textFrame15?: Flex__<"div">;
  leadingText15?: Flex__<"div">;
  typography51?: Flex__<"div">;
  signedByBaseTypographyParagraphMedium43?: Flex__<"div">;
  text101?: Flex__<"div">;
  spacer91?: Flex__<"div">;
  typography52?: Flex__<"div">;
  signedByBaseTypographyParagraphMedium44?: Flex__<"div">;
  text102?: Flex__<"div">;
  spacer92?: Flex__<"div">;
  typography53?: Flex__<"div">;
  signedByBaseTypographyParagraphMedium45?: Flex__<"div">;
  spacer93?: Flex__<"div">;
  trailingEnhancer15?: Flex__<"div">;
  heart38?: Flex__<"div">;
  menuItem20?: Flex__<"div">;
  signedByBaseMenuItemOptionMediumStandardEnabled16?: Flex__<"div">;
  menuItemControlMediumCheckboxUnchecked16?: Flex__<"div">;
  signedByBaseMenuItemControlMediumCheckboxUnchecked16?: Flex__<"div">;
  icon16?: Flex__<"div">;
  leadingEnhancer16?: Flex__<"div">;
  heart39?: Flex__<"div">;
  textFrame16?: Flex__<"div">;
  leadingText16?: Flex__<"div">;
  typography54?: Flex__<"div">;
  signedByBaseTypographyParagraphMedium46?: Flex__<"div">;
  text103?: Flex__<"div">;
  spacer94?: Flex__<"div">;
  typography55?: Flex__<"div">;
  signedByBaseTypographyParagraphMedium47?: Flex__<"div">;
  text104?: Flex__<"div">;
  spacer95?: Flex__<"div">;
  typography56?: Flex__<"div">;
  signedByBaseTypographyParagraphMedium48?: Flex__<"div">;
  spacer96?: Flex__<"div">;
  trailingEnhancer16?: Flex__<"div">;
  heart40?: Flex__<"div">;
  scrollBar4?: Flex__<"div">;
  model4?: Flex__<typeof DropDown>;
  buttons4?: Flex__<"div">;
  button13?: Flex__<typeof Button>;
  frame1073713927?: Flex__<"div">;
  frame1073713933?: Flex__<"div">;
  button14?: Flex__<typeof Button>;
  button15?: Flex__<"div">;
  button16?: Flex__<"div">;
  deleteTaskRunsheet?: Flex__<typeof Modal>;
  frame1437254018?: Flex__<"div">;
  name5?: Flex__<"div">;
  frame1437254021?: Flex__<"div">;
  form3?: Flex__<typeof FormWrapper>;
  content3?: Flex__<"div">;
  titre3?: Flex__<typeof TextInput>;
  texinput23?: Flex__<typeof SitexTextInput>;
  date3?: Flex__<"div">;
  label8?: Flex__<"div">;
  timePicker9?: Flex__<typeof AntdDatePicker>;
  type3?: Flex__<typeof DropDown>;
  budget3?: Flex__<typeof TextInput>;
  comments3?: Flex__<typeof TextInput>;
  input9?: Flex__<"div">;
  name6?: Flex__<"div">;
  datePickerWeb3?: Flex__<"div">;
  inputSelect3?: Flex__<"div">;
  signedByBaseFieldGroupSmall3?: Flex__<"div">;
  endDateCalendar3?: Flex__<"div">;
  inputElementTextField5?: Flex__<"div">;
  signedByBaseInputElementTextFieldSmallEnabled3?: Flex__<"div">;
  leadingArtworkContainer9?: Flex__<"div">;
  leadingArtwork5?: Flex__<"div">;
  leadingLabelContainer9?: Flex__<"div">;
  leadingLabel9?: Flex__<"div">;
  signedByBaseTypographyLabelSmall5?: Flex__<"div">;
  text55?: Flex__<"div">;
  spacer49?: Flex__<"div">;
  inputElementContentText9?: Flex__<"div">;
  signedByBaseInputElementContentTextSmallOff3?: Flex__<"div">;
  text56?: Flex__<"div">;
  trailingLabelEnhancer9?: Flex__<"div">;
  trailingLabel9?: Flex__<"div">;
  signedByBaseTypographyLabelSmall6?: Flex__<"div">;
  text57?: Flex__<"div">;
  spacer50?: Flex__<"div">;
  trailingArtworkContainer9?: Flex__<"div">;
  trailingArtwork9?: Flex__<"div">;
  calendar3?: Flex__<"div">;
  signedByBaseInputElementSelectXSmallWebSingleDefaultEnabled3?: Flex__<"div">;
  leadingArtworkContainer10?: Flex__<"div">;
  text58?: Flex__<"div">;
  leadingLabelContainer10?: Flex__<"div">;
  leadingLabel10?: Flex__<"div">;
  signedByBaseTypographyLabelXSmall5?: Flex__<"div">;
  text59?: Flex__<"div">;
  spacer51?: Flex__<"div">;
  inputElementContentText10?: Flex__<"div">;
  signedByBaseInputElementContentTextXSmallWebOff3?: Flex__<"div">;
  text60?: Flex__<"div">;
  trailingLabelEnhancer10?: Flex__<"div">;
  trailingLabel10?: Flex__<"div">;
  signedByBaseTypographyLabelXSmall6?: Flex__<"div">;
  text61?: Flex__<"div">;
  spacer52?: Flex__<"div">;
  trailingArtworkContainer10?: Flex__<"div">;
  trailingArtwork10?: Flex__<"div">;
  selectIndicatorContainer5?: Flex__<"div">;
  chevronIcon5?: Flex__<"div">;
  inputElementHint5?: Flex__<"div">;
  heart21?: Flex__<"div">;
  hint5?: Flex__<"div">;
  signedByBaseTypographyParagraphSmall5?: Flex__<"div">;
  text62?: Flex__<"div">;
  spacer53?: Flex__<"div">;
  inputElementSelect3?: Flex__<"div">;
  signedByBaseInputElementSelectMediumSingleDefaultActive3?: Flex__<"div">;
  selectFrame3?: Flex__<"div">;
  leadingArtworkContainer11?: Flex__<"div">;
  leadingArtwork6?: Flex__<"div">;
  leadingLabelContainer11?: Flex__<"div">;
  leadingLabel11?: Flex__<"div">;
  signedByBaseTypographyLabelMedium13?: Flex__<"div">;
  text63?: Flex__<"div">;
  spacer54?: Flex__<"div">;
  inputElementContentText11?: Flex__<"div">;
  signedByBaseInputElementContentTextMediumOff5?: Flex__<"div">;
  text64?: Flex__<"div">;
  trailingLabelEnhancer11?: Flex__<"div">;
  trailingLabel11?: Flex__<"div">;
  signedByBaseTypographyLabelMedium14?: Flex__<"div">;
  text65?: Flex__<"div">;
  spacer55?: Flex__<"div">;
  trailingArtworkContainer11?: Flex__<"div">;
  trailingArtwork11?: Flex__<"div">;
  selectIndicatorContainer6?: Flex__<"div">;
  chevronIcon6?: Flex__<"div">;
  menu3?: Flex__<"div">;
  signedByBaseMenuListMedium3?: Flex__<"div">;
  menuItem11?: Flex__<"div">;
  signedByBaseMenuItemSearchMediumNoneEnabled3?: Flex__<"div">;
  searchField3?: Flex__<"div">;
  signedByBaseSearchFieldMediumEnabled3?: Flex__<"div">;
  inputElementLabel3?: Flex__<"div">;
  signedByBaseInputElementLabelMedium3?: Flex__<"div">;
  typography29?: Flex__<"div">;
  signedByBaseTypographyLabelMedium15?: Flex__<"div">;
  text66?: Flex__<"div">;
  spacer56?: Flex__<"div">;
  characterCountFrame3?: Flex__<"div">;
  heart22?: Flex__<"div">;
  typography30?: Flex__<"div">;
  signedByBaseTypographyLabelMedium16?: Flex__<"div">;
  text67?: Flex__<"div">;
  spacer57?: Flex__<"div">;
  inputElementTextField6?: Flex__<"div">;
  signedByBaseInputElementTextFieldMediumEnabled3?: Flex__<"div">;
  leadingArtworkContainer12?: Flex__<"div">;
  search3?: Flex__<"div">;
  leadingLabelContainer12?: Flex__<"div">;
  leadingLabel12?: Flex__<"div">;
  signedByBaseTypographyLabelMedium17?: Flex__<"div">;
  text68?: Flex__<"div">;
  spacer58?: Flex__<"div">;
  inputElementContentText12?: Flex__<"div">;
  signedByBaseInputElementContentTextMediumOff6?: Flex__<"div">;
  text69?: Flex__<"div">;
  trailingLabelEnhancer12?: Flex__<"div">;
  trailingLabel12?: Flex__<"div">;
  signedByBaseTypographyLabelMedium18?: Flex__<"div">;
  text70?: Flex__<"div">;
  spacer59?: Flex__<"div">;
  trailingArtworkContainer12?: Flex__<"div">;
  trailingArtwork12?: Flex__<"div">;
  inputElementHint6?: Flex__<"div">;
  heart23?: Flex__<"div">;
  hint6?: Flex__<"div">;
  signedByBaseTypographyParagraphSmall6?: Flex__<"div">;
  text71?: Flex__<"div">;
  spacer60?: Flex__<"div">;
  menuItem12?: Flex__<"div">;
  signedByBaseMenuItemOptionMediumStandardEnabled9?: Flex__<"div">;
  menuItemControlMediumCheckboxUnchecked9?: Flex__<"div">;
  signedByBaseMenuItemControlMediumCheckboxUnchecked9?: Flex__<"div">;
  icon9?: Flex__<"div">;
  leadingEnhancer9?: Flex__<"div">;
  heart24?: Flex__<"div">;
  textFrame9?: Flex__<"div">;
  leadingText9?: Flex__<"div">;
  typography31?: Flex__<"div">;
  signedByBaseTypographyParagraphMedium25?: Flex__<"div">;
  text72?: Flex__<"div">;
  spacer61?: Flex__<"div">;
  typography32?: Flex__<"div">;
  signedByBaseTypographyParagraphMedium26?: Flex__<"div">;
  text73?: Flex__<"div">;
  spacer62?: Flex__<"div">;
  typography33?: Flex__<"div">;
  signedByBaseTypographyParagraphMedium27?: Flex__<"div">;
  spacer63?: Flex__<"div">;
  trailingEnhancer9?: Flex__<"div">;
  heart25?: Flex__<"div">;
  menuItem13?: Flex__<"div">;
  signedByBaseMenuItemOptionMediumStandardEnabled10?: Flex__<"div">;
  menuItemControlMediumCheckboxUnchecked10?: Flex__<"div">;
  signedByBaseMenuItemControlMediumCheckboxUnchecked10?: Flex__<"div">;
  icon10?: Flex__<"div">;
  leadingEnhancer10?: Flex__<"div">;
  heart26?: Flex__<"div">;
  textFrame10?: Flex__<"div">;
  leadingText10?: Flex__<"div">;
  typography34?: Flex__<"div">;
  signedByBaseTypographyParagraphMedium28?: Flex__<"div">;
  text74?: Flex__<"div">;
  spacer64?: Flex__<"div">;
  typography35?: Flex__<"div">;
  signedByBaseTypographyParagraphMedium29?: Flex__<"div">;
  text75?: Flex__<"div">;
  spacer65?: Flex__<"div">;
  typography36?: Flex__<"div">;
  signedByBaseTypographyParagraphMedium30?: Flex__<"div">;
  spacer66?: Flex__<"div">;
  trailingEnhancer10?: Flex__<"div">;
  checkmarkSmall3?: Flex__<"div">;
  menuItem14?: Flex__<"div">;
  signedByBaseMenuItemOptionMediumStandardEnabled11?: Flex__<"div">;
  menuItemControlMediumCheckboxUnchecked11?: Flex__<"div">;
  signedByBaseMenuItemControlMediumCheckboxUnchecked11?: Flex__<"div">;
  icon11?: Flex__<"div">;
  leadingEnhancer11?: Flex__<"div">;
  heart27?: Flex__<"div">;
  textFrame11?: Flex__<"div">;
  leadingText11?: Flex__<"div">;
  typography37?: Flex__<"div">;
  signedByBaseTypographyParagraphMedium31?: Flex__<"div">;
  text76?: Flex__<"div">;
  spacer67?: Flex__<"div">;
  typography38?: Flex__<"div">;
  signedByBaseTypographyParagraphMedium32?: Flex__<"div">;
  text77?: Flex__<"div">;
  spacer68?: Flex__<"div">;
  typography39?: Flex__<"div">;
  signedByBaseTypographyParagraphMedium33?: Flex__<"div">;
  spacer69?: Flex__<"div">;
  trailingEnhancer11?: Flex__<"div">;
  heart28?: Flex__<"div">;
  menuItem15?: Flex__<"div">;
  signedByBaseMenuItemOptionMediumStandardEnabled12?: Flex__<"div">;
  menuItemControlMediumCheckboxUnchecked12?: Flex__<"div">;
  signedByBaseMenuItemControlMediumCheckboxUnchecked12?: Flex__<"div">;
  icon12?: Flex__<"div">;
  leadingEnhancer12?: Flex__<"div">;
  heart29?: Flex__<"div">;
  textFrame12?: Flex__<"div">;
  leadingText12?: Flex__<"div">;
  typography40?: Flex__<"div">;
  signedByBaseTypographyParagraphMedium34?: Flex__<"div">;
  text78?: Flex__<"div">;
  spacer70?: Flex__<"div">;
  typography41?: Flex__<"div">;
  signedByBaseTypographyParagraphMedium35?: Flex__<"div">;
  text79?: Flex__<"div">;
  spacer71?: Flex__<"div">;
  typography42?: Flex__<"div">;
  signedByBaseTypographyParagraphMedium36?: Flex__<"div">;
  spacer72?: Flex__<"div">;
  trailingEnhancer12?: Flex__<"div">;
  heart30?: Flex__<"div">;
  scrollBar3?: Flex__<"div">;
  model3?: Flex__<typeof DropDown>;
  buttons3?: Flex__<"div">;
  button9?: Flex__<typeof Button>;
  frame1073713926?: Flex__<"div">;
  frame1073713932?: Flex__<"div">;
  button10?: Flex__<typeof Button>;
  button11?: Flex__<"div">;
  button12?: Flex__<"div">;
  duplicateTaskRunsheet2?: Flex__<typeof Modal>;
  frame1437254028?: Flex__<"div">;
  name10?: Flex__<"div">;
  frame1437254029?: Flex__<"div">;
  duplicateRs?: Flex__<typeof FormWrapper>;
  content5?: Flex__<"div">;
  titre5?: Flex__<typeof TextInput>;
  texinput25?: Flex__<typeof SitexTextInput>;
  date5?: Flex__<"div">;
  label10?: Flex__<"div">;
  timePicker11?: Flex__<typeof AntdDatePicker>;
  type5?: Flex__<typeof DropDown>;
  budget5?: Flex__<typeof TextInput>;
  comments5?: Flex__<typeof TextInput>;
  input16?: Flex__<"div">;
  name11?: Flex__<"div">;
  datePickerWeb5?: Flex__<"div">;
  inputSelect5?: Flex__<"div">;
  signedByBaseFieldGroupSmall5?: Flex__<"div">;
  endDateCalendar5?: Flex__<"div">;
  inputElementTextField9?: Flex__<"div">;
  signedByBaseInputElementTextFieldSmallEnabled5?: Flex__<"div">;
  leadingArtworkContainer17?: Flex__<"div">;
  leadingArtwork9?: Flex__<"div">;
  leadingLabelContainer17?: Flex__<"div">;
  leadingLabel17?: Flex__<"div">;
  signedByBaseTypographyLabelSmall9?: Flex__<"div">;
  text105?: Flex__<"div">;
  spacer97?: Flex__<"div">;
  inputElementContentText17?: Flex__<"div">;
  signedByBaseInputElementContentTextSmallOff5?: Flex__<"div">;
  text106?: Flex__<"div">;
  trailingLabelEnhancer17?: Flex__<"div">;
  trailingLabel17?: Flex__<"div">;
  signedByBaseTypographyLabelSmall10?: Flex__<"div">;
  text107?: Flex__<"div">;
  spacer98?: Flex__<"div">;
  trailingArtworkContainer17?: Flex__<"div">;
  trailingArtwork17?: Flex__<"div">;
  calendar5?: Flex__<"div">;
  signedByBaseInputElementSelectXSmallWebSingleDefaultEnabled5?: Flex__<"div">;
  leadingArtworkContainer18?: Flex__<"div">;
  text108?: Flex__<"div">;
  leadingLabelContainer18?: Flex__<"div">;
  leadingLabel18?: Flex__<"div">;
  signedByBaseTypographyLabelXSmall9?: Flex__<"div">;
  text109?: Flex__<"div">;
  spacer99?: Flex__<"div">;
  inputElementContentText18?: Flex__<"div">;
  signedByBaseInputElementContentTextXSmallWebOff5?: Flex__<"div">;
  text110?: Flex__<"div">;
  trailingLabelEnhancer18?: Flex__<"div">;
  trailingLabel18?: Flex__<"div">;
  signedByBaseTypographyLabelXSmall10?: Flex__<"div">;
  text111?: Flex__<"div">;
  spacer100?: Flex__<"div">;
  trailingArtworkContainer18?: Flex__<"div">;
  trailingArtwork18?: Flex__<"div">;
  selectIndicatorContainer9?: Flex__<"div">;
  chevronIcon9?: Flex__<"div">;
  inputElementHint9?: Flex__<"div">;
  heart41?: Flex__<"div">;
  hint9?: Flex__<"div">;
  signedByBaseTypographyParagraphSmall9?: Flex__<"div">;
  text112?: Flex__<"div">;
  spacer101?: Flex__<"div">;
  inputElementSelect5?: Flex__<"div">;
  signedByBaseInputElementSelectMediumSingleDefaultActive5?: Flex__<"div">;
  selectFrame5?: Flex__<"div">;
  leadingArtworkContainer19?: Flex__<"div">;
  leadingArtwork10?: Flex__<"div">;
  leadingLabelContainer19?: Flex__<"div">;
  leadingLabel19?: Flex__<"div">;
  signedByBaseTypographyLabelMedium25?: Flex__<"div">;
  text113?: Flex__<"div">;
  spacer102?: Flex__<"div">;
  inputElementContentText19?: Flex__<"div">;
  signedByBaseInputElementContentTextMediumOff9?: Flex__<"div">;
  text114?: Flex__<"div">;
  trailingLabelEnhancer19?: Flex__<"div">;
  trailingLabel19?: Flex__<"div">;
  signedByBaseTypographyLabelMedium26?: Flex__<"div">;
  text115?: Flex__<"div">;
  spacer103?: Flex__<"div">;
  trailingArtworkContainer19?: Flex__<"div">;
  trailingArtwork19?: Flex__<"div">;
  selectIndicatorContainer10?: Flex__<"div">;
  chevronIcon10?: Flex__<"div">;
  menu5?: Flex__<"div">;
  signedByBaseMenuListMedium5?: Flex__<"div">;
  menuItem21?: Flex__<"div">;
  signedByBaseMenuItemSearchMediumNoneEnabled5?: Flex__<"div">;
  searchField5?: Flex__<"div">;
  signedByBaseSearchFieldMediumEnabled5?: Flex__<"div">;
  inputElementLabel5?: Flex__<"div">;
  signedByBaseInputElementLabelMedium5?: Flex__<"div">;
  typography57?: Flex__<"div">;
  signedByBaseTypographyLabelMedium27?: Flex__<"div">;
  text116?: Flex__<"div">;
  spacer104?: Flex__<"div">;
  characterCountFrame5?: Flex__<"div">;
  heart42?: Flex__<"div">;
  typography58?: Flex__<"div">;
  signedByBaseTypographyLabelMedium28?: Flex__<"div">;
  text117?: Flex__<"div">;
  spacer105?: Flex__<"div">;
  inputElementTextField10?: Flex__<"div">;
  signedByBaseInputElementTextFieldMediumEnabled5?: Flex__<"div">;
  leadingArtworkContainer20?: Flex__<"div">;
  search5?: Flex__<"div">;
  leadingLabelContainer20?: Flex__<"div">;
  leadingLabel20?: Flex__<"div">;
  signedByBaseTypographyLabelMedium29?: Flex__<"div">;
  text118?: Flex__<"div">;
  spacer106?: Flex__<"div">;
  inputElementContentText20?: Flex__<"div">;
  signedByBaseInputElementContentTextMediumOff10?: Flex__<"div">;
  text119?: Flex__<"div">;
  trailingLabelEnhancer20?: Flex__<"div">;
  trailingLabel20?: Flex__<"div">;
  signedByBaseTypographyLabelMedium30?: Flex__<"div">;
  text120?: Flex__<"div">;
  spacer107?: Flex__<"div">;
  trailingArtworkContainer20?: Flex__<"div">;
  trailingArtwork20?: Flex__<"div">;
  inputElementHint10?: Flex__<"div">;
  heart43?: Flex__<"div">;
  hint10?: Flex__<"div">;
  signedByBaseTypographyParagraphSmall10?: Flex__<"div">;
  text121?: Flex__<"div">;
  spacer108?: Flex__<"div">;
  menuItem22?: Flex__<"div">;
  signedByBaseMenuItemOptionMediumStandardEnabled17?: Flex__<"div">;
  menuItemControlMediumCheckboxUnchecked17?: Flex__<"div">;
  signedByBaseMenuItemControlMediumCheckboxUnchecked17?: Flex__<"div">;
  icon17?: Flex__<"div">;
  leadingEnhancer17?: Flex__<"div">;
  heart44?: Flex__<"div">;
  textFrame17?: Flex__<"div">;
  leadingText17?: Flex__<"div">;
  typography59?: Flex__<"div">;
  signedByBaseTypographyParagraphMedium49?: Flex__<"div">;
  text122?: Flex__<"div">;
  spacer109?: Flex__<"div">;
  typography60?: Flex__<"div">;
  signedByBaseTypographyParagraphMedium50?: Flex__<"div">;
  text123?: Flex__<"div">;
  spacer110?: Flex__<"div">;
  typography61?: Flex__<"div">;
  signedByBaseTypographyParagraphMedium51?: Flex__<"div">;
  spacer111?: Flex__<"div">;
  trailingEnhancer17?: Flex__<"div">;
  heart45?: Flex__<"div">;
  menuItem23?: Flex__<"div">;
  signedByBaseMenuItemOptionMediumStandardEnabled18?: Flex__<"div">;
  menuItemControlMediumCheckboxUnchecked18?: Flex__<"div">;
  signedByBaseMenuItemControlMediumCheckboxUnchecked18?: Flex__<"div">;
  icon18?: Flex__<"div">;
  leadingEnhancer18?: Flex__<"div">;
  heart46?: Flex__<"div">;
  textFrame18?: Flex__<"div">;
  leadingText18?: Flex__<"div">;
  typography62?: Flex__<"div">;
  signedByBaseTypographyParagraphMedium52?: Flex__<"div">;
  text124?: Flex__<"div">;
  spacer112?: Flex__<"div">;
  typography63?: Flex__<"div">;
  signedByBaseTypographyParagraphMedium53?: Flex__<"div">;
  text125?: Flex__<"div">;
  spacer113?: Flex__<"div">;
  typography64?: Flex__<"div">;
  signedByBaseTypographyParagraphMedium54?: Flex__<"div">;
  spacer114?: Flex__<"div">;
  trailingEnhancer18?: Flex__<"div">;
  checkmarkSmall5?: Flex__<"div">;
  menuItem24?: Flex__<"div">;
  signedByBaseMenuItemOptionMediumStandardEnabled19?: Flex__<"div">;
  menuItemControlMediumCheckboxUnchecked19?: Flex__<"div">;
  signedByBaseMenuItemControlMediumCheckboxUnchecked19?: Flex__<"div">;
  icon19?: Flex__<"div">;
  leadingEnhancer19?: Flex__<"div">;
  heart47?: Flex__<"div">;
  textFrame19?: Flex__<"div">;
  leadingText19?: Flex__<"div">;
  typography65?: Flex__<"div">;
  signedByBaseTypographyParagraphMedium55?: Flex__<"div">;
  text126?: Flex__<"div">;
  spacer115?: Flex__<"div">;
  typography66?: Flex__<"div">;
  signedByBaseTypographyParagraphMedium56?: Flex__<"div">;
  text127?: Flex__<"div">;
  spacer116?: Flex__<"div">;
  typography67?: Flex__<"div">;
  signedByBaseTypographyParagraphMedium57?: Flex__<"div">;
  spacer117?: Flex__<"div">;
  trailingEnhancer19?: Flex__<"div">;
  heart48?: Flex__<"div">;
  menuItem25?: Flex__<"div">;
  signedByBaseMenuItemOptionMediumStandardEnabled20?: Flex__<"div">;
  menuItemControlMediumCheckboxUnchecked20?: Flex__<"div">;
  signedByBaseMenuItemControlMediumCheckboxUnchecked20?: Flex__<"div">;
  icon20?: Flex__<"div">;
  leadingEnhancer20?: Flex__<"div">;
  heart49?: Flex__<"div">;
  textFrame20?: Flex__<"div">;
  leadingText20?: Flex__<"div">;
  typography68?: Flex__<"div">;
  signedByBaseTypographyParagraphMedium58?: Flex__<"div">;
  text128?: Flex__<"div">;
  spacer118?: Flex__<"div">;
  typography69?: Flex__<"div">;
  signedByBaseTypographyParagraphMedium59?: Flex__<"div">;
  text129?: Flex__<"div">;
  spacer119?: Flex__<"div">;
  typography70?: Flex__<"div">;
  signedByBaseTypographyParagraphMedium60?: Flex__<"div">;
  spacer120?: Flex__<"div">;
  trailingEnhancer20?: Flex__<"div">;
  heart50?: Flex__<"div">;
  scrollBar5?: Flex__<"div">;
  model5?: Flex__<typeof DropDown>;
  buttons5?: Flex__<"div">;
  button17?: Flex__<typeof Button>;
  frame1073713928?: Flex__<"div">;
  frame1073713934?: Flex__<"div">;
  button18?: Flex__<typeof Button>;
  button19?: Flex__<"div">;
  button20?: Flex__<"div">;
  duplicateDispo3?: Flex__<typeof Modal>;
  frame1437254030?: Flex__<"div">;
  name12?: Flex__<"div">;
  frame1437254031?: Flex__<"div">;
  duplicateDispo2?: Flex__<typeof FormWrapper>;
  content6?: Flex__<"div">;
  titre6?: Flex__<typeof TextInput>;
  texinput26?: Flex__<typeof SitexTextInput>;
  date6?: Flex__<"div">;
  label11?: Flex__<"div">;
  timePicker12?: Flex__<typeof AntdDatePicker>;
  type6?: Flex__<typeof DropDown>;
  budget6?: Flex__<typeof TextInput>;
  comments6?: Flex__<typeof TextInput>;
  input17?: Flex__<"div">;
  name13?: Flex__<"div">;
  datePickerWeb6?: Flex__<"div">;
  inputSelect6?: Flex__<"div">;
  signedByBaseFieldGroupSmall6?: Flex__<"div">;
  endDateCalendar6?: Flex__<"div">;
  inputElementTextField11?: Flex__<"div">;
  signedByBaseInputElementTextFieldSmallEnabled6?: Flex__<"div">;
  leadingArtworkContainer21?: Flex__<"div">;
  leadingArtwork11?: Flex__<"div">;
  leadingLabelContainer21?: Flex__<"div">;
  leadingLabel21?: Flex__<"div">;
  signedByBaseTypographyLabelSmall11?: Flex__<"div">;
  text130?: Flex__<"div">;
  spacer121?: Flex__<"div">;
  inputElementContentText21?: Flex__<"div">;
  signedByBaseInputElementContentTextSmallOff6?: Flex__<"div">;
  text131?: Flex__<"div">;
  trailingLabelEnhancer21?: Flex__<"div">;
  trailingLabel21?: Flex__<"div">;
  signedByBaseTypographyLabelSmall12?: Flex__<"div">;
  text132?: Flex__<"div">;
  spacer122?: Flex__<"div">;
  trailingArtworkContainer21?: Flex__<"div">;
  trailingArtwork21?: Flex__<"div">;
  calendar6?: Flex__<"div">;
  signedByBaseInputElementSelectXSmallWebSingleDefaultEnabled6?: Flex__<"div">;
  leadingArtworkContainer22?: Flex__<"div">;
  text133?: Flex__<"div">;
  leadingLabelContainer22?: Flex__<"div">;
  leadingLabel22?: Flex__<"div">;
  signedByBaseTypographyLabelXSmall11?: Flex__<"div">;
  text134?: Flex__<"div">;
  spacer123?: Flex__<"div">;
  inputElementContentText22?: Flex__<"div">;
  signedByBaseInputElementContentTextXSmallWebOff6?: Flex__<"div">;
  text135?: Flex__<"div">;
  trailingLabelEnhancer22?: Flex__<"div">;
  trailingLabel22?: Flex__<"div">;
  signedByBaseTypographyLabelXSmall12?: Flex__<"div">;
  text136?: Flex__<"div">;
  spacer124?: Flex__<"div">;
  trailingArtworkContainer22?: Flex__<"div">;
  trailingArtwork22?: Flex__<"div">;
  selectIndicatorContainer11?: Flex__<"div">;
  chevronIcon11?: Flex__<"div">;
  inputElementHint11?: Flex__<"div">;
  heart51?: Flex__<"div">;
  hint11?: Flex__<"div">;
  signedByBaseTypographyParagraphSmall11?: Flex__<"div">;
  text137?: Flex__<"div">;
  spacer125?: Flex__<"div">;
  inputElementSelect6?: Flex__<"div">;
  signedByBaseInputElementSelectMediumSingleDefaultActive6?: Flex__<"div">;
  selectFrame6?: Flex__<"div">;
  leadingArtworkContainer23?: Flex__<"div">;
  leadingArtwork12?: Flex__<"div">;
  leadingLabelContainer23?: Flex__<"div">;
  leadingLabel23?: Flex__<"div">;
  signedByBaseTypographyLabelMedium31?: Flex__<"div">;
  text138?: Flex__<"div">;
  spacer126?: Flex__<"div">;
  inputElementContentText23?: Flex__<"div">;
  signedByBaseInputElementContentTextMediumOff11?: Flex__<"div">;
  text139?: Flex__<"div">;
  trailingLabelEnhancer23?: Flex__<"div">;
  trailingLabel23?: Flex__<"div">;
  signedByBaseTypographyLabelMedium32?: Flex__<"div">;
  text140?: Flex__<"div">;
  spacer127?: Flex__<"div">;
  trailingArtworkContainer23?: Flex__<"div">;
  trailingArtwork23?: Flex__<"div">;
  selectIndicatorContainer12?: Flex__<"div">;
  chevronIcon12?: Flex__<"div">;
  menu6?: Flex__<"div">;
  signedByBaseMenuListMedium6?: Flex__<"div">;
  menuItem26?: Flex__<"div">;
  signedByBaseMenuItemSearchMediumNoneEnabled6?: Flex__<"div">;
  searchField6?: Flex__<"div">;
  signedByBaseSearchFieldMediumEnabled6?: Flex__<"div">;
  inputElementLabel6?: Flex__<"div">;
  signedByBaseInputElementLabelMedium6?: Flex__<"div">;
  typography71?: Flex__<"div">;
  signedByBaseTypographyLabelMedium33?: Flex__<"div">;
  text141?: Flex__<"div">;
  spacer128?: Flex__<"div">;
  characterCountFrame6?: Flex__<"div">;
  heart52?: Flex__<"div">;
  typography72?: Flex__<"div">;
  signedByBaseTypographyLabelMedium34?: Flex__<"div">;
  text142?: Flex__<"div">;
  spacer129?: Flex__<"div">;
  inputElementTextField12?: Flex__<"div">;
  signedByBaseInputElementTextFieldMediumEnabled6?: Flex__<"div">;
  leadingArtworkContainer24?: Flex__<"div">;
  search6?: Flex__<"div">;
  leadingLabelContainer24?: Flex__<"div">;
  leadingLabel24?: Flex__<"div">;
  signedByBaseTypographyLabelMedium35?: Flex__<"div">;
  text143?: Flex__<"div">;
  spacer130?: Flex__<"div">;
  inputElementContentText24?: Flex__<"div">;
  signedByBaseInputElementContentTextMediumOff12?: Flex__<"div">;
  text144?: Flex__<"div">;
  trailingLabelEnhancer24?: Flex__<"div">;
  trailingLabel24?: Flex__<"div">;
  signedByBaseTypographyLabelMedium36?: Flex__<"div">;
  text145?: Flex__<"div">;
  spacer131?: Flex__<"div">;
  trailingArtworkContainer24?: Flex__<"div">;
  trailingArtwork24?: Flex__<"div">;
  inputElementHint12?: Flex__<"div">;
  heart53?: Flex__<"div">;
  hint12?: Flex__<"div">;
  signedByBaseTypographyParagraphSmall12?: Flex__<"div">;
  text146?: Flex__<"div">;
  spacer132?: Flex__<"div">;
  menuItem27?: Flex__<"div">;
  signedByBaseMenuItemOptionMediumStandardEnabled21?: Flex__<"div">;
  menuItemControlMediumCheckboxUnchecked21?: Flex__<"div">;
  signedByBaseMenuItemControlMediumCheckboxUnchecked21?: Flex__<"div">;
  icon21?: Flex__<"div">;
  leadingEnhancer21?: Flex__<"div">;
  heart54?: Flex__<"div">;
  textFrame21?: Flex__<"div">;
  leadingText21?: Flex__<"div">;
  typography73?: Flex__<"div">;
  signedByBaseTypographyParagraphMedium61?: Flex__<"div">;
  text147?: Flex__<"div">;
  spacer133?: Flex__<"div">;
  typography74?: Flex__<"div">;
  signedByBaseTypographyParagraphMedium62?: Flex__<"div">;
  text148?: Flex__<"div">;
  spacer134?: Flex__<"div">;
  typography75?: Flex__<"div">;
  signedByBaseTypographyParagraphMedium63?: Flex__<"div">;
  spacer135?: Flex__<"div">;
  trailingEnhancer21?: Flex__<"div">;
  heart55?: Flex__<"div">;
  menuItem28?: Flex__<"div">;
  signedByBaseMenuItemOptionMediumStandardEnabled22?: Flex__<"div">;
  menuItemControlMediumCheckboxUnchecked22?: Flex__<"div">;
  signedByBaseMenuItemControlMediumCheckboxUnchecked22?: Flex__<"div">;
  icon22?: Flex__<"div">;
  leadingEnhancer22?: Flex__<"div">;
  heart56?: Flex__<"div">;
  textFrame22?: Flex__<"div">;
  leadingText22?: Flex__<"div">;
  typography76?: Flex__<"div">;
  signedByBaseTypographyParagraphMedium64?: Flex__<"div">;
  text149?: Flex__<"div">;
  spacer136?: Flex__<"div">;
  typography77?: Flex__<"div">;
  signedByBaseTypographyParagraphMedium65?: Flex__<"div">;
  text150?: Flex__<"div">;
  spacer137?: Flex__<"div">;
  typography78?: Flex__<"div">;
  signedByBaseTypographyParagraphMedium66?: Flex__<"div">;
  spacer138?: Flex__<"div">;
  trailingEnhancer22?: Flex__<"div">;
  checkmarkSmall6?: Flex__<"div">;
  menuItem29?: Flex__<"div">;
  signedByBaseMenuItemOptionMediumStandardEnabled23?: Flex__<"div">;
  menuItemControlMediumCheckboxUnchecked23?: Flex__<"div">;
  signedByBaseMenuItemControlMediumCheckboxUnchecked23?: Flex__<"div">;
  icon23?: Flex__<"div">;
  leadingEnhancer23?: Flex__<"div">;
  heart57?: Flex__<"div">;
  textFrame23?: Flex__<"div">;
  leadingText23?: Flex__<"div">;
  typography79?: Flex__<"div">;
  signedByBaseTypographyParagraphMedium67?: Flex__<"div">;
  text151?: Flex__<"div">;
  spacer139?: Flex__<"div">;
  typography80?: Flex__<"div">;
  signedByBaseTypographyParagraphMedium68?: Flex__<"div">;
  text152?: Flex__<"div">;
  spacer140?: Flex__<"div">;
  typography81?: Flex__<"div">;
  signedByBaseTypographyParagraphMedium69?: Flex__<"div">;
  spacer141?: Flex__<"div">;
  trailingEnhancer23?: Flex__<"div">;
  heart58?: Flex__<"div">;
  menuItem30?: Flex__<"div">;
  signedByBaseMenuItemOptionMediumStandardEnabled24?: Flex__<"div">;
  menuItemControlMediumCheckboxUnchecked24?: Flex__<"div">;
  signedByBaseMenuItemControlMediumCheckboxUnchecked24?: Flex__<"div">;
  icon24?: Flex__<"div">;
  leadingEnhancer24?: Flex__<"div">;
  heart59?: Flex__<"div">;
  textFrame24?: Flex__<"div">;
  leadingText24?: Flex__<"div">;
  typography82?: Flex__<"div">;
  signedByBaseTypographyParagraphMedium70?: Flex__<"div">;
  text153?: Flex__<"div">;
  spacer142?: Flex__<"div">;
  typography83?: Flex__<"div">;
  signedByBaseTypographyParagraphMedium71?: Flex__<"div">;
  text154?: Flex__<"div">;
  spacer143?: Flex__<"div">;
  typography84?: Flex__<"div">;
  signedByBaseTypographyParagraphMedium72?: Flex__<"div">;
  spacer144?: Flex__<"div">;
  trailingEnhancer24?: Flex__<"div">;
  heart60?: Flex__<"div">;
  scrollBar6?: Flex__<"div">;
  model6?: Flex__<typeof DropDown>;
  buttons6?: Flex__<"div">;
  button21?: Flex__<typeof Button>;
  frame1073713929?: Flex__<"div">;
  frame1073713935?: Flex__<"div">;
  button22?: Flex__<typeof Button>;
  button23?: Flex__<"div">;
  button24?: Flex__<"div">;
  container?: Flex__<"div">;
  leftMenu?: Flex__<typeof LeftMenu>;
  main?: Flex__<"div">;
  header2?: Flex__<"div">;
  header?: Flex__<typeof Header>;
  tabsContainer?: Flex__<typeof TabsContainer>;
  mainContainer?: Flex__<"div">;
  tabButtons?: Flex__<"div">;
  tabButton?: Flex__<typeof TabButton>;
  tabUnderline?: Flex__<typeof TabUnderline>;
  filters?: Flex__<"div">;
  buttonFilter?: Flex__<typeof Button>;
  buttonAddAction?: Flex__<typeof Button>;
  buttonAddStaff?: Flex__<typeof Button>;
  buttonAddDoc?: Flex__<typeof Button>;
  tabContainers?: Flex__<"div">;
  _1?: Flex__<typeof TabContent>;
  runsheet?: Flex__<"div">;
  _2?: Flex__<typeof TabContent>;
  dispositif?: Flex__<"div">;
  _3?: Flex__<typeof TabContent>;
  uploadFile?: Flex__<typeof Modal>;
  frame1437254034?: Flex__<"div">;
  name16?: Flex__<"div">;
  frame1437254035?: Flex__<"div">;
  files2?: Flex__<"div">;
  upload5?: Flex__<typeof UploadWrapper>;
  file?: Flex__<typeof File>;
  bottomMenu?: Flex__<typeof BottomMenu>;
};

export interface DefaultModeleProps {}

const $$ = {};

function useNextRouter() {
  try {
    return useRouter();
  } catch {}
  return undefined;
}

function PlasmicModele__RenderFunc(props: {
  variants: PlasmicModele__VariantsArgs;
  args: PlasmicModele__ArgsType;
  overrides: PlasmicModele__OverridesType;
  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;

  const args = React.useMemo(
    () =>
      Object.assign(
        {},
        Object.fromEntries(
          Object.entries(props.args).filter(([_, v]) => v !== undefined)
        )
      ),
    [props.args]
  );

  const $props = {
    ...args,
    ...variants
  };

  const __nextRouter = useNextRouter();

  const $ctx = useDataEnv?.() || {};
  const refsRef = React.useRef({});
  const $refs = refsRef.current;

  const $globalActions = useGlobalActions?.();

  let [$queries, setDollarQueries] = React.useState<
    Record<string, ReturnType<typeof usePlasmicDataOp>>
  >({});
  const stateSpecs: Parameters<typeof useDollarState>[0] = React.useMemo(
    () => [
      {
        path: "newTask",
        type: "private",
        variableType: "boolean",
        initFunc: ({ $props, $state, $queries, $ctx }) => false
      },
      {
        path: "taskId",
        type: "private",
        variableType: "number",
        initFunc: ({ $props, $state, $queries, $ctx }) => 0
      },
      {
        path: "updateTask",
        type: "private",
        variableType: "boolean",
        initFunc: ({ $props, $state, $queries, $ctx }) => false
      },
      {
        path: "kanbanStatus",
        type: "private",
        variableType: "number",
        initFunc: ({ $props, $state, $queries, $ctx }) =>
          (() => {
            try {
              return $state.tabs.activeKey;
            } catch (e) {
              if (
                e instanceof TypeError ||
                e?.plasmicType === "PlasmicUndefinedDataError"
              ) {
                return 1;
              }
              throw e;
            }
          })()
      },
      {
        path: "deleteTask",
        type: "private",
        variableType: "boolean",
        initFunc: ({ $props, $state, $queries, $ctx }) => false
      },
      {
        path: "deleteTaskRunsheet.isOpen",
        type: "private",
        variableType: "boolean",
        initFunc: ({ $props, $state, $queries, $ctx }) =>
          (() => {
            try {
              return $state.deleteTask;
            } catch (e) {
              if (
                e instanceof TypeError ||
                e?.plasmicType === "PlasmicUndefinedDataError"
              ) {
                return undefined;
              }
              throw e;
            }
          })()
      },
      {
        path: "form3.value",
        type: "private",
        variableType: "object",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined,

        refName: "form3",
        onMutate: generateOnMutateForSpec("value", FormWrapper_Helpers)
      },
      {
        path: "form3.isSubmitting",
        type: "private",
        variableType: "boolean",
        initFunc: ({ $props, $state, $queries, $ctx }) => false,

        refName: "form3",
        onMutate: generateOnMutateForSpec("isSubmitting", FormWrapper_Helpers)
      },
      {
        path: "texinput23.value",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined
      },
      {
        path: "texinput23.isInputValid",
        type: "private",
        variableType: "boolean",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined
      },
      {
        path: "timePicker9.value",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined,

        onMutate: generateOnMutateForSpec("value", AntdDatePicker_Helpers)
      },
      {
        path: "newDispo",
        type: "private",
        variableType: "boolean",
        initFunc: ({ $props, $state, $queries, $ctx }) => false
      },
      {
        path: "editDispo",
        type: "private",
        variableType: "boolean",
        initFunc: ({ $props, $state, $queries, $ctx }) => false
      },
      {
        path: "dispoId",
        type: "private",
        variableType: "number",
        initFunc: ({ $props, $state, $queries, $ctx }) => 0
      },
      {
        path: "deleteDispo.isOpen",
        type: "private",
        variableType: "boolean",
        initFunc: ({ $props, $state, $queries, $ctx }) =>
          (() => {
            try {
              return $state.deleteDispo2;
            } catch (e) {
              if (
                e instanceof TypeError ||
                e?.plasmicType === "PlasmicUndefinedDataError"
              ) {
                return undefined;
              }
              throw e;
            }
          })()
      },
      {
        path: "delteDispo.value",
        type: "private",
        variableType: "object",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined,

        refName: "delteDispo",
        onMutate: generateOnMutateForSpec("value", FormWrapper_Helpers)
      },
      {
        path: "delteDispo.isSubmitting",
        type: "private",
        variableType: "boolean",
        initFunc: ({ $props, $state, $queries, $ctx }) => false,

        refName: "delteDispo",
        onMutate: generateOnMutateForSpec("isSubmitting", FormWrapper_Helpers)
      },
      {
        path: "texinput24.value",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined
      },
      {
        path: "texinput24.isInputValid",
        type: "private",
        variableType: "boolean",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined
      },
      {
        path: "timePicker10.value",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined,

        onMutate: generateOnMutateForSpec("value", AntdDatePicker_Helpers)
      },
      {
        path: "deleteDispo2",
        type: "private",
        variableType: "boolean",
        initFunc: ({ $props, $state, $queries, $ctx }) => false
      },
      {
        path: "duplicateTaskRunsheet2.isOpen",
        type: "private",
        variableType: "boolean",
        initFunc: ({ $props, $state, $queries, $ctx }) =>
          (() => {
            try {
              return $state.duplicateRunsheet;
            } catch (e) {
              if (
                e instanceof TypeError ||
                e?.plasmicType === "PlasmicUndefinedDataError"
              ) {
                return undefined;
              }
              throw e;
            }
          })()
      },
      {
        path: "duplicateRs.value",
        type: "private",
        variableType: "object",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined,

        refName: "duplicateRs",
        onMutate: generateOnMutateForSpec("value", FormWrapper_Helpers)
      },
      {
        path: "duplicateRs.isSubmitting",
        type: "private",
        variableType: "boolean",
        initFunc: ({ $props, $state, $queries, $ctx }) => false,

        refName: "duplicateRs",
        onMutate: generateOnMutateForSpec("isSubmitting", FormWrapper_Helpers)
      },
      {
        path: "texinput25.value",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined
      },
      {
        path: "texinput25.isInputValid",
        type: "private",
        variableType: "boolean",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined
      },
      {
        path: "timePicker11.value",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined,

        onMutate: generateOnMutateForSpec("value", AntdDatePicker_Helpers)
      },
      {
        path: "duplicateRunsheet",
        type: "private",
        variableType: "boolean",
        initFunc: ({ $props, $state, $queries, $ctx }) => false
      },
      {
        path: "duplicateDispo",
        type: "private",
        variableType: "boolean",
        initFunc: ({ $props, $state, $queries, $ctx }) => false
      },
      {
        path: "duplicateDispo3.isOpen",
        type: "private",
        variableType: "boolean",
        initFunc: ({ $props, $state, $queries, $ctx }) =>
          (() => {
            try {
              return $state.duplicateDispo;
            } catch (e) {
              if (
                e instanceof TypeError ||
                e?.plasmicType === "PlasmicUndefinedDataError"
              ) {
                return undefined;
              }
              throw e;
            }
          })()
      },
      {
        path: "duplicateDispo2.value",
        type: "private",
        variableType: "object",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined,

        refName: "duplicateDispo2",
        onMutate: generateOnMutateForSpec("value", FormWrapper_Helpers)
      },
      {
        path: "duplicateDispo2.isSubmitting",
        type: "private",
        variableType: "boolean",
        initFunc: ({ $props, $state, $queries, $ctx }) => false,

        refName: "duplicateDispo2",
        onMutate: generateOnMutateForSpec("isSubmitting", FormWrapper_Helpers)
      },
      {
        path: "texinput26.value",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined
      },
      {
        path: "texinput26.isInputValid",
        type: "private",
        variableType: "boolean",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined
      },
      {
        path: "timePicker12.value",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined,

        onMutate: generateOnMutateForSpec("value", AntdDatePicker_Helpers)
      },
      {
        path: "tabs2",
        type: "private",
        variableType: "array",
        initFunc: ({ $props, $state, $queries, $ctx }) => [
          { label: "Actions", id: 1 },
          { label: "Dispositif", id: 2 },
          { label: "Documents", id: 3 }
        ]
      },
      {
        path: "header.operationId",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => 0
      },
      {
        path: "deleteFile",
        type: "private",
        variableType: "boolean",
        initFunc: ({ $props, $state, $queries, $ctx }) => false
      },
      {
        path: "fileId",
        type: "private",
        variableType: "number",
        initFunc: ({ $props, $state, $queries, $ctx }) => 0
      },
      {
        path: "uploadFile.isOpen",
        type: "private",
        variableType: "boolean",
        initFunc: ({ $props, $state, $queries, $ctx }) =>
          (() => {
            try {
              return $state.newDoc;
            } catch (e) {
              if (
                e instanceof TypeError ||
                e?.plasmicType === "PlasmicUndefinedDataError"
              ) {
                return undefined;
              }
              throw e;
            }
          })()
      },
      {
        path: "upload5.files",
        type: "private",
        variableType: "array",
        initFunc: ({ $props, $state, $queries, $ctx }) => []
      },
      {
        path: "newDoc",
        type: "private",
        variableType: "boolean",
        initFunc: ({ $props, $state, $queries, $ctx }) => false
      },
      {
        path: "file[].fileId",
        type: "private",
        variableType: "number"
      },
      {
        path: "file[].type",
        type: "private",
        variableType: "text"
      },
      {
        path: "createTask.open",
        type: "private",
        variableType: "boolean",
        initFunc: ({ $props, $state, $queries, $ctx }) => false
      },
      {
        path: "createDispo.open",
        type: "private",
        variableType: "boolean",
        initFunc: ({ $props, $state, $queries, $ctx }) => false
      },
      {
        path: "updateTask2.open",
        type: "private",
        variableType: "boolean",
        initFunc: ({ $props, $state, $queries, $ctx }) => false
      },
      {
        path: "updateTask2.taskIdUpdate",
        type: "private",
        variableType: "number",
        initFunc: ({ $props, $state, $queries, $ctx }) => 0
      },
      {
        path: "updateTask2.stateTaskDispo",
        type: "private",
        variableType: "array",
        initFunc: ({ $props, $state, $queries, $ctx }) =>
          (() => {
            try {
              return $queries.mdTaskDispo.data;
            } catch (e) {
              if (
                e instanceof TypeError ||
                e?.plasmicType === "PlasmicUndefinedDataError"
              ) {
                return [];
              }
              throw e;
            }
          })()
      },
      {
        path: "updateDispo.open",
        type: "private",
        variableType: "boolean",
        initFunc: ({ $props, $state, $queries, $ctx }) => false
      },
      {
        path: "updateDispo.dispoIdUpdate",
        type: "private",
        variableType: "number",
        initFunc: ({ $props, $state, $queries, $ctx }) => 76
      },
      {
        path: "updateDispo.stateTaskDispo2",
        type: "private",
        variableType: "array",
        initFunc: ({ $props, $state, $queries, $ctx }) =>
          (() => {
            try {
              return $queries.mdTaskDispo.data;
            } catch (e) {
              if (
                e instanceof TypeError ||
                e?.plasmicType === "PlasmicUndefinedDataError"
              ) {
                return undefined;
              }
              throw e;
            }
          })()
      },
      {
        path: "header.runsheet",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => "Runsheet"
      },
      {
        path: "leftMenu.subMenuParams",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined
      },
      {
        path: "updateTask2.dispoDataGrid",
        type: "private",
        variableType: "array",
        initFunc: ({ $props, $state, $queries, $ctx }) => []
      },
      {
        path: "header.mois",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined
      },
      {
        path: "header.userClientId",
        type: "private",
        variableType: "number",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined
      },
      {
        path: "updateDispo.hoursCalculator",
        type: "private",
        variableType: "object",
        initFunc: ({ $props, $state, $queries, $ctx }) =>
          (() => {
            try {
              return $refs.hoursCalculator2.getCurrentResult();
            } catch (e) {
              if (
                e instanceof TypeError ||
                e?.plasmicType === "PlasmicUndefinedDataError"
              ) {
                return {};
              }
              throw e;
            }
          })()
      }
    ],
    [$props, $ctx, $refs]
  );
  const $state = useDollarState(stateSpecs, {
    $props,
    $ctx,
    $queries: $queries,
    $refs
  });
  const dataSourcesCtx = usePlasmicDataSourceContext();
  const plasmicInvalidate = usePlasmicInvalidate();

  const new$Queries: Record<string, ReturnType<typeof usePlasmicDataOp>> = {
    mdTasksModel: usePlasmicDataOp(() => {
      return {
        sourceId: "v6umJuHyep6kPNyCAJjouT",
        opId: "cec3d7bf-5ee9-47a3-ab41-392259ef4090",
        userArgs: {
          filters: [$ctx.params.model_id, $state.header.userClientId]
        },
        cacheKey: `plasmic.$.cec3d7bf-5ee9-47a3-ab41-392259ef4090.$.`,
        invalidatedKeys: null,
        roleId: null
      };
    }),
    mdStaff: usePlasmicDataOp(() => {
      return {
        sourceId: "v6umJuHyep6kPNyCAJjouT",
        opId: "15ae665c-ad4b-4778-b6bd-674cb7a800dd",
        userArgs: {
          query: [$state.header.userClientId]
        },
        cacheKey: `plasmic.$.15ae665c-ad4b-4778-b6bd-674cb7a800dd.$.`,
        invalidatedKeys: null,
        roleId: null
      };
    }),
    mdDispositif: usePlasmicDataOp(() => {
      return {
        sourceId: "v6umJuHyep6kPNyCAJjouT",
        opId: "38496a2c-2970-40cf-bfd9-47a20de7a9d0",
        userArgs: {
          filters: [$ctx.params.model_id, $state.header.userClientId]
        },
        cacheKey: `plasmic.$.38496a2c-2970-40cf-bfd9-47a20de7a9d0.$.`,
        invalidatedKeys: null,
        roleId: null
      };
    }),
    mdPositions: usePlasmicDataOp(() => {
      return {
        sourceId: "v6umJuHyep6kPNyCAJjouT",
        opId: "571ccdeb-8d29-4eff-a446-13bb51d67404",
        userArgs: {
          filters: [$state.header.userClientId]
        },
        cacheKey: `plasmic.$.571ccdeb-8d29-4eff-a446-13bb51d67404.$.`,
        invalidatedKeys: null,
        roleId: null
      };
    }),
    mdTaskDispo: usePlasmicDataOp(() => {
      return {
        sourceId: "v6umJuHyep6kPNyCAJjouT",
        opId: "ae8f6af7-e283-4770-a3e5-c810ebc5351d",
        userArgs: {
          filters: [$ctx.params.model_id]
        },
        cacheKey: `plasmic.$.ae8f6af7-e283-4770-a3e5-c810ebc5351d.$.`,
        invalidatedKeys: null,
        roleId: null
      };
    }),
    mdFiles: usePlasmicDataOp(() => {
      return {
        sourceId: "v6umJuHyep6kPNyCAJjouT",
        opId: "bbc046fa-9e23-4163-bb6f-732f7e5d160f",
        userArgs: {
          filters: [$ctx.params.model_id, $state.header.userClientId]
        },
        cacheKey: `plasmic.$.bbc046fa-9e23-4163-bb6f-732f7e5d160f.$.`,
        invalidatedKeys: null,
        roleId: null
      };
    })
  };
  if (Object.keys(new$Queries).some(k => new$Queries[k] !== $queries[k])) {
    setDollarQueries(new$Queries);

    $queries = new$Queries;
  }

  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariantsjdkNhxaWnKvk()
  });

  return (
    <React.Fragment>
      <Head>
        <meta name="twitter:card" content="summary" />
        <title key="title">{PlasmicModele.pageMetadata.title}</title>
        <meta
          key="og:title"
          property="og:title"
          content={PlasmicModele.pageMetadata.title}
        />
        <meta
          key="twitter:title"
          name="twitter:title"
          content={PlasmicModele.pageMetadata.title}
        />
      </Head>

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            plasmic_antd_5_hostless_css.plasmic_tokens,
            sty.root
          )}
        >
          <CreateTask
            data-plasmic-name={"createTask"}
            data-plasmic-override={overrides.createTask}
            className={classNames("__wab_instance", sty.createTask)}
            clientId={(() => {
              try {
                return $state.header.userClientId;
              } catch (e) {
                if (
                  e instanceof TypeError ||
                  e?.plasmicType === "PlasmicUndefinedDataError"
                ) {
                  return undefined;
                }
                throw e;
              }
            })()}
            dispositif={(() => {
              try {
                return $queries.mdDispositif;
              } catch (e) {
                if (
                  e instanceof TypeError ||
                  e?.plasmicType === "PlasmicUndefinedDataError"
                ) {
                  return undefined;
                }
                throw e;
              }
            })()}
            modelId={(() => {
              try {
                return Number($ctx.params.model_id);
              } catch (e) {
                if (
                  e instanceof TypeError ||
                  e?.plasmicType === "PlasmicUndefinedDataError"
                ) {
                  return undefined;
                }
                throw e;
              }
            })()}
            onOpenChange2={async (...eventArgs: any) => {
              generateStateOnChangeProp($state, ["createTask", "open"]).apply(
                null,
                eventArgs
              );

              if (
                eventArgs.length > 1 &&
                eventArgs[1] &&
                eventArgs[1]._plasmic_state_init_
              ) {
                return;
              }
            }}
            open={generateStateValueProp($state, ["createTask", "open"])}
            positions={(() => {
              try {
                return $queries.mdPositions;
              } catch (e) {
                if (
                  e instanceof TypeError ||
                  e?.plasmicType === "PlasmicUndefinedDataError"
                ) {
                  return undefined;
                }
                throw e;
              }
            })()}
            type={"model"}
          />

          <CreateDispo
            data-plasmic-name={"createDispo"}
            data-plasmic-override={overrides.createDispo}
            className={classNames("__wab_instance", sty.createDispo)}
            clientId={(() => {
              try {
                return $state.header.userClientId;
              } catch (e) {
                if (
                  e instanceof TypeError ||
                  e?.plasmicType === "PlasmicUndefinedDataError"
                ) {
                  return undefined;
                }
                throw e;
              }
            })()}
            modelId={(() => {
              try {
                return Number($ctx.params.model_id);
              } catch (e) {
                if (
                  e instanceof TypeError ||
                  e?.plasmicType === "PlasmicUndefinedDataError"
                ) {
                  return undefined;
                }
                throw e;
              }
            })()}
            onOpenChange={async (...eventArgs: any) => {
              generateStateOnChangeProp($state, ["createDispo", "open"]).apply(
                null,
                eventArgs
              );

              if (
                eventArgs.length > 1 &&
                eventArgs[1] &&
                eventArgs[1]._plasmic_state_init_
              ) {
                return;
              }
            }}
            open={generateStateValueProp($state, ["createDispo", "open"])}
            positions={$queries.mdPositions}
            staff={$queries.mdStaff}
            tasks={$queries.mdTasksModel.data}
            type={"model"}
          />

          <UpdateDispo
            data-plasmic-name={"updateDispo"}
            data-plasmic-override={overrides.updateDispo}
            className={classNames("__wab_instance", sty.updateDispo)}
            clientId={(() => {
              try {
                return $state.header.userClientId;
              } catch (e) {
                if (
                  e instanceof TypeError ||
                  e?.plasmicType === "PlasmicUndefinedDataError"
                ) {
                  return undefined;
                }
                throw e;
              }
            })()}
            dispoIdUpdate={generateStateValueProp($state, [
              "updateDispo",
              "dispoIdUpdate"
            ])}
            dispositif={(() => {
              try {
                return $queries.mdDispositif;
              } catch (e) {
                if (
                  e instanceof TypeError ||
                  e?.plasmicType === "PlasmicUndefinedDataError"
                ) {
                  return undefined;
                }
                throw e;
              }
            })()}
            hoursCalculator={generateStateValueProp($state, [
              "updateDispo",
              "hoursCalculator"
            ])}
            modelId={(() => {
              try {
                return Number($ctx.params.model_id);
              } catch (e) {
                if (
                  e instanceof TypeError ||
                  e?.plasmicType === "PlasmicUndefinedDataError"
                ) {
                  return undefined;
                }
                throw e;
              }
            })()}
            onDispoIdUpdateChange2={async (...eventArgs: any) => {
              generateStateOnChangeProp($state, [
                "updateDispo",
                "dispoIdUpdate"
              ]).apply(null, eventArgs);

              if (
                eventArgs.length > 1 &&
                eventArgs[1] &&
                eventArgs[1]._plasmic_state_init_
              ) {
                return;
              }
            }}
            onHoursCalculatorChange={async (...eventArgs: any) => {
              generateStateOnChangeProp($state, [
                "updateDispo",
                "hoursCalculator"
              ]).apply(null, eventArgs);

              if (
                eventArgs.length > 1 &&
                eventArgs[1] &&
                eventArgs[1]._plasmic_state_init_
              ) {
                return;
              }
            }}
            onOpenChange={async (...eventArgs: any) => {
              generateStateOnChangeProp($state, ["updateDispo", "open"]).apply(
                null,
                eventArgs
              );

              if (
                eventArgs.length > 1 &&
                eventArgs[1] &&
                eventArgs[1]._plasmic_state_init_
              ) {
                return;
              }
            }}
            onStateTaskDispo2Change={async (...eventArgs: any) => {
              generateStateOnChangeProp($state, [
                "updateDispo",
                "stateTaskDispo2"
              ]).apply(null, eventArgs);

              if (
                eventArgs.length > 1 &&
                eventArgs[1] &&
                eventArgs[1]._plasmic_state_init_
              ) {
                return;
              }
            }}
            open={generateStateValueProp($state, ["updateDispo", "open"])}
            positions={(() => {
              try {
                return $queries.mdPositions;
              } catch (e) {
                if (
                  e instanceof TypeError ||
                  e?.plasmicType === "PlasmicUndefinedDataError"
                ) {
                  return undefined;
                }
                throw e;
              }
            })()}
            staff={(() => {
              try {
                return $queries.mdStaff;
              } catch (e) {
                if (
                  e instanceof TypeError ||
                  e?.plasmicType === "PlasmicUndefinedDataError"
                ) {
                  return undefined;
                }
                throw e;
              }
            })()}
            stateTaskDispo2={generateStateValueProp($state, [
              "updateDispo",
              "stateTaskDispo2"
            ])}
            taskDispo={(() => {
              try {
                return $queries.mdTaskDispo;
              } catch (e) {
                if (
                  e instanceof TypeError ||
                  e?.plasmicType === "PlasmicUndefinedDataError"
                ) {
                  return undefined;
                }
                throw e;
              }
            })()}
            tasks={(() => {
              try {
                return $queries.mdTasksModel.data;
              } catch (e) {
                if (
                  e instanceof TypeError ||
                  e?.plasmicType === "PlasmicUndefinedDataError"
                ) {
                  return undefined;
                }
                throw e;
              }
            })()}
            type={"model"}
          />

          <UpdateTask
            data-plasmic-name={"updateTask2"}
            data-plasmic-override={overrides.updateTask2}
            className={classNames("__wab_instance", sty.updateTask2)}
            clientId={(() => {
              try {
                return $state.header.userClientId;
              } catch (e) {
                if (
                  e instanceof TypeError ||
                  e?.plasmicType === "PlasmicUndefinedDataError"
                ) {
                  return undefined;
                }
                throw e;
              }
            })()}
            dispoDataGrid={generateStateValueProp($state, [
              "updateTask2",
              "dispoDataGrid"
            ])}
            dispositif={(() => {
              try {
                return $queries.mdDispositif;
              } catch (e) {
                if (
                  e instanceof TypeError ||
                  e?.plasmicType === "PlasmicUndefinedDataError"
                ) {
                  return undefined;
                }
                throw e;
              }
            })()}
            modelId2={(() => {
              try {
                return Number($ctx.params.model_id);
              } catch (e) {
                if (
                  e instanceof TypeError ||
                  e?.plasmicType === "PlasmicUndefinedDataError"
                ) {
                  return undefined;
                }
                throw e;
              }
            })()}
            onDispoDataGridChange={async (...eventArgs: any) => {
              generateStateOnChangeProp($state, [
                "updateTask2",
                "dispoDataGrid"
              ]).apply(null, eventArgs);

              if (
                eventArgs.length > 1 &&
                eventArgs[1] &&
                eventArgs[1]._plasmic_state_init_
              ) {
                return;
              }
            }}
            onOpenChange={async (...eventArgs: any) => {
              generateStateOnChangeProp($state, ["updateTask2", "open"]).apply(
                null,
                eventArgs
              );

              if (
                eventArgs.length > 1 &&
                eventArgs[1] &&
                eventArgs[1]._plasmic_state_init_
              ) {
                return;
              }
            }}
            onStateTaskDispoChange2={async (...eventArgs: any) => {
              generateStateOnChangeProp($state, [
                "updateTask2",
                "stateTaskDispo"
              ]).apply(null, eventArgs);

              if (
                eventArgs.length > 1 &&
                eventArgs[1] &&
                eventArgs[1]._plasmic_state_init_
              ) {
                return;
              }
            }}
            onTaskIdUpdateChange={async (...eventArgs: any) => {
              generateStateOnChangeProp($state, [
                "updateTask2",
                "taskIdUpdate"
              ]).apply(null, eventArgs);

              if (
                eventArgs.length > 1 &&
                eventArgs[1] &&
                eventArgs[1]._plasmic_state_init_
              ) {
                return;
              }
            }}
            open={generateStateValueProp($state, ["updateTask2", "open"])}
            positions={(() => {
              try {
                return $queries.mdPositions;
              } catch (e) {
                if (
                  e instanceof TypeError ||
                  e?.plasmicType === "PlasmicUndefinedDataError"
                ) {
                  return undefined;
                }
                throw e;
              }
            })()}
            stateTaskDispo={generateStateValueProp($state, [
              "updateTask2",
              "stateTaskDispo"
            ])}
            taskDispo={(() => {
              try {
                return $queries.mdTaskDispo;
              } catch (e) {
                if (
                  e instanceof TypeError ||
                  e?.plasmicType === "PlasmicUndefinedDataError"
                ) {
                  return undefined;
                }
                throw e;
              }
            })()}
            taskIdUpdate={generateStateValueProp($state, [
              "updateTask2",
              "taskIdUpdate"
            ])}
            tasks={(() => {
              try {
                return $queries.mdTasksModel.data;
              } catch (e) {
                if (
                  e instanceof TypeError ||
                  e?.plasmicType === "PlasmicUndefinedDataError"
                ) {
                  return undefined;
                }
                throw e;
              }
            })()}
            type={"model"}
          />

          <Modal
            data-plasmic-name={"deleteDispo"}
            data-plasmic-override={overrides.deleteDispo}
            className={classNames("__wab_instance", sty.deleteDispo)}
            closeOnBackdropClick={true}
            content={
              <React.Fragment>
                {(() => {
                  const child$Props = {
                    className: classNames("__wab_instance", sty.delteDispo),
                    extendedOnValuesChange: async (...eventArgs: any) => {
                      generateStateOnChangePropForCodeComponents(
                        $state,
                        "value",
                        ["delteDispo", "value"],
                        FormWrapper_Helpers
                      ).apply(null, eventArgs);
                    },
                    formItems: [
                      { label: "Name", name: "name", inputType: "Text" },
                      {
                        label: "Message",
                        name: "message",
                        inputType: "Text Area"
                      }
                    ],
                    initialValues: (() => {
                      try {
                        return $queries.mdDispositif.data.find(
                          dispo => Number(dispo.id) == $state.dispoId
                        );
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return undefined;
                        }
                        throw e;
                      }
                    })(),
                    labelCol: { span: 8, horizontalOnly: true },
                    layout: "vertical",
                    mode: "advanced",
                    onFinish: async values => {
                      const $steps = {};

                      $steps["postgresDeleteMany"] = true
                        ? (() => {
                            const actionArgs = {
                              dataOp: {
                                sourceId: "v6umJuHyep6kPNyCAJjouT",
                                opId: "c267cd18-b0b8-4e06-b30e-edce7d68e9e6",
                                userArgs: {
                                  conditions: [$state.dispoId]
                                },
                                cacheKey: null,
                                invalidatedKeys: [
                                  "38496a2c-2970-40cf-bfd9-47a20de7a9d0"
                                ],
                                roleId: null
                              }
                            };
                            return (async ({ dataOp, continueOnError }) => {
                              try {
                                const response = await executePlasmicDataOp(
                                  dataOp,
                                  {
                                    userAuthToken:
                                      dataSourcesCtx?.userAuthToken,
                                    user: dataSourcesCtx?.user
                                  }
                                );
                                await plasmicInvalidate(dataOp.invalidatedKeys);
                                return response;
                              } catch (e) {
                                if (!continueOnError) {
                                  throw e;
                                }
                                return e;
                              }
                            })?.apply(null, [actionArgs]);
                          })()
                        : undefined;
                      if (
                        $steps["postgresDeleteMany"] != null &&
                        typeof $steps["postgresDeleteMany"] === "object" &&
                        typeof $steps["postgresDeleteMany"].then === "function"
                      ) {
                        $steps["postgresDeleteMany"] = await $steps[
                          "postgresDeleteMany"
                        ];
                      }

                      $steps["updateDeleteDispo2"] = true
                        ? (() => {
                            const actionArgs = {
                              variable: {
                                objRoot: $state,
                                variablePath: ["deleteDispo2"]
                              },
                              operation: 0,
                              value: false
                            };
                            return (({
                              variable,
                              value,
                              startIndex,
                              deleteCount
                            }) => {
                              if (!variable) {
                                return;
                              }
                              const { objRoot, variablePath } = variable;

                              $stateSet(objRoot, variablePath, value);
                              return value;
                            })?.apply(null, [actionArgs]);
                          })()
                        : undefined;
                      if (
                        $steps["updateDeleteDispo2"] != null &&
                        typeof $steps["updateDeleteDispo2"] === "object" &&
                        typeof $steps["updateDeleteDispo2"].then === "function"
                      ) {
                        $steps["updateDeleteDispo2"] = await $steps[
                          "updateDeleteDispo2"
                        ];
                      }

                      $steps["invokeGlobalAction"] = true
                        ? (() => {
                            const actionArgs = {
                              args: [
                                "success",
                                "Dispositif supprim\u00e9",
                                undefined,
                                undefined,
                                "bottom"
                              ]
                            };
                            return $globalActions[
                              "plasmic-antd5-config-provider.showNotification"
                            ]?.apply(null, [...actionArgs.args]);
                          })()
                        : undefined;
                      if (
                        $steps["invokeGlobalAction"] != null &&
                        typeof $steps["invokeGlobalAction"] === "object" &&
                        typeof $steps["invokeGlobalAction"].then === "function"
                      ) {
                        $steps["invokeGlobalAction"] = await $steps[
                          "invokeGlobalAction"
                        ];
                      }
                    },
                    onIsSubmittingChange: async (...eventArgs: any) => {
                      generateStateOnChangePropForCodeComponents(
                        $state,
                        "isSubmitting",
                        ["delteDispo", "isSubmitting"],
                        FormWrapper_Helpers
                      ).apply(null, eventArgs);
                    },
                    ref: ref => {
                      $refs["delteDispo"] = ref;
                    },
                    submitSlot: null,
                    wrapperCol: { span: 16, horizontalOnly: true }
                  };
                  initializeCodeComponentStates(
                    $state,
                    [
                      {
                        name: "value",
                        plasmicStateName: "delteDispo.value"
                      },
                      {
                        name: "isSubmitting",
                        plasmicStateName: "delteDispo.isSubmitting"
                      }
                    ],
                    [],
                    FormWrapper_Helpers ?? {},
                    child$Props
                  );

                  return (
                    <FormWrapper
                      data-plasmic-name={"delteDispo"}
                      data-plasmic-override={overrides.delteDispo}
                      {...child$Props}
                    >
                      <Button
                        className={classNames(
                          "__wab_instance",
                          sty.button___0BOHe
                        )}
                        color={"errorDestructive"}
                        disabled={(() => {
                          try {
                            return !$state.dispoId || $state.dispoId === 0;
                          } catch (e) {
                            if (
                              e instanceof TypeError ||
                              e?.plasmicType === "PlasmicUndefinedDataError"
                            ) {
                              return undefined;
                            }
                            throw e;
                          }
                        })()}
                        label={"Supprimer"}
                        submitsForm={true}
                      />
                    </FormWrapper>
                  );
                })()}
                <Stack__
                  as={"div"}
                  data-plasmic-name={"content4"}
                  data-plasmic-override={overrides.content4}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.content4)}
                >
                  <TextInput
                    data-plasmic-name={"titre4"}
                    data-plasmic-override={overrides.titre4}
                    className={classNames("__wab_instance", sty.titre4)}
                    isMulti={false}
                    label={"Titre*"}
                    placeholder={"Titre*"}
                    showIcon={false}
                    showLabel={true}
                    state={"default"}
                    text={``}
                    type={"text"}
                  />

                  <SitexTextInput
                    data-plasmic-name={"texinput24"}
                    data-plasmic-override={overrides.texinput24}
                    className={classNames("__wab_instance", sty.texinput24)}
                    initialValue={generateStateValueProp($state, [
                      "texinput24",
                      "value"
                    ])}
                    onTextChange={async (...eventArgs: any) => {
                      generateStateOnChangeProp($state, [
                        "texinput24",
                        "value"
                      ]).apply(null, eventArgs);
                    }}
                    onValidationChange={async (...eventArgs: any) => {
                      generateStateOnChangeProp($state, [
                        "texinput24",
                        "isInputValid"
                      ]).apply(null, eventArgs);
                    }}
                    placeholder={"Titre*"}
                    prefixedText={"Titre*"}
                    required={true}
                    type={"text"}
                  />

                  <Stack__
                    as={"div"}
                    data-plasmic-name={"date4"}
                    data-plasmic-override={overrides.date4}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.date4)}
                  >
                    <div
                      data-plasmic-name={"label9"}
                      data-plasmic-override={overrides.label9}
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.label9
                      )}
                    >
                      {"Date et heure de d\u00e9but"}
                    </div>
                    {(() => {
                      const child$Props = {
                        allowClear: true,
                        className: classNames(
                          "__wab_instance",
                          sty.timePicker10
                        ),
                        onChange: async (...eventArgs: any) => {
                          generateStateOnChangePropForCodeComponents(
                            $state,
                            "value",
                            ["timePicker10", "value"],
                            AntdDatePicker_Helpers
                          ).apply(null, eventArgs);
                        },
                        popupScopeClassName:
                          sty["timePicker10__datePickerPopup"],
                        showTime: true,
                        value: generateStateValueProp($state, [
                          "timePicker10",
                          "value"
                        ])
                      };
                      initializeCodeComponentStates(
                        $state,
                        [
                          {
                            name: "value",
                            plasmicStateName: "timePicker10.value"
                          }
                        ],
                        [],
                        AntdDatePicker_Helpers ?? {},
                        child$Props
                      );

                      return (
                        <AntdDatePicker
                          data-plasmic-name={"timePicker10"}
                          data-plasmic-override={overrides.timePicker10}
                          {...child$Props}
                        />
                      );
                    })()}
                  </Stack__>
                  <DropDown
                    data-plasmic-name={"type4"}
                    data-plasmic-override={overrides.type4}
                    check={false}
                    className={classNames("__wab_instance", sty.type4)}
                    label={"Type"}
                    options={["Default", "Special"]}
                    showLabel={true}
                    state={"default"}
                    type={"default"}
                  />

                  <TextInput
                    data-plasmic-name={"budget4"}
                    data-plasmic-override={overrides.budget4}
                    className={classNames("__wab_instance", sty.budget4)}
                    isMulti={false}
                    label={"Budget"}
                    placeholder={"\u20ac"}
                    showIcon={false}
                    showLabel={true}
                    state={"default"}
                    text={""}
                    type={"text"}
                  />

                  <TextInput
                    data-plasmic-name={"comments4"}
                    data-plasmic-override={overrides.comments4}
                    className={classNames("__wab_instance", sty.comments4)}
                    isMulti={false}
                    label={"Commentaires"}
                    placeholder={"Commentaires"}
                    showIcon={false}
                    showLabel={true}
                    state={"Placeholder"}
                    text={""}
                    type={"TextArea"}
                  />

                  {false ? (
                    <Stack__
                      as={"div"}
                      data-plasmic-name={"input15"}
                      data-plasmic-override={overrides.input15}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.input15)}
                    >
                      <div
                        data-plasmic-name={"name9"}
                        data-plasmic-override={overrides.name9}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.name9
                        )}
                      >
                        {"Dispositif"}
                      </div>
                      <Stack__
                        as={"div"}
                        data-plasmic-name={"datePickerWeb4"}
                        data-plasmic-override={overrides.datePickerWeb4}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.datePickerWeb4
                        )}
                      >
                        <Stack__
                          as={"div"}
                          data-plasmic-name={"inputSelect4"}
                          data-plasmic-override={overrides.inputSelect4}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.inputSelect4
                          )}
                        >
                          {false ? (
                            <div
                              data-plasmic-name={"signedByBaseFieldGroupSmall4"}
                              data-plasmic-override={
                                overrides.signedByBaseFieldGroupSmall4
                              }
                              className={classNames(
                                projectcss.all,
                                sty.signedByBaseFieldGroupSmall4
                              )}
                            />
                          ) : null}
                          <Stack__
                            as={"div"}
                            data-plasmic-name={"endDateCalendar4"}
                            data-plasmic-override={overrides.endDateCalendar4}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.endDateCalendar4
                            )}
                          >
                            {false ? (
                              <div
                                data-plasmic-name={"inputElementTextField7"}
                                data-plasmic-override={
                                  overrides.inputElementTextField7
                                }
                                className={classNames(
                                  projectcss.all,
                                  sty.inputElementTextField7
                                )}
                              >
                                {false ? (
                                  <div
                                    data-plasmic-name={
                                      "signedByBaseInputElementTextFieldSmallEnabled4"
                                    }
                                    data-plasmic-override={
                                      overrides.signedByBaseInputElementTextFieldSmallEnabled4
                                    }
                                    className={classNames(
                                      projectcss.all,
                                      sty.signedByBaseInputElementTextFieldSmallEnabled4
                                    )}
                                  />
                                ) : null}
                                {false ? (
                                  <div
                                    data-plasmic-name={
                                      "leadingArtworkContainer13"
                                    }
                                    data-plasmic-override={
                                      overrides.leadingArtworkContainer13
                                    }
                                    className={classNames(
                                      projectcss.all,
                                      sty.leadingArtworkContainer13
                                    )}
                                  >
                                    <div
                                      data-plasmic-name={"leadingArtwork7"}
                                      data-plasmic-override={
                                        overrides.leadingArtwork7
                                      }
                                      className={classNames(
                                        projectcss.all,
                                        sty.leadingArtwork7
                                      )}
                                    >
                                      {false ? (
                                        <OutlinedIcon
                                          className={classNames(
                                            projectcss.all,
                                            sty.svg__lvsyt
                                          )}
                                          role={"img"}
                                        />
                                      ) : null}
                                      <FilledIcon
                                        className={classNames(
                                          projectcss.all,
                                          sty.svg__oNzYr
                                        )}
                                        role={"img"}
                                      />
                                    </div>
                                  </div>
                                ) : null}
                                {false ? (
                                  <div
                                    data-plasmic-name={
                                      "leadingLabelContainer13"
                                    }
                                    data-plasmic-override={
                                      overrides.leadingLabelContainer13
                                    }
                                    className={classNames(
                                      projectcss.all,
                                      sty.leadingLabelContainer13
                                    )}
                                  >
                                    <div
                                      data-plasmic-name={"leadingLabel13"}
                                      data-plasmic-override={
                                        overrides.leadingLabel13
                                      }
                                      className={classNames(
                                        projectcss.all,
                                        sty.leadingLabel13
                                      )}
                                    >
                                      {false ? (
                                        <div
                                          data-plasmic-name={
                                            "signedByBaseTypographyLabelSmall7"
                                          }
                                          data-plasmic-override={
                                            overrides.signedByBaseTypographyLabelSmall7
                                          }
                                          className={classNames(
                                            projectcss.all,
                                            sty.signedByBaseTypographyLabelSmall7
                                          )}
                                        />
                                      ) : null}
                                      <div
                                        data-plasmic-name={"text80"}
                                        data-plasmic-override={overrides.text80}
                                        className={classNames(
                                          projectcss.all,
                                          projectcss.__wab_text,
                                          sty.text80
                                        )}
                                      >
                                        {"$"}
                                      </div>
                                      {false ? (
                                        <div
                                          data-plasmic-name={"spacer73"}
                                          data-plasmic-override={
                                            overrides.spacer73
                                          }
                                          className={classNames(
                                            projectcss.all,
                                            sty.spacer73
                                          )}
                                        />
                                      ) : null}
                                    </div>
                                  </div>
                                ) : null}
                                <div
                                  data-plasmic-name={
                                    "inputElementContentText13"
                                  }
                                  data-plasmic-override={
                                    overrides.inputElementContentText13
                                  }
                                  className={classNames(
                                    projectcss.all,
                                    sty.inputElementContentText13
                                  )}
                                >
                                  {false ? (
                                    <div
                                      data-plasmic-name={
                                        "signedByBaseInputElementContentTextSmallOff4"
                                      }
                                      data-plasmic-override={
                                        overrides.signedByBaseInputElementContentTextSmallOff4
                                      }
                                      className={classNames(
                                        projectcss.all,
                                        sty.signedByBaseInputElementContentTextSmallOff4
                                      )}
                                    />
                                  ) : null}
                                  <div
                                    data-plasmic-name={"text81"}
                                    data-plasmic-override={overrides.text81}
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.__wab_text,
                                      sty.text81
                                    )}
                                  >
                                    {"MM/DD/YYYY"}
                                  </div>
                                </div>
                                {false ? (
                                  <div
                                    data-plasmic-name={
                                      "trailingLabelEnhancer13"
                                    }
                                    data-plasmic-override={
                                      overrides.trailingLabelEnhancer13
                                    }
                                    className={classNames(
                                      projectcss.all,
                                      sty.trailingLabelEnhancer13
                                    )}
                                  >
                                    {false ? (
                                      <div
                                        data-plasmic-name={"trailingLabel13"}
                                        data-plasmic-override={
                                          overrides.trailingLabel13
                                        }
                                        className={classNames(
                                          projectcss.all,
                                          sty.trailingLabel13
                                        )}
                                      >
                                        {false ? (
                                          <div
                                            data-plasmic-name={
                                              "signedByBaseTypographyLabelSmall8"
                                            }
                                            data-plasmic-override={
                                              overrides.signedByBaseTypographyLabelSmall8
                                            }
                                            className={classNames(
                                              projectcss.all,
                                              sty.signedByBaseTypographyLabelSmall8
                                            )}
                                          />
                                        ) : null}
                                        <div
                                          data-plasmic-name={"text82"}
                                          data-plasmic-override={
                                            overrides.text82
                                          }
                                          className={classNames(
                                            projectcss.all,
                                            projectcss.__wab_text,
                                            sty.text82
                                          )}
                                        >
                                          {"USD"}
                                        </div>
                                        {false ? (
                                          <div
                                            data-plasmic-name={"spacer74"}
                                            data-plasmic-override={
                                              overrides.spacer74
                                            }
                                            className={classNames(
                                              projectcss.all,
                                              sty.spacer74
                                            )}
                                          />
                                        ) : null}
                                      </div>
                                    ) : null}
                                  </div>
                                ) : null}
                                {false ? (
                                  <div
                                    data-plasmic-name={
                                      "trailingArtworkContainer13"
                                    }
                                    data-plasmic-override={
                                      overrides.trailingArtworkContainer13
                                    }
                                    className={classNames(
                                      projectcss.all,
                                      sty.trailingArtworkContainer13
                                    )}
                                  >
                                    <div
                                      data-plasmic-name={"trailingArtwork13"}
                                      data-plasmic-override={
                                        overrides.trailingArtwork13
                                      }
                                      className={classNames(
                                        projectcss.all,
                                        sty.trailingArtwork13
                                      )}
                                    >
                                      {false ? (
                                        <OutlinedIcon
                                          className={classNames(
                                            projectcss.all,
                                            sty.svg__wuWc7
                                          )}
                                          role={"img"}
                                        />
                                      ) : null}
                                      <FilledIcon
                                        className={classNames(
                                          projectcss.all,
                                          sty.svg___0L7Yq
                                        )}
                                        role={"img"}
                                      />
                                    </div>
                                  </div>
                                ) : null}
                              </div>
                            ) : null}
                            <div
                              data-plasmic-name={"calendar4"}
                              data-plasmic-override={overrides.calendar4}
                              className={classNames(
                                projectcss.all,
                                sty.calendar4
                              )}
                            >
                              {false ? (
                                <div
                                  data-plasmic-name={
                                    "signedByBaseInputElementSelectXSmallWebSingleDefaultEnabled4"
                                  }
                                  data-plasmic-override={
                                    overrides.signedByBaseInputElementSelectXSmallWebSingleDefaultEnabled4
                                  }
                                  className={classNames(
                                    projectcss.all,
                                    sty.signedByBaseInputElementSelectXSmallWebSingleDefaultEnabled4
                                  )}
                                />
                              ) : null}
                              <Stack__
                                as={"div"}
                                data-plasmic-name={"leadingArtworkContainer14"}
                                data-plasmic-override={
                                  overrides.leadingArtworkContainer14
                                }
                                hasGap={true}
                                className={classNames(
                                  projectcss.all,
                                  sty.leadingArtworkContainer14
                                )}
                              >
                                <div
                                  data-plasmic-name={"text83"}
                                  data-plasmic-override={overrides.text83}
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.__wab_text,
                                    sty.text83
                                  )}
                                >
                                  {"S\u00e9lectionner..."}
                                </div>
                              </Stack__>
                              {false ? (
                                <div
                                  data-plasmic-name={"leadingLabelContainer14"}
                                  data-plasmic-override={
                                    overrides.leadingLabelContainer14
                                  }
                                  className={classNames(
                                    projectcss.all,
                                    sty.leadingLabelContainer14
                                  )}
                                >
                                  <div
                                    data-plasmic-name={"leadingLabel14"}
                                    data-plasmic-override={
                                      overrides.leadingLabel14
                                    }
                                    className={classNames(
                                      projectcss.all,
                                      sty.leadingLabel14
                                    )}
                                  >
                                    {false ? (
                                      <div
                                        data-plasmic-name={
                                          "signedByBaseTypographyLabelXSmall7"
                                        }
                                        data-plasmic-override={
                                          overrides.signedByBaseTypographyLabelXSmall7
                                        }
                                        className={classNames(
                                          projectcss.all,
                                          sty.signedByBaseTypographyLabelXSmall7
                                        )}
                                      />
                                    ) : null}
                                    <div
                                      data-plasmic-name={"text84"}
                                      data-plasmic-override={overrides.text84}
                                      className={classNames(
                                        projectcss.all,
                                        projectcss.__wab_text,
                                        sty.text84
                                      )}
                                    >
                                      {"$"}
                                    </div>
                                    {false ? (
                                      <div
                                        data-plasmic-name={"spacer75"}
                                        data-plasmic-override={
                                          overrides.spacer75
                                        }
                                        className={classNames(
                                          projectcss.all,
                                          sty.spacer75
                                        )}
                                      />
                                    ) : null}
                                  </div>
                                </div>
                              ) : null}
                              {false ? (
                                <div
                                  data-plasmic-name={
                                    "inputElementContentText14"
                                  }
                                  data-plasmic-override={
                                    overrides.inputElementContentText14
                                  }
                                  className={classNames(
                                    projectcss.all,
                                    sty.inputElementContentText14
                                  )}
                                >
                                  {false ? (
                                    <div
                                      data-plasmic-name={
                                        "signedByBaseInputElementContentTextXSmallWebOff4"
                                      }
                                      data-plasmic-override={
                                        overrides.signedByBaseInputElementContentTextXSmallWebOff4
                                      }
                                      className={classNames(
                                        projectcss.all,
                                        sty.signedByBaseInputElementContentTextXSmallWebOff4
                                      )}
                                    />
                                  ) : null}
                                  <div
                                    data-plasmic-name={"text85"}
                                    data-plasmic-override={overrides.text85}
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.__wab_text,
                                      sty.text85
                                    )}
                                  >
                                    {"Jr"}
                                  </div>
                                </div>
                              ) : null}
                              {false ? (
                                <div
                                  data-plasmic-name={"trailingLabelEnhancer14"}
                                  data-plasmic-override={
                                    overrides.trailingLabelEnhancer14
                                  }
                                  className={classNames(
                                    projectcss.all,
                                    sty.trailingLabelEnhancer14
                                  )}
                                >
                                  {false ? (
                                    <div
                                      data-plasmic-name={"trailingLabel14"}
                                      data-plasmic-override={
                                        overrides.trailingLabel14
                                      }
                                      className={classNames(
                                        projectcss.all,
                                        sty.trailingLabel14
                                      )}
                                    >
                                      {false ? (
                                        <div
                                          data-plasmic-name={
                                            "signedByBaseTypographyLabelXSmall8"
                                          }
                                          data-plasmic-override={
                                            overrides.signedByBaseTypographyLabelXSmall8
                                          }
                                          className={classNames(
                                            projectcss.all,
                                            sty.signedByBaseTypographyLabelXSmall8
                                          )}
                                        />
                                      ) : null}
                                      <div
                                        data-plasmic-name={"text86"}
                                        data-plasmic-override={overrides.text86}
                                        className={classNames(
                                          projectcss.all,
                                          projectcss.__wab_text,
                                          sty.text86
                                        )}
                                      >
                                        {"USD"}
                                      </div>
                                      {false ? (
                                        <div
                                          data-plasmic-name={"spacer76"}
                                          data-plasmic-override={
                                            overrides.spacer76
                                          }
                                          className={classNames(
                                            projectcss.all,
                                            sty.spacer76
                                          )}
                                        />
                                      ) : null}
                                    </div>
                                  ) : null}
                                </div>
                              ) : null}
                              {false ? (
                                <div
                                  data-plasmic-name={
                                    "trailingArtworkContainer14"
                                  }
                                  data-plasmic-override={
                                    overrides.trailingArtworkContainer14
                                  }
                                  className={classNames(
                                    projectcss.all,
                                    sty.trailingArtworkContainer14
                                  )}
                                >
                                  <div
                                    data-plasmic-name={"trailingArtwork14"}
                                    data-plasmic-override={
                                      overrides.trailingArtwork14
                                    }
                                    className={classNames(
                                      projectcss.all,
                                      sty.trailingArtwork14
                                    )}
                                  >
                                    {false ? (
                                      <Outlined2Icon
                                        className={classNames(
                                          projectcss.all,
                                          sty.svg___2Zcok
                                        )}
                                        role={"img"}
                                      />
                                    ) : null}
                                    <Filled2Icon
                                      className={classNames(
                                        projectcss.all,
                                        sty.svg__cmDG
                                      )}
                                      role={"img"}
                                    />
                                  </div>
                                </div>
                              ) : null}
                              <div
                                data-plasmic-name={"selectIndicatorContainer7"}
                                data-plasmic-override={
                                  overrides.selectIndicatorContainer7
                                }
                                className={classNames(
                                  projectcss.all,
                                  sty.selectIndicatorContainer7
                                )}
                              >
                                <div
                                  data-plasmic-name={"chevronIcon7"}
                                  data-plasmic-override={overrides.chevronIcon7}
                                  className={classNames(
                                    projectcss.all,
                                    sty.chevronIcon7
                                  )}
                                >
                                  {false ? (
                                    <Outlined3Icon
                                      className={classNames(
                                        projectcss.all,
                                        sty.svg__pyiHc
                                      )}
                                      role={"img"}
                                    />
                                  ) : null}
                                  <Outlined3Icon
                                    className={classNames(
                                      projectcss.all,
                                      sty.svg__xlsa0
                                    )}
                                    role={"img"}
                                  />
                                </div>
                              </div>
                            </div>
                          </Stack__>
                          {false ? (
                            <Stack__
                              as={"div"}
                              data-plasmic-name={"inputElementHint7"}
                              data-plasmic-override={
                                overrides.inputElementHint7
                              }
                              hasGap={true}
                              className={classNames(
                                projectcss.all,
                                sty.inputElementHint7
                              )}
                            >
                              {false ? (
                                <div
                                  data-plasmic-name={"heart31"}
                                  data-plasmic-override={overrides.heart31}
                                  className={classNames(
                                    projectcss.all,
                                    sty.heart31
                                  )}
                                >
                                  {false ? (
                                    <Outlined4Icon
                                      className={classNames(
                                        projectcss.all,
                                        sty.svg__jyFcZ
                                      )}
                                      role={"img"}
                                    />
                                  ) : null}
                                  <Filled3Icon
                                    className={classNames(
                                      projectcss.all,
                                      sty.svg__vzaJv
                                    )}
                                    role={"img"}
                                  />
                                </div>
                              ) : null}
                              <div
                                data-plasmic-name={"hint7"}
                                data-plasmic-override={overrides.hint7}
                                className={classNames(
                                  projectcss.all,
                                  sty.hint7
                                )}
                              >
                                {false ? (
                                  <div
                                    data-plasmic-name={
                                      "signedByBaseTypographyParagraphSmall7"
                                    }
                                    data-plasmic-override={
                                      overrides.signedByBaseTypographyParagraphSmall7
                                    }
                                    className={classNames(
                                      projectcss.all,
                                      sty.signedByBaseTypographyParagraphSmall7
                                    )}
                                  />
                                ) : null}
                                <div
                                  data-plasmic-name={"text87"}
                                  data-plasmic-override={overrides.text87}
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.__wab_text,
                                    sty.text87
                                  )}
                                >
                                  {"MM/DD/YYYY"}
                                </div>
                                {false ? (
                                  <div
                                    data-plasmic-name={"spacer77"}
                                    data-plasmic-override={overrides.spacer77}
                                    className={classNames(
                                      projectcss.all,
                                      sty.spacer77
                                    )}
                                  />
                                ) : null}
                              </div>
                            </Stack__>
                          ) : null}
                        </Stack__>
                      </Stack__>
                      <div
                        data-plasmic-name={"inputElementSelect4"}
                        data-plasmic-override={overrides.inputElementSelect4}
                        className={classNames(
                          projectcss.all,
                          sty.inputElementSelect4
                        )}
                      >
                        {false ? (
                          <div
                            data-plasmic-name={
                              "signedByBaseInputElementSelectMediumSingleDefaultActive4"
                            }
                            data-plasmic-override={
                              overrides.signedByBaseInputElementSelectMediumSingleDefaultActive4
                            }
                            className={classNames(
                              projectcss.all,
                              sty.signedByBaseInputElementSelectMediumSingleDefaultActive4
                            )}
                          />
                        ) : null}
                        {false ? (
                          <div
                            data-plasmic-name={"selectFrame4"}
                            data-plasmic-override={overrides.selectFrame4}
                            className={classNames(
                              projectcss.all,
                              sty.selectFrame4
                            )}
                          >
                            {false ? (
                              <div
                                data-plasmic-name={"leadingArtworkContainer15"}
                                data-plasmic-override={
                                  overrides.leadingArtworkContainer15
                                }
                                className={classNames(
                                  projectcss.all,
                                  sty.leadingArtworkContainer15
                                )}
                              >
                                <div
                                  data-plasmic-name={"leadingArtwork8"}
                                  data-plasmic-override={
                                    overrides.leadingArtwork8
                                  }
                                  className={classNames(
                                    projectcss.all,
                                    sty.leadingArtwork8
                                  )}
                                >
                                  {false ? (
                                    <Outlined5Icon
                                      className={classNames(
                                        projectcss.all,
                                        sty.svg__elq4A
                                      )}
                                      role={"img"}
                                    />
                                  ) : null}
                                  <Filled4Icon
                                    className={classNames(
                                      projectcss.all,
                                      sty.svg__pj9Fm
                                    )}
                                    role={"img"}
                                  />
                                </div>
                              </div>
                            ) : null}
                            {false ? (
                              <div
                                data-plasmic-name={"leadingLabelContainer15"}
                                data-plasmic-override={
                                  overrides.leadingLabelContainer15
                                }
                                className={classNames(
                                  projectcss.all,
                                  sty.leadingLabelContainer15
                                )}
                              >
                                <div
                                  data-plasmic-name={"leadingLabel15"}
                                  data-plasmic-override={
                                    overrides.leadingLabel15
                                  }
                                  className={classNames(
                                    projectcss.all,
                                    sty.leadingLabel15
                                  )}
                                >
                                  {false ? (
                                    <div
                                      data-plasmic-name={
                                        "signedByBaseTypographyLabelMedium19"
                                      }
                                      data-plasmic-override={
                                        overrides.signedByBaseTypographyLabelMedium19
                                      }
                                      className={classNames(
                                        projectcss.all,
                                        sty.signedByBaseTypographyLabelMedium19
                                      )}
                                    />
                                  ) : null}
                                  <div
                                    data-plasmic-name={"text88"}
                                    data-plasmic-override={overrides.text88}
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.__wab_text,
                                      sty.text88
                                    )}
                                  >
                                    {"$"}
                                  </div>
                                  {false ? (
                                    <div
                                      data-plasmic-name={"spacer78"}
                                      data-plasmic-override={overrides.spacer78}
                                      className={classNames(
                                        projectcss.all,
                                        sty.spacer78
                                      )}
                                    />
                                  ) : null}
                                </div>
                              </div>
                            ) : null}
                            <div
                              data-plasmic-name={"inputElementContentText15"}
                              data-plasmic-override={
                                overrides.inputElementContentText15
                              }
                              className={classNames(
                                projectcss.all,
                                sty.inputElementContentText15
                              )}
                            >
                              {false ? (
                                <div
                                  data-plasmic-name={
                                    "signedByBaseInputElementContentTextMediumOff7"
                                  }
                                  data-plasmic-override={
                                    overrides.signedByBaseInputElementContentTextMediumOff7
                                  }
                                  className={classNames(
                                    projectcss.all,
                                    sty.signedByBaseInputElementContentTextMediumOff7
                                  )}
                                />
                              ) : null}
                              {false ? (
                                <div
                                  data-plasmic-name={"text89"}
                                  data-plasmic-override={overrides.text89}
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.__wab_text,
                                    sty.text89
                                  )}
                                >
                                  {"S\u00e9lectionner..."}
                                </div>
                              ) : null}
                            </div>
                            {false ? (
                              <div
                                data-plasmic-name={"trailingLabelEnhancer15"}
                                data-plasmic-override={
                                  overrides.trailingLabelEnhancer15
                                }
                                className={classNames(
                                  projectcss.all,
                                  sty.trailingLabelEnhancer15
                                )}
                              >
                                {false ? (
                                  <div
                                    data-plasmic-name={"trailingLabel15"}
                                    data-plasmic-override={
                                      overrides.trailingLabel15
                                    }
                                    className={classNames(
                                      projectcss.all,
                                      sty.trailingLabel15
                                    )}
                                  >
                                    {false ? (
                                      <div
                                        data-plasmic-name={
                                          "signedByBaseTypographyLabelMedium20"
                                        }
                                        data-plasmic-override={
                                          overrides.signedByBaseTypographyLabelMedium20
                                        }
                                        className={classNames(
                                          projectcss.all,
                                          sty.signedByBaseTypographyLabelMedium20
                                        )}
                                      />
                                    ) : null}
                                    <div
                                      data-plasmic-name={"text90"}
                                      data-plasmic-override={overrides.text90}
                                      className={classNames(
                                        projectcss.all,
                                        projectcss.__wab_text,
                                        sty.text90
                                      )}
                                    >
                                      {"USD"}
                                    </div>
                                    {false ? (
                                      <div
                                        data-plasmic-name={"spacer79"}
                                        data-plasmic-override={
                                          overrides.spacer79
                                        }
                                        className={classNames(
                                          projectcss.all,
                                          sty.spacer79
                                        )}
                                      />
                                    ) : null}
                                  </div>
                                ) : null}
                              </div>
                            ) : null}
                            {false ? (
                              <div
                                data-plasmic-name={"trailingArtworkContainer15"}
                                data-plasmic-override={
                                  overrides.trailingArtworkContainer15
                                }
                                className={classNames(
                                  projectcss.all,
                                  sty.trailingArtworkContainer15
                                )}
                              >
                                <div
                                  data-plasmic-name={"trailingArtwork15"}
                                  data-plasmic-override={
                                    overrides.trailingArtwork15
                                  }
                                  className={classNames(
                                    projectcss.all,
                                    sty.trailingArtwork15
                                  )}
                                >
                                  {false ? (
                                    <Outlined5Icon
                                      className={classNames(
                                        projectcss.all,
                                        sty.svg__t2MKy
                                      )}
                                      role={"img"}
                                    />
                                  ) : null}
                                  <Filled4Icon
                                    className={classNames(
                                      projectcss.all,
                                      sty.svg__rpN8J
                                    )}
                                    role={"img"}
                                  />
                                </div>
                              </div>
                            ) : null}
                            {false ? (
                              <div
                                data-plasmic-name={"selectIndicatorContainer8"}
                                data-plasmic-override={
                                  overrides.selectIndicatorContainer8
                                }
                                className={classNames(
                                  projectcss.all,
                                  sty.selectIndicatorContainer8
                                )}
                              >
                                <div
                                  data-plasmic-name={"chevronIcon8"}
                                  data-plasmic-override={overrides.chevronIcon8}
                                  className={classNames(
                                    projectcss.all,
                                    sty.chevronIcon8
                                  )}
                                >
                                  {false ? (
                                    <Outlined6Icon
                                      className={classNames(
                                        projectcss.all,
                                        sty.svg__lbDl
                                      )}
                                      role={"img"}
                                    />
                                  ) : null}
                                  <Outlined6Icon
                                    className={classNames(
                                      projectcss.all,
                                      sty.svg__yx3Z2
                                    )}
                                    role={"img"}
                                  />
                                </div>
                              </div>
                            ) : null}
                          </div>
                        ) : null}
                        <div
                          data-plasmic-name={"menu4"}
                          data-plasmic-override={overrides.menu4}
                          className={classNames(projectcss.all, sty.menu4)}
                        >
                          {false ? (
                            <div
                              data-plasmic-name={"signedByBaseMenuListMedium4"}
                              data-plasmic-override={
                                overrides.signedByBaseMenuListMedium4
                              }
                              className={classNames(
                                projectcss.all,
                                sty.signedByBaseMenuListMedium4
                              )}
                            />
                          ) : null}
                          {false ? (
                            <Stack__
                              as={"div"}
                              data-plasmic-name={"menuItem16"}
                              data-plasmic-override={overrides.menuItem16}
                              hasGap={true}
                              className={classNames(
                                projectcss.all,
                                sty.menuItem16
                              )}
                            >
                              {false ? (
                                <div
                                  data-plasmic-name={
                                    "signedByBaseMenuItemSearchMediumNoneEnabled4"
                                  }
                                  data-plasmic-override={
                                    overrides.signedByBaseMenuItemSearchMediumNoneEnabled4
                                  }
                                  className={classNames(
                                    projectcss.all,
                                    sty.signedByBaseMenuItemSearchMediumNoneEnabled4
                                  )}
                                />
                              ) : null}
                              <Stack__
                                as={"div"}
                                data-plasmic-name={"searchField4"}
                                data-plasmic-override={overrides.searchField4}
                                hasGap={true}
                                className={classNames(
                                  projectcss.all,
                                  sty.searchField4
                                )}
                              >
                                {false ? (
                                  <div
                                    data-plasmic-name={
                                      "signedByBaseSearchFieldMediumEnabled4"
                                    }
                                    data-plasmic-override={
                                      overrides.signedByBaseSearchFieldMediumEnabled4
                                    }
                                    className={classNames(
                                      projectcss.all,
                                      sty.signedByBaseSearchFieldMediumEnabled4
                                    )}
                                  />
                                ) : null}
                                {false ? (
                                  <Stack__
                                    as={"div"}
                                    data-plasmic-name={"inputElementLabel4"}
                                    data-plasmic-override={
                                      overrides.inputElementLabel4
                                    }
                                    hasGap={true}
                                    className={classNames(
                                      projectcss.all,
                                      sty.inputElementLabel4
                                    )}
                                  >
                                    {false ? (
                                      <div
                                        data-plasmic-name={
                                          "signedByBaseInputElementLabelMedium4"
                                        }
                                        data-plasmic-override={
                                          overrides.signedByBaseInputElementLabelMedium4
                                        }
                                        className={classNames(
                                          projectcss.all,
                                          sty.signedByBaseInputElementLabelMedium4
                                        )}
                                      />
                                    ) : null}
                                    <div
                                      data-plasmic-name={"typography43"}
                                      data-plasmic-override={
                                        overrides.typography43
                                      }
                                      className={classNames(
                                        projectcss.all,
                                        sty.typography43
                                      )}
                                    >
                                      {false ? (
                                        <div
                                          data-plasmic-name={
                                            "signedByBaseTypographyLabelMedium21"
                                          }
                                          data-plasmic-override={
                                            overrides.signedByBaseTypographyLabelMedium21
                                          }
                                          className={classNames(
                                            projectcss.all,
                                            sty.signedByBaseTypographyLabelMedium21
                                          )}
                                        />
                                      ) : null}
                                      <div
                                        data-plasmic-name={"text91"}
                                        data-plasmic-override={overrides.text91}
                                        className={classNames(
                                          projectcss.all,
                                          projectcss.__wab_text,
                                          sty.text91
                                        )}
                                      >
                                        {"Label"}
                                      </div>
                                      {false ? (
                                        <div
                                          data-plasmic-name={"spacer80"}
                                          data-plasmic-override={
                                            overrides.spacer80
                                          }
                                          className={classNames(
                                            projectcss.all,
                                            sty.spacer80
                                          )}
                                        />
                                      ) : null}
                                    </div>
                                    {false ? (
                                      <Stack__
                                        as={"div"}
                                        data-plasmic-name={
                                          "characterCountFrame4"
                                        }
                                        data-plasmic-override={
                                          overrides.characterCountFrame4
                                        }
                                        hasGap={true}
                                        className={classNames(
                                          projectcss.all,
                                          sty.characterCountFrame4
                                        )}
                                      >
                                        {false ? (
                                          <div
                                            data-plasmic-name={"heart32"}
                                            data-plasmic-override={
                                              overrides.heart32
                                            }
                                            className={classNames(
                                              projectcss.all,
                                              sty.heart32
                                            )}
                                          >
                                            {false ? (
                                              <OutlinedIcon
                                                className={classNames(
                                                  projectcss.all,
                                                  sty.svg__fpCve
                                                )}
                                                role={"img"}
                                              />
                                            ) : null}
                                            <FilledIcon
                                              className={classNames(
                                                projectcss.all,
                                                sty.svg__cAEj2
                                              )}
                                              role={"img"}
                                            />
                                          </div>
                                        ) : null}
                                        <div
                                          data-plasmic-name={"typography44"}
                                          data-plasmic-override={
                                            overrides.typography44
                                          }
                                          className={classNames(
                                            projectcss.all,
                                            sty.typography44
                                          )}
                                        >
                                          {false ? (
                                            <div
                                              data-plasmic-name={
                                                "signedByBaseTypographyLabelMedium22"
                                              }
                                              data-plasmic-override={
                                                overrides.signedByBaseTypographyLabelMedium22
                                              }
                                              className={classNames(
                                                projectcss.all,
                                                sty.signedByBaseTypographyLabelMedium22
                                              )}
                                            />
                                          ) : null}
                                          <div
                                            data-plasmic-name={"text92"}
                                            data-plasmic-override={
                                              overrides.text92
                                            }
                                            className={classNames(
                                              projectcss.all,
                                              projectcss.__wab_text,
                                              sty.text92
                                            )}
                                          >
                                            {"0/100"}
                                          </div>
                                          {false ? (
                                            <div
                                              data-plasmic-name={"spacer81"}
                                              data-plasmic-override={
                                                overrides.spacer81
                                              }
                                              className={classNames(
                                                projectcss.all,
                                                sty.spacer81
                                              )}
                                            />
                                          ) : null}
                                        </div>
                                      </Stack__>
                                    ) : null}
                                  </Stack__>
                                ) : null}
                                <div
                                  data-plasmic-name={"inputElementTextField8"}
                                  data-plasmic-override={
                                    overrides.inputElementTextField8
                                  }
                                  className={classNames(
                                    projectcss.all,
                                    sty.inputElementTextField8
                                  )}
                                >
                                  {false ? (
                                    <div
                                      data-plasmic-name={
                                        "signedByBaseInputElementTextFieldMediumEnabled4"
                                      }
                                      data-plasmic-override={
                                        overrides.signedByBaseInputElementTextFieldMediumEnabled4
                                      }
                                      className={classNames(
                                        projectcss.all,
                                        sty.signedByBaseInputElementTextFieldMediumEnabled4
                                      )}
                                    />
                                  ) : null}
                                  <div
                                    data-plasmic-name={
                                      "leadingArtworkContainer16"
                                    }
                                    data-plasmic-override={
                                      overrides.leadingArtworkContainer16
                                    }
                                    className={classNames(
                                      projectcss.all,
                                      sty.leadingArtworkContainer16
                                    )}
                                  >
                                    <div
                                      data-plasmic-name={"search4"}
                                      data-plasmic-override={overrides.search4}
                                      className={classNames(
                                        projectcss.all,
                                        sty.search4
                                      )}
                                    >
                                      {false ? (
                                        <Outlined7Icon
                                          className={classNames(
                                            projectcss.all,
                                            sty.svg___2VpHw
                                          )}
                                          role={"img"}
                                        />
                                      ) : null}
                                      <Outlined7Icon
                                        className={classNames(
                                          projectcss.all,
                                          sty.svg___39MWe
                                        )}
                                        role={"img"}
                                      />
                                    </div>
                                  </div>
                                  {false ? (
                                    <div
                                      data-plasmic-name={
                                        "leadingLabelContainer16"
                                      }
                                      data-plasmic-override={
                                        overrides.leadingLabelContainer16
                                      }
                                      className={classNames(
                                        projectcss.all,
                                        sty.leadingLabelContainer16
                                      )}
                                    >
                                      {false ? (
                                        <div
                                          data-plasmic-name={"leadingLabel16"}
                                          data-plasmic-override={
                                            overrides.leadingLabel16
                                          }
                                          className={classNames(
                                            projectcss.all,
                                            sty.leadingLabel16
                                          )}
                                        >
                                          {false ? (
                                            <div
                                              data-plasmic-name={
                                                "signedByBaseTypographyLabelMedium23"
                                              }
                                              data-plasmic-override={
                                                overrides.signedByBaseTypographyLabelMedium23
                                              }
                                              className={classNames(
                                                projectcss.all,
                                                sty.signedByBaseTypographyLabelMedium23
                                              )}
                                            />
                                          ) : null}
                                          <div
                                            data-plasmic-name={"text93"}
                                            data-plasmic-override={
                                              overrides.text93
                                            }
                                            className={classNames(
                                              projectcss.all,
                                              projectcss.__wab_text,
                                              sty.text93
                                            )}
                                          >
                                            {"$"}
                                          </div>
                                          {false ? (
                                            <div
                                              data-plasmic-name={"spacer82"}
                                              data-plasmic-override={
                                                overrides.spacer82
                                              }
                                              className={classNames(
                                                projectcss.all,
                                                sty.spacer82
                                              )}
                                            />
                                          ) : null}
                                        </div>
                                      ) : null}
                                    </div>
                                  ) : null}
                                  <div
                                    data-plasmic-name={
                                      "inputElementContentText16"
                                    }
                                    data-plasmic-override={
                                      overrides.inputElementContentText16
                                    }
                                    className={classNames(
                                      projectcss.all,
                                      sty.inputElementContentText16
                                    )}
                                  >
                                    {false ? (
                                      <div
                                        data-plasmic-name={
                                          "signedByBaseInputElementContentTextMediumOff8"
                                        }
                                        data-plasmic-override={
                                          overrides.signedByBaseInputElementContentTextMediumOff8
                                        }
                                        className={classNames(
                                          projectcss.all,
                                          sty.signedByBaseInputElementContentTextMediumOff8
                                        )}
                                      />
                                    ) : null}
                                    <div
                                      data-plasmic-name={"text94"}
                                      data-plasmic-override={overrides.text94}
                                      className={classNames(
                                        projectcss.all,
                                        projectcss.__wab_text,
                                        sty.text94
                                      )}
                                    >
                                      {"Placeholder"}
                                    </div>
                                  </div>
                                  {false ? (
                                    <div
                                      data-plasmic-name={
                                        "trailingLabelEnhancer16"
                                      }
                                      data-plasmic-override={
                                        overrides.trailingLabelEnhancer16
                                      }
                                      className={classNames(
                                        projectcss.all,
                                        sty.trailingLabelEnhancer16
                                      )}
                                    >
                                      {false ? (
                                        <div
                                          data-plasmic-name={"trailingLabel16"}
                                          data-plasmic-override={
                                            overrides.trailingLabel16
                                          }
                                          className={classNames(
                                            projectcss.all,
                                            sty.trailingLabel16
                                          )}
                                        >
                                          {false ? (
                                            <div
                                              data-plasmic-name={
                                                "signedByBaseTypographyLabelMedium24"
                                              }
                                              data-plasmic-override={
                                                overrides.signedByBaseTypographyLabelMedium24
                                              }
                                              className={classNames(
                                                projectcss.all,
                                                sty.signedByBaseTypographyLabelMedium24
                                              )}
                                            />
                                          ) : null}
                                          <div
                                            data-plasmic-name={"text95"}
                                            data-plasmic-override={
                                              overrides.text95
                                            }
                                            className={classNames(
                                              projectcss.all,
                                              projectcss.__wab_text,
                                              sty.text95
                                            )}
                                          >
                                            {"USD"}
                                          </div>
                                          {false ? (
                                            <div
                                              data-plasmic-name={"spacer83"}
                                              data-plasmic-override={
                                                overrides.spacer83
                                              }
                                              className={classNames(
                                                projectcss.all,
                                                sty.spacer83
                                              )}
                                            />
                                          ) : null}
                                        </div>
                                      ) : null}
                                    </div>
                                  ) : null}
                                  {false ? (
                                    <div
                                      data-plasmic-name={
                                        "trailingArtworkContainer16"
                                      }
                                      data-plasmic-override={
                                        overrides.trailingArtworkContainer16
                                      }
                                      className={classNames(
                                        projectcss.all,
                                        sty.trailingArtworkContainer16
                                      )}
                                    >
                                      {false ? (
                                        <div
                                          data-plasmic-name={
                                            "trailingArtwork16"
                                          }
                                          data-plasmic-override={
                                            overrides.trailingArtwork16
                                          }
                                          className={classNames(
                                            projectcss.all,
                                            sty.trailingArtwork16
                                          )}
                                        >
                                          {false ? (
                                            <Outlined5Icon
                                              className={classNames(
                                                projectcss.all,
                                                sty.svg__sNwpl
                                              )}
                                              role={"img"}
                                            />
                                          ) : null}
                                          <Filled4Icon
                                            className={classNames(
                                              projectcss.all,
                                              sty.svg__jkcg
                                            )}
                                            role={"img"}
                                          />
                                        </div>
                                      ) : null}
                                    </div>
                                  ) : null}
                                </div>
                                {false ? (
                                  <Stack__
                                    as={"div"}
                                    data-plasmic-name={"inputElementHint8"}
                                    data-plasmic-override={
                                      overrides.inputElementHint8
                                    }
                                    hasGap={true}
                                    className={classNames(
                                      projectcss.all,
                                      sty.inputElementHint8
                                    )}
                                  >
                                    {false ? (
                                      <div
                                        data-plasmic-name={"heart33"}
                                        data-plasmic-override={
                                          overrides.heart33
                                        }
                                        className={classNames(
                                          projectcss.all,
                                          sty.heart33
                                        )}
                                      >
                                        {false ? (
                                          <Outlined4Icon
                                            className={classNames(
                                              projectcss.all,
                                              sty.svg___2RbOz
                                            )}
                                            role={"img"}
                                          />
                                        ) : null}
                                        <Filled3Icon
                                          className={classNames(
                                            projectcss.all,
                                            sty.svg__a8Om
                                          )}
                                          role={"img"}
                                        />
                                      </div>
                                    ) : null}
                                    <div
                                      data-plasmic-name={"hint8"}
                                      data-plasmic-override={overrides.hint8}
                                      className={classNames(
                                        projectcss.all,
                                        sty.hint8
                                      )}
                                    >
                                      {false ? (
                                        <div
                                          data-plasmic-name={
                                            "signedByBaseTypographyParagraphSmall8"
                                          }
                                          data-plasmic-override={
                                            overrides.signedByBaseTypographyParagraphSmall8
                                          }
                                          className={classNames(
                                            projectcss.all,
                                            sty.signedByBaseTypographyParagraphSmall8
                                          )}
                                        />
                                      ) : null}
                                      <div
                                        data-plasmic-name={"text96"}
                                        data-plasmic-override={overrides.text96}
                                        className={classNames(
                                          projectcss.all,
                                          projectcss.__wab_text,
                                          sty.text96
                                        )}
                                      >
                                        {"Hint"}
                                      </div>
                                      {false ? (
                                        <div
                                          data-plasmic-name={"spacer84"}
                                          data-plasmic-override={
                                            overrides.spacer84
                                          }
                                          className={classNames(
                                            projectcss.all,
                                            sty.spacer84
                                          )}
                                        />
                                      ) : null}
                                    </div>
                                  </Stack__>
                                ) : null}
                              </Stack__>
                            </Stack__>
                          ) : null}
                          <Stack__
                            as={"div"}
                            data-plasmic-name={"menuItem17"}
                            data-plasmic-override={overrides.menuItem17}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.menuItem17
                            )}
                          >
                            {false ? (
                              <div
                                data-plasmic-name={
                                  "signedByBaseMenuItemOptionMediumStandardEnabled13"
                                }
                                data-plasmic-override={
                                  overrides.signedByBaseMenuItemOptionMediumStandardEnabled13
                                }
                                className={classNames(
                                  projectcss.all,
                                  sty.signedByBaseMenuItemOptionMediumStandardEnabled13
                                )}
                              />
                            ) : null}
                            {false ? (
                              <Stack__
                                as={"div"}
                                data-plasmic-name={
                                  "menuItemControlMediumCheckboxUnchecked13"
                                }
                                data-plasmic-override={
                                  overrides.menuItemControlMediumCheckboxUnchecked13
                                }
                                hasGap={true}
                                className={classNames(
                                  projectcss.all,
                                  sty.menuItemControlMediumCheckboxUnchecked13
                                )}
                              >
                                {false ? (
                                  <div
                                    data-plasmic-name={
                                      "signedByBaseMenuItemControlMediumCheckboxUnchecked13"
                                    }
                                    data-plasmic-override={
                                      overrides.signedByBaseMenuItemControlMediumCheckboxUnchecked13
                                    }
                                    className={classNames(
                                      projectcss.all,
                                      sty.signedByBaseMenuItemControlMediumCheckboxUnchecked13
                                    )}
                                  />
                                ) : null}
                                <div
                                  data-plasmic-name={"icon13"}
                                  data-plasmic-override={overrides.icon13}
                                  className={classNames(
                                    projectcss.all,
                                    sty.icon13
                                  )}
                                >
                                  {false ? (
                                    <Outlined8Icon
                                      className={classNames(
                                        projectcss.all,
                                        sty.svg__zYtCk
                                      )}
                                      role={"img"}
                                    />
                                  ) : null}
                                  <Outlined8Icon
                                    className={classNames(
                                      projectcss.all,
                                      sty.svg___9Pkqr
                                    )}
                                    role={"img"}
                                  />
                                </div>
                              </Stack__>
                            ) : null}
                            {false ? (
                              <Stack__
                                as={"div"}
                                data-plasmic-name={"leadingEnhancer13"}
                                data-plasmic-override={
                                  overrides.leadingEnhancer13
                                }
                                hasGap={true}
                                className={classNames(
                                  projectcss.all,
                                  sty.leadingEnhancer13
                                )}
                              >
                                <div
                                  data-plasmic-name={"heart34"}
                                  data-plasmic-override={overrides.heart34}
                                  className={classNames(
                                    projectcss.all,
                                    sty.heart34
                                  )}
                                >
                                  {false ? (
                                    <Outlined5Icon
                                      className={classNames(
                                        projectcss.all,
                                        sty.svg__tiYd
                                      )}
                                      role={"img"}
                                    />
                                  ) : null}
                                  <Filled4Icon
                                    className={classNames(
                                      projectcss.all,
                                      sty.svg__iATtc
                                    )}
                                    role={"img"}
                                  />
                                </div>
                              </Stack__>
                            ) : null}
                            <Stack__
                              as={"div"}
                              data-plasmic-name={"textFrame13"}
                              data-plasmic-override={overrides.textFrame13}
                              hasGap={true}
                              className={classNames(
                                projectcss.all,
                                sty.textFrame13
                              )}
                            >
                              <div
                                data-plasmic-name={"leadingText13"}
                                data-plasmic-override={overrides.leadingText13}
                                className={classNames(
                                  projectcss.all,
                                  sty.leadingText13
                                )}
                              >
                                <div
                                  data-plasmic-name={"typography45"}
                                  data-plasmic-override={overrides.typography45}
                                  className={classNames(
                                    projectcss.all,
                                    sty.typography45
                                  )}
                                >
                                  {false ? (
                                    <div
                                      data-plasmic-name={
                                        "signedByBaseTypographyParagraphMedium37"
                                      }
                                      data-plasmic-override={
                                        overrides.signedByBaseTypographyParagraphMedium37
                                      }
                                      className={classNames(
                                        projectcss.all,
                                        sty.signedByBaseTypographyParagraphMedium37
                                      )}
                                    />
                                  ) : null}
                                  <div
                                    data-plasmic-name={"text97"}
                                    data-plasmic-override={overrides.text97}
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.__wab_text,
                                      sty.text97
                                    )}
                                  >
                                    {"Mod\u00e8le de concert 20h"}
                                  </div>
                                  {false ? (
                                    <div
                                      data-plasmic-name={"spacer85"}
                                      data-plasmic-override={overrides.spacer85}
                                      className={classNames(
                                        projectcss.all,
                                        sty.spacer85
                                      )}
                                    />
                                  ) : null}
                                </div>
                                {false ? (
                                  <div
                                    data-plasmic-name={"typography46"}
                                    data-plasmic-override={
                                      overrides.typography46
                                    }
                                    className={classNames(
                                      projectcss.all,
                                      sty.typography46
                                    )}
                                  >
                                    {false ? (
                                      <div
                                        data-plasmic-name={
                                          "signedByBaseTypographyParagraphMedium38"
                                        }
                                        data-plasmic-override={
                                          overrides.signedByBaseTypographyParagraphMedium38
                                        }
                                        className={classNames(
                                          projectcss.all,
                                          sty.signedByBaseTypographyParagraphMedium38
                                        )}
                                      />
                                    ) : null}
                                    <div
                                      data-plasmic-name={"text98"}
                                      data-plasmic-override={overrides.text98}
                                      className={classNames(
                                        projectcss.all,
                                        projectcss.__wab_text,
                                        sty.text98
                                      )}
                                    >
                                      {"Supporting text"}
                                    </div>
                                    {false ? (
                                      <div
                                        data-plasmic-name={"spacer86"}
                                        data-plasmic-override={
                                          overrides.spacer86
                                        }
                                        className={classNames(
                                          projectcss.all,
                                          sty.spacer86
                                        )}
                                      />
                                    ) : null}
                                  </div>
                                ) : null}
                              </div>
                              {false ? (
                                <div
                                  data-plasmic-name={"typography47"}
                                  data-plasmic-override={overrides.typography47}
                                  className={classNames(
                                    projectcss.all,
                                    sty.typography47
                                  )}
                                >
                                  {false ? (
                                    <div
                                      data-plasmic-name={
                                        "signedByBaseTypographyParagraphMedium39"
                                      }
                                      data-plasmic-override={
                                        overrides.signedByBaseTypographyParagraphMedium39
                                      }
                                      className={classNames(
                                        projectcss.all,
                                        sty.signedByBaseTypographyParagraphMedium39
                                      )}
                                    />
                                  ) : null}
                                  <div
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.__wab_text,
                                      sty.text___7Mvfw
                                    )}
                                  >
                                    {"Text"}
                                  </div>
                                  {false ? (
                                    <div
                                      data-plasmic-name={"spacer87"}
                                      data-plasmic-override={overrides.spacer87}
                                      className={classNames(
                                        projectcss.all,
                                        sty.spacer87
                                      )}
                                    />
                                  ) : null}
                                </div>
                              ) : null}
                            </Stack__>
                            {false ? (
                              <Stack__
                                as={"div"}
                                data-plasmic-name={"trailingEnhancer13"}
                                data-plasmic-override={
                                  overrides.trailingEnhancer13
                                }
                                hasGap={true}
                                className={classNames(
                                  projectcss.all,
                                  sty.trailingEnhancer13
                                )}
                              >
                                <div
                                  data-plasmic-name={"heart35"}
                                  data-plasmic-override={overrides.heart35}
                                  className={classNames(
                                    projectcss.all,
                                    sty.heart35
                                  )}
                                >
                                  {false ? (
                                    <Outlined5Icon
                                      className={classNames(
                                        projectcss.all,
                                        sty.svg__cokrc
                                      )}
                                      role={"img"}
                                    />
                                  ) : null}
                                  <Filled4Icon
                                    className={classNames(
                                      projectcss.all,
                                      sty.svg___1OE27
                                    )}
                                    role={"img"}
                                  />
                                </div>
                              </Stack__>
                            ) : null}
                          </Stack__>
                          <Stack__
                            as={"div"}
                            data-plasmic-name={"menuItem18"}
                            data-plasmic-override={overrides.menuItem18}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.menuItem18
                            )}
                          >
                            {false ? (
                              <div
                                data-plasmic-name={
                                  "signedByBaseMenuItemOptionMediumStandardEnabled14"
                                }
                                data-plasmic-override={
                                  overrides.signedByBaseMenuItemOptionMediumStandardEnabled14
                                }
                                className={classNames(
                                  projectcss.all,
                                  sty.signedByBaseMenuItemOptionMediumStandardEnabled14
                                )}
                              />
                            ) : null}
                            {false ? (
                              <Stack__
                                as={"div"}
                                data-plasmic-name={
                                  "menuItemControlMediumCheckboxUnchecked14"
                                }
                                data-plasmic-override={
                                  overrides.menuItemControlMediumCheckboxUnchecked14
                                }
                                hasGap={true}
                                className={classNames(
                                  projectcss.all,
                                  sty.menuItemControlMediumCheckboxUnchecked14
                                )}
                              >
                                {false ? (
                                  <div
                                    data-plasmic-name={
                                      "signedByBaseMenuItemControlMediumCheckboxUnchecked14"
                                    }
                                    data-plasmic-override={
                                      overrides.signedByBaseMenuItemControlMediumCheckboxUnchecked14
                                    }
                                    className={classNames(
                                      projectcss.all,
                                      sty.signedByBaseMenuItemControlMediumCheckboxUnchecked14
                                    )}
                                  />
                                ) : null}
                                <div
                                  data-plasmic-name={"icon14"}
                                  data-plasmic-override={overrides.icon14}
                                  className={classNames(
                                    projectcss.all,
                                    sty.icon14
                                  )}
                                >
                                  {false ? (
                                    <Outlined8Icon
                                      className={classNames(
                                        projectcss.all,
                                        sty.svg__nKvU
                                      )}
                                      role={"img"}
                                    />
                                  ) : null}
                                  <Outlined8Icon
                                    className={classNames(
                                      projectcss.all,
                                      sty.svg___4GO8B
                                    )}
                                    role={"img"}
                                  />
                                </div>
                              </Stack__>
                            ) : null}
                            {false ? (
                              <Stack__
                                as={"div"}
                                data-plasmic-name={"leadingEnhancer14"}
                                data-plasmic-override={
                                  overrides.leadingEnhancer14
                                }
                                hasGap={true}
                                className={classNames(
                                  projectcss.all,
                                  sty.leadingEnhancer14
                                )}
                              >
                                <div
                                  data-plasmic-name={"heart36"}
                                  data-plasmic-override={overrides.heart36}
                                  className={classNames(
                                    projectcss.all,
                                    sty.heart36
                                  )}
                                >
                                  {false ? (
                                    <Outlined5Icon
                                      className={classNames(
                                        projectcss.all,
                                        sty.svg__oQzA2
                                      )}
                                      role={"img"}
                                    />
                                  ) : null}
                                  <Filled4Icon
                                    className={classNames(
                                      projectcss.all,
                                      sty.svg__gRzr3
                                    )}
                                    role={"img"}
                                  />
                                </div>
                              </Stack__>
                            ) : null}
                            <Stack__
                              as={"div"}
                              data-plasmic-name={"textFrame14"}
                              data-plasmic-override={overrides.textFrame14}
                              hasGap={true}
                              className={classNames(
                                projectcss.all,
                                sty.textFrame14
                              )}
                            >
                              <div
                                data-plasmic-name={"leadingText14"}
                                data-plasmic-override={overrides.leadingText14}
                                className={classNames(
                                  projectcss.all,
                                  sty.leadingText14
                                )}
                              >
                                <div
                                  data-plasmic-name={"typography48"}
                                  data-plasmic-override={overrides.typography48}
                                  className={classNames(
                                    projectcss.all,
                                    sty.typography48
                                  )}
                                >
                                  {false ? (
                                    <div
                                      data-plasmic-name={
                                        "signedByBaseTypographyParagraphMedium40"
                                      }
                                      data-plasmic-override={
                                        overrides.signedByBaseTypographyParagraphMedium40
                                      }
                                      className={classNames(
                                        projectcss.all,
                                        sty.signedByBaseTypographyParagraphMedium40
                                      )}
                                    />
                                  ) : null}
                                  <div
                                    data-plasmic-name={"text99"}
                                    data-plasmic-override={overrides.text99}
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.__wab_text,
                                      sty.text99
                                    )}
                                  >
                                    {"Mod\u00e8le de match 21h"}
                                  </div>
                                  {false ? (
                                    <div
                                      data-plasmic-name={"spacer88"}
                                      data-plasmic-override={overrides.spacer88}
                                      className={classNames(
                                        projectcss.all,
                                        sty.spacer88
                                      )}
                                    />
                                  ) : null}
                                </div>
                                {false ? (
                                  <div
                                    data-plasmic-name={"typography49"}
                                    data-plasmic-override={
                                      overrides.typography49
                                    }
                                    className={classNames(
                                      projectcss.all,
                                      sty.typography49
                                    )}
                                  >
                                    {false ? (
                                      <div
                                        data-plasmic-name={
                                          "signedByBaseTypographyParagraphMedium41"
                                        }
                                        data-plasmic-override={
                                          overrides.signedByBaseTypographyParagraphMedium41
                                        }
                                        className={classNames(
                                          projectcss.all,
                                          sty.signedByBaseTypographyParagraphMedium41
                                        )}
                                      />
                                    ) : null}
                                    <div
                                      data-plasmic-name={"text100"}
                                      data-plasmic-override={overrides.text100}
                                      className={classNames(
                                        projectcss.all,
                                        projectcss.__wab_text,
                                        sty.text100
                                      )}
                                    >
                                      {"Supporting text"}
                                    </div>
                                    {false ? (
                                      <div
                                        data-plasmic-name={"spacer89"}
                                        data-plasmic-override={
                                          overrides.spacer89
                                        }
                                        className={classNames(
                                          projectcss.all,
                                          sty.spacer89
                                        )}
                                      />
                                    ) : null}
                                  </div>
                                ) : null}
                              </div>
                              {false ? (
                                <div
                                  data-plasmic-name={"typography50"}
                                  data-plasmic-override={overrides.typography50}
                                  className={classNames(
                                    projectcss.all,
                                    sty.typography50
                                  )}
                                >
                                  {false ? (
                                    <div
                                      data-plasmic-name={
                                        "signedByBaseTypographyParagraphMedium42"
                                      }
                                      data-plasmic-override={
                                        overrides.signedByBaseTypographyParagraphMedium42
                                      }
                                      className={classNames(
                                        projectcss.all,
                                        sty.signedByBaseTypographyParagraphMedium42
                                      )}
                                    />
                                  ) : null}
                                  <div
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.__wab_text,
                                      sty.text__lAayU
                                    )}
                                  >
                                    {"Text"}
                                  </div>
                                  {false ? (
                                    <div
                                      data-plasmic-name={"spacer90"}
                                      data-plasmic-override={overrides.spacer90}
                                      className={classNames(
                                        projectcss.all,
                                        sty.spacer90
                                      )}
                                    />
                                  ) : null}
                                </div>
                              ) : null}
                            </Stack__>
                            {false ? (
                              <Stack__
                                as={"div"}
                                data-plasmic-name={"trailingEnhancer14"}
                                data-plasmic-override={
                                  overrides.trailingEnhancer14
                                }
                                hasGap={true}
                                className={classNames(
                                  projectcss.all,
                                  sty.trailingEnhancer14
                                )}
                              >
                                <div
                                  data-plasmic-name={"checkmarkSmall4"}
                                  data-plasmic-override={
                                    overrides.checkmarkSmall4
                                  }
                                  className={classNames(
                                    projectcss.all,
                                    sty.checkmarkSmall4
                                  )}
                                >
                                  {false ? (
                                    <Outlined9Icon
                                      className={classNames(
                                        projectcss.all,
                                        sty.svg__y3H
                                      )}
                                      role={"img"}
                                    />
                                  ) : null}
                                  <Outlined9Icon
                                    className={classNames(
                                      projectcss.all,
                                      sty.svg__qPkBw
                                    )}
                                    role={"img"}
                                  />
                                </div>
                              </Stack__>
                            ) : null}
                          </Stack__>
                          <Stack__
                            as={"div"}
                            data-plasmic-name={"menuItem19"}
                            data-plasmic-override={overrides.menuItem19}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.menuItem19
                            )}
                          >
                            {false ? (
                              <div
                                data-plasmic-name={
                                  "signedByBaseMenuItemOptionMediumStandardEnabled15"
                                }
                                data-plasmic-override={
                                  overrides.signedByBaseMenuItemOptionMediumStandardEnabled15
                                }
                                className={classNames(
                                  projectcss.all,
                                  sty.signedByBaseMenuItemOptionMediumStandardEnabled15
                                )}
                              />
                            ) : null}
                            {false ? (
                              <Stack__
                                as={"div"}
                                data-plasmic-name={
                                  "menuItemControlMediumCheckboxUnchecked15"
                                }
                                data-plasmic-override={
                                  overrides.menuItemControlMediumCheckboxUnchecked15
                                }
                                hasGap={true}
                                className={classNames(
                                  projectcss.all,
                                  sty.menuItemControlMediumCheckboxUnchecked15
                                )}
                              >
                                {false ? (
                                  <div
                                    data-plasmic-name={
                                      "signedByBaseMenuItemControlMediumCheckboxUnchecked15"
                                    }
                                    data-plasmic-override={
                                      overrides.signedByBaseMenuItemControlMediumCheckboxUnchecked15
                                    }
                                    className={classNames(
                                      projectcss.all,
                                      sty.signedByBaseMenuItemControlMediumCheckboxUnchecked15
                                    )}
                                  />
                                ) : null}
                                <div
                                  data-plasmic-name={"icon15"}
                                  data-plasmic-override={overrides.icon15}
                                  className={classNames(
                                    projectcss.all,
                                    sty.icon15
                                  )}
                                >
                                  {false ? (
                                    <Outlined8Icon
                                      className={classNames(
                                        projectcss.all,
                                        sty.svg__n5V
                                      )}
                                      role={"img"}
                                    />
                                  ) : null}
                                  <Outlined8Icon
                                    className={classNames(
                                      projectcss.all,
                                      sty.svg__gBxLm
                                    )}
                                    role={"img"}
                                  />
                                </div>
                              </Stack__>
                            ) : null}
                            {false ? (
                              <Stack__
                                as={"div"}
                                data-plasmic-name={"leadingEnhancer15"}
                                data-plasmic-override={
                                  overrides.leadingEnhancer15
                                }
                                hasGap={true}
                                className={classNames(
                                  projectcss.all,
                                  sty.leadingEnhancer15
                                )}
                              >
                                <div
                                  data-plasmic-name={"heart37"}
                                  data-plasmic-override={overrides.heart37}
                                  className={classNames(
                                    projectcss.all,
                                    sty.heart37
                                  )}
                                >
                                  {false ? (
                                    <Outlined5Icon
                                      className={classNames(
                                        projectcss.all,
                                        sty.svg___7QLo7
                                      )}
                                      role={"img"}
                                    />
                                  ) : null}
                                  <Filled4Icon
                                    className={classNames(
                                      projectcss.all,
                                      sty.svg__aJTom
                                    )}
                                    role={"img"}
                                  />
                                </div>
                              </Stack__>
                            ) : null}
                            <IcRoundPlusIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__lz9AX
                              )}
                              role={"img"}
                            />

                            <Stack__
                              as={"div"}
                              data-plasmic-name={"textFrame15"}
                              data-plasmic-override={overrides.textFrame15}
                              hasGap={true}
                              className={classNames(
                                projectcss.all,
                                sty.textFrame15
                              )}
                            >
                              <div
                                data-plasmic-name={"leadingText15"}
                                data-plasmic-override={overrides.leadingText15}
                                className={classNames(
                                  projectcss.all,
                                  sty.leadingText15
                                )}
                              >
                                <div
                                  data-plasmic-name={"typography51"}
                                  data-plasmic-override={overrides.typography51}
                                  className={classNames(
                                    projectcss.all,
                                    sty.typography51
                                  )}
                                >
                                  {false ? (
                                    <div
                                      data-plasmic-name={
                                        "signedByBaseTypographyParagraphMedium43"
                                      }
                                      data-plasmic-override={
                                        overrides.signedByBaseTypographyParagraphMedium43
                                      }
                                      className={classNames(
                                        projectcss.all,
                                        sty.signedByBaseTypographyParagraphMedium43
                                      )}
                                    />
                                  ) : null}
                                  <div
                                    data-plasmic-name={"text101"}
                                    data-plasmic-override={overrides.text101}
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.__wab_text,
                                      sty.text101
                                    )}
                                  >
                                    {"Dispositif vierge"}
                                  </div>
                                  {false ? (
                                    <div
                                      data-plasmic-name={"spacer91"}
                                      data-plasmic-override={overrides.spacer91}
                                      className={classNames(
                                        projectcss.all,
                                        sty.spacer91
                                      )}
                                    />
                                  ) : null}
                                </div>
                                {false ? (
                                  <div
                                    data-plasmic-name={"typography52"}
                                    data-plasmic-override={
                                      overrides.typography52
                                    }
                                    className={classNames(
                                      projectcss.all,
                                      sty.typography52
                                    )}
                                  >
                                    {false ? (
                                      <div
                                        data-plasmic-name={
                                          "signedByBaseTypographyParagraphMedium44"
                                        }
                                        data-plasmic-override={
                                          overrides.signedByBaseTypographyParagraphMedium44
                                        }
                                        className={classNames(
                                          projectcss.all,
                                          sty.signedByBaseTypographyParagraphMedium44
                                        )}
                                      />
                                    ) : null}
                                    <div
                                      data-plasmic-name={"text102"}
                                      data-plasmic-override={overrides.text102}
                                      className={classNames(
                                        projectcss.all,
                                        projectcss.__wab_text,
                                        sty.text102
                                      )}
                                    >
                                      {"Supporting text"}
                                    </div>
                                    {false ? (
                                      <div
                                        data-plasmic-name={"spacer92"}
                                        data-plasmic-override={
                                          overrides.spacer92
                                        }
                                        className={classNames(
                                          projectcss.all,
                                          sty.spacer92
                                        )}
                                      />
                                    ) : null}
                                  </div>
                                ) : null}
                              </div>
                              {false ? (
                                <div
                                  data-plasmic-name={"typography53"}
                                  data-plasmic-override={overrides.typography53}
                                  className={classNames(
                                    projectcss.all,
                                    sty.typography53
                                  )}
                                >
                                  {false ? (
                                    <div
                                      data-plasmic-name={
                                        "signedByBaseTypographyParagraphMedium45"
                                      }
                                      data-plasmic-override={
                                        overrides.signedByBaseTypographyParagraphMedium45
                                      }
                                      className={classNames(
                                        projectcss.all,
                                        sty.signedByBaseTypographyParagraphMedium45
                                      )}
                                    />
                                  ) : null}
                                  <div
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.__wab_text,
                                      sty.text__yssy5
                                    )}
                                  >
                                    {"Text"}
                                  </div>
                                  {false ? (
                                    <div
                                      data-plasmic-name={"spacer93"}
                                      data-plasmic-override={overrides.spacer93}
                                      className={classNames(
                                        projectcss.all,
                                        sty.spacer93
                                      )}
                                    />
                                  ) : null}
                                </div>
                              ) : null}
                            </Stack__>
                            {false ? (
                              <Stack__
                                as={"div"}
                                data-plasmic-name={"trailingEnhancer15"}
                                data-plasmic-override={
                                  overrides.trailingEnhancer15
                                }
                                hasGap={true}
                                className={classNames(
                                  projectcss.all,
                                  sty.trailingEnhancer15
                                )}
                              >
                                <div
                                  data-plasmic-name={"heart38"}
                                  data-plasmic-override={overrides.heart38}
                                  className={classNames(
                                    projectcss.all,
                                    sty.heart38
                                  )}
                                >
                                  {false ? (
                                    <Outlined5Icon
                                      className={classNames(
                                        projectcss.all,
                                        sty.svg__ipPlF
                                      )}
                                      role={"img"}
                                    />
                                  ) : null}
                                  <Filled4Icon
                                    className={classNames(
                                      projectcss.all,
                                      sty.svg__pArp9
                                    )}
                                    role={"img"}
                                  />
                                </div>
                              </Stack__>
                            ) : null}
                          </Stack__>
                          {false ? (
                            <Stack__
                              as={"div"}
                              data-plasmic-name={"menuItem20"}
                              data-plasmic-override={overrides.menuItem20}
                              hasGap={true}
                              className={classNames(
                                projectcss.all,
                                sty.menuItem20
                              )}
                            >
                              {false ? (
                                <div
                                  data-plasmic-name={
                                    "signedByBaseMenuItemOptionMediumStandardEnabled16"
                                  }
                                  data-plasmic-override={
                                    overrides.signedByBaseMenuItemOptionMediumStandardEnabled16
                                  }
                                  className={classNames(
                                    projectcss.all,
                                    sty.signedByBaseMenuItemOptionMediumStandardEnabled16
                                  )}
                                />
                              ) : null}
                              {false ? (
                                <Stack__
                                  as={"div"}
                                  data-plasmic-name={
                                    "menuItemControlMediumCheckboxUnchecked16"
                                  }
                                  data-plasmic-override={
                                    overrides.menuItemControlMediumCheckboxUnchecked16
                                  }
                                  hasGap={true}
                                  className={classNames(
                                    projectcss.all,
                                    sty.menuItemControlMediumCheckboxUnchecked16
                                  )}
                                >
                                  {false ? (
                                    <div
                                      data-plasmic-name={
                                        "signedByBaseMenuItemControlMediumCheckboxUnchecked16"
                                      }
                                      data-plasmic-override={
                                        overrides.signedByBaseMenuItemControlMediumCheckboxUnchecked16
                                      }
                                      className={classNames(
                                        projectcss.all,
                                        sty.signedByBaseMenuItemControlMediumCheckboxUnchecked16
                                      )}
                                    />
                                  ) : null}
                                  <div
                                    data-plasmic-name={"icon16"}
                                    data-plasmic-override={overrides.icon16}
                                    className={classNames(
                                      projectcss.all,
                                      sty.icon16
                                    )}
                                  >
                                    {false ? (
                                      <Outlined8Icon
                                        className={classNames(
                                          projectcss.all,
                                          sty.svg__koy5F
                                        )}
                                        role={"img"}
                                      />
                                    ) : null}
                                    <Outlined8Icon
                                      className={classNames(
                                        projectcss.all,
                                        sty.svg__nWsIm
                                      )}
                                      role={"img"}
                                    />
                                  </div>
                                </Stack__>
                              ) : null}
                              {false ? (
                                <Stack__
                                  as={"div"}
                                  data-plasmic-name={"leadingEnhancer16"}
                                  data-plasmic-override={
                                    overrides.leadingEnhancer16
                                  }
                                  hasGap={true}
                                  className={classNames(
                                    projectcss.all,
                                    sty.leadingEnhancer16
                                  )}
                                >
                                  <div
                                    data-plasmic-name={"heart39"}
                                    data-plasmic-override={overrides.heart39}
                                    className={classNames(
                                      projectcss.all,
                                      sty.heart39
                                    )}
                                  >
                                    {false ? (
                                      <Outlined5Icon
                                        className={classNames(
                                          projectcss.all,
                                          sty.svg__rotlu
                                        )}
                                        role={"img"}
                                      />
                                    ) : null}
                                    <Filled4Icon
                                      className={classNames(
                                        projectcss.all,
                                        sty.svg__lk9Kr
                                      )}
                                      role={"img"}
                                    />
                                  </div>
                                </Stack__>
                              ) : null}
                              <Stack__
                                as={"div"}
                                data-plasmic-name={"textFrame16"}
                                data-plasmic-override={overrides.textFrame16}
                                hasGap={true}
                                className={classNames(
                                  projectcss.all,
                                  sty.textFrame16
                                )}
                              >
                                <div
                                  data-plasmic-name={"leadingText16"}
                                  data-plasmic-override={
                                    overrides.leadingText16
                                  }
                                  className={classNames(
                                    projectcss.all,
                                    sty.leadingText16
                                  )}
                                >
                                  <div
                                    data-plasmic-name={"typography54"}
                                    data-plasmic-override={
                                      overrides.typography54
                                    }
                                    className={classNames(
                                      projectcss.all,
                                      sty.typography54
                                    )}
                                  >
                                    {false ? (
                                      <div
                                        data-plasmic-name={
                                          "signedByBaseTypographyParagraphMedium46"
                                        }
                                        data-plasmic-override={
                                          overrides.signedByBaseTypographyParagraphMedium46
                                        }
                                        className={classNames(
                                          projectcss.all,
                                          sty.signedByBaseTypographyParagraphMedium46
                                        )}
                                      />
                                    ) : null}
                                    <div
                                      data-plasmic-name={"text103"}
                                      data-plasmic-override={overrides.text103}
                                      className={classNames(
                                        projectcss.all,
                                        projectcss.__wab_text,
                                        sty.text103
                                      )}
                                    >
                                      {"Options"}
                                    </div>
                                    {false ? (
                                      <div
                                        data-plasmic-name={"spacer94"}
                                        data-plasmic-override={
                                          overrides.spacer94
                                        }
                                        className={classNames(
                                          projectcss.all,
                                          sty.spacer94
                                        )}
                                      />
                                    ) : null}
                                  </div>
                                  {false ? (
                                    <div
                                      data-plasmic-name={"typography55"}
                                      data-plasmic-override={
                                        overrides.typography55
                                      }
                                      className={classNames(
                                        projectcss.all,
                                        sty.typography55
                                      )}
                                    >
                                      {false ? (
                                        <div
                                          data-plasmic-name={
                                            "signedByBaseTypographyParagraphMedium47"
                                          }
                                          data-plasmic-override={
                                            overrides.signedByBaseTypographyParagraphMedium47
                                          }
                                          className={classNames(
                                            projectcss.all,
                                            sty.signedByBaseTypographyParagraphMedium47
                                          )}
                                        />
                                      ) : null}
                                      <div
                                        data-plasmic-name={"text104"}
                                        data-plasmic-override={
                                          overrides.text104
                                        }
                                        className={classNames(
                                          projectcss.all,
                                          projectcss.__wab_text,
                                          sty.text104
                                        )}
                                      >
                                        {"Supporting text"}
                                      </div>
                                      {false ? (
                                        <div
                                          data-plasmic-name={"spacer95"}
                                          data-plasmic-override={
                                            overrides.spacer95
                                          }
                                          className={classNames(
                                            projectcss.all,
                                            sty.spacer95
                                          )}
                                        />
                                      ) : null}
                                    </div>
                                  ) : null}
                                </div>
                                {false ? (
                                  <div
                                    data-plasmic-name={"typography56"}
                                    data-plasmic-override={
                                      overrides.typography56
                                    }
                                    className={classNames(
                                      projectcss.all,
                                      sty.typography56
                                    )}
                                  >
                                    {false ? (
                                      <div
                                        data-plasmic-name={
                                          "signedByBaseTypographyParagraphMedium48"
                                        }
                                        data-plasmic-override={
                                          overrides.signedByBaseTypographyParagraphMedium48
                                        }
                                        className={classNames(
                                          projectcss.all,
                                          sty.signedByBaseTypographyParagraphMedium48
                                        )}
                                      />
                                    ) : null}
                                    <div
                                      className={classNames(
                                        projectcss.all,
                                        projectcss.__wab_text,
                                        sty.text__ws80L
                                      )}
                                    >
                                      {"Text"}
                                    </div>
                                    {false ? (
                                      <div
                                        data-plasmic-name={"spacer96"}
                                        data-plasmic-override={
                                          overrides.spacer96
                                        }
                                        className={classNames(
                                          projectcss.all,
                                          sty.spacer96
                                        )}
                                      />
                                    ) : null}
                                  </div>
                                ) : null}
                              </Stack__>
                              {false ? (
                                <Stack__
                                  as={"div"}
                                  data-plasmic-name={"trailingEnhancer16"}
                                  data-plasmic-override={
                                    overrides.trailingEnhancer16
                                  }
                                  hasGap={true}
                                  className={classNames(
                                    projectcss.all,
                                    sty.trailingEnhancer16
                                  )}
                                >
                                  <div
                                    data-plasmic-name={"heart40"}
                                    data-plasmic-override={overrides.heart40}
                                    className={classNames(
                                      projectcss.all,
                                      sty.heart40
                                    )}
                                  >
                                    {false ? (
                                      <Outlined5Icon
                                        className={classNames(
                                          projectcss.all,
                                          sty.svg__sL4N0
                                        )}
                                        role={"img"}
                                      />
                                    ) : null}
                                    <Filled4Icon
                                      className={classNames(
                                        projectcss.all,
                                        sty.svg__aoCu
                                      )}
                                      role={"img"}
                                    />
                                  </div>
                                </Stack__>
                              ) : null}
                            </Stack__>
                          ) : null}
                          <div
                            data-plasmic-name={"scrollBar4"}
                            data-plasmic-override={overrides.scrollBar4}
                            className={classNames(
                              projectcss.all,
                              sty.scrollBar4
                            )}
                          />
                        </div>
                      </div>
                    </Stack__>
                  ) : null}
                  <DropDown
                    data-plasmic-name={"model4"}
                    data-plasmic-override={overrides.model4}
                    check={false}
                    className={classNames("__wab_instance", sty.model4)}
                    label={"Mod\u00e8le de Runsheet & Dispositif*"}
                    options={["Default", "Special"]}
                    showLabel={true}
                    state={"default"}
                    type={"default"}
                  />

                  <Stack__
                    as={"div"}
                    data-plasmic-name={"buttons4"}
                    data-plasmic-override={overrides.buttons4}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.buttons4)}
                  >
                    <Button
                      data-plasmic-name={"button13"}
                      data-plasmic-override={overrides.button13}
                      className={classNames("__wab_instance", sty.button13)}
                      label={
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__gmoKb
                          )}
                        >
                          {"Cr\u00e9er"}
                        </div>
                      }
                    />

                    {false ? (
                      <Stack__
                        as={"div"}
                        data-plasmic-name={"frame1073713927"}
                        data-plasmic-override={overrides.frame1073713927}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.frame1073713927
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__rZxtE
                          )}
                        >
                          <Line9Icon
                            className={classNames(
                              projectcss.all,
                              sty.svg__yNcVw
                            )}
                            role={"img"}
                          />
                        </div>
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__jY5J
                          )}
                        >
                          {"OU"}
                        </div>
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__tNleC
                          )}
                        >
                          <Line9Icon
                            className={classNames(
                              projectcss.all,
                              sty.svg___9Q9Ym
                            )}
                            role={"img"}
                          />
                        </div>
                      </Stack__>
                    ) : null}
                    {false ? (
                      <Stack__
                        as={"div"}
                        data-plasmic-name={"frame1073713933"}
                        data-plasmic-override={overrides.frame1073713933}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.frame1073713933
                        )}
                      >
                        <Button
                          data-plasmic-name={"button14"}
                          data-plasmic-override={overrides.button14}
                          className={classNames("__wab_instance", sty.button14)}
                        />

                        <Stack__
                          as={"div"}
                          data-plasmic-name={"button15"}
                          data-plasmic-override={overrides.button15}
                          hasGap={true}
                          className={classNames(projectcss.all, sty.button15)}
                        >
                          <IcTwotoneAppleIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg__l1OrQ
                            )}
                            role={"img"}
                          />

                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__dTs1F
                            )}
                          >
                            {"Apple"}
                          </div>
                        </Stack__>
                        <Stack__
                          as={"div"}
                          data-plasmic-name={"button16"}
                          data-plasmic-override={overrides.button16}
                          hasGap={true}
                          className={classNames(projectcss.all, sty.button16)}
                        >
                          <MdiFacebookIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg___1UHen
                            )}
                            role={"img"}
                          />

                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__gxqoV
                            )}
                          >
                            {"Facebook"}
                          </div>
                        </Stack__>
                      </Stack__>
                    ) : null}
                  </Stack__>
                </Stack__>
              </React.Fragment>
            }
            footer={
              <div className={classNames(projectcss.all, sty.freeBox__fPfSq)} />
            }
            heading={
              <div
                data-plasmic-name={"frame1437254026"}
                data-plasmic-override={overrides.frame1437254026}
                className={classNames(projectcss.all, sty.frame1437254026)}
              >
                <div
                  data-plasmic-name={"name8"}
                  data-plasmic-override={overrides.name8}
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.name8
                  )}
                >
                  <React.Fragment>
                    {(() => {
                      try {
                        return "Êtes-vous sûr(e) ?";
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return "Supprimer";
                        }
                        throw e;
                      }
                    })()}
                  </React.Fragment>
                </div>
                <Stack__
                  as={"div"}
                  data-plasmic-name={"frame1437254027"}
                  data-plasmic-override={overrides.frame1437254027}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.frame1437254027)}
                >
                  <LinkSimpleIcon
                    className={classNames(projectcss.all, sty.svg__m8REu)}
                    role={"img"}
                  />

                  <XIcon
                    className={classNames(projectcss.all, sty.svg__vsl0O)}
                    onClick={async event => {
                      const $steps = {};

                      $steps["updateDeleteDispo2"] = true
                        ? (() => {
                            const actionArgs = {
                              variable: {
                                objRoot: $state,
                                variablePath: ["deleteDispo2"]
                              },
                              operation: 0,
                              value: false
                            };
                            return (({
                              variable,
                              value,
                              startIndex,
                              deleteCount
                            }) => {
                              if (!variable) {
                                return;
                              }
                              const { objRoot, variablePath } = variable;

                              $stateSet(objRoot, variablePath, value);
                              return value;
                            })?.apply(null, [actionArgs]);
                          })()
                        : undefined;
                      if (
                        $steps["updateDeleteDispo2"] != null &&
                        typeof $steps["updateDeleteDispo2"] === "object" &&
                        typeof $steps["updateDeleteDispo2"].then === "function"
                      ) {
                        $steps["updateDeleteDispo2"] = await $steps[
                          "updateDeleteDispo2"
                        ];
                      }
                    }}
                    role={"img"}
                  />
                </Stack__>
              </div>
            }
            isOpen={generateStateValueProp($state, ["deleteDispo", "isOpen"])}
            noTrigger={true}
            onOpenChange={async (...eventArgs: any) => {
              generateStateOnChangeProp($state, [
                "deleteDispo",
                "isOpen"
              ]).apply(null, eventArgs);

              if (
                eventArgs.length > 1 &&
                eventArgs[1] &&
                eventArgs[1]._plasmic_state_init_
              ) {
                return;
              }

              (async val => {
                const $steps = {};

                $steps["updateDeleteDispo2"] = true
                  ? (() => {
                      const actionArgs = {
                        variable: {
                          objRoot: $state,
                          variablePath: ["deleteDispo2"]
                        },
                        operation: 4
                      };
                      return (({
                        variable,
                        value,
                        startIndex,
                        deleteCount
                      }) => {
                        if (!variable) {
                          return;
                        }
                        const { objRoot, variablePath } = variable;

                        const oldValue = $stateGet(objRoot, variablePath);
                        $stateSet(objRoot, variablePath, !oldValue);
                        return !oldValue;
                      })?.apply(null, [actionArgs]);
                    })()
                  : undefined;
                if (
                  $steps["updateDeleteDispo2"] != null &&
                  typeof $steps["updateDeleteDispo2"] === "object" &&
                  typeof $steps["updateDeleteDispo2"].then === "function"
                ) {
                  $steps["updateDeleteDispo2"] = await $steps[
                    "updateDeleteDispo2"
                  ];
                }
              }).apply(null, eventArgs);
            }}
            showFooter={false}
            trigger={null}
          />

          <Modal
            data-plasmic-name={"deleteTaskRunsheet"}
            data-plasmic-override={overrides.deleteTaskRunsheet}
            className={classNames("__wab_instance", sty.deleteTaskRunsheet)}
            closeOnBackdropClick={true}
            content={
              <React.Fragment>
                {(() => {
                  const child$Props = {
                    className: classNames("__wab_instance", sty.form3),
                    extendedOnValuesChange: async (...eventArgs: any) => {
                      generateStateOnChangePropForCodeComponents(
                        $state,
                        "value",
                        ["form3", "value"],
                        FormWrapper_Helpers
                      ).apply(null, eventArgs);
                    },
                    formItems: [
                      { label: "Name", name: "name", inputType: "Text" },
                      {
                        label: "Message",
                        name: "message",
                        inputType: "Text Area"
                      }
                    ],
                    initialValues: (() => {
                      try {
                        return $queries.mdTasksModel.data.find(
                          task => Number(task.id) == Number($state.taskId)
                        );
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return undefined;
                        }
                        throw e;
                      }
                    })(),
                    labelCol: { span: 8, horizontalOnly: true },
                    layout: "vertical",
                    mode: "advanced",
                    onFinish: async values => {
                      const $steps = {};

                      $steps["postgresDeleteMany"] = true
                        ? (() => {
                            const actionArgs = {
                              dataOp: {
                                sourceId: "v6umJuHyep6kPNyCAJjouT",
                                opId: "4a8a8056-0dcc-46ff-9936-8f8837efe528",
                                userArgs: {
                                  conditions: [$state.taskId]
                                },
                                cacheKey: null,
                                invalidatedKeys: [
                                  "cec3d7bf-5ee9-47a3-ab41-392259ef4090"
                                ],
                                roleId: null
                              }
                            };
                            return (async ({ dataOp, continueOnError }) => {
                              try {
                                const response = await executePlasmicDataOp(
                                  dataOp,
                                  {
                                    userAuthToken:
                                      dataSourcesCtx?.userAuthToken,
                                    user: dataSourcesCtx?.user
                                  }
                                );
                                await plasmicInvalidate(dataOp.invalidatedKeys);
                                return response;
                              } catch (e) {
                                if (!continueOnError) {
                                  throw e;
                                }
                                return e;
                              }
                            })?.apply(null, [actionArgs]);
                          })()
                        : undefined;
                      if (
                        $steps["postgresDeleteMany"] != null &&
                        typeof $steps["postgresDeleteMany"] === "object" &&
                        typeof $steps["postgresDeleteMany"].then === "function"
                      ) {
                        $steps["postgresDeleteMany"] = await $steps[
                          "postgresDeleteMany"
                        ];
                      }

                      $steps["updateDeleteTask"] = true
                        ? (() => {
                            const actionArgs = {
                              variable: {
                                objRoot: $state,
                                variablePath: ["deleteTask"]
                              },
                              operation: 0,
                              value: false
                            };
                            return (({
                              variable,
                              value,
                              startIndex,
                              deleteCount
                            }) => {
                              if (!variable) {
                                return;
                              }
                              const { objRoot, variablePath } = variable;

                              $stateSet(objRoot, variablePath, value);
                              return value;
                            })?.apply(null, [actionArgs]);
                          })()
                        : undefined;
                      if (
                        $steps["updateDeleteTask"] != null &&
                        typeof $steps["updateDeleteTask"] === "object" &&
                        typeof $steps["updateDeleteTask"].then === "function"
                      ) {
                        $steps["updateDeleteTask"] = await $steps[
                          "updateDeleteTask"
                        ];
                      }

                      $steps["invokeGlobalAction"] = true
                        ? (() => {
                            const actionArgs = {
                              args: [
                                "success",
                                "T\u00e2che supprim\u00e9e",
                                undefined,
                                undefined,
                                "bottom"
                              ]
                            };
                            return $globalActions[
                              "plasmic-antd5-config-provider.showNotification"
                            ]?.apply(null, [...actionArgs.args]);
                          })()
                        : undefined;
                      if (
                        $steps["invokeGlobalAction"] != null &&
                        typeof $steps["invokeGlobalAction"] === "object" &&
                        typeof $steps["invokeGlobalAction"].then === "function"
                      ) {
                        $steps["invokeGlobalAction"] = await $steps[
                          "invokeGlobalAction"
                        ];
                      }
                    },
                    onIsSubmittingChange: async (...eventArgs: any) => {
                      generateStateOnChangePropForCodeComponents(
                        $state,
                        "isSubmitting",
                        ["form3", "isSubmitting"],
                        FormWrapper_Helpers
                      ).apply(null, eventArgs);
                    },
                    ref: ref => {
                      $refs["form3"] = ref;
                    },
                    submitSlot: null,
                    wrapperCol: { span: 16, horizontalOnly: true }
                  };
                  initializeCodeComponentStates(
                    $state,
                    [
                      {
                        name: "value",
                        plasmicStateName: "form3.value"
                      },
                      {
                        name: "isSubmitting",
                        plasmicStateName: "form3.isSubmitting"
                      }
                    ],
                    [],
                    FormWrapper_Helpers ?? {},
                    child$Props
                  );

                  return (
                    <FormWrapper
                      data-plasmic-name={"form3"}
                      data-plasmic-override={overrides.form3}
                      {...child$Props}
                    >
                      <Button
                        className={classNames(
                          "__wab_instance",
                          sty.button__fXgge
                        )}
                        color={"errorDestructive"}
                        disabled={(() => {
                          try {
                            return !$state.taskId || $state.taskId === 0;
                          } catch (e) {
                            if (
                              e instanceof TypeError ||
                              e?.plasmicType === "PlasmicUndefinedDataError"
                            ) {
                              return undefined;
                            }
                            throw e;
                          }
                        })()}
                        label={"Supprimer"}
                        submitsForm={true}
                      />
                    </FormWrapper>
                  );
                })()}
                <Stack__
                  as={"div"}
                  data-plasmic-name={"content3"}
                  data-plasmic-override={overrides.content3}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.content3)}
                >
                  <TextInput
                    data-plasmic-name={"titre3"}
                    data-plasmic-override={overrides.titre3}
                    className={classNames("__wab_instance", sty.titre3)}
                    isMulti={false}
                    label={"Titre*"}
                    placeholder={"Titre*"}
                    showIcon={false}
                    showLabel={true}
                    state={"default"}
                    text={``}
                    type={"text"}
                  />

                  <SitexTextInput
                    data-plasmic-name={"texinput23"}
                    data-plasmic-override={overrides.texinput23}
                    className={classNames("__wab_instance", sty.texinput23)}
                    initialValue={generateStateValueProp($state, [
                      "texinput23",
                      "value"
                    ])}
                    onTextChange={async (...eventArgs: any) => {
                      generateStateOnChangeProp($state, [
                        "texinput23",
                        "value"
                      ]).apply(null, eventArgs);
                    }}
                    onValidationChange={async (...eventArgs: any) => {
                      generateStateOnChangeProp($state, [
                        "texinput23",
                        "isInputValid"
                      ]).apply(null, eventArgs);
                    }}
                    placeholder={"Titre*"}
                    prefixedText={"Titre*"}
                    required={true}
                    type={"text"}
                  />

                  <Stack__
                    as={"div"}
                    data-plasmic-name={"date3"}
                    data-plasmic-override={overrides.date3}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.date3)}
                  >
                    <div
                      data-plasmic-name={"label8"}
                      data-plasmic-override={overrides.label8}
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.label8
                      )}
                    >
                      {"Date et heure de d\u00e9but"}
                    </div>
                    {(() => {
                      const child$Props = {
                        allowClear: true,
                        className: classNames(
                          "__wab_instance",
                          sty.timePicker9
                        ),
                        onChange: async (...eventArgs: any) => {
                          generateStateOnChangePropForCodeComponents(
                            $state,
                            "value",
                            ["timePicker9", "value"],
                            AntdDatePicker_Helpers
                          ).apply(null, eventArgs);
                        },
                        popupScopeClassName:
                          sty["timePicker9__datePickerPopup"],
                        showTime: true,
                        value: generateStateValueProp($state, [
                          "timePicker9",
                          "value"
                        ])
                      };
                      initializeCodeComponentStates(
                        $state,
                        [
                          {
                            name: "value",
                            plasmicStateName: "timePicker9.value"
                          }
                        ],
                        [],
                        AntdDatePicker_Helpers ?? {},
                        child$Props
                      );

                      return (
                        <AntdDatePicker
                          data-plasmic-name={"timePicker9"}
                          data-plasmic-override={overrides.timePicker9}
                          {...child$Props}
                        />
                      );
                    })()}
                  </Stack__>
                  <DropDown
                    data-plasmic-name={"type3"}
                    data-plasmic-override={overrides.type3}
                    check={false}
                    className={classNames("__wab_instance", sty.type3)}
                    label={"Type"}
                    options={["Default", "Special"]}
                    showLabel={true}
                    state={"default"}
                    type={"default"}
                  />

                  <TextInput
                    data-plasmic-name={"budget3"}
                    data-plasmic-override={overrides.budget3}
                    className={classNames("__wab_instance", sty.budget3)}
                    isMulti={false}
                    label={"Budget"}
                    placeholder={"\u20ac"}
                    showIcon={false}
                    showLabel={true}
                    state={"default"}
                    text={""}
                    type={"text"}
                  />

                  <TextInput
                    data-plasmic-name={"comments3"}
                    data-plasmic-override={overrides.comments3}
                    className={classNames("__wab_instance", sty.comments3)}
                    isMulti={false}
                    label={"Commentaires"}
                    placeholder={"Commentaires"}
                    showIcon={false}
                    showLabel={true}
                    state={"Placeholder"}
                    text={""}
                    type={"TextArea"}
                  />

                  {false ? (
                    <Stack__
                      as={"div"}
                      data-plasmic-name={"input9"}
                      data-plasmic-override={overrides.input9}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.input9)}
                    >
                      <div
                        data-plasmic-name={"name6"}
                        data-plasmic-override={overrides.name6}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.name6
                        )}
                      >
                        {"Dispositif"}
                      </div>
                      <Stack__
                        as={"div"}
                        data-plasmic-name={"datePickerWeb3"}
                        data-plasmic-override={overrides.datePickerWeb3}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.datePickerWeb3
                        )}
                      >
                        <Stack__
                          as={"div"}
                          data-plasmic-name={"inputSelect3"}
                          data-plasmic-override={overrides.inputSelect3}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.inputSelect3
                          )}
                        >
                          {false ? (
                            <div
                              data-plasmic-name={"signedByBaseFieldGroupSmall3"}
                              data-plasmic-override={
                                overrides.signedByBaseFieldGroupSmall3
                              }
                              className={classNames(
                                projectcss.all,
                                sty.signedByBaseFieldGroupSmall3
                              )}
                            />
                          ) : null}
                          <Stack__
                            as={"div"}
                            data-plasmic-name={"endDateCalendar3"}
                            data-plasmic-override={overrides.endDateCalendar3}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.endDateCalendar3
                            )}
                          >
                            {false ? (
                              <div
                                data-plasmic-name={"inputElementTextField5"}
                                data-plasmic-override={
                                  overrides.inputElementTextField5
                                }
                                className={classNames(
                                  projectcss.all,
                                  sty.inputElementTextField5
                                )}
                              >
                                {false ? (
                                  <div
                                    data-plasmic-name={
                                      "signedByBaseInputElementTextFieldSmallEnabled3"
                                    }
                                    data-plasmic-override={
                                      overrides.signedByBaseInputElementTextFieldSmallEnabled3
                                    }
                                    className={classNames(
                                      projectcss.all,
                                      sty.signedByBaseInputElementTextFieldSmallEnabled3
                                    )}
                                  />
                                ) : null}
                                {false ? (
                                  <div
                                    data-plasmic-name={
                                      "leadingArtworkContainer9"
                                    }
                                    data-plasmic-override={
                                      overrides.leadingArtworkContainer9
                                    }
                                    className={classNames(
                                      projectcss.all,
                                      sty.leadingArtworkContainer9
                                    )}
                                  >
                                    <div
                                      data-plasmic-name={"leadingArtwork5"}
                                      data-plasmic-override={
                                        overrides.leadingArtwork5
                                      }
                                      className={classNames(
                                        projectcss.all,
                                        sty.leadingArtwork5
                                      )}
                                    >
                                      {false ? (
                                        <OutlinedIcon
                                          className={classNames(
                                            projectcss.all,
                                            sty.svg__oeHk
                                          )}
                                          role={"img"}
                                        />
                                      ) : null}
                                      <FilledIcon
                                        className={classNames(
                                          projectcss.all,
                                          sty.svg__vtIs
                                        )}
                                        role={"img"}
                                      />
                                    </div>
                                  </div>
                                ) : null}
                                {false ? (
                                  <div
                                    data-plasmic-name={"leadingLabelContainer9"}
                                    data-plasmic-override={
                                      overrides.leadingLabelContainer9
                                    }
                                    className={classNames(
                                      projectcss.all,
                                      sty.leadingLabelContainer9
                                    )}
                                  >
                                    <div
                                      data-plasmic-name={"leadingLabel9"}
                                      data-plasmic-override={
                                        overrides.leadingLabel9
                                      }
                                      className={classNames(
                                        projectcss.all,
                                        sty.leadingLabel9
                                      )}
                                    >
                                      {false ? (
                                        <div
                                          data-plasmic-name={
                                            "signedByBaseTypographyLabelSmall5"
                                          }
                                          data-plasmic-override={
                                            overrides.signedByBaseTypographyLabelSmall5
                                          }
                                          className={classNames(
                                            projectcss.all,
                                            sty.signedByBaseTypographyLabelSmall5
                                          )}
                                        />
                                      ) : null}
                                      <div
                                        data-plasmic-name={"text55"}
                                        data-plasmic-override={overrides.text55}
                                        className={classNames(
                                          projectcss.all,
                                          projectcss.__wab_text,
                                          sty.text55
                                        )}
                                      >
                                        {"$"}
                                      </div>
                                      {false ? (
                                        <div
                                          data-plasmic-name={"spacer49"}
                                          data-plasmic-override={
                                            overrides.spacer49
                                          }
                                          className={classNames(
                                            projectcss.all,
                                            sty.spacer49
                                          )}
                                        />
                                      ) : null}
                                    </div>
                                  </div>
                                ) : null}
                                <div
                                  data-plasmic-name={"inputElementContentText9"}
                                  data-plasmic-override={
                                    overrides.inputElementContentText9
                                  }
                                  className={classNames(
                                    projectcss.all,
                                    sty.inputElementContentText9
                                  )}
                                >
                                  {false ? (
                                    <div
                                      data-plasmic-name={
                                        "signedByBaseInputElementContentTextSmallOff3"
                                      }
                                      data-plasmic-override={
                                        overrides.signedByBaseInputElementContentTextSmallOff3
                                      }
                                      className={classNames(
                                        projectcss.all,
                                        sty.signedByBaseInputElementContentTextSmallOff3
                                      )}
                                    />
                                  ) : null}
                                  <div
                                    data-plasmic-name={"text56"}
                                    data-plasmic-override={overrides.text56}
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.__wab_text,
                                      sty.text56
                                    )}
                                  >
                                    {"MM/DD/YYYY"}
                                  </div>
                                </div>
                                {false ? (
                                  <div
                                    data-plasmic-name={"trailingLabelEnhancer9"}
                                    data-plasmic-override={
                                      overrides.trailingLabelEnhancer9
                                    }
                                    className={classNames(
                                      projectcss.all,
                                      sty.trailingLabelEnhancer9
                                    )}
                                  >
                                    {false ? (
                                      <div
                                        data-plasmic-name={"trailingLabel9"}
                                        data-plasmic-override={
                                          overrides.trailingLabel9
                                        }
                                        className={classNames(
                                          projectcss.all,
                                          sty.trailingLabel9
                                        )}
                                      >
                                        {false ? (
                                          <div
                                            data-plasmic-name={
                                              "signedByBaseTypographyLabelSmall6"
                                            }
                                            data-plasmic-override={
                                              overrides.signedByBaseTypographyLabelSmall6
                                            }
                                            className={classNames(
                                              projectcss.all,
                                              sty.signedByBaseTypographyLabelSmall6
                                            )}
                                          />
                                        ) : null}
                                        <div
                                          data-plasmic-name={"text57"}
                                          data-plasmic-override={
                                            overrides.text57
                                          }
                                          className={classNames(
                                            projectcss.all,
                                            projectcss.__wab_text,
                                            sty.text57
                                          )}
                                        >
                                          {"USD"}
                                        </div>
                                        {false ? (
                                          <div
                                            data-plasmic-name={"spacer50"}
                                            data-plasmic-override={
                                              overrides.spacer50
                                            }
                                            className={classNames(
                                              projectcss.all,
                                              sty.spacer50
                                            )}
                                          />
                                        ) : null}
                                      </div>
                                    ) : null}
                                  </div>
                                ) : null}
                                {false ? (
                                  <div
                                    data-plasmic-name={
                                      "trailingArtworkContainer9"
                                    }
                                    data-plasmic-override={
                                      overrides.trailingArtworkContainer9
                                    }
                                    className={classNames(
                                      projectcss.all,
                                      sty.trailingArtworkContainer9
                                    )}
                                  >
                                    <div
                                      data-plasmic-name={"trailingArtwork9"}
                                      data-plasmic-override={
                                        overrides.trailingArtwork9
                                      }
                                      className={classNames(
                                        projectcss.all,
                                        sty.trailingArtwork9
                                      )}
                                    >
                                      {false ? (
                                        <OutlinedIcon
                                          className={classNames(
                                            projectcss.all,
                                            sty.svg___9A1Vf
                                          )}
                                          role={"img"}
                                        />
                                      ) : null}
                                      <FilledIcon
                                        className={classNames(
                                          projectcss.all,
                                          sty.svg___1TKtA
                                        )}
                                        role={"img"}
                                      />
                                    </div>
                                  </div>
                                ) : null}
                              </div>
                            ) : null}
                            <div
                              data-plasmic-name={"calendar3"}
                              data-plasmic-override={overrides.calendar3}
                              className={classNames(
                                projectcss.all,
                                sty.calendar3
                              )}
                            >
                              {false ? (
                                <div
                                  data-plasmic-name={
                                    "signedByBaseInputElementSelectXSmallWebSingleDefaultEnabled3"
                                  }
                                  data-plasmic-override={
                                    overrides.signedByBaseInputElementSelectXSmallWebSingleDefaultEnabled3
                                  }
                                  className={classNames(
                                    projectcss.all,
                                    sty.signedByBaseInputElementSelectXSmallWebSingleDefaultEnabled3
                                  )}
                                />
                              ) : null}
                              <Stack__
                                as={"div"}
                                data-plasmic-name={"leadingArtworkContainer10"}
                                data-plasmic-override={
                                  overrides.leadingArtworkContainer10
                                }
                                hasGap={true}
                                className={classNames(
                                  projectcss.all,
                                  sty.leadingArtworkContainer10
                                )}
                              >
                                <div
                                  data-plasmic-name={"text58"}
                                  data-plasmic-override={overrides.text58}
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.__wab_text,
                                    sty.text58
                                  )}
                                >
                                  {"S\u00e9lectionner..."}
                                </div>
                              </Stack__>
                              {false ? (
                                <div
                                  data-plasmic-name={"leadingLabelContainer10"}
                                  data-plasmic-override={
                                    overrides.leadingLabelContainer10
                                  }
                                  className={classNames(
                                    projectcss.all,
                                    sty.leadingLabelContainer10
                                  )}
                                >
                                  <div
                                    data-plasmic-name={"leadingLabel10"}
                                    data-plasmic-override={
                                      overrides.leadingLabel10
                                    }
                                    className={classNames(
                                      projectcss.all,
                                      sty.leadingLabel10
                                    )}
                                  >
                                    {false ? (
                                      <div
                                        data-plasmic-name={
                                          "signedByBaseTypographyLabelXSmall5"
                                        }
                                        data-plasmic-override={
                                          overrides.signedByBaseTypographyLabelXSmall5
                                        }
                                        className={classNames(
                                          projectcss.all,
                                          sty.signedByBaseTypographyLabelXSmall5
                                        )}
                                      />
                                    ) : null}
                                    <div
                                      data-plasmic-name={"text59"}
                                      data-plasmic-override={overrides.text59}
                                      className={classNames(
                                        projectcss.all,
                                        projectcss.__wab_text,
                                        sty.text59
                                      )}
                                    >
                                      {"$"}
                                    </div>
                                    {false ? (
                                      <div
                                        data-plasmic-name={"spacer51"}
                                        data-plasmic-override={
                                          overrides.spacer51
                                        }
                                        className={classNames(
                                          projectcss.all,
                                          sty.spacer51
                                        )}
                                      />
                                    ) : null}
                                  </div>
                                </div>
                              ) : null}
                              {false ? (
                                <div
                                  data-plasmic-name={
                                    "inputElementContentText10"
                                  }
                                  data-plasmic-override={
                                    overrides.inputElementContentText10
                                  }
                                  className={classNames(
                                    projectcss.all,
                                    sty.inputElementContentText10
                                  )}
                                >
                                  {false ? (
                                    <div
                                      data-plasmic-name={
                                        "signedByBaseInputElementContentTextXSmallWebOff3"
                                      }
                                      data-plasmic-override={
                                        overrides.signedByBaseInputElementContentTextXSmallWebOff3
                                      }
                                      className={classNames(
                                        projectcss.all,
                                        sty.signedByBaseInputElementContentTextXSmallWebOff3
                                      )}
                                    />
                                  ) : null}
                                  <div
                                    data-plasmic-name={"text60"}
                                    data-plasmic-override={overrides.text60}
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.__wab_text,
                                      sty.text60
                                    )}
                                  >
                                    {"Jr"}
                                  </div>
                                </div>
                              ) : null}
                              {false ? (
                                <div
                                  data-plasmic-name={"trailingLabelEnhancer10"}
                                  data-plasmic-override={
                                    overrides.trailingLabelEnhancer10
                                  }
                                  className={classNames(
                                    projectcss.all,
                                    sty.trailingLabelEnhancer10
                                  )}
                                >
                                  {false ? (
                                    <div
                                      data-plasmic-name={"trailingLabel10"}
                                      data-plasmic-override={
                                        overrides.trailingLabel10
                                      }
                                      className={classNames(
                                        projectcss.all,
                                        sty.trailingLabel10
                                      )}
                                    >
                                      {false ? (
                                        <div
                                          data-plasmic-name={
                                            "signedByBaseTypographyLabelXSmall6"
                                          }
                                          data-plasmic-override={
                                            overrides.signedByBaseTypographyLabelXSmall6
                                          }
                                          className={classNames(
                                            projectcss.all,
                                            sty.signedByBaseTypographyLabelXSmall6
                                          )}
                                        />
                                      ) : null}
                                      <div
                                        data-plasmic-name={"text61"}
                                        data-plasmic-override={overrides.text61}
                                        className={classNames(
                                          projectcss.all,
                                          projectcss.__wab_text,
                                          sty.text61
                                        )}
                                      >
                                        {"USD"}
                                      </div>
                                      {false ? (
                                        <div
                                          data-plasmic-name={"spacer52"}
                                          data-plasmic-override={
                                            overrides.spacer52
                                          }
                                          className={classNames(
                                            projectcss.all,
                                            sty.spacer52
                                          )}
                                        />
                                      ) : null}
                                    </div>
                                  ) : null}
                                </div>
                              ) : null}
                              {false ? (
                                <div
                                  data-plasmic-name={
                                    "trailingArtworkContainer10"
                                  }
                                  data-plasmic-override={
                                    overrides.trailingArtworkContainer10
                                  }
                                  className={classNames(
                                    projectcss.all,
                                    sty.trailingArtworkContainer10
                                  )}
                                >
                                  <div
                                    data-plasmic-name={"trailingArtwork10"}
                                    data-plasmic-override={
                                      overrides.trailingArtwork10
                                    }
                                    className={classNames(
                                      projectcss.all,
                                      sty.trailingArtwork10
                                    )}
                                  >
                                    {false ? (
                                      <Outlined2Icon
                                        className={classNames(
                                          projectcss.all,
                                          sty.svg__d3F0
                                        )}
                                        role={"img"}
                                      />
                                    ) : null}
                                    <Filled2Icon
                                      className={classNames(
                                        projectcss.all,
                                        sty.svg___5EdKk
                                      )}
                                      role={"img"}
                                    />
                                  </div>
                                </div>
                              ) : null}
                              <div
                                data-plasmic-name={"selectIndicatorContainer5"}
                                data-plasmic-override={
                                  overrides.selectIndicatorContainer5
                                }
                                className={classNames(
                                  projectcss.all,
                                  sty.selectIndicatorContainer5
                                )}
                              >
                                <div
                                  data-plasmic-name={"chevronIcon5"}
                                  data-plasmic-override={overrides.chevronIcon5}
                                  className={classNames(
                                    projectcss.all,
                                    sty.chevronIcon5
                                  )}
                                >
                                  {false ? (
                                    <Outlined3Icon
                                      className={classNames(
                                        projectcss.all,
                                        sty.svg__eZosi
                                      )}
                                      role={"img"}
                                    />
                                  ) : null}
                                  <Outlined3Icon
                                    className={classNames(
                                      projectcss.all,
                                      sty.svg__ygbgz
                                    )}
                                    role={"img"}
                                  />
                                </div>
                              </div>
                            </div>
                          </Stack__>
                          {false ? (
                            <Stack__
                              as={"div"}
                              data-plasmic-name={"inputElementHint5"}
                              data-plasmic-override={
                                overrides.inputElementHint5
                              }
                              hasGap={true}
                              className={classNames(
                                projectcss.all,
                                sty.inputElementHint5
                              )}
                            >
                              {false ? (
                                <div
                                  data-plasmic-name={"heart21"}
                                  data-plasmic-override={overrides.heart21}
                                  className={classNames(
                                    projectcss.all,
                                    sty.heart21
                                  )}
                                >
                                  {false ? (
                                    <Outlined4Icon
                                      className={classNames(
                                        projectcss.all,
                                        sty.svg__oRtz
                                      )}
                                      role={"img"}
                                    />
                                  ) : null}
                                  <Filled3Icon
                                    className={classNames(
                                      projectcss.all,
                                      sty.svg__sjz5I
                                    )}
                                    role={"img"}
                                  />
                                </div>
                              ) : null}
                              <div
                                data-plasmic-name={"hint5"}
                                data-plasmic-override={overrides.hint5}
                                className={classNames(
                                  projectcss.all,
                                  sty.hint5
                                )}
                              >
                                {false ? (
                                  <div
                                    data-plasmic-name={
                                      "signedByBaseTypographyParagraphSmall5"
                                    }
                                    data-plasmic-override={
                                      overrides.signedByBaseTypographyParagraphSmall5
                                    }
                                    className={classNames(
                                      projectcss.all,
                                      sty.signedByBaseTypographyParagraphSmall5
                                    )}
                                  />
                                ) : null}
                                <div
                                  data-plasmic-name={"text62"}
                                  data-plasmic-override={overrides.text62}
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.__wab_text,
                                    sty.text62
                                  )}
                                >
                                  {"MM/DD/YYYY"}
                                </div>
                                {false ? (
                                  <div
                                    data-plasmic-name={"spacer53"}
                                    data-plasmic-override={overrides.spacer53}
                                    className={classNames(
                                      projectcss.all,
                                      sty.spacer53
                                    )}
                                  />
                                ) : null}
                              </div>
                            </Stack__>
                          ) : null}
                        </Stack__>
                      </Stack__>
                      <div
                        data-plasmic-name={"inputElementSelect3"}
                        data-plasmic-override={overrides.inputElementSelect3}
                        className={classNames(
                          projectcss.all,
                          sty.inputElementSelect3
                        )}
                      >
                        {false ? (
                          <div
                            data-plasmic-name={
                              "signedByBaseInputElementSelectMediumSingleDefaultActive3"
                            }
                            data-plasmic-override={
                              overrides.signedByBaseInputElementSelectMediumSingleDefaultActive3
                            }
                            className={classNames(
                              projectcss.all,
                              sty.signedByBaseInputElementSelectMediumSingleDefaultActive3
                            )}
                          />
                        ) : null}
                        {false ? (
                          <div
                            data-plasmic-name={"selectFrame3"}
                            data-plasmic-override={overrides.selectFrame3}
                            className={classNames(
                              projectcss.all,
                              sty.selectFrame3
                            )}
                          >
                            {false ? (
                              <div
                                data-plasmic-name={"leadingArtworkContainer11"}
                                data-plasmic-override={
                                  overrides.leadingArtworkContainer11
                                }
                                className={classNames(
                                  projectcss.all,
                                  sty.leadingArtworkContainer11
                                )}
                              >
                                <div
                                  data-plasmic-name={"leadingArtwork6"}
                                  data-plasmic-override={
                                    overrides.leadingArtwork6
                                  }
                                  className={classNames(
                                    projectcss.all,
                                    sty.leadingArtwork6
                                  )}
                                >
                                  {false ? (
                                    <Outlined5Icon
                                      className={classNames(
                                        projectcss.all,
                                        sty.svg__vaVSj
                                      )}
                                      role={"img"}
                                    />
                                  ) : null}
                                  <Filled4Icon
                                    className={classNames(
                                      projectcss.all,
                                      sty.svg__mU0Sq
                                    )}
                                    role={"img"}
                                  />
                                </div>
                              </div>
                            ) : null}
                            {false ? (
                              <div
                                data-plasmic-name={"leadingLabelContainer11"}
                                data-plasmic-override={
                                  overrides.leadingLabelContainer11
                                }
                                className={classNames(
                                  projectcss.all,
                                  sty.leadingLabelContainer11
                                )}
                              >
                                <div
                                  data-plasmic-name={"leadingLabel11"}
                                  data-plasmic-override={
                                    overrides.leadingLabel11
                                  }
                                  className={classNames(
                                    projectcss.all,
                                    sty.leadingLabel11
                                  )}
                                >
                                  {false ? (
                                    <div
                                      data-plasmic-name={
                                        "signedByBaseTypographyLabelMedium13"
                                      }
                                      data-plasmic-override={
                                        overrides.signedByBaseTypographyLabelMedium13
                                      }
                                      className={classNames(
                                        projectcss.all,
                                        sty.signedByBaseTypographyLabelMedium13
                                      )}
                                    />
                                  ) : null}
                                  <div
                                    data-plasmic-name={"text63"}
                                    data-plasmic-override={overrides.text63}
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.__wab_text,
                                      sty.text63
                                    )}
                                  >
                                    {"$"}
                                  </div>
                                  {false ? (
                                    <div
                                      data-plasmic-name={"spacer54"}
                                      data-plasmic-override={overrides.spacer54}
                                      className={classNames(
                                        projectcss.all,
                                        sty.spacer54
                                      )}
                                    />
                                  ) : null}
                                </div>
                              </div>
                            ) : null}
                            <div
                              data-plasmic-name={"inputElementContentText11"}
                              data-plasmic-override={
                                overrides.inputElementContentText11
                              }
                              className={classNames(
                                projectcss.all,
                                sty.inputElementContentText11
                              )}
                            >
                              {false ? (
                                <div
                                  data-plasmic-name={
                                    "signedByBaseInputElementContentTextMediumOff5"
                                  }
                                  data-plasmic-override={
                                    overrides.signedByBaseInputElementContentTextMediumOff5
                                  }
                                  className={classNames(
                                    projectcss.all,
                                    sty.signedByBaseInputElementContentTextMediumOff5
                                  )}
                                />
                              ) : null}
                              {false ? (
                                <div
                                  data-plasmic-name={"text64"}
                                  data-plasmic-override={overrides.text64}
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.__wab_text,
                                    sty.text64
                                  )}
                                >
                                  {"S\u00e9lectionner..."}
                                </div>
                              ) : null}
                            </div>
                            {false ? (
                              <div
                                data-plasmic-name={"trailingLabelEnhancer11"}
                                data-plasmic-override={
                                  overrides.trailingLabelEnhancer11
                                }
                                className={classNames(
                                  projectcss.all,
                                  sty.trailingLabelEnhancer11
                                )}
                              >
                                {false ? (
                                  <div
                                    data-plasmic-name={"trailingLabel11"}
                                    data-plasmic-override={
                                      overrides.trailingLabel11
                                    }
                                    className={classNames(
                                      projectcss.all,
                                      sty.trailingLabel11
                                    )}
                                  >
                                    {false ? (
                                      <div
                                        data-plasmic-name={
                                          "signedByBaseTypographyLabelMedium14"
                                        }
                                        data-plasmic-override={
                                          overrides.signedByBaseTypographyLabelMedium14
                                        }
                                        className={classNames(
                                          projectcss.all,
                                          sty.signedByBaseTypographyLabelMedium14
                                        )}
                                      />
                                    ) : null}
                                    <div
                                      data-plasmic-name={"text65"}
                                      data-plasmic-override={overrides.text65}
                                      className={classNames(
                                        projectcss.all,
                                        projectcss.__wab_text,
                                        sty.text65
                                      )}
                                    >
                                      {"USD"}
                                    </div>
                                    {false ? (
                                      <div
                                        data-plasmic-name={"spacer55"}
                                        data-plasmic-override={
                                          overrides.spacer55
                                        }
                                        className={classNames(
                                          projectcss.all,
                                          sty.spacer55
                                        )}
                                      />
                                    ) : null}
                                  </div>
                                ) : null}
                              </div>
                            ) : null}
                            {false ? (
                              <div
                                data-plasmic-name={"trailingArtworkContainer11"}
                                data-plasmic-override={
                                  overrides.trailingArtworkContainer11
                                }
                                className={classNames(
                                  projectcss.all,
                                  sty.trailingArtworkContainer11
                                )}
                              >
                                <div
                                  data-plasmic-name={"trailingArtwork11"}
                                  data-plasmic-override={
                                    overrides.trailingArtwork11
                                  }
                                  className={classNames(
                                    projectcss.all,
                                    sty.trailingArtwork11
                                  )}
                                >
                                  {false ? (
                                    <Outlined5Icon
                                      className={classNames(
                                        projectcss.all,
                                        sty.svg__q4Jt
                                      )}
                                      role={"img"}
                                    />
                                  ) : null}
                                  <Filled4Icon
                                    className={classNames(
                                      projectcss.all,
                                      sty.svg__dZn7L
                                    )}
                                    role={"img"}
                                  />
                                </div>
                              </div>
                            ) : null}
                            {false ? (
                              <div
                                data-plasmic-name={"selectIndicatorContainer6"}
                                data-plasmic-override={
                                  overrides.selectIndicatorContainer6
                                }
                                className={classNames(
                                  projectcss.all,
                                  sty.selectIndicatorContainer6
                                )}
                              >
                                <div
                                  data-plasmic-name={"chevronIcon6"}
                                  data-plasmic-override={overrides.chevronIcon6}
                                  className={classNames(
                                    projectcss.all,
                                    sty.chevronIcon6
                                  )}
                                >
                                  {false ? (
                                    <Outlined6Icon
                                      className={classNames(
                                        projectcss.all,
                                        sty.svg__n8XZ7
                                      )}
                                      role={"img"}
                                    />
                                  ) : null}
                                  <Outlined6Icon
                                    className={classNames(
                                      projectcss.all,
                                      sty.svg__go31S
                                    )}
                                    role={"img"}
                                  />
                                </div>
                              </div>
                            ) : null}
                          </div>
                        ) : null}
                        <div
                          data-plasmic-name={"menu3"}
                          data-plasmic-override={overrides.menu3}
                          className={classNames(projectcss.all, sty.menu3)}
                        >
                          {false ? (
                            <div
                              data-plasmic-name={"signedByBaseMenuListMedium3"}
                              data-plasmic-override={
                                overrides.signedByBaseMenuListMedium3
                              }
                              className={classNames(
                                projectcss.all,
                                sty.signedByBaseMenuListMedium3
                              )}
                            />
                          ) : null}
                          {false ? (
                            <Stack__
                              as={"div"}
                              data-plasmic-name={"menuItem11"}
                              data-plasmic-override={overrides.menuItem11}
                              hasGap={true}
                              className={classNames(
                                projectcss.all,
                                sty.menuItem11
                              )}
                            >
                              {false ? (
                                <div
                                  data-plasmic-name={
                                    "signedByBaseMenuItemSearchMediumNoneEnabled3"
                                  }
                                  data-plasmic-override={
                                    overrides.signedByBaseMenuItemSearchMediumNoneEnabled3
                                  }
                                  className={classNames(
                                    projectcss.all,
                                    sty.signedByBaseMenuItemSearchMediumNoneEnabled3
                                  )}
                                />
                              ) : null}
                              <Stack__
                                as={"div"}
                                data-plasmic-name={"searchField3"}
                                data-plasmic-override={overrides.searchField3}
                                hasGap={true}
                                className={classNames(
                                  projectcss.all,
                                  sty.searchField3
                                )}
                              >
                                {false ? (
                                  <div
                                    data-plasmic-name={
                                      "signedByBaseSearchFieldMediumEnabled3"
                                    }
                                    data-plasmic-override={
                                      overrides.signedByBaseSearchFieldMediumEnabled3
                                    }
                                    className={classNames(
                                      projectcss.all,
                                      sty.signedByBaseSearchFieldMediumEnabled3
                                    )}
                                  />
                                ) : null}
                                {false ? (
                                  <Stack__
                                    as={"div"}
                                    data-plasmic-name={"inputElementLabel3"}
                                    data-plasmic-override={
                                      overrides.inputElementLabel3
                                    }
                                    hasGap={true}
                                    className={classNames(
                                      projectcss.all,
                                      sty.inputElementLabel3
                                    )}
                                  >
                                    {false ? (
                                      <div
                                        data-plasmic-name={
                                          "signedByBaseInputElementLabelMedium3"
                                        }
                                        data-plasmic-override={
                                          overrides.signedByBaseInputElementLabelMedium3
                                        }
                                        className={classNames(
                                          projectcss.all,
                                          sty.signedByBaseInputElementLabelMedium3
                                        )}
                                      />
                                    ) : null}
                                    <div
                                      data-plasmic-name={"typography29"}
                                      data-plasmic-override={
                                        overrides.typography29
                                      }
                                      className={classNames(
                                        projectcss.all,
                                        sty.typography29
                                      )}
                                    >
                                      {false ? (
                                        <div
                                          data-plasmic-name={
                                            "signedByBaseTypographyLabelMedium15"
                                          }
                                          data-plasmic-override={
                                            overrides.signedByBaseTypographyLabelMedium15
                                          }
                                          className={classNames(
                                            projectcss.all,
                                            sty.signedByBaseTypographyLabelMedium15
                                          )}
                                        />
                                      ) : null}
                                      <div
                                        data-plasmic-name={"text66"}
                                        data-plasmic-override={overrides.text66}
                                        className={classNames(
                                          projectcss.all,
                                          projectcss.__wab_text,
                                          sty.text66
                                        )}
                                      >
                                        {"Label"}
                                      </div>
                                      {false ? (
                                        <div
                                          data-plasmic-name={"spacer56"}
                                          data-plasmic-override={
                                            overrides.spacer56
                                          }
                                          className={classNames(
                                            projectcss.all,
                                            sty.spacer56
                                          )}
                                        />
                                      ) : null}
                                    </div>
                                    {false ? (
                                      <Stack__
                                        as={"div"}
                                        data-plasmic-name={
                                          "characterCountFrame3"
                                        }
                                        data-plasmic-override={
                                          overrides.characterCountFrame3
                                        }
                                        hasGap={true}
                                        className={classNames(
                                          projectcss.all,
                                          sty.characterCountFrame3
                                        )}
                                      >
                                        {false ? (
                                          <div
                                            data-plasmic-name={"heart22"}
                                            data-plasmic-override={
                                              overrides.heart22
                                            }
                                            className={classNames(
                                              projectcss.all,
                                              sty.heart22
                                            )}
                                          >
                                            {false ? (
                                              <OutlinedIcon
                                                className={classNames(
                                                  projectcss.all,
                                                  sty.svg__qiUdt
                                                )}
                                                role={"img"}
                                              />
                                            ) : null}
                                            <FilledIcon
                                              className={classNames(
                                                projectcss.all,
                                                sty.svg___5H4AI
                                              )}
                                              role={"img"}
                                            />
                                          </div>
                                        ) : null}
                                        <div
                                          data-plasmic-name={"typography30"}
                                          data-plasmic-override={
                                            overrides.typography30
                                          }
                                          className={classNames(
                                            projectcss.all,
                                            sty.typography30
                                          )}
                                        >
                                          {false ? (
                                            <div
                                              data-plasmic-name={
                                                "signedByBaseTypographyLabelMedium16"
                                              }
                                              data-plasmic-override={
                                                overrides.signedByBaseTypographyLabelMedium16
                                              }
                                              className={classNames(
                                                projectcss.all,
                                                sty.signedByBaseTypographyLabelMedium16
                                              )}
                                            />
                                          ) : null}
                                          <div
                                            data-plasmic-name={"text67"}
                                            data-plasmic-override={
                                              overrides.text67
                                            }
                                            className={classNames(
                                              projectcss.all,
                                              projectcss.__wab_text,
                                              sty.text67
                                            )}
                                          >
                                            {"0/100"}
                                          </div>
                                          {false ? (
                                            <div
                                              data-plasmic-name={"spacer57"}
                                              data-plasmic-override={
                                                overrides.spacer57
                                              }
                                              className={classNames(
                                                projectcss.all,
                                                sty.spacer57
                                              )}
                                            />
                                          ) : null}
                                        </div>
                                      </Stack__>
                                    ) : null}
                                  </Stack__>
                                ) : null}
                                <div
                                  data-plasmic-name={"inputElementTextField6"}
                                  data-plasmic-override={
                                    overrides.inputElementTextField6
                                  }
                                  className={classNames(
                                    projectcss.all,
                                    sty.inputElementTextField6
                                  )}
                                >
                                  {false ? (
                                    <div
                                      data-plasmic-name={
                                        "signedByBaseInputElementTextFieldMediumEnabled3"
                                      }
                                      data-plasmic-override={
                                        overrides.signedByBaseInputElementTextFieldMediumEnabled3
                                      }
                                      className={classNames(
                                        projectcss.all,
                                        sty.signedByBaseInputElementTextFieldMediumEnabled3
                                      )}
                                    />
                                  ) : null}
                                  <div
                                    data-plasmic-name={
                                      "leadingArtworkContainer12"
                                    }
                                    data-plasmic-override={
                                      overrides.leadingArtworkContainer12
                                    }
                                    className={classNames(
                                      projectcss.all,
                                      sty.leadingArtworkContainer12
                                    )}
                                  >
                                    <div
                                      data-plasmic-name={"search3"}
                                      data-plasmic-override={overrides.search3}
                                      className={classNames(
                                        projectcss.all,
                                        sty.search3
                                      )}
                                    >
                                      {false ? (
                                        <Outlined7Icon
                                          className={classNames(
                                            projectcss.all,
                                            sty.svg__zxQRi
                                          )}
                                          role={"img"}
                                        />
                                      ) : null}
                                      <Outlined7Icon
                                        className={classNames(
                                          projectcss.all,
                                          sty.svg__hWjCg
                                        )}
                                        role={"img"}
                                      />
                                    </div>
                                  </div>
                                  {false ? (
                                    <div
                                      data-plasmic-name={
                                        "leadingLabelContainer12"
                                      }
                                      data-plasmic-override={
                                        overrides.leadingLabelContainer12
                                      }
                                      className={classNames(
                                        projectcss.all,
                                        sty.leadingLabelContainer12
                                      )}
                                    >
                                      {false ? (
                                        <div
                                          data-plasmic-name={"leadingLabel12"}
                                          data-plasmic-override={
                                            overrides.leadingLabel12
                                          }
                                          className={classNames(
                                            projectcss.all,
                                            sty.leadingLabel12
                                          )}
                                        >
                                          {false ? (
                                            <div
                                              data-plasmic-name={
                                                "signedByBaseTypographyLabelMedium17"
                                              }
                                              data-plasmic-override={
                                                overrides.signedByBaseTypographyLabelMedium17
                                              }
                                              className={classNames(
                                                projectcss.all,
                                                sty.signedByBaseTypographyLabelMedium17
                                              )}
                                            />
                                          ) : null}
                                          <div
                                            data-plasmic-name={"text68"}
                                            data-plasmic-override={
                                              overrides.text68
                                            }
                                            className={classNames(
                                              projectcss.all,
                                              projectcss.__wab_text,
                                              sty.text68
                                            )}
                                          >
                                            {"$"}
                                          </div>
                                          {false ? (
                                            <div
                                              data-plasmic-name={"spacer58"}
                                              data-plasmic-override={
                                                overrides.spacer58
                                              }
                                              className={classNames(
                                                projectcss.all,
                                                sty.spacer58
                                              )}
                                            />
                                          ) : null}
                                        </div>
                                      ) : null}
                                    </div>
                                  ) : null}
                                  <div
                                    data-plasmic-name={
                                      "inputElementContentText12"
                                    }
                                    data-plasmic-override={
                                      overrides.inputElementContentText12
                                    }
                                    className={classNames(
                                      projectcss.all,
                                      sty.inputElementContentText12
                                    )}
                                  >
                                    {false ? (
                                      <div
                                        data-plasmic-name={
                                          "signedByBaseInputElementContentTextMediumOff6"
                                        }
                                        data-plasmic-override={
                                          overrides.signedByBaseInputElementContentTextMediumOff6
                                        }
                                        className={classNames(
                                          projectcss.all,
                                          sty.signedByBaseInputElementContentTextMediumOff6
                                        )}
                                      />
                                    ) : null}
                                    <div
                                      data-plasmic-name={"text69"}
                                      data-plasmic-override={overrides.text69}
                                      className={classNames(
                                        projectcss.all,
                                        projectcss.__wab_text,
                                        sty.text69
                                      )}
                                    >
                                      {"Placeholder"}
                                    </div>
                                  </div>
                                  {false ? (
                                    <div
                                      data-plasmic-name={
                                        "trailingLabelEnhancer12"
                                      }
                                      data-plasmic-override={
                                        overrides.trailingLabelEnhancer12
                                      }
                                      className={classNames(
                                        projectcss.all,
                                        sty.trailingLabelEnhancer12
                                      )}
                                    >
                                      {false ? (
                                        <div
                                          data-plasmic-name={"trailingLabel12"}
                                          data-plasmic-override={
                                            overrides.trailingLabel12
                                          }
                                          className={classNames(
                                            projectcss.all,
                                            sty.trailingLabel12
                                          )}
                                        >
                                          {false ? (
                                            <div
                                              data-plasmic-name={
                                                "signedByBaseTypographyLabelMedium18"
                                              }
                                              data-plasmic-override={
                                                overrides.signedByBaseTypographyLabelMedium18
                                              }
                                              className={classNames(
                                                projectcss.all,
                                                sty.signedByBaseTypographyLabelMedium18
                                              )}
                                            />
                                          ) : null}
                                          <div
                                            data-plasmic-name={"text70"}
                                            data-plasmic-override={
                                              overrides.text70
                                            }
                                            className={classNames(
                                              projectcss.all,
                                              projectcss.__wab_text,
                                              sty.text70
                                            )}
                                          >
                                            {"USD"}
                                          </div>
                                          {false ? (
                                            <div
                                              data-plasmic-name={"spacer59"}
                                              data-plasmic-override={
                                                overrides.spacer59
                                              }
                                              className={classNames(
                                                projectcss.all,
                                                sty.spacer59
                                              )}
                                            />
                                          ) : null}
                                        </div>
                                      ) : null}
                                    </div>
                                  ) : null}
                                  {false ? (
                                    <div
                                      data-plasmic-name={
                                        "trailingArtworkContainer12"
                                      }
                                      data-plasmic-override={
                                        overrides.trailingArtworkContainer12
                                      }
                                      className={classNames(
                                        projectcss.all,
                                        sty.trailingArtworkContainer12
                                      )}
                                    >
                                      {false ? (
                                        <div
                                          data-plasmic-name={
                                            "trailingArtwork12"
                                          }
                                          data-plasmic-override={
                                            overrides.trailingArtwork12
                                          }
                                          className={classNames(
                                            projectcss.all,
                                            sty.trailingArtwork12
                                          )}
                                        >
                                          {false ? (
                                            <Outlined5Icon
                                              className={classNames(
                                                projectcss.all,
                                                sty.svg__tLQf7
                                              )}
                                              role={"img"}
                                            />
                                          ) : null}
                                          <Filled4Icon
                                            className={classNames(
                                              projectcss.all,
                                              sty.svg__ho0Vb
                                            )}
                                            role={"img"}
                                          />
                                        </div>
                                      ) : null}
                                    </div>
                                  ) : null}
                                </div>
                                {false ? (
                                  <Stack__
                                    as={"div"}
                                    data-plasmic-name={"inputElementHint6"}
                                    data-plasmic-override={
                                      overrides.inputElementHint6
                                    }
                                    hasGap={true}
                                    className={classNames(
                                      projectcss.all,
                                      sty.inputElementHint6
                                    )}
                                  >
                                    {false ? (
                                      <div
                                        data-plasmic-name={"heart23"}
                                        data-plasmic-override={
                                          overrides.heart23
                                        }
                                        className={classNames(
                                          projectcss.all,
                                          sty.heart23
                                        )}
                                      >
                                        {false ? (
                                          <Outlined4Icon
                                            className={classNames(
                                              projectcss.all,
                                              sty.svg__yfGrr
                                            )}
                                            role={"img"}
                                          />
                                        ) : null}
                                        <Filled3Icon
                                          className={classNames(
                                            projectcss.all,
                                            sty.svg__gNuR
                                          )}
                                          role={"img"}
                                        />
                                      </div>
                                    ) : null}
                                    <div
                                      data-plasmic-name={"hint6"}
                                      data-plasmic-override={overrides.hint6}
                                      className={classNames(
                                        projectcss.all,
                                        sty.hint6
                                      )}
                                    >
                                      {false ? (
                                        <div
                                          data-plasmic-name={
                                            "signedByBaseTypographyParagraphSmall6"
                                          }
                                          data-plasmic-override={
                                            overrides.signedByBaseTypographyParagraphSmall6
                                          }
                                          className={classNames(
                                            projectcss.all,
                                            sty.signedByBaseTypographyParagraphSmall6
                                          )}
                                        />
                                      ) : null}
                                      <div
                                        data-plasmic-name={"text71"}
                                        data-plasmic-override={overrides.text71}
                                        className={classNames(
                                          projectcss.all,
                                          projectcss.__wab_text,
                                          sty.text71
                                        )}
                                      >
                                        {"Hint"}
                                      </div>
                                      {false ? (
                                        <div
                                          data-plasmic-name={"spacer60"}
                                          data-plasmic-override={
                                            overrides.spacer60
                                          }
                                          className={classNames(
                                            projectcss.all,
                                            sty.spacer60
                                          )}
                                        />
                                      ) : null}
                                    </div>
                                  </Stack__>
                                ) : null}
                              </Stack__>
                            </Stack__>
                          ) : null}
                          <Stack__
                            as={"div"}
                            data-plasmic-name={"menuItem12"}
                            data-plasmic-override={overrides.menuItem12}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.menuItem12
                            )}
                          >
                            {false ? (
                              <div
                                data-plasmic-name={
                                  "signedByBaseMenuItemOptionMediumStandardEnabled9"
                                }
                                data-plasmic-override={
                                  overrides.signedByBaseMenuItemOptionMediumStandardEnabled9
                                }
                                className={classNames(
                                  projectcss.all,
                                  sty.signedByBaseMenuItemOptionMediumStandardEnabled9
                                )}
                              />
                            ) : null}
                            {false ? (
                              <Stack__
                                as={"div"}
                                data-plasmic-name={
                                  "menuItemControlMediumCheckboxUnchecked9"
                                }
                                data-plasmic-override={
                                  overrides.menuItemControlMediumCheckboxUnchecked9
                                }
                                hasGap={true}
                                className={classNames(
                                  projectcss.all,
                                  sty.menuItemControlMediumCheckboxUnchecked9
                                )}
                              >
                                {false ? (
                                  <div
                                    data-plasmic-name={
                                      "signedByBaseMenuItemControlMediumCheckboxUnchecked9"
                                    }
                                    data-plasmic-override={
                                      overrides.signedByBaseMenuItemControlMediumCheckboxUnchecked9
                                    }
                                    className={classNames(
                                      projectcss.all,
                                      sty.signedByBaseMenuItemControlMediumCheckboxUnchecked9
                                    )}
                                  />
                                ) : null}
                                <div
                                  data-plasmic-name={"icon9"}
                                  data-plasmic-override={overrides.icon9}
                                  className={classNames(
                                    projectcss.all,
                                    sty.icon9
                                  )}
                                >
                                  {false ? (
                                    <Outlined8Icon
                                      className={classNames(
                                        projectcss.all,
                                        sty.svg__luOsX
                                      )}
                                      role={"img"}
                                    />
                                  ) : null}
                                  <Outlined8Icon
                                    className={classNames(
                                      projectcss.all,
                                      sty.svg__gQzjN
                                    )}
                                    role={"img"}
                                  />
                                </div>
                              </Stack__>
                            ) : null}
                            {false ? (
                              <Stack__
                                as={"div"}
                                data-plasmic-name={"leadingEnhancer9"}
                                data-plasmic-override={
                                  overrides.leadingEnhancer9
                                }
                                hasGap={true}
                                className={classNames(
                                  projectcss.all,
                                  sty.leadingEnhancer9
                                )}
                              >
                                <div
                                  data-plasmic-name={"heart24"}
                                  data-plasmic-override={overrides.heart24}
                                  className={classNames(
                                    projectcss.all,
                                    sty.heart24
                                  )}
                                >
                                  {false ? (
                                    <Outlined5Icon
                                      className={classNames(
                                        projectcss.all,
                                        sty.svg__lhxLl
                                      )}
                                      role={"img"}
                                    />
                                  ) : null}
                                  <Filled4Icon
                                    className={classNames(
                                      projectcss.all,
                                      sty.svg__zjcvm
                                    )}
                                    role={"img"}
                                  />
                                </div>
                              </Stack__>
                            ) : null}
                            <Stack__
                              as={"div"}
                              data-plasmic-name={"textFrame9"}
                              data-plasmic-override={overrides.textFrame9}
                              hasGap={true}
                              className={classNames(
                                projectcss.all,
                                sty.textFrame9
                              )}
                            >
                              <div
                                data-plasmic-name={"leadingText9"}
                                data-plasmic-override={overrides.leadingText9}
                                className={classNames(
                                  projectcss.all,
                                  sty.leadingText9
                                )}
                              >
                                <div
                                  data-plasmic-name={"typography31"}
                                  data-plasmic-override={overrides.typography31}
                                  className={classNames(
                                    projectcss.all,
                                    sty.typography31
                                  )}
                                >
                                  {false ? (
                                    <div
                                      data-plasmic-name={
                                        "signedByBaseTypographyParagraphMedium25"
                                      }
                                      data-plasmic-override={
                                        overrides.signedByBaseTypographyParagraphMedium25
                                      }
                                      className={classNames(
                                        projectcss.all,
                                        sty.signedByBaseTypographyParagraphMedium25
                                      )}
                                    />
                                  ) : null}
                                  <div
                                    data-plasmic-name={"text72"}
                                    data-plasmic-override={overrides.text72}
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.__wab_text,
                                      sty.text72
                                    )}
                                  >
                                    {"Mod\u00e8le de concert 20h"}
                                  </div>
                                  {false ? (
                                    <div
                                      data-plasmic-name={"spacer61"}
                                      data-plasmic-override={overrides.spacer61}
                                      className={classNames(
                                        projectcss.all,
                                        sty.spacer61
                                      )}
                                    />
                                  ) : null}
                                </div>
                                {false ? (
                                  <div
                                    data-plasmic-name={"typography32"}
                                    data-plasmic-override={
                                      overrides.typography32
                                    }
                                    className={classNames(
                                      projectcss.all,
                                      sty.typography32
                                    )}
                                  >
                                    {false ? (
                                      <div
                                        data-plasmic-name={
                                          "signedByBaseTypographyParagraphMedium26"
                                        }
                                        data-plasmic-override={
                                          overrides.signedByBaseTypographyParagraphMedium26
                                        }
                                        className={classNames(
                                          projectcss.all,
                                          sty.signedByBaseTypographyParagraphMedium26
                                        )}
                                      />
                                    ) : null}
                                    <div
                                      data-plasmic-name={"text73"}
                                      data-plasmic-override={overrides.text73}
                                      className={classNames(
                                        projectcss.all,
                                        projectcss.__wab_text,
                                        sty.text73
                                      )}
                                    >
                                      {"Supporting text"}
                                    </div>
                                    {false ? (
                                      <div
                                        data-plasmic-name={"spacer62"}
                                        data-plasmic-override={
                                          overrides.spacer62
                                        }
                                        className={classNames(
                                          projectcss.all,
                                          sty.spacer62
                                        )}
                                      />
                                    ) : null}
                                  </div>
                                ) : null}
                              </div>
                              {false ? (
                                <div
                                  data-plasmic-name={"typography33"}
                                  data-plasmic-override={overrides.typography33}
                                  className={classNames(
                                    projectcss.all,
                                    sty.typography33
                                  )}
                                >
                                  {false ? (
                                    <div
                                      data-plasmic-name={
                                        "signedByBaseTypographyParagraphMedium27"
                                      }
                                      data-plasmic-override={
                                        overrides.signedByBaseTypographyParagraphMedium27
                                      }
                                      className={classNames(
                                        projectcss.all,
                                        sty.signedByBaseTypographyParagraphMedium27
                                      )}
                                    />
                                  ) : null}
                                  <div
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.__wab_text,
                                      sty.text___1Dkq5
                                    )}
                                  >
                                    {"Text"}
                                  </div>
                                  {false ? (
                                    <div
                                      data-plasmic-name={"spacer63"}
                                      data-plasmic-override={overrides.spacer63}
                                      className={classNames(
                                        projectcss.all,
                                        sty.spacer63
                                      )}
                                    />
                                  ) : null}
                                </div>
                              ) : null}
                            </Stack__>
                            {false ? (
                              <Stack__
                                as={"div"}
                                data-plasmic-name={"trailingEnhancer9"}
                                data-plasmic-override={
                                  overrides.trailingEnhancer9
                                }
                                hasGap={true}
                                className={classNames(
                                  projectcss.all,
                                  sty.trailingEnhancer9
                                )}
                              >
                                <div
                                  data-plasmic-name={"heart25"}
                                  data-plasmic-override={overrides.heart25}
                                  className={classNames(
                                    projectcss.all,
                                    sty.heart25
                                  )}
                                >
                                  {false ? (
                                    <Outlined5Icon
                                      className={classNames(
                                        projectcss.all,
                                        sty.svg__wvt9C
                                      )}
                                      role={"img"}
                                    />
                                  ) : null}
                                  <Filled4Icon
                                    className={classNames(
                                      projectcss.all,
                                      sty.svg__wFq3L
                                    )}
                                    role={"img"}
                                  />
                                </div>
                              </Stack__>
                            ) : null}
                          </Stack__>
                          <Stack__
                            as={"div"}
                            data-plasmic-name={"menuItem13"}
                            data-plasmic-override={overrides.menuItem13}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.menuItem13
                            )}
                          >
                            {false ? (
                              <div
                                data-plasmic-name={
                                  "signedByBaseMenuItemOptionMediumStandardEnabled10"
                                }
                                data-plasmic-override={
                                  overrides.signedByBaseMenuItemOptionMediumStandardEnabled10
                                }
                                className={classNames(
                                  projectcss.all,
                                  sty.signedByBaseMenuItemOptionMediumStandardEnabled10
                                )}
                              />
                            ) : null}
                            {false ? (
                              <Stack__
                                as={"div"}
                                data-plasmic-name={
                                  "menuItemControlMediumCheckboxUnchecked10"
                                }
                                data-plasmic-override={
                                  overrides.menuItemControlMediumCheckboxUnchecked10
                                }
                                hasGap={true}
                                className={classNames(
                                  projectcss.all,
                                  sty.menuItemControlMediumCheckboxUnchecked10
                                )}
                              >
                                {false ? (
                                  <div
                                    data-plasmic-name={
                                      "signedByBaseMenuItemControlMediumCheckboxUnchecked10"
                                    }
                                    data-plasmic-override={
                                      overrides.signedByBaseMenuItemControlMediumCheckboxUnchecked10
                                    }
                                    className={classNames(
                                      projectcss.all,
                                      sty.signedByBaseMenuItemControlMediumCheckboxUnchecked10
                                    )}
                                  />
                                ) : null}
                                <div
                                  data-plasmic-name={"icon10"}
                                  data-plasmic-override={overrides.icon10}
                                  className={classNames(
                                    projectcss.all,
                                    sty.icon10
                                  )}
                                >
                                  {false ? (
                                    <Outlined8Icon
                                      className={classNames(
                                        projectcss.all,
                                        sty.svg__t1K49
                                      )}
                                      role={"img"}
                                    />
                                  ) : null}
                                  <Outlined8Icon
                                    className={classNames(
                                      projectcss.all,
                                      sty.svg__ti8Bz
                                    )}
                                    role={"img"}
                                  />
                                </div>
                              </Stack__>
                            ) : null}
                            {false ? (
                              <Stack__
                                as={"div"}
                                data-plasmic-name={"leadingEnhancer10"}
                                data-plasmic-override={
                                  overrides.leadingEnhancer10
                                }
                                hasGap={true}
                                className={classNames(
                                  projectcss.all,
                                  sty.leadingEnhancer10
                                )}
                              >
                                <div
                                  data-plasmic-name={"heart26"}
                                  data-plasmic-override={overrides.heart26}
                                  className={classNames(
                                    projectcss.all,
                                    sty.heart26
                                  )}
                                >
                                  {false ? (
                                    <Outlined5Icon
                                      className={classNames(
                                        projectcss.all,
                                        sty.svg__a6IHa
                                      )}
                                      role={"img"}
                                    />
                                  ) : null}
                                  <Filled4Icon
                                    className={classNames(
                                      projectcss.all,
                                      sty.svg___94R7
                                    )}
                                    role={"img"}
                                  />
                                </div>
                              </Stack__>
                            ) : null}
                            <Stack__
                              as={"div"}
                              data-plasmic-name={"textFrame10"}
                              data-plasmic-override={overrides.textFrame10}
                              hasGap={true}
                              className={classNames(
                                projectcss.all,
                                sty.textFrame10
                              )}
                            >
                              <div
                                data-plasmic-name={"leadingText10"}
                                data-plasmic-override={overrides.leadingText10}
                                className={classNames(
                                  projectcss.all,
                                  sty.leadingText10
                                )}
                              >
                                <div
                                  data-plasmic-name={"typography34"}
                                  data-plasmic-override={overrides.typography34}
                                  className={classNames(
                                    projectcss.all,
                                    sty.typography34
                                  )}
                                >
                                  {false ? (
                                    <div
                                      data-plasmic-name={
                                        "signedByBaseTypographyParagraphMedium28"
                                      }
                                      data-plasmic-override={
                                        overrides.signedByBaseTypographyParagraphMedium28
                                      }
                                      className={classNames(
                                        projectcss.all,
                                        sty.signedByBaseTypographyParagraphMedium28
                                      )}
                                    />
                                  ) : null}
                                  <div
                                    data-plasmic-name={"text74"}
                                    data-plasmic-override={overrides.text74}
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.__wab_text,
                                      sty.text74
                                    )}
                                  >
                                    {"Mod\u00e8le de match 21h"}
                                  </div>
                                  {false ? (
                                    <div
                                      data-plasmic-name={"spacer64"}
                                      data-plasmic-override={overrides.spacer64}
                                      className={classNames(
                                        projectcss.all,
                                        sty.spacer64
                                      )}
                                    />
                                  ) : null}
                                </div>
                                {false ? (
                                  <div
                                    data-plasmic-name={"typography35"}
                                    data-plasmic-override={
                                      overrides.typography35
                                    }
                                    className={classNames(
                                      projectcss.all,
                                      sty.typography35
                                    )}
                                  >
                                    {false ? (
                                      <div
                                        data-plasmic-name={
                                          "signedByBaseTypographyParagraphMedium29"
                                        }
                                        data-plasmic-override={
                                          overrides.signedByBaseTypographyParagraphMedium29
                                        }
                                        className={classNames(
                                          projectcss.all,
                                          sty.signedByBaseTypographyParagraphMedium29
                                        )}
                                      />
                                    ) : null}
                                    <div
                                      data-plasmic-name={"text75"}
                                      data-plasmic-override={overrides.text75}
                                      className={classNames(
                                        projectcss.all,
                                        projectcss.__wab_text,
                                        sty.text75
                                      )}
                                    >
                                      {"Supporting text"}
                                    </div>
                                    {false ? (
                                      <div
                                        data-plasmic-name={"spacer65"}
                                        data-plasmic-override={
                                          overrides.spacer65
                                        }
                                        className={classNames(
                                          projectcss.all,
                                          sty.spacer65
                                        )}
                                      />
                                    ) : null}
                                  </div>
                                ) : null}
                              </div>
                              {false ? (
                                <div
                                  data-plasmic-name={"typography36"}
                                  data-plasmic-override={overrides.typography36}
                                  className={classNames(
                                    projectcss.all,
                                    sty.typography36
                                  )}
                                >
                                  {false ? (
                                    <div
                                      data-plasmic-name={
                                        "signedByBaseTypographyParagraphMedium30"
                                      }
                                      data-plasmic-override={
                                        overrides.signedByBaseTypographyParagraphMedium30
                                      }
                                      className={classNames(
                                        projectcss.all,
                                        sty.signedByBaseTypographyParagraphMedium30
                                      )}
                                    />
                                  ) : null}
                                  <div
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.__wab_text,
                                      sty.text__tdmeP
                                    )}
                                  >
                                    {"Text"}
                                  </div>
                                  {false ? (
                                    <div
                                      data-plasmic-name={"spacer66"}
                                      data-plasmic-override={overrides.spacer66}
                                      className={classNames(
                                        projectcss.all,
                                        sty.spacer66
                                      )}
                                    />
                                  ) : null}
                                </div>
                              ) : null}
                            </Stack__>
                            {false ? (
                              <Stack__
                                as={"div"}
                                data-plasmic-name={"trailingEnhancer10"}
                                data-plasmic-override={
                                  overrides.trailingEnhancer10
                                }
                                hasGap={true}
                                className={classNames(
                                  projectcss.all,
                                  sty.trailingEnhancer10
                                )}
                              >
                                <div
                                  data-plasmic-name={"checkmarkSmall3"}
                                  data-plasmic-override={
                                    overrides.checkmarkSmall3
                                  }
                                  className={classNames(
                                    projectcss.all,
                                    sty.checkmarkSmall3
                                  )}
                                >
                                  {false ? (
                                    <Outlined9Icon
                                      className={classNames(
                                        projectcss.all,
                                        sty.svg__bFdt
                                      )}
                                      role={"img"}
                                    />
                                  ) : null}
                                  <Outlined9Icon
                                    className={classNames(
                                      projectcss.all,
                                      sty.svg___59TgU
                                    )}
                                    role={"img"}
                                  />
                                </div>
                              </Stack__>
                            ) : null}
                          </Stack__>
                          <Stack__
                            as={"div"}
                            data-plasmic-name={"menuItem14"}
                            data-plasmic-override={overrides.menuItem14}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.menuItem14
                            )}
                          >
                            {false ? (
                              <div
                                data-plasmic-name={
                                  "signedByBaseMenuItemOptionMediumStandardEnabled11"
                                }
                                data-plasmic-override={
                                  overrides.signedByBaseMenuItemOptionMediumStandardEnabled11
                                }
                                className={classNames(
                                  projectcss.all,
                                  sty.signedByBaseMenuItemOptionMediumStandardEnabled11
                                )}
                              />
                            ) : null}
                            {false ? (
                              <Stack__
                                as={"div"}
                                data-plasmic-name={
                                  "menuItemControlMediumCheckboxUnchecked11"
                                }
                                data-plasmic-override={
                                  overrides.menuItemControlMediumCheckboxUnchecked11
                                }
                                hasGap={true}
                                className={classNames(
                                  projectcss.all,
                                  sty.menuItemControlMediumCheckboxUnchecked11
                                )}
                              >
                                {false ? (
                                  <div
                                    data-plasmic-name={
                                      "signedByBaseMenuItemControlMediumCheckboxUnchecked11"
                                    }
                                    data-plasmic-override={
                                      overrides.signedByBaseMenuItemControlMediumCheckboxUnchecked11
                                    }
                                    className={classNames(
                                      projectcss.all,
                                      sty.signedByBaseMenuItemControlMediumCheckboxUnchecked11
                                    )}
                                  />
                                ) : null}
                                <div
                                  data-plasmic-name={"icon11"}
                                  data-plasmic-override={overrides.icon11}
                                  className={classNames(
                                    projectcss.all,
                                    sty.icon11
                                  )}
                                >
                                  {false ? (
                                    <Outlined8Icon
                                      className={classNames(
                                        projectcss.all,
                                        sty.svg__vRgDc
                                      )}
                                      role={"img"}
                                    />
                                  ) : null}
                                  <Outlined8Icon
                                    className={classNames(
                                      projectcss.all,
                                      sty.svg___4Bcz6
                                    )}
                                    role={"img"}
                                  />
                                </div>
                              </Stack__>
                            ) : null}
                            {false ? (
                              <Stack__
                                as={"div"}
                                data-plasmic-name={"leadingEnhancer11"}
                                data-plasmic-override={
                                  overrides.leadingEnhancer11
                                }
                                hasGap={true}
                                className={classNames(
                                  projectcss.all,
                                  sty.leadingEnhancer11
                                )}
                              >
                                <div
                                  data-plasmic-name={"heart27"}
                                  data-plasmic-override={overrides.heart27}
                                  className={classNames(
                                    projectcss.all,
                                    sty.heart27
                                  )}
                                >
                                  {false ? (
                                    <Outlined5Icon
                                      className={classNames(
                                        projectcss.all,
                                        sty.svg__q0Vd
                                      )}
                                      role={"img"}
                                    />
                                  ) : null}
                                  <Filled4Icon
                                    className={classNames(
                                      projectcss.all,
                                      sty.svg__qnczA
                                    )}
                                    role={"img"}
                                  />
                                </div>
                              </Stack__>
                            ) : null}
                            <IcRoundPlusIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__efZbD
                              )}
                              role={"img"}
                            />

                            <Stack__
                              as={"div"}
                              data-plasmic-name={"textFrame11"}
                              data-plasmic-override={overrides.textFrame11}
                              hasGap={true}
                              className={classNames(
                                projectcss.all,
                                sty.textFrame11
                              )}
                            >
                              <div
                                data-plasmic-name={"leadingText11"}
                                data-plasmic-override={overrides.leadingText11}
                                className={classNames(
                                  projectcss.all,
                                  sty.leadingText11
                                )}
                              >
                                <div
                                  data-plasmic-name={"typography37"}
                                  data-plasmic-override={overrides.typography37}
                                  className={classNames(
                                    projectcss.all,
                                    sty.typography37
                                  )}
                                >
                                  {false ? (
                                    <div
                                      data-plasmic-name={
                                        "signedByBaseTypographyParagraphMedium31"
                                      }
                                      data-plasmic-override={
                                        overrides.signedByBaseTypographyParagraphMedium31
                                      }
                                      className={classNames(
                                        projectcss.all,
                                        sty.signedByBaseTypographyParagraphMedium31
                                      )}
                                    />
                                  ) : null}
                                  <div
                                    data-plasmic-name={"text76"}
                                    data-plasmic-override={overrides.text76}
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.__wab_text,
                                      sty.text76
                                    )}
                                  >
                                    {"Dispositif vierge"}
                                  </div>
                                  {false ? (
                                    <div
                                      data-plasmic-name={"spacer67"}
                                      data-plasmic-override={overrides.spacer67}
                                      className={classNames(
                                        projectcss.all,
                                        sty.spacer67
                                      )}
                                    />
                                  ) : null}
                                </div>
                                {false ? (
                                  <div
                                    data-plasmic-name={"typography38"}
                                    data-plasmic-override={
                                      overrides.typography38
                                    }
                                    className={classNames(
                                      projectcss.all,
                                      sty.typography38
                                    )}
                                  >
                                    {false ? (
                                      <div
                                        data-plasmic-name={
                                          "signedByBaseTypographyParagraphMedium32"
                                        }
                                        data-plasmic-override={
                                          overrides.signedByBaseTypographyParagraphMedium32
                                        }
                                        className={classNames(
                                          projectcss.all,
                                          sty.signedByBaseTypographyParagraphMedium32
                                        )}
                                      />
                                    ) : null}
                                    <div
                                      data-plasmic-name={"text77"}
                                      data-plasmic-override={overrides.text77}
                                      className={classNames(
                                        projectcss.all,
                                        projectcss.__wab_text,
                                        sty.text77
                                      )}
                                    >
                                      {"Supporting text"}
                                    </div>
                                    {false ? (
                                      <div
                                        data-plasmic-name={"spacer68"}
                                        data-plasmic-override={
                                          overrides.spacer68
                                        }
                                        className={classNames(
                                          projectcss.all,
                                          sty.spacer68
                                        )}
                                      />
                                    ) : null}
                                  </div>
                                ) : null}
                              </div>
                              {false ? (
                                <div
                                  data-plasmic-name={"typography39"}
                                  data-plasmic-override={overrides.typography39}
                                  className={classNames(
                                    projectcss.all,
                                    sty.typography39
                                  )}
                                >
                                  {false ? (
                                    <div
                                      data-plasmic-name={
                                        "signedByBaseTypographyParagraphMedium33"
                                      }
                                      data-plasmic-override={
                                        overrides.signedByBaseTypographyParagraphMedium33
                                      }
                                      className={classNames(
                                        projectcss.all,
                                        sty.signedByBaseTypographyParagraphMedium33
                                      )}
                                    />
                                  ) : null}
                                  <div
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.__wab_text,
                                      sty.text__gCsN
                                    )}
                                  >
                                    {"Text"}
                                  </div>
                                  {false ? (
                                    <div
                                      data-plasmic-name={"spacer69"}
                                      data-plasmic-override={overrides.spacer69}
                                      className={classNames(
                                        projectcss.all,
                                        sty.spacer69
                                      )}
                                    />
                                  ) : null}
                                </div>
                              ) : null}
                            </Stack__>
                            {false ? (
                              <Stack__
                                as={"div"}
                                data-plasmic-name={"trailingEnhancer11"}
                                data-plasmic-override={
                                  overrides.trailingEnhancer11
                                }
                                hasGap={true}
                                className={classNames(
                                  projectcss.all,
                                  sty.trailingEnhancer11
                                )}
                              >
                                <div
                                  data-plasmic-name={"heart28"}
                                  data-plasmic-override={overrides.heart28}
                                  className={classNames(
                                    projectcss.all,
                                    sty.heart28
                                  )}
                                >
                                  {false ? (
                                    <Outlined5Icon
                                      className={classNames(
                                        projectcss.all,
                                        sty.svg__mpkTl
                                      )}
                                      role={"img"}
                                    />
                                  ) : null}
                                  <Filled4Icon
                                    className={classNames(
                                      projectcss.all,
                                      sty.svg__i3RJ
                                    )}
                                    role={"img"}
                                  />
                                </div>
                              </Stack__>
                            ) : null}
                          </Stack__>
                          {false ? (
                            <Stack__
                              as={"div"}
                              data-plasmic-name={"menuItem15"}
                              data-plasmic-override={overrides.menuItem15}
                              hasGap={true}
                              className={classNames(
                                projectcss.all,
                                sty.menuItem15
                              )}
                            >
                              {false ? (
                                <div
                                  data-plasmic-name={
                                    "signedByBaseMenuItemOptionMediumStandardEnabled12"
                                  }
                                  data-plasmic-override={
                                    overrides.signedByBaseMenuItemOptionMediumStandardEnabled12
                                  }
                                  className={classNames(
                                    projectcss.all,
                                    sty.signedByBaseMenuItemOptionMediumStandardEnabled12
                                  )}
                                />
                              ) : null}
                              {false ? (
                                <Stack__
                                  as={"div"}
                                  data-plasmic-name={
                                    "menuItemControlMediumCheckboxUnchecked12"
                                  }
                                  data-plasmic-override={
                                    overrides.menuItemControlMediumCheckboxUnchecked12
                                  }
                                  hasGap={true}
                                  className={classNames(
                                    projectcss.all,
                                    sty.menuItemControlMediumCheckboxUnchecked12
                                  )}
                                >
                                  {false ? (
                                    <div
                                      data-plasmic-name={
                                        "signedByBaseMenuItemControlMediumCheckboxUnchecked12"
                                      }
                                      data-plasmic-override={
                                        overrides.signedByBaseMenuItemControlMediumCheckboxUnchecked12
                                      }
                                      className={classNames(
                                        projectcss.all,
                                        sty.signedByBaseMenuItemControlMediumCheckboxUnchecked12
                                      )}
                                    />
                                  ) : null}
                                  <div
                                    data-plasmic-name={"icon12"}
                                    data-plasmic-override={overrides.icon12}
                                    className={classNames(
                                      projectcss.all,
                                      sty.icon12
                                    )}
                                  >
                                    {false ? (
                                      <Outlined8Icon
                                        className={classNames(
                                          projectcss.all,
                                          sty.svg__lVUhz
                                        )}
                                        role={"img"}
                                      />
                                    ) : null}
                                    <Outlined8Icon
                                      className={classNames(
                                        projectcss.all,
                                        sty.svg__m1Zq
                                      )}
                                      role={"img"}
                                    />
                                  </div>
                                </Stack__>
                              ) : null}
                              {false ? (
                                <Stack__
                                  as={"div"}
                                  data-plasmic-name={"leadingEnhancer12"}
                                  data-plasmic-override={
                                    overrides.leadingEnhancer12
                                  }
                                  hasGap={true}
                                  className={classNames(
                                    projectcss.all,
                                    sty.leadingEnhancer12
                                  )}
                                >
                                  <div
                                    data-plasmic-name={"heart29"}
                                    data-plasmic-override={overrides.heart29}
                                    className={classNames(
                                      projectcss.all,
                                      sty.heart29
                                    )}
                                  >
                                    {false ? (
                                      <Outlined5Icon
                                        className={classNames(
                                          projectcss.all,
                                          sty.svg__kClMu
                                        )}
                                        role={"img"}
                                      />
                                    ) : null}
                                    <Filled4Icon
                                      className={classNames(
                                        projectcss.all,
                                        sty.svg___5RlEv
                                      )}
                                      role={"img"}
                                    />
                                  </div>
                                </Stack__>
                              ) : null}
                              <Stack__
                                as={"div"}
                                data-plasmic-name={"textFrame12"}
                                data-plasmic-override={overrides.textFrame12}
                                hasGap={true}
                                className={classNames(
                                  projectcss.all,
                                  sty.textFrame12
                                )}
                              >
                                <div
                                  data-plasmic-name={"leadingText12"}
                                  data-plasmic-override={
                                    overrides.leadingText12
                                  }
                                  className={classNames(
                                    projectcss.all,
                                    sty.leadingText12
                                  )}
                                >
                                  <div
                                    data-plasmic-name={"typography40"}
                                    data-plasmic-override={
                                      overrides.typography40
                                    }
                                    className={classNames(
                                      projectcss.all,
                                      sty.typography40
                                    )}
                                  >
                                    {false ? (
                                      <div
                                        data-plasmic-name={
                                          "signedByBaseTypographyParagraphMedium34"
                                        }
                                        data-plasmic-override={
                                          overrides.signedByBaseTypographyParagraphMedium34
                                        }
                                        className={classNames(
                                          projectcss.all,
                                          sty.signedByBaseTypographyParagraphMedium34
                                        )}
                                      />
                                    ) : null}
                                    <div
                                      data-plasmic-name={"text78"}
                                      data-plasmic-override={overrides.text78}
                                      className={classNames(
                                        projectcss.all,
                                        projectcss.__wab_text,
                                        sty.text78
                                      )}
                                    >
                                      {"Options"}
                                    </div>
                                    {false ? (
                                      <div
                                        data-plasmic-name={"spacer70"}
                                        data-plasmic-override={
                                          overrides.spacer70
                                        }
                                        className={classNames(
                                          projectcss.all,
                                          sty.spacer70
                                        )}
                                      />
                                    ) : null}
                                  </div>
                                  {false ? (
                                    <div
                                      data-plasmic-name={"typography41"}
                                      data-plasmic-override={
                                        overrides.typography41
                                      }
                                      className={classNames(
                                        projectcss.all,
                                        sty.typography41
                                      )}
                                    >
                                      {false ? (
                                        <div
                                          data-plasmic-name={
                                            "signedByBaseTypographyParagraphMedium35"
                                          }
                                          data-plasmic-override={
                                            overrides.signedByBaseTypographyParagraphMedium35
                                          }
                                          className={classNames(
                                            projectcss.all,
                                            sty.signedByBaseTypographyParagraphMedium35
                                          )}
                                        />
                                      ) : null}
                                      <div
                                        data-plasmic-name={"text79"}
                                        data-plasmic-override={overrides.text79}
                                        className={classNames(
                                          projectcss.all,
                                          projectcss.__wab_text,
                                          sty.text79
                                        )}
                                      >
                                        {"Supporting text"}
                                      </div>
                                      {false ? (
                                        <div
                                          data-plasmic-name={"spacer71"}
                                          data-plasmic-override={
                                            overrides.spacer71
                                          }
                                          className={classNames(
                                            projectcss.all,
                                            sty.spacer71
                                          )}
                                        />
                                      ) : null}
                                    </div>
                                  ) : null}
                                </div>
                                {false ? (
                                  <div
                                    data-plasmic-name={"typography42"}
                                    data-plasmic-override={
                                      overrides.typography42
                                    }
                                    className={classNames(
                                      projectcss.all,
                                      sty.typography42
                                    )}
                                  >
                                    {false ? (
                                      <div
                                        data-plasmic-name={
                                          "signedByBaseTypographyParagraphMedium36"
                                        }
                                        data-plasmic-override={
                                          overrides.signedByBaseTypographyParagraphMedium36
                                        }
                                        className={classNames(
                                          projectcss.all,
                                          sty.signedByBaseTypographyParagraphMedium36
                                        )}
                                      />
                                    ) : null}
                                    <div
                                      className={classNames(
                                        projectcss.all,
                                        projectcss.__wab_text,
                                        sty.text__fgTet
                                      )}
                                    >
                                      {"Text"}
                                    </div>
                                    {false ? (
                                      <div
                                        data-plasmic-name={"spacer72"}
                                        data-plasmic-override={
                                          overrides.spacer72
                                        }
                                        className={classNames(
                                          projectcss.all,
                                          sty.spacer72
                                        )}
                                      />
                                    ) : null}
                                  </div>
                                ) : null}
                              </Stack__>
                              {false ? (
                                <Stack__
                                  as={"div"}
                                  data-plasmic-name={"trailingEnhancer12"}
                                  data-plasmic-override={
                                    overrides.trailingEnhancer12
                                  }
                                  hasGap={true}
                                  className={classNames(
                                    projectcss.all,
                                    sty.trailingEnhancer12
                                  )}
                                >
                                  <div
                                    data-plasmic-name={"heart30"}
                                    data-plasmic-override={overrides.heart30}
                                    className={classNames(
                                      projectcss.all,
                                      sty.heart30
                                    )}
                                  >
                                    {false ? (
                                      <Outlined5Icon
                                        className={classNames(
                                          projectcss.all,
                                          sty.svg__j1AHg
                                        )}
                                        role={"img"}
                                      />
                                    ) : null}
                                    <Filled4Icon
                                      className={classNames(
                                        projectcss.all,
                                        sty.svg___3Ovx0
                                      )}
                                      role={"img"}
                                    />
                                  </div>
                                </Stack__>
                              ) : null}
                            </Stack__>
                          ) : null}
                          <div
                            data-plasmic-name={"scrollBar3"}
                            data-plasmic-override={overrides.scrollBar3}
                            className={classNames(
                              projectcss.all,
                              sty.scrollBar3
                            )}
                          />
                        </div>
                      </div>
                    </Stack__>
                  ) : null}
                  <DropDown
                    data-plasmic-name={"model3"}
                    data-plasmic-override={overrides.model3}
                    check={false}
                    className={classNames("__wab_instance", sty.model3)}
                    label={"Mod\u00e8le de Runsheet & Dispositif*"}
                    options={["Default", "Special"]}
                    showLabel={true}
                    state={"default"}
                    type={"default"}
                  />

                  <Stack__
                    as={"div"}
                    data-plasmic-name={"buttons3"}
                    data-plasmic-override={overrides.buttons3}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.buttons3)}
                  >
                    <Button
                      data-plasmic-name={"button9"}
                      data-plasmic-override={overrides.button9}
                      className={classNames("__wab_instance", sty.button9)}
                      label={
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__vvH8O
                          )}
                        >
                          {"Cr\u00e9er"}
                        </div>
                      }
                    />

                    {false ? (
                      <Stack__
                        as={"div"}
                        data-plasmic-name={"frame1073713926"}
                        data-plasmic-override={overrides.frame1073713926}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.frame1073713926
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__eux3W
                          )}
                        >
                          <Line9Icon
                            className={classNames(projectcss.all, sty.svg__vfn)}
                            role={"img"}
                          />
                        </div>
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text___35EFr
                          )}
                        >
                          {"OU"}
                        </div>
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__lm28L
                          )}
                        >
                          <Line9Icon
                            className={classNames(
                              projectcss.all,
                              sty.svg__ohtl
                            )}
                            role={"img"}
                          />
                        </div>
                      </Stack__>
                    ) : null}
                    {false ? (
                      <Stack__
                        as={"div"}
                        data-plasmic-name={"frame1073713932"}
                        data-plasmic-override={overrides.frame1073713932}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.frame1073713932
                        )}
                      >
                        <Button
                          data-plasmic-name={"button10"}
                          data-plasmic-override={overrides.button10}
                          className={classNames("__wab_instance", sty.button10)}
                        />

                        <Stack__
                          as={"div"}
                          data-plasmic-name={"button11"}
                          data-plasmic-override={overrides.button11}
                          hasGap={true}
                          className={classNames(projectcss.all, sty.button11)}
                        >
                          <IcTwotoneAppleIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg__bfe5F
                            )}
                            role={"img"}
                          />

                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__f76Es
                            )}
                          >
                            {"Apple"}
                          </div>
                        </Stack__>
                        <Stack__
                          as={"div"}
                          data-plasmic-name={"button12"}
                          data-plasmic-override={overrides.button12}
                          hasGap={true}
                          className={classNames(projectcss.all, sty.button12)}
                        >
                          <MdiFacebookIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg__y11S
                            )}
                            role={"img"}
                          />

                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__wdGm0
                            )}
                          >
                            {"Facebook"}
                          </div>
                        </Stack__>
                      </Stack__>
                    ) : null}
                  </Stack__>
                </Stack__>
              </React.Fragment>
            }
            footer={
              <div className={classNames(projectcss.all, sty.freeBox__xPxD)} />
            }
            heading={
              <div
                data-plasmic-name={"frame1437254018"}
                data-plasmic-override={overrides.frame1437254018}
                className={classNames(projectcss.all, sty.frame1437254018)}
              >
                <div
                  data-plasmic-name={"name5"}
                  data-plasmic-override={overrides.name5}
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.name5
                  )}
                >
                  <React.Fragment>
                    {(() => {
                      try {
                        return "Êtes-vous sûr(e) ?";
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return "Supprimer";
                        }
                        throw e;
                      }
                    })()}
                  </React.Fragment>
                </div>
                <Stack__
                  as={"div"}
                  data-plasmic-name={"frame1437254021"}
                  data-plasmic-override={overrides.frame1437254021}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.frame1437254021)}
                >
                  <LinkSimpleIcon
                    className={classNames(projectcss.all, sty.svg___1Uk4I)}
                    role={"img"}
                  />

                  <XIcon
                    className={classNames(projectcss.all, sty.svg__gGnMq)}
                    onClick={async event => {
                      const $steps = {};

                      $steps["updateDeleteTask"] = true
                        ? (() => {
                            const actionArgs = {
                              variable: {
                                objRoot: $state,
                                variablePath: ["deleteTask"]
                              },
                              operation: 0,
                              value: false
                            };
                            return (({
                              variable,
                              value,
                              startIndex,
                              deleteCount
                            }) => {
                              if (!variable) {
                                return;
                              }
                              const { objRoot, variablePath } = variable;

                              $stateSet(objRoot, variablePath, value);
                              return value;
                            })?.apply(null, [actionArgs]);
                          })()
                        : undefined;
                      if (
                        $steps["updateDeleteTask"] != null &&
                        typeof $steps["updateDeleteTask"] === "object" &&
                        typeof $steps["updateDeleteTask"].then === "function"
                      ) {
                        $steps["updateDeleteTask"] = await $steps[
                          "updateDeleteTask"
                        ];
                      }
                    }}
                    role={"img"}
                  />
                </Stack__>
              </div>
            }
            isOpen={generateStateValueProp($state, [
              "deleteTaskRunsheet",
              "isOpen"
            ])}
            noTrigger={true}
            onOpenChange={async (...eventArgs: any) => {
              generateStateOnChangeProp($state, [
                "deleteTaskRunsheet",
                "isOpen"
              ]).apply(null, eventArgs);

              if (
                eventArgs.length > 1 &&
                eventArgs[1] &&
                eventArgs[1]._plasmic_state_init_
              ) {
                return;
              }

              (async val => {
                const $steps = {};

                $steps["updateDeleteTask"] = true
                  ? (() => {
                      const actionArgs = {
                        variable: {
                          objRoot: $state,
                          variablePath: ["deleteTask"]
                        },
                        operation: 4
                      };
                      return (({
                        variable,
                        value,
                        startIndex,
                        deleteCount
                      }) => {
                        if (!variable) {
                          return;
                        }
                        const { objRoot, variablePath } = variable;

                        const oldValue = $stateGet(objRoot, variablePath);
                        $stateSet(objRoot, variablePath, !oldValue);
                        return !oldValue;
                      })?.apply(null, [actionArgs]);
                    })()
                  : undefined;
                if (
                  $steps["updateDeleteTask"] != null &&
                  typeof $steps["updateDeleteTask"] === "object" &&
                  typeof $steps["updateDeleteTask"].then === "function"
                ) {
                  $steps["updateDeleteTask"] = await $steps["updateDeleteTask"];
                }
              }).apply(null, eventArgs);
            }}
            showFooter={false}
            trigger={null}
          />

          <Modal
            data-plasmic-name={"duplicateTaskRunsheet2"}
            data-plasmic-override={overrides.duplicateTaskRunsheet2}
            className={classNames("__wab_instance", sty.duplicateTaskRunsheet2)}
            closeOnBackdropClick={true}
            content={
              <React.Fragment>
                {(() => {
                  const child$Props = {
                    className: classNames("__wab_instance", sty.duplicateRs),
                    extendedOnValuesChange: async (...eventArgs: any) => {
                      generateStateOnChangePropForCodeComponents(
                        $state,
                        "value",
                        ["duplicateRs", "value"],
                        FormWrapper_Helpers
                      ).apply(null, eventArgs);
                    },
                    formItems: [
                      { label: "Name", name: "name", inputType: "Text" },
                      {
                        label: "Message",
                        name: "message",
                        inputType: "Text Area"
                      }
                    ],
                    initialValues: (() => {
                      try {
                        return $queries.mdTasksModel.data.find(
                          task => Number(task.id) == Number($state.taskId)
                        );
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return undefined;
                        }
                        throw e;
                      }
                    })(),
                    labelCol: { span: 8, horizontalOnly: true },
                    layout: "vertical",
                    mode: "advanced",
                    onFinish: async values => {
                      const $steps = {};

                      $steps["postgresDeleteMany"] = true
                        ? (() => {
                            const actionArgs = {
                              dataOp: {
                                sourceId: "v6umJuHyep6kPNyCAJjouT",
                                opId: "034fe32f-044d-4a08-bace-1612fd03173e",
                                userArgs: {
                                  variables: [
                                    (() => {
                                      const { id, ...newDuplicateRsValue } =
                                        $state.duplicateRs.value;
                                      newDuplicateRsValue["last_updated_by"] =
                                        $ctx.SupabaseUser.user == undefined
                                          ? null
                                          : $ctx.SupabaseUser.user.id;
                                      newDuplicateRsValue["created_at"] =
                                        newDuplicateRsValue["updated_at"] =
                                          new Date().toISOString();
                                      return newDuplicateRsValue;
                                    })()
                                  ]
                                },
                                cacheKey: null,
                                invalidatedKeys: [
                                  "cec3d7bf-5ee9-47a3-ab41-392259ef4090"
                                ],
                                roleId: null
                              }
                            };
                            return (async ({ dataOp, continueOnError }) => {
                              try {
                                const response = await executePlasmicDataOp(
                                  dataOp,
                                  {
                                    userAuthToken:
                                      dataSourcesCtx?.userAuthToken,
                                    user: dataSourcesCtx?.user
                                  }
                                );
                                await plasmicInvalidate(dataOp.invalidatedKeys);
                                return response;
                              } catch (e) {
                                if (!continueOnError) {
                                  throw e;
                                }
                                return e;
                              }
                            })?.apply(null, [actionArgs]);
                          })()
                        : undefined;
                      if (
                        $steps["postgresDeleteMany"] != null &&
                        typeof $steps["postgresDeleteMany"] === "object" &&
                        typeof $steps["postgresDeleteMany"].then === "function"
                      ) {
                        $steps["postgresDeleteMany"] = await $steps[
                          "postgresDeleteMany"
                        ];
                      }

                      $steps["updateDuplicateRunsheet"] = true
                        ? (() => {
                            const actionArgs = {
                              variable: {
                                objRoot: $state,
                                variablePath: ["duplicateRunsheet"]
                              },
                              operation: 0,
                              value: false
                            };
                            return (({
                              variable,
                              value,
                              startIndex,
                              deleteCount
                            }) => {
                              if (!variable) {
                                return;
                              }
                              const { objRoot, variablePath } = variable;

                              $stateSet(objRoot, variablePath, value);
                              return value;
                            })?.apply(null, [actionArgs]);
                          })()
                        : undefined;
                      if (
                        $steps["updateDuplicateRunsheet"] != null &&
                        typeof $steps["updateDuplicateRunsheet"] === "object" &&
                        typeof $steps["updateDuplicateRunsheet"].then ===
                          "function"
                      ) {
                        $steps["updateDuplicateRunsheet"] = await $steps[
                          "updateDuplicateRunsheet"
                        ];
                      }

                      $steps["invokeGlobalAction"] = true
                        ? (() => {
                            const actionArgs = {
                              args: [
                                "success",
                                "T\u00e2che dupliqu\u00e9e",
                                undefined,
                                undefined,
                                "bottom"
                              ]
                            };
                            return $globalActions[
                              "plasmic-antd5-config-provider.showNotification"
                            ]?.apply(null, [...actionArgs.args]);
                          })()
                        : undefined;
                      if (
                        $steps["invokeGlobalAction"] != null &&
                        typeof $steps["invokeGlobalAction"] === "object" &&
                        typeof $steps["invokeGlobalAction"].then === "function"
                      ) {
                        $steps["invokeGlobalAction"] = await $steps[
                          "invokeGlobalAction"
                        ];
                      }
                    },
                    onIsSubmittingChange: async (...eventArgs: any) => {
                      generateStateOnChangePropForCodeComponents(
                        $state,
                        "isSubmitting",
                        ["duplicateRs", "isSubmitting"],
                        FormWrapper_Helpers
                      ).apply(null, eventArgs);
                    },
                    ref: ref => {
                      $refs["duplicateRs"] = ref;
                    },
                    submitSlot: null,
                    wrapperCol: { span: 16, horizontalOnly: true }
                  };
                  initializeCodeComponentStates(
                    $state,
                    [
                      {
                        name: "value",
                        plasmicStateName: "duplicateRs.value"
                      },
                      {
                        name: "isSubmitting",
                        plasmicStateName: "duplicateRs.isSubmitting"
                      }
                    ],
                    [],
                    FormWrapper_Helpers ?? {},
                    child$Props
                  );

                  return (
                    <FormWrapper
                      data-plasmic-name={"duplicateRs"}
                      data-plasmic-override={overrides.duplicateRs}
                      {...child$Props}
                    >
                      <Button
                        className={classNames(
                          "__wab_instance",
                          sty.button__nEoJc
                        )}
                        disabled={(() => {
                          try {
                            return !$state.taskId || $state.taskId === 0;
                          } catch (e) {
                            if (
                              e instanceof TypeError ||
                              e?.plasmicType === "PlasmicUndefinedDataError"
                            ) {
                              return undefined;
                            }
                            throw e;
                          }
                        })()}
                        label={"Dupliquer"}
                        submitsForm={true}
                      />
                    </FormWrapper>
                  );
                })()}
                <Stack__
                  as={"div"}
                  data-plasmic-name={"content5"}
                  data-plasmic-override={overrides.content5}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.content5)}
                >
                  <TextInput
                    data-plasmic-name={"titre5"}
                    data-plasmic-override={overrides.titre5}
                    className={classNames("__wab_instance", sty.titre5)}
                    isMulti={false}
                    label={"Titre*"}
                    placeholder={"Titre*"}
                    showIcon={false}
                    showLabel={true}
                    state={"default"}
                    text={``}
                    type={"text"}
                  />

                  <SitexTextInput
                    data-plasmic-name={"texinput25"}
                    data-plasmic-override={overrides.texinput25}
                    className={classNames("__wab_instance", sty.texinput25)}
                    initialValue={generateStateValueProp($state, [
                      "texinput25",
                      "value"
                    ])}
                    onTextChange={async (...eventArgs: any) => {
                      generateStateOnChangeProp($state, [
                        "texinput25",
                        "value"
                      ]).apply(null, eventArgs);
                    }}
                    onValidationChange={async (...eventArgs: any) => {
                      generateStateOnChangeProp($state, [
                        "texinput25",
                        "isInputValid"
                      ]).apply(null, eventArgs);
                    }}
                    placeholder={"Titre*"}
                    prefixedText={"Titre*"}
                    required={true}
                    type={"text"}
                  />

                  <Stack__
                    as={"div"}
                    data-plasmic-name={"date5"}
                    data-plasmic-override={overrides.date5}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.date5)}
                  >
                    <div
                      data-plasmic-name={"label10"}
                      data-plasmic-override={overrides.label10}
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.label10
                      )}
                    >
                      {"Date et heure de d\u00e9but"}
                    </div>
                    {(() => {
                      const child$Props = {
                        allowClear: true,
                        className: classNames(
                          "__wab_instance",
                          sty.timePicker11
                        ),
                        onChange: async (...eventArgs: any) => {
                          generateStateOnChangePropForCodeComponents(
                            $state,
                            "value",
                            ["timePicker11", "value"],
                            AntdDatePicker_Helpers
                          ).apply(null, eventArgs);
                        },
                        popupScopeClassName:
                          sty["timePicker11__datePickerPopup"],
                        showTime: true,
                        value: generateStateValueProp($state, [
                          "timePicker11",
                          "value"
                        ])
                      };
                      initializeCodeComponentStates(
                        $state,
                        [
                          {
                            name: "value",
                            plasmicStateName: "timePicker11.value"
                          }
                        ],
                        [],
                        AntdDatePicker_Helpers ?? {},
                        child$Props
                      );

                      return (
                        <AntdDatePicker
                          data-plasmic-name={"timePicker11"}
                          data-plasmic-override={overrides.timePicker11}
                          {...child$Props}
                        />
                      );
                    })()}
                  </Stack__>
                  <DropDown
                    data-plasmic-name={"type5"}
                    data-plasmic-override={overrides.type5}
                    check={false}
                    className={classNames("__wab_instance", sty.type5)}
                    label={"Type"}
                    options={["Default", "Special"]}
                    showLabel={true}
                    state={"default"}
                    type={"default"}
                  />

                  <TextInput
                    data-plasmic-name={"budget5"}
                    data-plasmic-override={overrides.budget5}
                    className={classNames("__wab_instance", sty.budget5)}
                    isMulti={false}
                    label={"Budget"}
                    placeholder={"\u20ac"}
                    showIcon={false}
                    showLabel={true}
                    state={"default"}
                    text={""}
                    type={"text"}
                  />

                  <TextInput
                    data-plasmic-name={"comments5"}
                    data-plasmic-override={overrides.comments5}
                    className={classNames("__wab_instance", sty.comments5)}
                    isMulti={false}
                    label={"Commentaires"}
                    placeholder={"Commentaires"}
                    showIcon={false}
                    showLabel={true}
                    state={"Placeholder"}
                    text={""}
                    type={"TextArea"}
                  />

                  {false ? (
                    <Stack__
                      as={"div"}
                      data-plasmic-name={"input16"}
                      data-plasmic-override={overrides.input16}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.input16)}
                    >
                      <div
                        data-plasmic-name={"name11"}
                        data-plasmic-override={overrides.name11}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.name11
                        )}
                      >
                        {"Dispositif"}
                      </div>
                      <Stack__
                        as={"div"}
                        data-plasmic-name={"datePickerWeb5"}
                        data-plasmic-override={overrides.datePickerWeb5}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.datePickerWeb5
                        )}
                      >
                        <Stack__
                          as={"div"}
                          data-plasmic-name={"inputSelect5"}
                          data-plasmic-override={overrides.inputSelect5}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.inputSelect5
                          )}
                        >
                          {false ? (
                            <div
                              data-plasmic-name={"signedByBaseFieldGroupSmall5"}
                              data-plasmic-override={
                                overrides.signedByBaseFieldGroupSmall5
                              }
                              className={classNames(
                                projectcss.all,
                                sty.signedByBaseFieldGroupSmall5
                              )}
                            />
                          ) : null}
                          <Stack__
                            as={"div"}
                            data-plasmic-name={"endDateCalendar5"}
                            data-plasmic-override={overrides.endDateCalendar5}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.endDateCalendar5
                            )}
                          >
                            {false ? (
                              <div
                                data-plasmic-name={"inputElementTextField9"}
                                data-plasmic-override={
                                  overrides.inputElementTextField9
                                }
                                className={classNames(
                                  projectcss.all,
                                  sty.inputElementTextField9
                                )}
                              >
                                {false ? (
                                  <div
                                    data-plasmic-name={
                                      "signedByBaseInputElementTextFieldSmallEnabled5"
                                    }
                                    data-plasmic-override={
                                      overrides.signedByBaseInputElementTextFieldSmallEnabled5
                                    }
                                    className={classNames(
                                      projectcss.all,
                                      sty.signedByBaseInputElementTextFieldSmallEnabled5
                                    )}
                                  />
                                ) : null}
                                {false ? (
                                  <div
                                    data-plasmic-name={
                                      "leadingArtworkContainer17"
                                    }
                                    data-plasmic-override={
                                      overrides.leadingArtworkContainer17
                                    }
                                    className={classNames(
                                      projectcss.all,
                                      sty.leadingArtworkContainer17
                                    )}
                                  >
                                    <div
                                      data-plasmic-name={"leadingArtwork9"}
                                      data-plasmic-override={
                                        overrides.leadingArtwork9
                                      }
                                      className={classNames(
                                        projectcss.all,
                                        sty.leadingArtwork9
                                      )}
                                    >
                                      {false ? (
                                        <OutlinedIcon
                                          className={classNames(
                                            projectcss.all,
                                            sty.svg__f78Of
                                          )}
                                          role={"img"}
                                        />
                                      ) : null}
                                      <FilledIcon
                                        className={classNames(
                                          projectcss.all,
                                          sty.svg__jclZt
                                        )}
                                        role={"img"}
                                      />
                                    </div>
                                  </div>
                                ) : null}
                                {false ? (
                                  <div
                                    data-plasmic-name={
                                      "leadingLabelContainer17"
                                    }
                                    data-plasmic-override={
                                      overrides.leadingLabelContainer17
                                    }
                                    className={classNames(
                                      projectcss.all,
                                      sty.leadingLabelContainer17
                                    )}
                                  >
                                    <div
                                      data-plasmic-name={"leadingLabel17"}
                                      data-plasmic-override={
                                        overrides.leadingLabel17
                                      }
                                      className={classNames(
                                        projectcss.all,
                                        sty.leadingLabel17
                                      )}
                                    >
                                      {false ? (
                                        <div
                                          data-plasmic-name={
                                            "signedByBaseTypographyLabelSmall9"
                                          }
                                          data-plasmic-override={
                                            overrides.signedByBaseTypographyLabelSmall9
                                          }
                                          className={classNames(
                                            projectcss.all,
                                            sty.signedByBaseTypographyLabelSmall9
                                          )}
                                        />
                                      ) : null}
                                      <div
                                        data-plasmic-name={"text105"}
                                        data-plasmic-override={
                                          overrides.text105
                                        }
                                        className={classNames(
                                          projectcss.all,
                                          projectcss.__wab_text,
                                          sty.text105
                                        )}
                                      >
                                        {"$"}
                                      </div>
                                      {false ? (
                                        <div
                                          data-plasmic-name={"spacer97"}
                                          data-plasmic-override={
                                            overrides.spacer97
                                          }
                                          className={classNames(
                                            projectcss.all,
                                            sty.spacer97
                                          )}
                                        />
                                      ) : null}
                                    </div>
                                  </div>
                                ) : null}
                                <div
                                  data-plasmic-name={
                                    "inputElementContentText17"
                                  }
                                  data-plasmic-override={
                                    overrides.inputElementContentText17
                                  }
                                  className={classNames(
                                    projectcss.all,
                                    sty.inputElementContentText17
                                  )}
                                >
                                  {false ? (
                                    <div
                                      data-plasmic-name={
                                        "signedByBaseInputElementContentTextSmallOff5"
                                      }
                                      data-plasmic-override={
                                        overrides.signedByBaseInputElementContentTextSmallOff5
                                      }
                                      className={classNames(
                                        projectcss.all,
                                        sty.signedByBaseInputElementContentTextSmallOff5
                                      )}
                                    />
                                  ) : null}
                                  <div
                                    data-plasmic-name={"text106"}
                                    data-plasmic-override={overrides.text106}
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.__wab_text,
                                      sty.text106
                                    )}
                                  >
                                    {"MM/DD/YYYY"}
                                  </div>
                                </div>
                                {false ? (
                                  <div
                                    data-plasmic-name={
                                      "trailingLabelEnhancer17"
                                    }
                                    data-plasmic-override={
                                      overrides.trailingLabelEnhancer17
                                    }
                                    className={classNames(
                                      projectcss.all,
                                      sty.trailingLabelEnhancer17
                                    )}
                                  >
                                    {false ? (
                                      <div
                                        data-plasmic-name={"trailingLabel17"}
                                        data-plasmic-override={
                                          overrides.trailingLabel17
                                        }
                                        className={classNames(
                                          projectcss.all,
                                          sty.trailingLabel17
                                        )}
                                      >
                                        {false ? (
                                          <div
                                            data-plasmic-name={
                                              "signedByBaseTypographyLabelSmall10"
                                            }
                                            data-plasmic-override={
                                              overrides.signedByBaseTypographyLabelSmall10
                                            }
                                            className={classNames(
                                              projectcss.all,
                                              sty.signedByBaseTypographyLabelSmall10
                                            )}
                                          />
                                        ) : null}
                                        <div
                                          data-plasmic-name={"text107"}
                                          data-plasmic-override={
                                            overrides.text107
                                          }
                                          className={classNames(
                                            projectcss.all,
                                            projectcss.__wab_text,
                                            sty.text107
                                          )}
                                        >
                                          {"USD"}
                                        </div>
                                        {false ? (
                                          <div
                                            data-plasmic-name={"spacer98"}
                                            data-plasmic-override={
                                              overrides.spacer98
                                            }
                                            className={classNames(
                                              projectcss.all,
                                              sty.spacer98
                                            )}
                                          />
                                        ) : null}
                                      </div>
                                    ) : null}
                                  </div>
                                ) : null}
                                {false ? (
                                  <div
                                    data-plasmic-name={
                                      "trailingArtworkContainer17"
                                    }
                                    data-plasmic-override={
                                      overrides.trailingArtworkContainer17
                                    }
                                    className={classNames(
                                      projectcss.all,
                                      sty.trailingArtworkContainer17
                                    )}
                                  >
                                    <div
                                      data-plasmic-name={"trailingArtwork17"}
                                      data-plasmic-override={
                                        overrides.trailingArtwork17
                                      }
                                      className={classNames(
                                        projectcss.all,
                                        sty.trailingArtwork17
                                      )}
                                    >
                                      {false ? (
                                        <OutlinedIcon
                                          className={classNames(
                                            projectcss.all,
                                            sty.svg__wl7Wq
                                          )}
                                          role={"img"}
                                        />
                                      ) : null}
                                      <FilledIcon
                                        className={classNames(
                                          projectcss.all,
                                          sty.svg__f6LhI
                                        )}
                                        role={"img"}
                                      />
                                    </div>
                                  </div>
                                ) : null}
                              </div>
                            ) : null}
                            <div
                              data-plasmic-name={"calendar5"}
                              data-plasmic-override={overrides.calendar5}
                              className={classNames(
                                projectcss.all,
                                sty.calendar5
                              )}
                            >
                              {false ? (
                                <div
                                  data-plasmic-name={
                                    "signedByBaseInputElementSelectXSmallWebSingleDefaultEnabled5"
                                  }
                                  data-plasmic-override={
                                    overrides.signedByBaseInputElementSelectXSmallWebSingleDefaultEnabled5
                                  }
                                  className={classNames(
                                    projectcss.all,
                                    sty.signedByBaseInputElementSelectXSmallWebSingleDefaultEnabled5
                                  )}
                                />
                              ) : null}
                              <Stack__
                                as={"div"}
                                data-plasmic-name={"leadingArtworkContainer18"}
                                data-plasmic-override={
                                  overrides.leadingArtworkContainer18
                                }
                                hasGap={true}
                                className={classNames(
                                  projectcss.all,
                                  sty.leadingArtworkContainer18
                                )}
                              >
                                <div
                                  data-plasmic-name={"text108"}
                                  data-plasmic-override={overrides.text108}
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.__wab_text,
                                    sty.text108
                                  )}
                                >
                                  {"S\u00e9lectionner..."}
                                </div>
                              </Stack__>
                              {false ? (
                                <div
                                  data-plasmic-name={"leadingLabelContainer18"}
                                  data-plasmic-override={
                                    overrides.leadingLabelContainer18
                                  }
                                  className={classNames(
                                    projectcss.all,
                                    sty.leadingLabelContainer18
                                  )}
                                >
                                  <div
                                    data-plasmic-name={"leadingLabel18"}
                                    data-plasmic-override={
                                      overrides.leadingLabel18
                                    }
                                    className={classNames(
                                      projectcss.all,
                                      sty.leadingLabel18
                                    )}
                                  >
                                    {false ? (
                                      <div
                                        data-plasmic-name={
                                          "signedByBaseTypographyLabelXSmall9"
                                        }
                                        data-plasmic-override={
                                          overrides.signedByBaseTypographyLabelXSmall9
                                        }
                                        className={classNames(
                                          projectcss.all,
                                          sty.signedByBaseTypographyLabelXSmall9
                                        )}
                                      />
                                    ) : null}
                                    <div
                                      data-plasmic-name={"text109"}
                                      data-plasmic-override={overrides.text109}
                                      className={classNames(
                                        projectcss.all,
                                        projectcss.__wab_text,
                                        sty.text109
                                      )}
                                    >
                                      {"$"}
                                    </div>
                                    {false ? (
                                      <div
                                        data-plasmic-name={"spacer99"}
                                        data-plasmic-override={
                                          overrides.spacer99
                                        }
                                        className={classNames(
                                          projectcss.all,
                                          sty.spacer99
                                        )}
                                      />
                                    ) : null}
                                  </div>
                                </div>
                              ) : null}
                              {false ? (
                                <div
                                  data-plasmic-name={
                                    "inputElementContentText18"
                                  }
                                  data-plasmic-override={
                                    overrides.inputElementContentText18
                                  }
                                  className={classNames(
                                    projectcss.all,
                                    sty.inputElementContentText18
                                  )}
                                >
                                  {false ? (
                                    <div
                                      data-plasmic-name={
                                        "signedByBaseInputElementContentTextXSmallWebOff5"
                                      }
                                      data-plasmic-override={
                                        overrides.signedByBaseInputElementContentTextXSmallWebOff5
                                      }
                                      className={classNames(
                                        projectcss.all,
                                        sty.signedByBaseInputElementContentTextXSmallWebOff5
                                      )}
                                    />
                                  ) : null}
                                  <div
                                    data-plasmic-name={"text110"}
                                    data-plasmic-override={overrides.text110}
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.__wab_text,
                                      sty.text110
                                    )}
                                  >
                                    {"Jr"}
                                  </div>
                                </div>
                              ) : null}
                              {false ? (
                                <div
                                  data-plasmic-name={"trailingLabelEnhancer18"}
                                  data-plasmic-override={
                                    overrides.trailingLabelEnhancer18
                                  }
                                  className={classNames(
                                    projectcss.all,
                                    sty.trailingLabelEnhancer18
                                  )}
                                >
                                  {false ? (
                                    <div
                                      data-plasmic-name={"trailingLabel18"}
                                      data-plasmic-override={
                                        overrides.trailingLabel18
                                      }
                                      className={classNames(
                                        projectcss.all,
                                        sty.trailingLabel18
                                      )}
                                    >
                                      {false ? (
                                        <div
                                          data-plasmic-name={
                                            "signedByBaseTypographyLabelXSmall10"
                                          }
                                          data-plasmic-override={
                                            overrides.signedByBaseTypographyLabelXSmall10
                                          }
                                          className={classNames(
                                            projectcss.all,
                                            sty.signedByBaseTypographyLabelXSmall10
                                          )}
                                        />
                                      ) : null}
                                      <div
                                        data-plasmic-name={"text111"}
                                        data-plasmic-override={
                                          overrides.text111
                                        }
                                        className={classNames(
                                          projectcss.all,
                                          projectcss.__wab_text,
                                          sty.text111
                                        )}
                                      >
                                        {"USD"}
                                      </div>
                                      {false ? (
                                        <div
                                          data-plasmic-name={"spacer100"}
                                          data-plasmic-override={
                                            overrides.spacer100
                                          }
                                          className={classNames(
                                            projectcss.all,
                                            sty.spacer100
                                          )}
                                        />
                                      ) : null}
                                    </div>
                                  ) : null}
                                </div>
                              ) : null}
                              {false ? (
                                <div
                                  data-plasmic-name={
                                    "trailingArtworkContainer18"
                                  }
                                  data-plasmic-override={
                                    overrides.trailingArtworkContainer18
                                  }
                                  className={classNames(
                                    projectcss.all,
                                    sty.trailingArtworkContainer18
                                  )}
                                >
                                  <div
                                    data-plasmic-name={"trailingArtwork18"}
                                    data-plasmic-override={
                                      overrides.trailingArtwork18
                                    }
                                    className={classNames(
                                      projectcss.all,
                                      sty.trailingArtwork18
                                    )}
                                  >
                                    {false ? (
                                      <Outlined2Icon
                                        className={classNames(
                                          projectcss.all,
                                          sty.svg__gik6
                                        )}
                                        role={"img"}
                                      />
                                    ) : null}
                                    <Filled2Icon
                                      className={classNames(
                                        projectcss.all,
                                        sty.svg__kJi6R
                                      )}
                                      role={"img"}
                                    />
                                  </div>
                                </div>
                              ) : null}
                              <div
                                data-plasmic-name={"selectIndicatorContainer9"}
                                data-plasmic-override={
                                  overrides.selectIndicatorContainer9
                                }
                                className={classNames(
                                  projectcss.all,
                                  sty.selectIndicatorContainer9
                                )}
                              >
                                <div
                                  data-plasmic-name={"chevronIcon9"}
                                  data-plasmic-override={overrides.chevronIcon9}
                                  className={classNames(
                                    projectcss.all,
                                    sty.chevronIcon9
                                  )}
                                >
                                  {false ? (
                                    <Outlined3Icon
                                      className={classNames(
                                        projectcss.all,
                                        sty.svg___7Wruz
                                      )}
                                      role={"img"}
                                    />
                                  ) : null}
                                  <Outlined3Icon
                                    className={classNames(
                                      projectcss.all,
                                      sty.svg__kxLHl
                                    )}
                                    role={"img"}
                                  />
                                </div>
                              </div>
                            </div>
                          </Stack__>
                          {false ? (
                            <Stack__
                              as={"div"}
                              data-plasmic-name={"inputElementHint9"}
                              data-plasmic-override={
                                overrides.inputElementHint9
                              }
                              hasGap={true}
                              className={classNames(
                                projectcss.all,
                                sty.inputElementHint9
                              )}
                            >
                              {false ? (
                                <div
                                  data-plasmic-name={"heart41"}
                                  data-plasmic-override={overrides.heart41}
                                  className={classNames(
                                    projectcss.all,
                                    sty.heart41
                                  )}
                                >
                                  {false ? (
                                    <Outlined4Icon
                                      className={classNames(
                                        projectcss.all,
                                        sty.svg__oHeOz
                                      )}
                                      role={"img"}
                                    />
                                  ) : null}
                                  <Filled3Icon
                                    className={classNames(
                                      projectcss.all,
                                      sty.svg__hlIk
                                    )}
                                    role={"img"}
                                  />
                                </div>
                              ) : null}
                              <div
                                data-plasmic-name={"hint9"}
                                data-plasmic-override={overrides.hint9}
                                className={classNames(
                                  projectcss.all,
                                  sty.hint9
                                )}
                              >
                                {false ? (
                                  <div
                                    data-plasmic-name={
                                      "signedByBaseTypographyParagraphSmall9"
                                    }
                                    data-plasmic-override={
                                      overrides.signedByBaseTypographyParagraphSmall9
                                    }
                                    className={classNames(
                                      projectcss.all,
                                      sty.signedByBaseTypographyParagraphSmall9
                                    )}
                                  />
                                ) : null}
                                <div
                                  data-plasmic-name={"text112"}
                                  data-plasmic-override={overrides.text112}
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.__wab_text,
                                    sty.text112
                                  )}
                                >
                                  {"MM/DD/YYYY"}
                                </div>
                                {false ? (
                                  <div
                                    data-plasmic-name={"spacer101"}
                                    data-plasmic-override={overrides.spacer101}
                                    className={classNames(
                                      projectcss.all,
                                      sty.spacer101
                                    )}
                                  />
                                ) : null}
                              </div>
                            </Stack__>
                          ) : null}
                        </Stack__>
                      </Stack__>
                      <div
                        data-plasmic-name={"inputElementSelect5"}
                        data-plasmic-override={overrides.inputElementSelect5}
                        className={classNames(
                          projectcss.all,
                          sty.inputElementSelect5
                        )}
                      >
                        {false ? (
                          <div
                            data-plasmic-name={
                              "signedByBaseInputElementSelectMediumSingleDefaultActive5"
                            }
                            data-plasmic-override={
                              overrides.signedByBaseInputElementSelectMediumSingleDefaultActive5
                            }
                            className={classNames(
                              projectcss.all,
                              sty.signedByBaseInputElementSelectMediumSingleDefaultActive5
                            )}
                          />
                        ) : null}
                        {false ? (
                          <div
                            data-plasmic-name={"selectFrame5"}
                            data-plasmic-override={overrides.selectFrame5}
                            className={classNames(
                              projectcss.all,
                              sty.selectFrame5
                            )}
                          >
                            {false ? (
                              <div
                                data-plasmic-name={"leadingArtworkContainer19"}
                                data-plasmic-override={
                                  overrides.leadingArtworkContainer19
                                }
                                className={classNames(
                                  projectcss.all,
                                  sty.leadingArtworkContainer19
                                )}
                              >
                                <div
                                  data-plasmic-name={"leadingArtwork10"}
                                  data-plasmic-override={
                                    overrides.leadingArtwork10
                                  }
                                  className={classNames(
                                    projectcss.all,
                                    sty.leadingArtwork10
                                  )}
                                >
                                  {false ? (
                                    <Outlined5Icon
                                      className={classNames(
                                        projectcss.all,
                                        sty.svg__s9Dgh
                                      )}
                                      role={"img"}
                                    />
                                  ) : null}
                                  <Filled4Icon
                                    className={classNames(
                                      projectcss.all,
                                      sty.svg__vzLr5
                                    )}
                                    role={"img"}
                                  />
                                </div>
                              </div>
                            ) : null}
                            {false ? (
                              <div
                                data-plasmic-name={"leadingLabelContainer19"}
                                data-plasmic-override={
                                  overrides.leadingLabelContainer19
                                }
                                className={classNames(
                                  projectcss.all,
                                  sty.leadingLabelContainer19
                                )}
                              >
                                <div
                                  data-plasmic-name={"leadingLabel19"}
                                  data-plasmic-override={
                                    overrides.leadingLabel19
                                  }
                                  className={classNames(
                                    projectcss.all,
                                    sty.leadingLabel19
                                  )}
                                >
                                  {false ? (
                                    <div
                                      data-plasmic-name={
                                        "signedByBaseTypographyLabelMedium25"
                                      }
                                      data-plasmic-override={
                                        overrides.signedByBaseTypographyLabelMedium25
                                      }
                                      className={classNames(
                                        projectcss.all,
                                        sty.signedByBaseTypographyLabelMedium25
                                      )}
                                    />
                                  ) : null}
                                  <div
                                    data-plasmic-name={"text113"}
                                    data-plasmic-override={overrides.text113}
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.__wab_text,
                                      sty.text113
                                    )}
                                  >
                                    {"$"}
                                  </div>
                                  {false ? (
                                    <div
                                      data-plasmic-name={"spacer102"}
                                      data-plasmic-override={
                                        overrides.spacer102
                                      }
                                      className={classNames(
                                        projectcss.all,
                                        sty.spacer102
                                      )}
                                    />
                                  ) : null}
                                </div>
                              </div>
                            ) : null}
                            <div
                              data-plasmic-name={"inputElementContentText19"}
                              data-plasmic-override={
                                overrides.inputElementContentText19
                              }
                              className={classNames(
                                projectcss.all,
                                sty.inputElementContentText19
                              )}
                            >
                              {false ? (
                                <div
                                  data-plasmic-name={
                                    "signedByBaseInputElementContentTextMediumOff9"
                                  }
                                  data-plasmic-override={
                                    overrides.signedByBaseInputElementContentTextMediumOff9
                                  }
                                  className={classNames(
                                    projectcss.all,
                                    sty.signedByBaseInputElementContentTextMediumOff9
                                  )}
                                />
                              ) : null}
                              {false ? (
                                <div
                                  data-plasmic-name={"text114"}
                                  data-plasmic-override={overrides.text114}
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.__wab_text,
                                    sty.text114
                                  )}
                                >
                                  {"S\u00e9lectionner..."}
                                </div>
                              ) : null}
                            </div>
                            {false ? (
                              <div
                                data-plasmic-name={"trailingLabelEnhancer19"}
                                data-plasmic-override={
                                  overrides.trailingLabelEnhancer19
                                }
                                className={classNames(
                                  projectcss.all,
                                  sty.trailingLabelEnhancer19
                                )}
                              >
                                {false ? (
                                  <div
                                    data-plasmic-name={"trailingLabel19"}
                                    data-plasmic-override={
                                      overrides.trailingLabel19
                                    }
                                    className={classNames(
                                      projectcss.all,
                                      sty.trailingLabel19
                                    )}
                                  >
                                    {false ? (
                                      <div
                                        data-plasmic-name={
                                          "signedByBaseTypographyLabelMedium26"
                                        }
                                        data-plasmic-override={
                                          overrides.signedByBaseTypographyLabelMedium26
                                        }
                                        className={classNames(
                                          projectcss.all,
                                          sty.signedByBaseTypographyLabelMedium26
                                        )}
                                      />
                                    ) : null}
                                    <div
                                      data-plasmic-name={"text115"}
                                      data-plasmic-override={overrides.text115}
                                      className={classNames(
                                        projectcss.all,
                                        projectcss.__wab_text,
                                        sty.text115
                                      )}
                                    >
                                      {"USD"}
                                    </div>
                                    {false ? (
                                      <div
                                        data-plasmic-name={"spacer103"}
                                        data-plasmic-override={
                                          overrides.spacer103
                                        }
                                        className={classNames(
                                          projectcss.all,
                                          sty.spacer103
                                        )}
                                      />
                                    ) : null}
                                  </div>
                                ) : null}
                              </div>
                            ) : null}
                            {false ? (
                              <div
                                data-plasmic-name={"trailingArtworkContainer19"}
                                data-plasmic-override={
                                  overrides.trailingArtworkContainer19
                                }
                                className={classNames(
                                  projectcss.all,
                                  sty.trailingArtworkContainer19
                                )}
                              >
                                <div
                                  data-plasmic-name={"trailingArtwork19"}
                                  data-plasmic-override={
                                    overrides.trailingArtwork19
                                  }
                                  className={classNames(
                                    projectcss.all,
                                    sty.trailingArtwork19
                                  )}
                                >
                                  {false ? (
                                    <Outlined5Icon
                                      className={classNames(
                                        projectcss.all,
                                        sty.svg___0AzTn
                                      )}
                                      role={"img"}
                                    />
                                  ) : null}
                                  <Filled4Icon
                                    className={classNames(
                                      projectcss.all,
                                      sty.svg__hnQhX
                                    )}
                                    role={"img"}
                                  />
                                </div>
                              </div>
                            ) : null}
                            {false ? (
                              <div
                                data-plasmic-name={"selectIndicatorContainer10"}
                                data-plasmic-override={
                                  overrides.selectIndicatorContainer10
                                }
                                className={classNames(
                                  projectcss.all,
                                  sty.selectIndicatorContainer10
                                )}
                              >
                                <div
                                  data-plasmic-name={"chevronIcon10"}
                                  data-plasmic-override={
                                    overrides.chevronIcon10
                                  }
                                  className={classNames(
                                    projectcss.all,
                                    sty.chevronIcon10
                                  )}
                                >
                                  {false ? (
                                    <Outlined6Icon
                                      className={classNames(
                                        projectcss.all,
                                        sty.svg___2JTG
                                      )}
                                      role={"img"}
                                    />
                                  ) : null}
                                  <Outlined6Icon
                                    className={classNames(
                                      projectcss.all,
                                      sty.svg__wS6Gq
                                    )}
                                    role={"img"}
                                  />
                                </div>
                              </div>
                            ) : null}
                          </div>
                        ) : null}
                        <div
                          data-plasmic-name={"menu5"}
                          data-plasmic-override={overrides.menu5}
                          className={classNames(projectcss.all, sty.menu5)}
                        >
                          {false ? (
                            <div
                              data-plasmic-name={"signedByBaseMenuListMedium5"}
                              data-plasmic-override={
                                overrides.signedByBaseMenuListMedium5
                              }
                              className={classNames(
                                projectcss.all,
                                sty.signedByBaseMenuListMedium5
                              )}
                            />
                          ) : null}
                          {false ? (
                            <Stack__
                              as={"div"}
                              data-plasmic-name={"menuItem21"}
                              data-plasmic-override={overrides.menuItem21}
                              hasGap={true}
                              className={classNames(
                                projectcss.all,
                                sty.menuItem21
                              )}
                            >
                              {false ? (
                                <div
                                  data-plasmic-name={
                                    "signedByBaseMenuItemSearchMediumNoneEnabled5"
                                  }
                                  data-plasmic-override={
                                    overrides.signedByBaseMenuItemSearchMediumNoneEnabled5
                                  }
                                  className={classNames(
                                    projectcss.all,
                                    sty.signedByBaseMenuItemSearchMediumNoneEnabled5
                                  )}
                                />
                              ) : null}
                              <Stack__
                                as={"div"}
                                data-plasmic-name={"searchField5"}
                                data-plasmic-override={overrides.searchField5}
                                hasGap={true}
                                className={classNames(
                                  projectcss.all,
                                  sty.searchField5
                                )}
                              >
                                {false ? (
                                  <div
                                    data-plasmic-name={
                                      "signedByBaseSearchFieldMediumEnabled5"
                                    }
                                    data-plasmic-override={
                                      overrides.signedByBaseSearchFieldMediumEnabled5
                                    }
                                    className={classNames(
                                      projectcss.all,
                                      sty.signedByBaseSearchFieldMediumEnabled5
                                    )}
                                  />
                                ) : null}
                                {false ? (
                                  <Stack__
                                    as={"div"}
                                    data-plasmic-name={"inputElementLabel5"}
                                    data-plasmic-override={
                                      overrides.inputElementLabel5
                                    }
                                    hasGap={true}
                                    className={classNames(
                                      projectcss.all,
                                      sty.inputElementLabel5
                                    )}
                                  >
                                    {false ? (
                                      <div
                                        data-plasmic-name={
                                          "signedByBaseInputElementLabelMedium5"
                                        }
                                        data-plasmic-override={
                                          overrides.signedByBaseInputElementLabelMedium5
                                        }
                                        className={classNames(
                                          projectcss.all,
                                          sty.signedByBaseInputElementLabelMedium5
                                        )}
                                      />
                                    ) : null}
                                    <div
                                      data-plasmic-name={"typography57"}
                                      data-plasmic-override={
                                        overrides.typography57
                                      }
                                      className={classNames(
                                        projectcss.all,
                                        sty.typography57
                                      )}
                                    >
                                      {false ? (
                                        <div
                                          data-plasmic-name={
                                            "signedByBaseTypographyLabelMedium27"
                                          }
                                          data-plasmic-override={
                                            overrides.signedByBaseTypographyLabelMedium27
                                          }
                                          className={classNames(
                                            projectcss.all,
                                            sty.signedByBaseTypographyLabelMedium27
                                          )}
                                        />
                                      ) : null}
                                      <div
                                        data-plasmic-name={"text116"}
                                        data-plasmic-override={
                                          overrides.text116
                                        }
                                        className={classNames(
                                          projectcss.all,
                                          projectcss.__wab_text,
                                          sty.text116
                                        )}
                                      >
                                        {"Label"}
                                      </div>
                                      {false ? (
                                        <div
                                          data-plasmic-name={"spacer104"}
                                          data-plasmic-override={
                                            overrides.spacer104
                                          }
                                          className={classNames(
                                            projectcss.all,
                                            sty.spacer104
                                          )}
                                        />
                                      ) : null}
                                    </div>
                                    {false ? (
                                      <Stack__
                                        as={"div"}
                                        data-plasmic-name={
                                          "characterCountFrame5"
                                        }
                                        data-plasmic-override={
                                          overrides.characterCountFrame5
                                        }
                                        hasGap={true}
                                        className={classNames(
                                          projectcss.all,
                                          sty.characterCountFrame5
                                        )}
                                      >
                                        {false ? (
                                          <div
                                            data-plasmic-name={"heart42"}
                                            data-plasmic-override={
                                              overrides.heart42
                                            }
                                            className={classNames(
                                              projectcss.all,
                                              sty.heart42
                                            )}
                                          >
                                            {false ? (
                                              <OutlinedIcon
                                                className={classNames(
                                                  projectcss.all,
                                                  sty.svg__ow7B3
                                                )}
                                                role={"img"}
                                              />
                                            ) : null}
                                            <FilledIcon
                                              className={classNames(
                                                projectcss.all,
                                                sty.svg__vcbJ3
                                              )}
                                              role={"img"}
                                            />
                                          </div>
                                        ) : null}
                                        <div
                                          data-plasmic-name={"typography58"}
                                          data-plasmic-override={
                                            overrides.typography58
                                          }
                                          className={classNames(
                                            projectcss.all,
                                            sty.typography58
                                          )}
                                        >
                                          {false ? (
                                            <div
                                              data-plasmic-name={
                                                "signedByBaseTypographyLabelMedium28"
                                              }
                                              data-plasmic-override={
                                                overrides.signedByBaseTypographyLabelMedium28
                                              }
                                              className={classNames(
                                                projectcss.all,
                                                sty.signedByBaseTypographyLabelMedium28
                                              )}
                                            />
                                          ) : null}
                                          <div
                                            data-plasmic-name={"text117"}
                                            data-plasmic-override={
                                              overrides.text117
                                            }
                                            className={classNames(
                                              projectcss.all,
                                              projectcss.__wab_text,
                                              sty.text117
                                            )}
                                          >
                                            {"0/100"}
                                          </div>
                                          {false ? (
                                            <div
                                              data-plasmic-name={"spacer105"}
                                              data-plasmic-override={
                                                overrides.spacer105
                                              }
                                              className={classNames(
                                                projectcss.all,
                                                sty.spacer105
                                              )}
                                            />
                                          ) : null}
                                        </div>
                                      </Stack__>
                                    ) : null}
                                  </Stack__>
                                ) : null}
                                <div
                                  data-plasmic-name={"inputElementTextField10"}
                                  data-plasmic-override={
                                    overrides.inputElementTextField10
                                  }
                                  className={classNames(
                                    projectcss.all,
                                    sty.inputElementTextField10
                                  )}
                                >
                                  {false ? (
                                    <div
                                      data-plasmic-name={
                                        "signedByBaseInputElementTextFieldMediumEnabled5"
                                      }
                                      data-plasmic-override={
                                        overrides.signedByBaseInputElementTextFieldMediumEnabled5
                                      }
                                      className={classNames(
                                        projectcss.all,
                                        sty.signedByBaseInputElementTextFieldMediumEnabled5
                                      )}
                                    />
                                  ) : null}
                                  <div
                                    data-plasmic-name={
                                      "leadingArtworkContainer20"
                                    }
                                    data-plasmic-override={
                                      overrides.leadingArtworkContainer20
                                    }
                                    className={classNames(
                                      projectcss.all,
                                      sty.leadingArtworkContainer20
                                    )}
                                  >
                                    <div
                                      data-plasmic-name={"search5"}
                                      data-plasmic-override={overrides.search5}
                                      className={classNames(
                                        projectcss.all,
                                        sty.search5
                                      )}
                                    >
                                      {false ? (
                                        <Outlined7Icon
                                          className={classNames(
                                            projectcss.all,
                                            sty.svg___3Dbcj
                                          )}
                                          role={"img"}
                                        />
                                      ) : null}
                                      <Outlined7Icon
                                        className={classNames(
                                          projectcss.all,
                                          sty.svg___7DlP7
                                        )}
                                        role={"img"}
                                      />
                                    </div>
                                  </div>
                                  {false ? (
                                    <div
                                      data-plasmic-name={
                                        "leadingLabelContainer20"
                                      }
                                      data-plasmic-override={
                                        overrides.leadingLabelContainer20
                                      }
                                      className={classNames(
                                        projectcss.all,
                                        sty.leadingLabelContainer20
                                      )}
                                    >
                                      {false ? (
                                        <div
                                          data-plasmic-name={"leadingLabel20"}
                                          data-plasmic-override={
                                            overrides.leadingLabel20
                                          }
                                          className={classNames(
                                            projectcss.all,
                                            sty.leadingLabel20
                                          )}
                                        >
                                          {false ? (
                                            <div
                                              data-plasmic-name={
                                                "signedByBaseTypographyLabelMedium29"
                                              }
                                              data-plasmic-override={
                                                overrides.signedByBaseTypographyLabelMedium29
                                              }
                                              className={classNames(
                                                projectcss.all,
                                                sty.signedByBaseTypographyLabelMedium29
                                              )}
                                            />
                                          ) : null}
                                          <div
                                            data-plasmic-name={"text118"}
                                            data-plasmic-override={
                                              overrides.text118
                                            }
                                            className={classNames(
                                              projectcss.all,
                                              projectcss.__wab_text,
                                              sty.text118
                                            )}
                                          >
                                            {"$"}
                                          </div>
                                          {false ? (
                                            <div
                                              data-plasmic-name={"spacer106"}
                                              data-plasmic-override={
                                                overrides.spacer106
                                              }
                                              className={classNames(
                                                projectcss.all,
                                                sty.spacer106
                                              )}
                                            />
                                          ) : null}
                                        </div>
                                      ) : null}
                                    </div>
                                  ) : null}
                                  <div
                                    data-plasmic-name={
                                      "inputElementContentText20"
                                    }
                                    data-plasmic-override={
                                      overrides.inputElementContentText20
                                    }
                                    className={classNames(
                                      projectcss.all,
                                      sty.inputElementContentText20
                                    )}
                                  >
                                    {false ? (
                                      <div
                                        data-plasmic-name={
                                          "signedByBaseInputElementContentTextMediumOff10"
                                        }
                                        data-plasmic-override={
                                          overrides.signedByBaseInputElementContentTextMediumOff10
                                        }
                                        className={classNames(
                                          projectcss.all,
                                          sty.signedByBaseInputElementContentTextMediumOff10
                                        )}
                                      />
                                    ) : null}
                                    <div
                                      data-plasmic-name={"text119"}
                                      data-plasmic-override={overrides.text119}
                                      className={classNames(
                                        projectcss.all,
                                        projectcss.__wab_text,
                                        sty.text119
                                      )}
                                    >
                                      {"Placeholder"}
                                    </div>
                                  </div>
                                  {false ? (
                                    <div
                                      data-plasmic-name={
                                        "trailingLabelEnhancer20"
                                      }
                                      data-plasmic-override={
                                        overrides.trailingLabelEnhancer20
                                      }
                                      className={classNames(
                                        projectcss.all,
                                        sty.trailingLabelEnhancer20
                                      )}
                                    >
                                      {false ? (
                                        <div
                                          data-plasmic-name={"trailingLabel20"}
                                          data-plasmic-override={
                                            overrides.trailingLabel20
                                          }
                                          className={classNames(
                                            projectcss.all,
                                            sty.trailingLabel20
                                          )}
                                        >
                                          {false ? (
                                            <div
                                              data-plasmic-name={
                                                "signedByBaseTypographyLabelMedium30"
                                              }
                                              data-plasmic-override={
                                                overrides.signedByBaseTypographyLabelMedium30
                                              }
                                              className={classNames(
                                                projectcss.all,
                                                sty.signedByBaseTypographyLabelMedium30
                                              )}
                                            />
                                          ) : null}
                                          <div
                                            data-plasmic-name={"text120"}
                                            data-plasmic-override={
                                              overrides.text120
                                            }
                                            className={classNames(
                                              projectcss.all,
                                              projectcss.__wab_text,
                                              sty.text120
                                            )}
                                          >
                                            {"USD"}
                                          </div>
                                          {false ? (
                                            <div
                                              data-plasmic-name={"spacer107"}
                                              data-plasmic-override={
                                                overrides.spacer107
                                              }
                                              className={classNames(
                                                projectcss.all,
                                                sty.spacer107
                                              )}
                                            />
                                          ) : null}
                                        </div>
                                      ) : null}
                                    </div>
                                  ) : null}
                                  {false ? (
                                    <div
                                      data-plasmic-name={
                                        "trailingArtworkContainer20"
                                      }
                                      data-plasmic-override={
                                        overrides.trailingArtworkContainer20
                                      }
                                      className={classNames(
                                        projectcss.all,
                                        sty.trailingArtworkContainer20
                                      )}
                                    >
                                      {false ? (
                                        <div
                                          data-plasmic-name={
                                            "trailingArtwork20"
                                          }
                                          data-plasmic-override={
                                            overrides.trailingArtwork20
                                          }
                                          className={classNames(
                                            projectcss.all,
                                            sty.trailingArtwork20
                                          )}
                                        >
                                          {false ? (
                                            <Outlined5Icon
                                              className={classNames(
                                                projectcss.all,
                                                sty.svg__rid2P
                                              )}
                                              role={"img"}
                                            />
                                          ) : null}
                                          <Filled4Icon
                                            className={classNames(
                                              projectcss.all,
                                              sty.svg__rYoy6
                                            )}
                                            role={"img"}
                                          />
                                        </div>
                                      ) : null}
                                    </div>
                                  ) : null}
                                </div>
                                {false ? (
                                  <Stack__
                                    as={"div"}
                                    data-plasmic-name={"inputElementHint10"}
                                    data-plasmic-override={
                                      overrides.inputElementHint10
                                    }
                                    hasGap={true}
                                    className={classNames(
                                      projectcss.all,
                                      sty.inputElementHint10
                                    )}
                                  >
                                    {false ? (
                                      <div
                                        data-plasmic-name={"heart43"}
                                        data-plasmic-override={
                                          overrides.heart43
                                        }
                                        className={classNames(
                                          projectcss.all,
                                          sty.heart43
                                        )}
                                      >
                                        {false ? (
                                          <Outlined4Icon
                                            className={classNames(
                                              projectcss.all,
                                              sty.svg__y3NzL
                                            )}
                                            role={"img"}
                                          />
                                        ) : null}
                                        <Filled3Icon
                                          className={classNames(
                                            projectcss.all,
                                            sty.svg__sz1NX
                                          )}
                                          role={"img"}
                                        />
                                      </div>
                                    ) : null}
                                    <div
                                      data-plasmic-name={"hint10"}
                                      data-plasmic-override={overrides.hint10}
                                      className={classNames(
                                        projectcss.all,
                                        sty.hint10
                                      )}
                                    >
                                      {false ? (
                                        <div
                                          data-plasmic-name={
                                            "signedByBaseTypographyParagraphSmall10"
                                          }
                                          data-plasmic-override={
                                            overrides.signedByBaseTypographyParagraphSmall10
                                          }
                                          className={classNames(
                                            projectcss.all,
                                            sty.signedByBaseTypographyParagraphSmall10
                                          )}
                                        />
                                      ) : null}
                                      <div
                                        data-plasmic-name={"text121"}
                                        data-plasmic-override={
                                          overrides.text121
                                        }
                                        className={classNames(
                                          projectcss.all,
                                          projectcss.__wab_text,
                                          sty.text121
                                        )}
                                      >
                                        {"Hint"}
                                      </div>
                                      {false ? (
                                        <div
                                          data-plasmic-name={"spacer108"}
                                          data-plasmic-override={
                                            overrides.spacer108
                                          }
                                          className={classNames(
                                            projectcss.all,
                                            sty.spacer108
                                          )}
                                        />
                                      ) : null}
                                    </div>
                                  </Stack__>
                                ) : null}
                              </Stack__>
                            </Stack__>
                          ) : null}
                          <Stack__
                            as={"div"}
                            data-plasmic-name={"menuItem22"}
                            data-plasmic-override={overrides.menuItem22}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.menuItem22
                            )}
                          >
                            {false ? (
                              <div
                                data-plasmic-name={
                                  "signedByBaseMenuItemOptionMediumStandardEnabled17"
                                }
                                data-plasmic-override={
                                  overrides.signedByBaseMenuItemOptionMediumStandardEnabled17
                                }
                                className={classNames(
                                  projectcss.all,
                                  sty.signedByBaseMenuItemOptionMediumStandardEnabled17
                                )}
                              />
                            ) : null}
                            {false ? (
                              <Stack__
                                as={"div"}
                                data-plasmic-name={
                                  "menuItemControlMediumCheckboxUnchecked17"
                                }
                                data-plasmic-override={
                                  overrides.menuItemControlMediumCheckboxUnchecked17
                                }
                                hasGap={true}
                                className={classNames(
                                  projectcss.all,
                                  sty.menuItemControlMediumCheckboxUnchecked17
                                )}
                              >
                                {false ? (
                                  <div
                                    data-plasmic-name={
                                      "signedByBaseMenuItemControlMediumCheckboxUnchecked17"
                                    }
                                    data-plasmic-override={
                                      overrides.signedByBaseMenuItemControlMediumCheckboxUnchecked17
                                    }
                                    className={classNames(
                                      projectcss.all,
                                      sty.signedByBaseMenuItemControlMediumCheckboxUnchecked17
                                    )}
                                  />
                                ) : null}
                                <div
                                  data-plasmic-name={"icon17"}
                                  data-plasmic-override={overrides.icon17}
                                  className={classNames(
                                    projectcss.all,
                                    sty.icon17
                                  )}
                                >
                                  {false ? (
                                    <Outlined8Icon
                                      className={classNames(
                                        projectcss.all,
                                        sty.svg___0TOAy
                                      )}
                                      role={"img"}
                                    />
                                  ) : null}
                                  <Outlined8Icon
                                    className={classNames(
                                      projectcss.all,
                                      sty.svg___868Fp
                                    )}
                                    role={"img"}
                                  />
                                </div>
                              </Stack__>
                            ) : null}
                            {false ? (
                              <Stack__
                                as={"div"}
                                data-plasmic-name={"leadingEnhancer17"}
                                data-plasmic-override={
                                  overrides.leadingEnhancer17
                                }
                                hasGap={true}
                                className={classNames(
                                  projectcss.all,
                                  sty.leadingEnhancer17
                                )}
                              >
                                <div
                                  data-plasmic-name={"heart44"}
                                  data-plasmic-override={overrides.heart44}
                                  className={classNames(
                                    projectcss.all,
                                    sty.heart44
                                  )}
                                >
                                  {false ? (
                                    <Outlined5Icon
                                      className={classNames(
                                        projectcss.all,
                                        sty.svg__elik6
                                      )}
                                      role={"img"}
                                    />
                                  ) : null}
                                  <Filled4Icon
                                    className={classNames(
                                      projectcss.all,
                                      sty.svg__br0TW
                                    )}
                                    role={"img"}
                                  />
                                </div>
                              </Stack__>
                            ) : null}
                            <Stack__
                              as={"div"}
                              data-plasmic-name={"textFrame17"}
                              data-plasmic-override={overrides.textFrame17}
                              hasGap={true}
                              className={classNames(
                                projectcss.all,
                                sty.textFrame17
                              )}
                            >
                              <div
                                data-plasmic-name={"leadingText17"}
                                data-plasmic-override={overrides.leadingText17}
                                className={classNames(
                                  projectcss.all,
                                  sty.leadingText17
                                )}
                              >
                                <div
                                  data-plasmic-name={"typography59"}
                                  data-plasmic-override={overrides.typography59}
                                  className={classNames(
                                    projectcss.all,
                                    sty.typography59
                                  )}
                                >
                                  {false ? (
                                    <div
                                      data-plasmic-name={
                                        "signedByBaseTypographyParagraphMedium49"
                                      }
                                      data-plasmic-override={
                                        overrides.signedByBaseTypographyParagraphMedium49
                                      }
                                      className={classNames(
                                        projectcss.all,
                                        sty.signedByBaseTypographyParagraphMedium49
                                      )}
                                    />
                                  ) : null}
                                  <div
                                    data-plasmic-name={"text122"}
                                    data-plasmic-override={overrides.text122}
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.__wab_text,
                                      sty.text122
                                    )}
                                  >
                                    {"Mod\u00e8le de concert 20h"}
                                  </div>
                                  {false ? (
                                    <div
                                      data-plasmic-name={"spacer109"}
                                      data-plasmic-override={
                                        overrides.spacer109
                                      }
                                      className={classNames(
                                        projectcss.all,
                                        sty.spacer109
                                      )}
                                    />
                                  ) : null}
                                </div>
                                {false ? (
                                  <div
                                    data-plasmic-name={"typography60"}
                                    data-plasmic-override={
                                      overrides.typography60
                                    }
                                    className={classNames(
                                      projectcss.all,
                                      sty.typography60
                                    )}
                                  >
                                    {false ? (
                                      <div
                                        data-plasmic-name={
                                          "signedByBaseTypographyParagraphMedium50"
                                        }
                                        data-plasmic-override={
                                          overrides.signedByBaseTypographyParagraphMedium50
                                        }
                                        className={classNames(
                                          projectcss.all,
                                          sty.signedByBaseTypographyParagraphMedium50
                                        )}
                                      />
                                    ) : null}
                                    <div
                                      data-plasmic-name={"text123"}
                                      data-plasmic-override={overrides.text123}
                                      className={classNames(
                                        projectcss.all,
                                        projectcss.__wab_text,
                                        sty.text123
                                      )}
                                    >
                                      {"Supporting text"}
                                    </div>
                                    {false ? (
                                      <div
                                        data-plasmic-name={"spacer110"}
                                        data-plasmic-override={
                                          overrides.spacer110
                                        }
                                        className={classNames(
                                          projectcss.all,
                                          sty.spacer110
                                        )}
                                      />
                                    ) : null}
                                  </div>
                                ) : null}
                              </div>
                              {false ? (
                                <div
                                  data-plasmic-name={"typography61"}
                                  data-plasmic-override={overrides.typography61}
                                  className={classNames(
                                    projectcss.all,
                                    sty.typography61
                                  )}
                                >
                                  {false ? (
                                    <div
                                      data-plasmic-name={
                                        "signedByBaseTypographyParagraphMedium51"
                                      }
                                      data-plasmic-override={
                                        overrides.signedByBaseTypographyParagraphMedium51
                                      }
                                      className={classNames(
                                        projectcss.all,
                                        sty.signedByBaseTypographyParagraphMedium51
                                      )}
                                    />
                                  ) : null}
                                  <div
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.__wab_text,
                                      sty.text__ml9Ru
                                    )}
                                  >
                                    {"Text"}
                                  </div>
                                  {false ? (
                                    <div
                                      data-plasmic-name={"spacer111"}
                                      data-plasmic-override={
                                        overrides.spacer111
                                      }
                                      className={classNames(
                                        projectcss.all,
                                        sty.spacer111
                                      )}
                                    />
                                  ) : null}
                                </div>
                              ) : null}
                            </Stack__>
                            {false ? (
                              <Stack__
                                as={"div"}
                                data-plasmic-name={"trailingEnhancer17"}
                                data-plasmic-override={
                                  overrides.trailingEnhancer17
                                }
                                hasGap={true}
                                className={classNames(
                                  projectcss.all,
                                  sty.trailingEnhancer17
                                )}
                              >
                                <div
                                  data-plasmic-name={"heart45"}
                                  data-plasmic-override={overrides.heart45}
                                  className={classNames(
                                    projectcss.all,
                                    sty.heart45
                                  )}
                                >
                                  {false ? (
                                    <Outlined5Icon
                                      className={classNames(
                                        projectcss.all,
                                        sty.svg__txEbz
                                      )}
                                      role={"img"}
                                    />
                                  ) : null}
                                  <Filled4Icon
                                    className={classNames(
                                      projectcss.all,
                                      sty.svg__bxyeT
                                    )}
                                    role={"img"}
                                  />
                                </div>
                              </Stack__>
                            ) : null}
                          </Stack__>
                          <Stack__
                            as={"div"}
                            data-plasmic-name={"menuItem23"}
                            data-plasmic-override={overrides.menuItem23}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.menuItem23
                            )}
                          >
                            {false ? (
                              <div
                                data-plasmic-name={
                                  "signedByBaseMenuItemOptionMediumStandardEnabled18"
                                }
                                data-plasmic-override={
                                  overrides.signedByBaseMenuItemOptionMediumStandardEnabled18
                                }
                                className={classNames(
                                  projectcss.all,
                                  sty.signedByBaseMenuItemOptionMediumStandardEnabled18
                                )}
                              />
                            ) : null}
                            {false ? (
                              <Stack__
                                as={"div"}
                                data-plasmic-name={
                                  "menuItemControlMediumCheckboxUnchecked18"
                                }
                                data-plasmic-override={
                                  overrides.menuItemControlMediumCheckboxUnchecked18
                                }
                                hasGap={true}
                                className={classNames(
                                  projectcss.all,
                                  sty.menuItemControlMediumCheckboxUnchecked18
                                )}
                              >
                                {false ? (
                                  <div
                                    data-plasmic-name={
                                      "signedByBaseMenuItemControlMediumCheckboxUnchecked18"
                                    }
                                    data-plasmic-override={
                                      overrides.signedByBaseMenuItemControlMediumCheckboxUnchecked18
                                    }
                                    className={classNames(
                                      projectcss.all,
                                      sty.signedByBaseMenuItemControlMediumCheckboxUnchecked18
                                    )}
                                  />
                                ) : null}
                                <div
                                  data-plasmic-name={"icon18"}
                                  data-plasmic-override={overrides.icon18}
                                  className={classNames(
                                    projectcss.all,
                                    sty.icon18
                                  )}
                                >
                                  {false ? (
                                    <Outlined8Icon
                                      className={classNames(
                                        projectcss.all,
                                        sty.svg__cidG6
                                      )}
                                      role={"img"}
                                    />
                                  ) : null}
                                  <Outlined8Icon
                                    className={classNames(
                                      projectcss.all,
                                      sty.svg__nqydz
                                    )}
                                    role={"img"}
                                  />
                                </div>
                              </Stack__>
                            ) : null}
                            {false ? (
                              <Stack__
                                as={"div"}
                                data-plasmic-name={"leadingEnhancer18"}
                                data-plasmic-override={
                                  overrides.leadingEnhancer18
                                }
                                hasGap={true}
                                className={classNames(
                                  projectcss.all,
                                  sty.leadingEnhancer18
                                )}
                              >
                                <div
                                  data-plasmic-name={"heart46"}
                                  data-plasmic-override={overrides.heart46}
                                  className={classNames(
                                    projectcss.all,
                                    sty.heart46
                                  )}
                                >
                                  {false ? (
                                    <Outlined5Icon
                                      className={classNames(
                                        projectcss.all,
                                        sty.svg__aezxP
                                      )}
                                      role={"img"}
                                    />
                                  ) : null}
                                  <Filled4Icon
                                    className={classNames(
                                      projectcss.all,
                                      sty.svg__aeN1B
                                    )}
                                    role={"img"}
                                  />
                                </div>
                              </Stack__>
                            ) : null}
                            <Stack__
                              as={"div"}
                              data-plasmic-name={"textFrame18"}
                              data-plasmic-override={overrides.textFrame18}
                              hasGap={true}
                              className={classNames(
                                projectcss.all,
                                sty.textFrame18
                              )}
                            >
                              <div
                                data-plasmic-name={"leadingText18"}
                                data-plasmic-override={overrides.leadingText18}
                                className={classNames(
                                  projectcss.all,
                                  sty.leadingText18
                                )}
                              >
                                <div
                                  data-plasmic-name={"typography62"}
                                  data-plasmic-override={overrides.typography62}
                                  className={classNames(
                                    projectcss.all,
                                    sty.typography62
                                  )}
                                >
                                  {false ? (
                                    <div
                                      data-plasmic-name={
                                        "signedByBaseTypographyParagraphMedium52"
                                      }
                                      data-plasmic-override={
                                        overrides.signedByBaseTypographyParagraphMedium52
                                      }
                                      className={classNames(
                                        projectcss.all,
                                        sty.signedByBaseTypographyParagraphMedium52
                                      )}
                                    />
                                  ) : null}
                                  <div
                                    data-plasmic-name={"text124"}
                                    data-plasmic-override={overrides.text124}
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.__wab_text,
                                      sty.text124
                                    )}
                                  >
                                    {"Mod\u00e8le de match 21h"}
                                  </div>
                                  {false ? (
                                    <div
                                      data-plasmic-name={"spacer112"}
                                      data-plasmic-override={
                                        overrides.spacer112
                                      }
                                      className={classNames(
                                        projectcss.all,
                                        sty.spacer112
                                      )}
                                    />
                                  ) : null}
                                </div>
                                {false ? (
                                  <div
                                    data-plasmic-name={"typography63"}
                                    data-plasmic-override={
                                      overrides.typography63
                                    }
                                    className={classNames(
                                      projectcss.all,
                                      sty.typography63
                                    )}
                                  >
                                    {false ? (
                                      <div
                                        data-plasmic-name={
                                          "signedByBaseTypographyParagraphMedium53"
                                        }
                                        data-plasmic-override={
                                          overrides.signedByBaseTypographyParagraphMedium53
                                        }
                                        className={classNames(
                                          projectcss.all,
                                          sty.signedByBaseTypographyParagraphMedium53
                                        )}
                                      />
                                    ) : null}
                                    <div
                                      data-plasmic-name={"text125"}
                                      data-plasmic-override={overrides.text125}
                                      className={classNames(
                                        projectcss.all,
                                        projectcss.__wab_text,
                                        sty.text125
                                      )}
                                    >
                                      {"Supporting text"}
                                    </div>
                                    {false ? (
                                      <div
                                        data-plasmic-name={"spacer113"}
                                        data-plasmic-override={
                                          overrides.spacer113
                                        }
                                        className={classNames(
                                          projectcss.all,
                                          sty.spacer113
                                        )}
                                      />
                                    ) : null}
                                  </div>
                                ) : null}
                              </div>
                              {false ? (
                                <div
                                  data-plasmic-name={"typography64"}
                                  data-plasmic-override={overrides.typography64}
                                  className={classNames(
                                    projectcss.all,
                                    sty.typography64
                                  )}
                                >
                                  {false ? (
                                    <div
                                      data-plasmic-name={
                                        "signedByBaseTypographyParagraphMedium54"
                                      }
                                      data-plasmic-override={
                                        overrides.signedByBaseTypographyParagraphMedium54
                                      }
                                      className={classNames(
                                        projectcss.all,
                                        sty.signedByBaseTypographyParagraphMedium54
                                      )}
                                    />
                                  ) : null}
                                  <div
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.__wab_text,
                                      sty.text___8ZZUv
                                    )}
                                  >
                                    {"Text"}
                                  </div>
                                  {false ? (
                                    <div
                                      data-plasmic-name={"spacer114"}
                                      data-plasmic-override={
                                        overrides.spacer114
                                      }
                                      className={classNames(
                                        projectcss.all,
                                        sty.spacer114
                                      )}
                                    />
                                  ) : null}
                                </div>
                              ) : null}
                            </Stack__>
                            {false ? (
                              <Stack__
                                as={"div"}
                                data-plasmic-name={"trailingEnhancer18"}
                                data-plasmic-override={
                                  overrides.trailingEnhancer18
                                }
                                hasGap={true}
                                className={classNames(
                                  projectcss.all,
                                  sty.trailingEnhancer18
                                )}
                              >
                                <div
                                  data-plasmic-name={"checkmarkSmall5"}
                                  data-plasmic-override={
                                    overrides.checkmarkSmall5
                                  }
                                  className={classNames(
                                    projectcss.all,
                                    sty.checkmarkSmall5
                                  )}
                                >
                                  {false ? (
                                    <Outlined9Icon
                                      className={classNames(
                                        projectcss.all,
                                        sty.svg__lnVmp
                                      )}
                                      role={"img"}
                                    />
                                  ) : null}
                                  <Outlined9Icon
                                    className={classNames(
                                      projectcss.all,
                                      sty.svg__b3IL
                                    )}
                                    role={"img"}
                                  />
                                </div>
                              </Stack__>
                            ) : null}
                          </Stack__>
                          <Stack__
                            as={"div"}
                            data-plasmic-name={"menuItem24"}
                            data-plasmic-override={overrides.menuItem24}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.menuItem24
                            )}
                          >
                            {false ? (
                              <div
                                data-plasmic-name={
                                  "signedByBaseMenuItemOptionMediumStandardEnabled19"
                                }
                                data-plasmic-override={
                                  overrides.signedByBaseMenuItemOptionMediumStandardEnabled19
                                }
                                className={classNames(
                                  projectcss.all,
                                  sty.signedByBaseMenuItemOptionMediumStandardEnabled19
                                )}
                              />
                            ) : null}
                            {false ? (
                              <Stack__
                                as={"div"}
                                data-plasmic-name={
                                  "menuItemControlMediumCheckboxUnchecked19"
                                }
                                data-plasmic-override={
                                  overrides.menuItemControlMediumCheckboxUnchecked19
                                }
                                hasGap={true}
                                className={classNames(
                                  projectcss.all,
                                  sty.menuItemControlMediumCheckboxUnchecked19
                                )}
                              >
                                {false ? (
                                  <div
                                    data-plasmic-name={
                                      "signedByBaseMenuItemControlMediumCheckboxUnchecked19"
                                    }
                                    data-plasmic-override={
                                      overrides.signedByBaseMenuItemControlMediumCheckboxUnchecked19
                                    }
                                    className={classNames(
                                      projectcss.all,
                                      sty.signedByBaseMenuItemControlMediumCheckboxUnchecked19
                                    )}
                                  />
                                ) : null}
                                <div
                                  data-plasmic-name={"icon19"}
                                  data-plasmic-override={overrides.icon19}
                                  className={classNames(
                                    projectcss.all,
                                    sty.icon19
                                  )}
                                >
                                  {false ? (
                                    <Outlined8Icon
                                      className={classNames(
                                        projectcss.all,
                                        sty.svg__sV7Ui
                                      )}
                                      role={"img"}
                                    />
                                  ) : null}
                                  <Outlined8Icon
                                    className={classNames(
                                      projectcss.all,
                                      sty.svg__l95B2
                                    )}
                                    role={"img"}
                                  />
                                </div>
                              </Stack__>
                            ) : null}
                            {false ? (
                              <Stack__
                                as={"div"}
                                data-plasmic-name={"leadingEnhancer19"}
                                data-plasmic-override={
                                  overrides.leadingEnhancer19
                                }
                                hasGap={true}
                                className={classNames(
                                  projectcss.all,
                                  sty.leadingEnhancer19
                                )}
                              >
                                <div
                                  data-plasmic-name={"heart47"}
                                  data-plasmic-override={overrides.heart47}
                                  className={classNames(
                                    projectcss.all,
                                    sty.heart47
                                  )}
                                >
                                  {false ? (
                                    <Outlined5Icon
                                      className={classNames(
                                        projectcss.all,
                                        sty.svg__zjng1
                                      )}
                                      role={"img"}
                                    />
                                  ) : null}
                                  <Filled4Icon
                                    className={classNames(
                                      projectcss.all,
                                      sty.svg___0Zz73
                                    )}
                                    role={"img"}
                                  />
                                </div>
                              </Stack__>
                            ) : null}
                            <IcRoundPlusIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__vwrwo
                              )}
                              role={"img"}
                            />

                            <Stack__
                              as={"div"}
                              data-plasmic-name={"textFrame19"}
                              data-plasmic-override={overrides.textFrame19}
                              hasGap={true}
                              className={classNames(
                                projectcss.all,
                                sty.textFrame19
                              )}
                            >
                              <div
                                data-plasmic-name={"leadingText19"}
                                data-plasmic-override={overrides.leadingText19}
                                className={classNames(
                                  projectcss.all,
                                  sty.leadingText19
                                )}
                              >
                                <div
                                  data-plasmic-name={"typography65"}
                                  data-plasmic-override={overrides.typography65}
                                  className={classNames(
                                    projectcss.all,
                                    sty.typography65
                                  )}
                                >
                                  {false ? (
                                    <div
                                      data-plasmic-name={
                                        "signedByBaseTypographyParagraphMedium55"
                                      }
                                      data-plasmic-override={
                                        overrides.signedByBaseTypographyParagraphMedium55
                                      }
                                      className={classNames(
                                        projectcss.all,
                                        sty.signedByBaseTypographyParagraphMedium55
                                      )}
                                    />
                                  ) : null}
                                  <div
                                    data-plasmic-name={"text126"}
                                    data-plasmic-override={overrides.text126}
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.__wab_text,
                                      sty.text126
                                    )}
                                  >
                                    {"Dispositif vierge"}
                                  </div>
                                  {false ? (
                                    <div
                                      data-plasmic-name={"spacer115"}
                                      data-plasmic-override={
                                        overrides.spacer115
                                      }
                                      className={classNames(
                                        projectcss.all,
                                        sty.spacer115
                                      )}
                                    />
                                  ) : null}
                                </div>
                                {false ? (
                                  <div
                                    data-plasmic-name={"typography66"}
                                    data-plasmic-override={
                                      overrides.typography66
                                    }
                                    className={classNames(
                                      projectcss.all,
                                      sty.typography66
                                    )}
                                  >
                                    {false ? (
                                      <div
                                        data-plasmic-name={
                                          "signedByBaseTypographyParagraphMedium56"
                                        }
                                        data-plasmic-override={
                                          overrides.signedByBaseTypographyParagraphMedium56
                                        }
                                        className={classNames(
                                          projectcss.all,
                                          sty.signedByBaseTypographyParagraphMedium56
                                        )}
                                      />
                                    ) : null}
                                    <div
                                      data-plasmic-name={"text127"}
                                      data-plasmic-override={overrides.text127}
                                      className={classNames(
                                        projectcss.all,
                                        projectcss.__wab_text,
                                        sty.text127
                                      )}
                                    >
                                      {"Supporting text"}
                                    </div>
                                    {false ? (
                                      <div
                                        data-plasmic-name={"spacer116"}
                                        data-plasmic-override={
                                          overrides.spacer116
                                        }
                                        className={classNames(
                                          projectcss.all,
                                          sty.spacer116
                                        )}
                                      />
                                    ) : null}
                                  </div>
                                ) : null}
                              </div>
                              {false ? (
                                <div
                                  data-plasmic-name={"typography67"}
                                  data-plasmic-override={overrides.typography67}
                                  className={classNames(
                                    projectcss.all,
                                    sty.typography67
                                  )}
                                >
                                  {false ? (
                                    <div
                                      data-plasmic-name={
                                        "signedByBaseTypographyParagraphMedium57"
                                      }
                                      data-plasmic-override={
                                        overrides.signedByBaseTypographyParagraphMedium57
                                      }
                                      className={classNames(
                                        projectcss.all,
                                        sty.signedByBaseTypographyParagraphMedium57
                                      )}
                                    />
                                  ) : null}
                                  <div
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.__wab_text,
                                      sty.text___26U43
                                    )}
                                  >
                                    {"Text"}
                                  </div>
                                  {false ? (
                                    <div
                                      data-plasmic-name={"spacer117"}
                                      data-plasmic-override={
                                        overrides.spacer117
                                      }
                                      className={classNames(
                                        projectcss.all,
                                        sty.spacer117
                                      )}
                                    />
                                  ) : null}
                                </div>
                              ) : null}
                            </Stack__>
                            {false ? (
                              <Stack__
                                as={"div"}
                                data-plasmic-name={"trailingEnhancer19"}
                                data-plasmic-override={
                                  overrides.trailingEnhancer19
                                }
                                hasGap={true}
                                className={classNames(
                                  projectcss.all,
                                  sty.trailingEnhancer19
                                )}
                              >
                                <div
                                  data-plasmic-name={"heart48"}
                                  data-plasmic-override={overrides.heart48}
                                  className={classNames(
                                    projectcss.all,
                                    sty.heart48
                                  )}
                                >
                                  {false ? (
                                    <Outlined5Icon
                                      className={classNames(
                                        projectcss.all,
                                        sty.svg__bTcOt
                                      )}
                                      role={"img"}
                                    />
                                  ) : null}
                                  <Filled4Icon
                                    className={classNames(
                                      projectcss.all,
                                      sty.svg__yQtBx
                                    )}
                                    role={"img"}
                                  />
                                </div>
                              </Stack__>
                            ) : null}
                          </Stack__>
                          {false ? (
                            <Stack__
                              as={"div"}
                              data-plasmic-name={"menuItem25"}
                              data-plasmic-override={overrides.menuItem25}
                              hasGap={true}
                              className={classNames(
                                projectcss.all,
                                sty.menuItem25
                              )}
                            >
                              {false ? (
                                <div
                                  data-plasmic-name={
                                    "signedByBaseMenuItemOptionMediumStandardEnabled20"
                                  }
                                  data-plasmic-override={
                                    overrides.signedByBaseMenuItemOptionMediumStandardEnabled20
                                  }
                                  className={classNames(
                                    projectcss.all,
                                    sty.signedByBaseMenuItemOptionMediumStandardEnabled20
                                  )}
                                />
                              ) : null}
                              {false ? (
                                <Stack__
                                  as={"div"}
                                  data-plasmic-name={
                                    "menuItemControlMediumCheckboxUnchecked20"
                                  }
                                  data-plasmic-override={
                                    overrides.menuItemControlMediumCheckboxUnchecked20
                                  }
                                  hasGap={true}
                                  className={classNames(
                                    projectcss.all,
                                    sty.menuItemControlMediumCheckboxUnchecked20
                                  )}
                                >
                                  {false ? (
                                    <div
                                      data-plasmic-name={
                                        "signedByBaseMenuItemControlMediumCheckboxUnchecked20"
                                      }
                                      data-plasmic-override={
                                        overrides.signedByBaseMenuItemControlMediumCheckboxUnchecked20
                                      }
                                      className={classNames(
                                        projectcss.all,
                                        sty.signedByBaseMenuItemControlMediumCheckboxUnchecked20
                                      )}
                                    />
                                  ) : null}
                                  <div
                                    data-plasmic-name={"icon20"}
                                    data-plasmic-override={overrides.icon20}
                                    className={classNames(
                                      projectcss.all,
                                      sty.icon20
                                    )}
                                  >
                                    {false ? (
                                      <Outlined8Icon
                                        className={classNames(
                                          projectcss.all,
                                          sty.svg___7FhFp
                                        )}
                                        role={"img"}
                                      />
                                    ) : null}
                                    <Outlined8Icon
                                      className={classNames(
                                        projectcss.all,
                                        sty.svg__f9Vhv
                                      )}
                                      role={"img"}
                                    />
                                  </div>
                                </Stack__>
                              ) : null}
                              {false ? (
                                <Stack__
                                  as={"div"}
                                  data-plasmic-name={"leadingEnhancer20"}
                                  data-plasmic-override={
                                    overrides.leadingEnhancer20
                                  }
                                  hasGap={true}
                                  className={classNames(
                                    projectcss.all,
                                    sty.leadingEnhancer20
                                  )}
                                >
                                  <div
                                    data-plasmic-name={"heart49"}
                                    data-plasmic-override={overrides.heart49}
                                    className={classNames(
                                      projectcss.all,
                                      sty.heart49
                                    )}
                                  >
                                    {false ? (
                                      <Outlined5Icon
                                        className={classNames(
                                          projectcss.all,
                                          sty.svg__jDqPq
                                        )}
                                        role={"img"}
                                      />
                                    ) : null}
                                    <Filled4Icon
                                      className={classNames(
                                        projectcss.all,
                                        sty.svg__r8Zmg
                                      )}
                                      role={"img"}
                                    />
                                  </div>
                                </Stack__>
                              ) : null}
                              <Stack__
                                as={"div"}
                                data-plasmic-name={"textFrame20"}
                                data-plasmic-override={overrides.textFrame20}
                                hasGap={true}
                                className={classNames(
                                  projectcss.all,
                                  sty.textFrame20
                                )}
                              >
                                <div
                                  data-plasmic-name={"leadingText20"}
                                  data-plasmic-override={
                                    overrides.leadingText20
                                  }
                                  className={classNames(
                                    projectcss.all,
                                    sty.leadingText20
                                  )}
                                >
                                  <div
                                    data-plasmic-name={"typography68"}
                                    data-plasmic-override={
                                      overrides.typography68
                                    }
                                    className={classNames(
                                      projectcss.all,
                                      sty.typography68
                                    )}
                                  >
                                    {false ? (
                                      <div
                                        data-plasmic-name={
                                          "signedByBaseTypographyParagraphMedium58"
                                        }
                                        data-plasmic-override={
                                          overrides.signedByBaseTypographyParagraphMedium58
                                        }
                                        className={classNames(
                                          projectcss.all,
                                          sty.signedByBaseTypographyParagraphMedium58
                                        )}
                                      />
                                    ) : null}
                                    <div
                                      data-plasmic-name={"text128"}
                                      data-plasmic-override={overrides.text128}
                                      className={classNames(
                                        projectcss.all,
                                        projectcss.__wab_text,
                                        sty.text128
                                      )}
                                    >
                                      {"Options"}
                                    </div>
                                    {false ? (
                                      <div
                                        data-plasmic-name={"spacer118"}
                                        data-plasmic-override={
                                          overrides.spacer118
                                        }
                                        className={classNames(
                                          projectcss.all,
                                          sty.spacer118
                                        )}
                                      />
                                    ) : null}
                                  </div>
                                  {false ? (
                                    <div
                                      data-plasmic-name={"typography69"}
                                      data-plasmic-override={
                                        overrides.typography69
                                      }
                                      className={classNames(
                                        projectcss.all,
                                        sty.typography69
                                      )}
                                    >
                                      {false ? (
                                        <div
                                          data-plasmic-name={
                                            "signedByBaseTypographyParagraphMedium59"
                                          }
                                          data-plasmic-override={
                                            overrides.signedByBaseTypographyParagraphMedium59
                                          }
                                          className={classNames(
                                            projectcss.all,
                                            sty.signedByBaseTypographyParagraphMedium59
                                          )}
                                        />
                                      ) : null}
                                      <div
                                        data-plasmic-name={"text129"}
                                        data-plasmic-override={
                                          overrides.text129
                                        }
                                        className={classNames(
                                          projectcss.all,
                                          projectcss.__wab_text,
                                          sty.text129
                                        )}
                                      >
                                        {"Supporting text"}
                                      </div>
                                      {false ? (
                                        <div
                                          data-plasmic-name={"spacer119"}
                                          data-plasmic-override={
                                            overrides.spacer119
                                          }
                                          className={classNames(
                                            projectcss.all,
                                            sty.spacer119
                                          )}
                                        />
                                      ) : null}
                                    </div>
                                  ) : null}
                                </div>
                                {false ? (
                                  <div
                                    data-plasmic-name={"typography70"}
                                    data-plasmic-override={
                                      overrides.typography70
                                    }
                                    className={classNames(
                                      projectcss.all,
                                      sty.typography70
                                    )}
                                  >
                                    {false ? (
                                      <div
                                        data-plasmic-name={
                                          "signedByBaseTypographyParagraphMedium60"
                                        }
                                        data-plasmic-override={
                                          overrides.signedByBaseTypographyParagraphMedium60
                                        }
                                        className={classNames(
                                          projectcss.all,
                                          sty.signedByBaseTypographyParagraphMedium60
                                        )}
                                      />
                                    ) : null}
                                    <div
                                      className={classNames(
                                        projectcss.all,
                                        projectcss.__wab_text,
                                        sty.text__scqfg
                                      )}
                                    >
                                      {"Text"}
                                    </div>
                                    {false ? (
                                      <div
                                        data-plasmic-name={"spacer120"}
                                        data-plasmic-override={
                                          overrides.spacer120
                                        }
                                        className={classNames(
                                          projectcss.all,
                                          sty.spacer120
                                        )}
                                      />
                                    ) : null}
                                  </div>
                                ) : null}
                              </Stack__>
                              {false ? (
                                <Stack__
                                  as={"div"}
                                  data-plasmic-name={"trailingEnhancer20"}
                                  data-plasmic-override={
                                    overrides.trailingEnhancer20
                                  }
                                  hasGap={true}
                                  className={classNames(
                                    projectcss.all,
                                    sty.trailingEnhancer20
                                  )}
                                >
                                  <div
                                    data-plasmic-name={"heart50"}
                                    data-plasmic-override={overrides.heart50}
                                    className={classNames(
                                      projectcss.all,
                                      sty.heart50
                                    )}
                                  >
                                    {false ? (
                                      <Outlined5Icon
                                        className={classNames(
                                          projectcss.all,
                                          sty.svg__yKrXt
                                        )}
                                        role={"img"}
                                      />
                                    ) : null}
                                    <Filled4Icon
                                      className={classNames(
                                        projectcss.all,
                                        sty.svg__gLguA
                                      )}
                                      role={"img"}
                                    />
                                  </div>
                                </Stack__>
                              ) : null}
                            </Stack__>
                          ) : null}
                          <div
                            data-plasmic-name={"scrollBar5"}
                            data-plasmic-override={overrides.scrollBar5}
                            className={classNames(
                              projectcss.all,
                              sty.scrollBar5
                            )}
                          />
                        </div>
                      </div>
                    </Stack__>
                  ) : null}
                  <DropDown
                    data-plasmic-name={"model5"}
                    data-plasmic-override={overrides.model5}
                    check={false}
                    className={classNames("__wab_instance", sty.model5)}
                    label={"Mod\u00e8le de Runsheet & Dispositif*"}
                    options={["Default", "Special"]}
                    showLabel={true}
                    state={"default"}
                    type={"default"}
                  />

                  <Stack__
                    as={"div"}
                    data-plasmic-name={"buttons5"}
                    data-plasmic-override={overrides.buttons5}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.buttons5)}
                  >
                    <Button
                      data-plasmic-name={"button17"}
                      data-plasmic-override={overrides.button17}
                      className={classNames("__wab_instance", sty.button17)}
                      label={
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__nHfgY
                          )}
                        >
                          {"Cr\u00e9er"}
                        </div>
                      }
                    />

                    {false ? (
                      <Stack__
                        as={"div"}
                        data-plasmic-name={"frame1073713928"}
                        data-plasmic-override={overrides.frame1073713928}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.frame1073713928
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__cmDLj
                          )}
                        >
                          <Line9Icon
                            className={classNames(
                              projectcss.all,
                              sty.svg__ulSUy
                            )}
                            role={"img"}
                          />
                        </div>
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text___38OpM
                          )}
                        >
                          {"OU"}
                        </div>
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__oMqil
                          )}
                        >
                          <Line9Icon
                            className={classNames(
                              projectcss.all,
                              sty.svg__hevl8
                            )}
                            role={"img"}
                          />
                        </div>
                      </Stack__>
                    ) : null}
                    {false ? (
                      <Stack__
                        as={"div"}
                        data-plasmic-name={"frame1073713934"}
                        data-plasmic-override={overrides.frame1073713934}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.frame1073713934
                        )}
                      >
                        <Button
                          data-plasmic-name={"button18"}
                          data-plasmic-override={overrides.button18}
                          className={classNames("__wab_instance", sty.button18)}
                        />

                        <Stack__
                          as={"div"}
                          data-plasmic-name={"button19"}
                          data-plasmic-override={overrides.button19}
                          hasGap={true}
                          className={classNames(projectcss.all, sty.button19)}
                        >
                          <IcTwotoneAppleIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg__q740U
                            )}
                            role={"img"}
                          />

                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__e8XgE
                            )}
                          >
                            {"Apple"}
                          </div>
                        </Stack__>
                        <Stack__
                          as={"div"}
                          data-plasmic-name={"button20"}
                          data-plasmic-override={overrides.button20}
                          hasGap={true}
                          className={classNames(projectcss.all, sty.button20)}
                        >
                          <MdiFacebookIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg___6Aq2Q
                            )}
                            role={"img"}
                          />

                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__qq2Ir
                            )}
                          >
                            {"Facebook"}
                          </div>
                        </Stack__>
                      </Stack__>
                    ) : null}
                  </Stack__>
                </Stack__>
              </React.Fragment>
            }
            footer={
              <div className={classNames(projectcss.all, sty.freeBox__rjlCs)} />
            }
            heading={
              <div
                data-plasmic-name={"frame1437254028"}
                data-plasmic-override={overrides.frame1437254028}
                className={classNames(projectcss.all, sty.frame1437254028)}
              >
                <div
                  data-plasmic-name={"name10"}
                  data-plasmic-override={overrides.name10}
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.name10
                  )}
                >
                  {"Dupliquer cet \u00e9l\u00e9ment ?"}
                </div>
                <Stack__
                  as={"div"}
                  data-plasmic-name={"frame1437254029"}
                  data-plasmic-override={overrides.frame1437254029}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.frame1437254029)}
                >
                  <LinkSimpleIcon
                    className={classNames(projectcss.all, sty.svg___45Y15)}
                    role={"img"}
                  />

                  <XIcon
                    className={classNames(projectcss.all, sty.svg___94Wuj)}
                    onClick={async event => {
                      const $steps = {};

                      $steps["updateDuplicateRunsheet"] = true
                        ? (() => {
                            const actionArgs = {
                              variable: {
                                objRoot: $state,
                                variablePath: ["duplicateRunsheet"]
                              },
                              operation: 0,
                              value: false
                            };
                            return (({
                              variable,
                              value,
                              startIndex,
                              deleteCount
                            }) => {
                              if (!variable) {
                                return;
                              }
                              const { objRoot, variablePath } = variable;

                              $stateSet(objRoot, variablePath, value);
                              return value;
                            })?.apply(null, [actionArgs]);
                          })()
                        : undefined;
                      if (
                        $steps["updateDuplicateRunsheet"] != null &&
                        typeof $steps["updateDuplicateRunsheet"] === "object" &&
                        typeof $steps["updateDuplicateRunsheet"].then ===
                          "function"
                      ) {
                        $steps["updateDuplicateRunsheet"] = await $steps[
                          "updateDuplicateRunsheet"
                        ];
                      }
                    }}
                    role={"img"}
                  />
                </Stack__>
              </div>
            }
            isOpen={generateStateValueProp($state, [
              "duplicateTaskRunsheet2",
              "isOpen"
            ])}
            noTrigger={true}
            onOpenChange={async (...eventArgs: any) => {
              generateStateOnChangeProp($state, [
                "duplicateTaskRunsheet2",
                "isOpen"
              ]).apply(null, eventArgs);

              if (
                eventArgs.length > 1 &&
                eventArgs[1] &&
                eventArgs[1]._plasmic_state_init_
              ) {
                return;
              }

              (async val => {
                const $steps = {};

                $steps["updateDuplicateRunsheet"] = true
                  ? (() => {
                      const actionArgs = {
                        variable: {
                          objRoot: $state,
                          variablePath: ["duplicateRunsheet"]
                        },
                        operation: 4
                      };
                      return (({
                        variable,
                        value,
                        startIndex,
                        deleteCount
                      }) => {
                        if (!variable) {
                          return;
                        }
                        const { objRoot, variablePath } = variable;

                        const oldValue = $stateGet(objRoot, variablePath);
                        $stateSet(objRoot, variablePath, !oldValue);
                        return !oldValue;
                      })?.apply(null, [actionArgs]);
                    })()
                  : undefined;
                if (
                  $steps["updateDuplicateRunsheet"] != null &&
                  typeof $steps["updateDuplicateRunsheet"] === "object" &&
                  typeof $steps["updateDuplicateRunsheet"].then === "function"
                ) {
                  $steps["updateDuplicateRunsheet"] = await $steps[
                    "updateDuplicateRunsheet"
                  ];
                }
              }).apply(null, eventArgs);
            }}
            showFooter={false}
            trigger={null}
          />

          <Modal
            data-plasmic-name={"duplicateDispo3"}
            data-plasmic-override={overrides.duplicateDispo3}
            className={classNames("__wab_instance", sty.duplicateDispo3)}
            closeOnBackdropClick={true}
            content={
              <React.Fragment>
                {(() => {
                  const child$Props = {
                    className: classNames(
                      "__wab_instance",
                      sty.duplicateDispo2
                    ),
                    extendedOnValuesChange: async (...eventArgs: any) => {
                      generateStateOnChangePropForCodeComponents(
                        $state,
                        "value",
                        ["duplicateDispo2", "value"],
                        FormWrapper_Helpers
                      ).apply(null, eventArgs);
                    },
                    formItems: [
                      { label: "Name", name: "name", inputType: "Text" },
                      {
                        label: "Message",
                        name: "message",
                        inputType: "Text Area"
                      }
                    ],
                    initialValues: (() => {
                      try {
                        return $queries.mdDispositif.data.find(
                          dispo => Number(dispo.id) == $state.dispoId
                        );
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return undefined;
                        }
                        throw e;
                      }
                    })(),
                    labelCol: { span: 8, horizontalOnly: true },
                    layout: "vertical",
                    mode: "advanced",
                    onFinish: async values => {
                      const $steps = {};

                      $steps["postgresDeleteMany"] = true
                        ? (() => {
                            const actionArgs = {
                              dataOp: {
                                sourceId: "v6umJuHyep6kPNyCAJjouT",
                                opId: "6a09a4d9-be7f-4316-b245-4acb783eeaab",
                                userArgs: {
                                  variables: [
                                    (() => {
                                      const { id, ...newDuplicateRsValue } =
                                        $state.duplicateDispo2.value;
                                      newDuplicateRsValue["last_updated_by"] =
                                        $ctx.SupabaseUser.user == undefined
                                          ? null
                                          : $ctx.SupabaseUser.user.id;
                                      newDuplicateRsValue["created_at"] =
                                        newDuplicateRsValue["updated_at"] =
                                          new Date().toISOString();
                                      return newDuplicateRsValue;
                                    })()
                                  ]
                                },
                                cacheKey: null,
                                invalidatedKeys: [
                                  "38496a2c-2970-40cf-bfd9-47a20de7a9d0"
                                ],
                                roleId: null
                              }
                            };
                            return (async ({ dataOp, continueOnError }) => {
                              try {
                                const response = await executePlasmicDataOp(
                                  dataOp,
                                  {
                                    userAuthToken:
                                      dataSourcesCtx?.userAuthToken,
                                    user: dataSourcesCtx?.user
                                  }
                                );
                                await plasmicInvalidate(dataOp.invalidatedKeys);
                                return response;
                              } catch (e) {
                                if (!continueOnError) {
                                  throw e;
                                }
                                return e;
                              }
                            })?.apply(null, [actionArgs]);
                          })()
                        : undefined;
                      if (
                        $steps["postgresDeleteMany"] != null &&
                        typeof $steps["postgresDeleteMany"] === "object" &&
                        typeof $steps["postgresDeleteMany"].then === "function"
                      ) {
                        $steps["postgresDeleteMany"] = await $steps[
                          "postgresDeleteMany"
                        ];
                      }

                      $steps["updateDuplicateDispo"] = true
                        ? (() => {
                            const actionArgs = {
                              variable: {
                                objRoot: $state,
                                variablePath: ["duplicateDispo"]
                              },
                              operation: 0,
                              value: false
                            };
                            return (({
                              variable,
                              value,
                              startIndex,
                              deleteCount
                            }) => {
                              if (!variable) {
                                return;
                              }
                              const { objRoot, variablePath } = variable;

                              $stateSet(objRoot, variablePath, value);
                              return value;
                            })?.apply(null, [actionArgs]);
                          })()
                        : undefined;
                      if (
                        $steps["updateDuplicateDispo"] != null &&
                        typeof $steps["updateDuplicateDispo"] === "object" &&
                        typeof $steps["updateDuplicateDispo"].then ===
                          "function"
                      ) {
                        $steps["updateDuplicateDispo"] = await $steps[
                          "updateDuplicateDispo"
                        ];
                      }

                      $steps["invokeGlobalAction"] = true
                        ? (() => {
                            const actionArgs = {
                              args: [
                                "success",
                                "Dispositif dupliqu\u00e9",
                                undefined,
                                undefined,
                                "bottom"
                              ]
                            };
                            return $globalActions[
                              "plasmic-antd5-config-provider.showNotification"
                            ]?.apply(null, [...actionArgs.args]);
                          })()
                        : undefined;
                      if (
                        $steps["invokeGlobalAction"] != null &&
                        typeof $steps["invokeGlobalAction"] === "object" &&
                        typeof $steps["invokeGlobalAction"].then === "function"
                      ) {
                        $steps["invokeGlobalAction"] = await $steps[
                          "invokeGlobalAction"
                        ];
                      }
                    },
                    onIsSubmittingChange: async (...eventArgs: any) => {
                      generateStateOnChangePropForCodeComponents(
                        $state,
                        "isSubmitting",
                        ["duplicateDispo2", "isSubmitting"],
                        FormWrapper_Helpers
                      ).apply(null, eventArgs);
                    },
                    ref: ref => {
                      $refs["duplicateDispo2"] = ref;
                    },
                    submitSlot: null,
                    wrapperCol: { span: 16, horizontalOnly: true }
                  };
                  initializeCodeComponentStates(
                    $state,
                    [
                      {
                        name: "value",
                        plasmicStateName: "duplicateDispo2.value"
                      },
                      {
                        name: "isSubmitting",
                        plasmicStateName: "duplicateDispo2.isSubmitting"
                      }
                    ],
                    [],
                    FormWrapper_Helpers ?? {},
                    child$Props
                  );

                  return (
                    <FormWrapper
                      data-plasmic-name={"duplicateDispo2"}
                      data-plasmic-override={overrides.duplicateDispo2}
                      {...child$Props}
                    >
                      <Button
                        className={classNames(
                          "__wab_instance",
                          sty.button__hYpt5
                        )}
                        disabled={(() => {
                          try {
                            return !$state.dispoId || $state.dispoId === 0;
                          } catch (e) {
                            if (
                              e instanceof TypeError ||
                              e?.plasmicType === "PlasmicUndefinedDataError"
                            ) {
                              return undefined;
                            }
                            throw e;
                          }
                        })()}
                        label={"Dupliquer"}
                        submitsForm={true}
                      />
                    </FormWrapper>
                  );
                })()}
                <Stack__
                  as={"div"}
                  data-plasmic-name={"content6"}
                  data-plasmic-override={overrides.content6}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.content6)}
                >
                  <TextInput
                    data-plasmic-name={"titre6"}
                    data-plasmic-override={overrides.titre6}
                    className={classNames("__wab_instance", sty.titre6)}
                    isMulti={false}
                    label={"Titre*"}
                    placeholder={"Titre*"}
                    showIcon={false}
                    showLabel={true}
                    state={"default"}
                    text={``}
                    type={"text"}
                  />

                  <SitexTextInput
                    data-plasmic-name={"texinput26"}
                    data-plasmic-override={overrides.texinput26}
                    className={classNames("__wab_instance", sty.texinput26)}
                    initialValue={generateStateValueProp($state, [
                      "texinput26",
                      "value"
                    ])}
                    onTextChange={async (...eventArgs: any) => {
                      generateStateOnChangeProp($state, [
                        "texinput26",
                        "value"
                      ]).apply(null, eventArgs);
                    }}
                    onValidationChange={async (...eventArgs: any) => {
                      generateStateOnChangeProp($state, [
                        "texinput26",
                        "isInputValid"
                      ]).apply(null, eventArgs);
                    }}
                    placeholder={"Titre*"}
                    prefixedText={"Titre*"}
                    required={true}
                    type={"text"}
                  />

                  <Stack__
                    as={"div"}
                    data-plasmic-name={"date6"}
                    data-plasmic-override={overrides.date6}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.date6)}
                  >
                    <div
                      data-plasmic-name={"label11"}
                      data-plasmic-override={overrides.label11}
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.label11
                      )}
                    >
                      {"Date et heure de d\u00e9but"}
                    </div>
                    {(() => {
                      const child$Props = {
                        allowClear: true,
                        className: classNames(
                          "__wab_instance",
                          sty.timePicker12
                        ),
                        onChange: async (...eventArgs: any) => {
                          generateStateOnChangePropForCodeComponents(
                            $state,
                            "value",
                            ["timePicker12", "value"],
                            AntdDatePicker_Helpers
                          ).apply(null, eventArgs);
                        },
                        popupScopeClassName:
                          sty["timePicker12__datePickerPopup"],
                        showTime: true,
                        value: generateStateValueProp($state, [
                          "timePicker12",
                          "value"
                        ])
                      };
                      initializeCodeComponentStates(
                        $state,
                        [
                          {
                            name: "value",
                            plasmicStateName: "timePicker12.value"
                          }
                        ],
                        [],
                        AntdDatePicker_Helpers ?? {},
                        child$Props
                      );

                      return (
                        <AntdDatePicker
                          data-plasmic-name={"timePicker12"}
                          data-plasmic-override={overrides.timePicker12}
                          {...child$Props}
                        />
                      );
                    })()}
                  </Stack__>
                  <DropDown
                    data-plasmic-name={"type6"}
                    data-plasmic-override={overrides.type6}
                    check={false}
                    className={classNames("__wab_instance", sty.type6)}
                    label={"Type"}
                    options={["Default", "Special"]}
                    showLabel={true}
                    state={"default"}
                    type={"default"}
                  />

                  <TextInput
                    data-plasmic-name={"budget6"}
                    data-plasmic-override={overrides.budget6}
                    className={classNames("__wab_instance", sty.budget6)}
                    isMulti={false}
                    label={"Budget"}
                    placeholder={"\u20ac"}
                    showIcon={false}
                    showLabel={true}
                    state={"default"}
                    text={""}
                    type={"text"}
                  />

                  <TextInput
                    data-plasmic-name={"comments6"}
                    data-plasmic-override={overrides.comments6}
                    className={classNames("__wab_instance", sty.comments6)}
                    isMulti={false}
                    label={"Commentaires"}
                    placeholder={"Commentaires"}
                    showIcon={false}
                    showLabel={true}
                    state={"Placeholder"}
                    text={""}
                    type={"TextArea"}
                  />

                  {false ? (
                    <Stack__
                      as={"div"}
                      data-plasmic-name={"input17"}
                      data-plasmic-override={overrides.input17}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.input17)}
                    >
                      <div
                        data-plasmic-name={"name13"}
                        data-plasmic-override={overrides.name13}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.name13
                        )}
                      >
                        {"Dispositif"}
                      </div>
                      <Stack__
                        as={"div"}
                        data-plasmic-name={"datePickerWeb6"}
                        data-plasmic-override={overrides.datePickerWeb6}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.datePickerWeb6
                        )}
                      >
                        <Stack__
                          as={"div"}
                          data-plasmic-name={"inputSelect6"}
                          data-plasmic-override={overrides.inputSelect6}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.inputSelect6
                          )}
                        >
                          {false ? (
                            <div
                              data-plasmic-name={"signedByBaseFieldGroupSmall6"}
                              data-plasmic-override={
                                overrides.signedByBaseFieldGroupSmall6
                              }
                              className={classNames(
                                projectcss.all,
                                sty.signedByBaseFieldGroupSmall6
                              )}
                            />
                          ) : null}
                          <Stack__
                            as={"div"}
                            data-plasmic-name={"endDateCalendar6"}
                            data-plasmic-override={overrides.endDateCalendar6}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.endDateCalendar6
                            )}
                          >
                            {false ? (
                              <div
                                data-plasmic-name={"inputElementTextField11"}
                                data-plasmic-override={
                                  overrides.inputElementTextField11
                                }
                                className={classNames(
                                  projectcss.all,
                                  sty.inputElementTextField11
                                )}
                              >
                                {false ? (
                                  <div
                                    data-plasmic-name={
                                      "signedByBaseInputElementTextFieldSmallEnabled6"
                                    }
                                    data-plasmic-override={
                                      overrides.signedByBaseInputElementTextFieldSmallEnabled6
                                    }
                                    className={classNames(
                                      projectcss.all,
                                      sty.signedByBaseInputElementTextFieldSmallEnabled6
                                    )}
                                  />
                                ) : null}
                                {false ? (
                                  <div
                                    data-plasmic-name={
                                      "leadingArtworkContainer21"
                                    }
                                    data-plasmic-override={
                                      overrides.leadingArtworkContainer21
                                    }
                                    className={classNames(
                                      projectcss.all,
                                      sty.leadingArtworkContainer21
                                    )}
                                  >
                                    <div
                                      data-plasmic-name={"leadingArtwork11"}
                                      data-plasmic-override={
                                        overrides.leadingArtwork11
                                      }
                                      className={classNames(
                                        projectcss.all,
                                        sty.leadingArtwork11
                                      )}
                                    >
                                      {false ? (
                                        <OutlinedIcon
                                          className={classNames(
                                            projectcss.all,
                                            sty.svg__abVg
                                          )}
                                          role={"img"}
                                        />
                                      ) : null}
                                      <FilledIcon
                                        className={classNames(
                                          projectcss.all,
                                          sty.svg__ubzZ5
                                        )}
                                        role={"img"}
                                      />
                                    </div>
                                  </div>
                                ) : null}
                                {false ? (
                                  <div
                                    data-plasmic-name={
                                      "leadingLabelContainer21"
                                    }
                                    data-plasmic-override={
                                      overrides.leadingLabelContainer21
                                    }
                                    className={classNames(
                                      projectcss.all,
                                      sty.leadingLabelContainer21
                                    )}
                                  >
                                    <div
                                      data-plasmic-name={"leadingLabel21"}
                                      data-plasmic-override={
                                        overrides.leadingLabel21
                                      }
                                      className={classNames(
                                        projectcss.all,
                                        sty.leadingLabel21
                                      )}
                                    >
                                      {false ? (
                                        <div
                                          data-plasmic-name={
                                            "signedByBaseTypographyLabelSmall11"
                                          }
                                          data-plasmic-override={
                                            overrides.signedByBaseTypographyLabelSmall11
                                          }
                                          className={classNames(
                                            projectcss.all,
                                            sty.signedByBaseTypographyLabelSmall11
                                          )}
                                        />
                                      ) : null}
                                      <div
                                        data-plasmic-name={"text130"}
                                        data-plasmic-override={
                                          overrides.text130
                                        }
                                        className={classNames(
                                          projectcss.all,
                                          projectcss.__wab_text,
                                          sty.text130
                                        )}
                                      >
                                        {"$"}
                                      </div>
                                      {false ? (
                                        <div
                                          data-plasmic-name={"spacer121"}
                                          data-plasmic-override={
                                            overrides.spacer121
                                          }
                                          className={classNames(
                                            projectcss.all,
                                            sty.spacer121
                                          )}
                                        />
                                      ) : null}
                                    </div>
                                  </div>
                                ) : null}
                                <div
                                  data-plasmic-name={
                                    "inputElementContentText21"
                                  }
                                  data-plasmic-override={
                                    overrides.inputElementContentText21
                                  }
                                  className={classNames(
                                    projectcss.all,
                                    sty.inputElementContentText21
                                  )}
                                >
                                  {false ? (
                                    <div
                                      data-plasmic-name={
                                        "signedByBaseInputElementContentTextSmallOff6"
                                      }
                                      data-plasmic-override={
                                        overrides.signedByBaseInputElementContentTextSmallOff6
                                      }
                                      className={classNames(
                                        projectcss.all,
                                        sty.signedByBaseInputElementContentTextSmallOff6
                                      )}
                                    />
                                  ) : null}
                                  <div
                                    data-plasmic-name={"text131"}
                                    data-plasmic-override={overrides.text131}
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.__wab_text,
                                      sty.text131
                                    )}
                                  >
                                    {"MM/DD/YYYY"}
                                  </div>
                                </div>
                                {false ? (
                                  <div
                                    data-plasmic-name={
                                      "trailingLabelEnhancer21"
                                    }
                                    data-plasmic-override={
                                      overrides.trailingLabelEnhancer21
                                    }
                                    className={classNames(
                                      projectcss.all,
                                      sty.trailingLabelEnhancer21
                                    )}
                                  >
                                    {false ? (
                                      <div
                                        data-plasmic-name={"trailingLabel21"}
                                        data-plasmic-override={
                                          overrides.trailingLabel21
                                        }
                                        className={classNames(
                                          projectcss.all,
                                          sty.trailingLabel21
                                        )}
                                      >
                                        {false ? (
                                          <div
                                            data-plasmic-name={
                                              "signedByBaseTypographyLabelSmall12"
                                            }
                                            data-plasmic-override={
                                              overrides.signedByBaseTypographyLabelSmall12
                                            }
                                            className={classNames(
                                              projectcss.all,
                                              sty.signedByBaseTypographyLabelSmall12
                                            )}
                                          />
                                        ) : null}
                                        <div
                                          data-plasmic-name={"text132"}
                                          data-plasmic-override={
                                            overrides.text132
                                          }
                                          className={classNames(
                                            projectcss.all,
                                            projectcss.__wab_text,
                                            sty.text132
                                          )}
                                        >
                                          {"USD"}
                                        </div>
                                        {false ? (
                                          <div
                                            data-plasmic-name={"spacer122"}
                                            data-plasmic-override={
                                              overrides.spacer122
                                            }
                                            className={classNames(
                                              projectcss.all,
                                              sty.spacer122
                                            )}
                                          />
                                        ) : null}
                                      </div>
                                    ) : null}
                                  </div>
                                ) : null}
                                {false ? (
                                  <div
                                    data-plasmic-name={
                                      "trailingArtworkContainer21"
                                    }
                                    data-plasmic-override={
                                      overrides.trailingArtworkContainer21
                                    }
                                    className={classNames(
                                      projectcss.all,
                                      sty.trailingArtworkContainer21
                                    )}
                                  >
                                    <div
                                      data-plasmic-name={"trailingArtwork21"}
                                      data-plasmic-override={
                                        overrides.trailingArtwork21
                                      }
                                      className={classNames(
                                        projectcss.all,
                                        sty.trailingArtwork21
                                      )}
                                    >
                                      {false ? (
                                        <OutlinedIcon
                                          className={classNames(
                                            projectcss.all,
                                            sty.svg___7OUwO
                                          )}
                                          role={"img"}
                                        />
                                      ) : null}
                                      <FilledIcon
                                        className={classNames(
                                          projectcss.all,
                                          sty.svg___4BEw
                                        )}
                                        role={"img"}
                                      />
                                    </div>
                                  </div>
                                ) : null}
                              </div>
                            ) : null}
                            <div
                              data-plasmic-name={"calendar6"}
                              data-plasmic-override={overrides.calendar6}
                              className={classNames(
                                projectcss.all,
                                sty.calendar6
                              )}
                            >
                              {false ? (
                                <div
                                  data-plasmic-name={
                                    "signedByBaseInputElementSelectXSmallWebSingleDefaultEnabled6"
                                  }
                                  data-plasmic-override={
                                    overrides.signedByBaseInputElementSelectXSmallWebSingleDefaultEnabled6
                                  }
                                  className={classNames(
                                    projectcss.all,
                                    sty.signedByBaseInputElementSelectXSmallWebSingleDefaultEnabled6
                                  )}
                                />
                              ) : null}
                              <Stack__
                                as={"div"}
                                data-plasmic-name={"leadingArtworkContainer22"}
                                data-plasmic-override={
                                  overrides.leadingArtworkContainer22
                                }
                                hasGap={true}
                                className={classNames(
                                  projectcss.all,
                                  sty.leadingArtworkContainer22
                                )}
                              >
                                <div
                                  data-plasmic-name={"text133"}
                                  data-plasmic-override={overrides.text133}
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.__wab_text,
                                    sty.text133
                                  )}
                                >
                                  {"S\u00e9lectionner..."}
                                </div>
                              </Stack__>
                              {false ? (
                                <div
                                  data-plasmic-name={"leadingLabelContainer22"}
                                  data-plasmic-override={
                                    overrides.leadingLabelContainer22
                                  }
                                  className={classNames(
                                    projectcss.all,
                                    sty.leadingLabelContainer22
                                  )}
                                >
                                  <div
                                    data-plasmic-name={"leadingLabel22"}
                                    data-plasmic-override={
                                      overrides.leadingLabel22
                                    }
                                    className={classNames(
                                      projectcss.all,
                                      sty.leadingLabel22
                                    )}
                                  >
                                    {false ? (
                                      <div
                                        data-plasmic-name={
                                          "signedByBaseTypographyLabelXSmall11"
                                        }
                                        data-plasmic-override={
                                          overrides.signedByBaseTypographyLabelXSmall11
                                        }
                                        className={classNames(
                                          projectcss.all,
                                          sty.signedByBaseTypographyLabelXSmall11
                                        )}
                                      />
                                    ) : null}
                                    <div
                                      data-plasmic-name={"text134"}
                                      data-plasmic-override={overrides.text134}
                                      className={classNames(
                                        projectcss.all,
                                        projectcss.__wab_text,
                                        sty.text134
                                      )}
                                    >
                                      {"$"}
                                    </div>
                                    {false ? (
                                      <div
                                        data-plasmic-name={"spacer123"}
                                        data-plasmic-override={
                                          overrides.spacer123
                                        }
                                        className={classNames(
                                          projectcss.all,
                                          sty.spacer123
                                        )}
                                      />
                                    ) : null}
                                  </div>
                                </div>
                              ) : null}
                              {false ? (
                                <div
                                  data-plasmic-name={
                                    "inputElementContentText22"
                                  }
                                  data-plasmic-override={
                                    overrides.inputElementContentText22
                                  }
                                  className={classNames(
                                    projectcss.all,
                                    sty.inputElementContentText22
                                  )}
                                >
                                  {false ? (
                                    <div
                                      data-plasmic-name={
                                        "signedByBaseInputElementContentTextXSmallWebOff6"
                                      }
                                      data-plasmic-override={
                                        overrides.signedByBaseInputElementContentTextXSmallWebOff6
                                      }
                                      className={classNames(
                                        projectcss.all,
                                        sty.signedByBaseInputElementContentTextXSmallWebOff6
                                      )}
                                    />
                                  ) : null}
                                  <div
                                    data-plasmic-name={"text135"}
                                    data-plasmic-override={overrides.text135}
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.__wab_text,
                                      sty.text135
                                    )}
                                  >
                                    {"Jr"}
                                  </div>
                                </div>
                              ) : null}
                              {false ? (
                                <div
                                  data-plasmic-name={"trailingLabelEnhancer22"}
                                  data-plasmic-override={
                                    overrides.trailingLabelEnhancer22
                                  }
                                  className={classNames(
                                    projectcss.all,
                                    sty.trailingLabelEnhancer22
                                  )}
                                >
                                  {false ? (
                                    <div
                                      data-plasmic-name={"trailingLabel22"}
                                      data-plasmic-override={
                                        overrides.trailingLabel22
                                      }
                                      className={classNames(
                                        projectcss.all,
                                        sty.trailingLabel22
                                      )}
                                    >
                                      {false ? (
                                        <div
                                          data-plasmic-name={
                                            "signedByBaseTypographyLabelXSmall12"
                                          }
                                          data-plasmic-override={
                                            overrides.signedByBaseTypographyLabelXSmall12
                                          }
                                          className={classNames(
                                            projectcss.all,
                                            sty.signedByBaseTypographyLabelXSmall12
                                          )}
                                        />
                                      ) : null}
                                      <div
                                        data-plasmic-name={"text136"}
                                        data-plasmic-override={
                                          overrides.text136
                                        }
                                        className={classNames(
                                          projectcss.all,
                                          projectcss.__wab_text,
                                          sty.text136
                                        )}
                                      >
                                        {"USD"}
                                      </div>
                                      {false ? (
                                        <div
                                          data-plasmic-name={"spacer124"}
                                          data-plasmic-override={
                                            overrides.spacer124
                                          }
                                          className={classNames(
                                            projectcss.all,
                                            sty.spacer124
                                          )}
                                        />
                                      ) : null}
                                    </div>
                                  ) : null}
                                </div>
                              ) : null}
                              {false ? (
                                <div
                                  data-plasmic-name={
                                    "trailingArtworkContainer22"
                                  }
                                  data-plasmic-override={
                                    overrides.trailingArtworkContainer22
                                  }
                                  className={classNames(
                                    projectcss.all,
                                    sty.trailingArtworkContainer22
                                  )}
                                >
                                  <div
                                    data-plasmic-name={"trailingArtwork22"}
                                    data-plasmic-override={
                                      overrides.trailingArtwork22
                                    }
                                    className={classNames(
                                      projectcss.all,
                                      sty.trailingArtwork22
                                    )}
                                  >
                                    {false ? (
                                      <Outlined2Icon
                                        className={classNames(
                                          projectcss.all,
                                          sty.svg__hgCnD
                                        )}
                                        role={"img"}
                                      />
                                    ) : null}
                                    <Filled2Icon
                                      className={classNames(
                                        projectcss.all,
                                        sty.svg__jKyr6
                                      )}
                                      role={"img"}
                                    />
                                  </div>
                                </div>
                              ) : null}
                              <div
                                data-plasmic-name={"selectIndicatorContainer11"}
                                data-plasmic-override={
                                  overrides.selectIndicatorContainer11
                                }
                                className={classNames(
                                  projectcss.all,
                                  sty.selectIndicatorContainer11
                                )}
                              >
                                <div
                                  data-plasmic-name={"chevronIcon11"}
                                  data-plasmic-override={
                                    overrides.chevronIcon11
                                  }
                                  className={classNames(
                                    projectcss.all,
                                    sty.chevronIcon11
                                  )}
                                >
                                  {false ? (
                                    <Outlined3Icon
                                      className={classNames(
                                        projectcss.all,
                                        sty.svg__hwWWs
                                      )}
                                      role={"img"}
                                    />
                                  ) : null}
                                  <Outlined3Icon
                                    className={classNames(
                                      projectcss.all,
                                      sty.svg__opDti
                                    )}
                                    role={"img"}
                                  />
                                </div>
                              </div>
                            </div>
                          </Stack__>
                          {false ? (
                            <Stack__
                              as={"div"}
                              data-plasmic-name={"inputElementHint11"}
                              data-plasmic-override={
                                overrides.inputElementHint11
                              }
                              hasGap={true}
                              className={classNames(
                                projectcss.all,
                                sty.inputElementHint11
                              )}
                            >
                              {false ? (
                                <div
                                  data-plasmic-name={"heart51"}
                                  data-plasmic-override={overrides.heart51}
                                  className={classNames(
                                    projectcss.all,
                                    sty.heart51
                                  )}
                                >
                                  {false ? (
                                    <Outlined4Icon
                                      className={classNames(
                                        projectcss.all,
                                        sty.svg___5ApHm
                                      )}
                                      role={"img"}
                                    />
                                  ) : null}
                                  <Filled3Icon
                                    className={classNames(
                                      projectcss.all,
                                      sty.svg__kasp8
                                    )}
                                    role={"img"}
                                  />
                                </div>
                              ) : null}
                              <div
                                data-plasmic-name={"hint11"}
                                data-plasmic-override={overrides.hint11}
                                className={classNames(
                                  projectcss.all,
                                  sty.hint11
                                )}
                              >
                                {false ? (
                                  <div
                                    data-plasmic-name={
                                      "signedByBaseTypographyParagraphSmall11"
                                    }
                                    data-plasmic-override={
                                      overrides.signedByBaseTypographyParagraphSmall11
                                    }
                                    className={classNames(
                                      projectcss.all,
                                      sty.signedByBaseTypographyParagraphSmall11
                                    )}
                                  />
                                ) : null}
                                <div
                                  data-plasmic-name={"text137"}
                                  data-plasmic-override={overrides.text137}
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.__wab_text,
                                    sty.text137
                                  )}
                                >
                                  {"MM/DD/YYYY"}
                                </div>
                                {false ? (
                                  <div
                                    data-plasmic-name={"spacer125"}
                                    data-plasmic-override={overrides.spacer125}
                                    className={classNames(
                                      projectcss.all,
                                      sty.spacer125
                                    )}
                                  />
                                ) : null}
                              </div>
                            </Stack__>
                          ) : null}
                        </Stack__>
                      </Stack__>
                      <div
                        data-plasmic-name={"inputElementSelect6"}
                        data-plasmic-override={overrides.inputElementSelect6}
                        className={classNames(
                          projectcss.all,
                          sty.inputElementSelect6
                        )}
                      >
                        {false ? (
                          <div
                            data-plasmic-name={
                              "signedByBaseInputElementSelectMediumSingleDefaultActive6"
                            }
                            data-plasmic-override={
                              overrides.signedByBaseInputElementSelectMediumSingleDefaultActive6
                            }
                            className={classNames(
                              projectcss.all,
                              sty.signedByBaseInputElementSelectMediumSingleDefaultActive6
                            )}
                          />
                        ) : null}
                        {false ? (
                          <div
                            data-plasmic-name={"selectFrame6"}
                            data-plasmic-override={overrides.selectFrame6}
                            className={classNames(
                              projectcss.all,
                              sty.selectFrame6
                            )}
                          >
                            {false ? (
                              <div
                                data-plasmic-name={"leadingArtworkContainer23"}
                                data-plasmic-override={
                                  overrides.leadingArtworkContainer23
                                }
                                className={classNames(
                                  projectcss.all,
                                  sty.leadingArtworkContainer23
                                )}
                              >
                                <div
                                  data-plasmic-name={"leadingArtwork12"}
                                  data-plasmic-override={
                                    overrides.leadingArtwork12
                                  }
                                  className={classNames(
                                    projectcss.all,
                                    sty.leadingArtwork12
                                  )}
                                >
                                  {false ? (
                                    <Outlined5Icon
                                      className={classNames(
                                        projectcss.all,
                                        sty.svg__wxnOz
                                      )}
                                      role={"img"}
                                    />
                                  ) : null}
                                  <Filled4Icon
                                    className={classNames(
                                      projectcss.all,
                                      sty.svg__x1WVc
                                    )}
                                    role={"img"}
                                  />
                                </div>
                              </div>
                            ) : null}
                            {false ? (
                              <div
                                data-plasmic-name={"leadingLabelContainer23"}
                                data-plasmic-override={
                                  overrides.leadingLabelContainer23
                                }
                                className={classNames(
                                  projectcss.all,
                                  sty.leadingLabelContainer23
                                )}
                              >
                                <div
                                  data-plasmic-name={"leadingLabel23"}
                                  data-plasmic-override={
                                    overrides.leadingLabel23
                                  }
                                  className={classNames(
                                    projectcss.all,
                                    sty.leadingLabel23
                                  )}
                                >
                                  {false ? (
                                    <div
                                      data-plasmic-name={
                                        "signedByBaseTypographyLabelMedium31"
                                      }
                                      data-plasmic-override={
                                        overrides.signedByBaseTypographyLabelMedium31
                                      }
                                      className={classNames(
                                        projectcss.all,
                                        sty.signedByBaseTypographyLabelMedium31
                                      )}
                                    />
                                  ) : null}
                                  <div
                                    data-plasmic-name={"text138"}
                                    data-plasmic-override={overrides.text138}
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.__wab_text,
                                      sty.text138
                                    )}
                                  >
                                    {"$"}
                                  </div>
                                  {false ? (
                                    <div
                                      data-plasmic-name={"spacer126"}
                                      data-plasmic-override={
                                        overrides.spacer126
                                      }
                                      className={classNames(
                                        projectcss.all,
                                        sty.spacer126
                                      )}
                                    />
                                  ) : null}
                                </div>
                              </div>
                            ) : null}
                            <div
                              data-plasmic-name={"inputElementContentText23"}
                              data-plasmic-override={
                                overrides.inputElementContentText23
                              }
                              className={classNames(
                                projectcss.all,
                                sty.inputElementContentText23
                              )}
                            >
                              {false ? (
                                <div
                                  data-plasmic-name={
                                    "signedByBaseInputElementContentTextMediumOff11"
                                  }
                                  data-plasmic-override={
                                    overrides.signedByBaseInputElementContentTextMediumOff11
                                  }
                                  className={classNames(
                                    projectcss.all,
                                    sty.signedByBaseInputElementContentTextMediumOff11
                                  )}
                                />
                              ) : null}
                              {false ? (
                                <div
                                  data-plasmic-name={"text139"}
                                  data-plasmic-override={overrides.text139}
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.__wab_text,
                                    sty.text139
                                  )}
                                >
                                  {"S\u00e9lectionner..."}
                                </div>
                              ) : null}
                            </div>
                            {false ? (
                              <div
                                data-plasmic-name={"trailingLabelEnhancer23"}
                                data-plasmic-override={
                                  overrides.trailingLabelEnhancer23
                                }
                                className={classNames(
                                  projectcss.all,
                                  sty.trailingLabelEnhancer23
                                )}
                              >
                                {false ? (
                                  <div
                                    data-plasmic-name={"trailingLabel23"}
                                    data-plasmic-override={
                                      overrides.trailingLabel23
                                    }
                                    className={classNames(
                                      projectcss.all,
                                      sty.trailingLabel23
                                    )}
                                  >
                                    {false ? (
                                      <div
                                        data-plasmic-name={
                                          "signedByBaseTypographyLabelMedium32"
                                        }
                                        data-plasmic-override={
                                          overrides.signedByBaseTypographyLabelMedium32
                                        }
                                        className={classNames(
                                          projectcss.all,
                                          sty.signedByBaseTypographyLabelMedium32
                                        )}
                                      />
                                    ) : null}
                                    <div
                                      data-plasmic-name={"text140"}
                                      data-plasmic-override={overrides.text140}
                                      className={classNames(
                                        projectcss.all,
                                        projectcss.__wab_text,
                                        sty.text140
                                      )}
                                    >
                                      {"USD"}
                                    </div>
                                    {false ? (
                                      <div
                                        data-plasmic-name={"spacer127"}
                                        data-plasmic-override={
                                          overrides.spacer127
                                        }
                                        className={classNames(
                                          projectcss.all,
                                          sty.spacer127
                                        )}
                                      />
                                    ) : null}
                                  </div>
                                ) : null}
                              </div>
                            ) : null}
                            {false ? (
                              <div
                                data-plasmic-name={"trailingArtworkContainer23"}
                                data-plasmic-override={
                                  overrides.trailingArtworkContainer23
                                }
                                className={classNames(
                                  projectcss.all,
                                  sty.trailingArtworkContainer23
                                )}
                              >
                                <div
                                  data-plasmic-name={"trailingArtwork23"}
                                  data-plasmic-override={
                                    overrides.trailingArtwork23
                                  }
                                  className={classNames(
                                    projectcss.all,
                                    sty.trailingArtwork23
                                  )}
                                >
                                  {false ? (
                                    <Outlined5Icon
                                      className={classNames(
                                        projectcss.all,
                                        sty.svg__ooxjn
                                      )}
                                      role={"img"}
                                    />
                                  ) : null}
                                  <Filled4Icon
                                    className={classNames(
                                      projectcss.all,
                                      sty.svg___6Kk
                                    )}
                                    role={"img"}
                                  />
                                </div>
                              </div>
                            ) : null}
                            {false ? (
                              <div
                                data-plasmic-name={"selectIndicatorContainer12"}
                                data-plasmic-override={
                                  overrides.selectIndicatorContainer12
                                }
                                className={classNames(
                                  projectcss.all,
                                  sty.selectIndicatorContainer12
                                )}
                              >
                                <div
                                  data-plasmic-name={"chevronIcon12"}
                                  data-plasmic-override={
                                    overrides.chevronIcon12
                                  }
                                  className={classNames(
                                    projectcss.all,
                                    sty.chevronIcon12
                                  )}
                                >
                                  {false ? (
                                    <Outlined6Icon
                                      className={classNames(
                                        projectcss.all,
                                        sty.svg___4Ykqy
                                      )}
                                      role={"img"}
                                    />
                                  ) : null}
                                  <Outlined6Icon
                                    className={classNames(
                                      projectcss.all,
                                      sty.svg__zLbxu
                                    )}
                                    role={"img"}
                                  />
                                </div>
                              </div>
                            ) : null}
                          </div>
                        ) : null}
                        <div
                          data-plasmic-name={"menu6"}
                          data-plasmic-override={overrides.menu6}
                          className={classNames(projectcss.all, sty.menu6)}
                        >
                          {false ? (
                            <div
                              data-plasmic-name={"signedByBaseMenuListMedium6"}
                              data-plasmic-override={
                                overrides.signedByBaseMenuListMedium6
                              }
                              className={classNames(
                                projectcss.all,
                                sty.signedByBaseMenuListMedium6
                              )}
                            />
                          ) : null}
                          {false ? (
                            <Stack__
                              as={"div"}
                              data-plasmic-name={"menuItem26"}
                              data-plasmic-override={overrides.menuItem26}
                              hasGap={true}
                              className={classNames(
                                projectcss.all,
                                sty.menuItem26
                              )}
                            >
                              {false ? (
                                <div
                                  data-plasmic-name={
                                    "signedByBaseMenuItemSearchMediumNoneEnabled6"
                                  }
                                  data-plasmic-override={
                                    overrides.signedByBaseMenuItemSearchMediumNoneEnabled6
                                  }
                                  className={classNames(
                                    projectcss.all,
                                    sty.signedByBaseMenuItemSearchMediumNoneEnabled6
                                  )}
                                />
                              ) : null}
                              <Stack__
                                as={"div"}
                                data-plasmic-name={"searchField6"}
                                data-plasmic-override={overrides.searchField6}
                                hasGap={true}
                                className={classNames(
                                  projectcss.all,
                                  sty.searchField6
                                )}
                              >
                                {false ? (
                                  <div
                                    data-plasmic-name={
                                      "signedByBaseSearchFieldMediumEnabled6"
                                    }
                                    data-plasmic-override={
                                      overrides.signedByBaseSearchFieldMediumEnabled6
                                    }
                                    className={classNames(
                                      projectcss.all,
                                      sty.signedByBaseSearchFieldMediumEnabled6
                                    )}
                                  />
                                ) : null}
                                {false ? (
                                  <Stack__
                                    as={"div"}
                                    data-plasmic-name={"inputElementLabel6"}
                                    data-plasmic-override={
                                      overrides.inputElementLabel6
                                    }
                                    hasGap={true}
                                    className={classNames(
                                      projectcss.all,
                                      sty.inputElementLabel6
                                    )}
                                  >
                                    {false ? (
                                      <div
                                        data-plasmic-name={
                                          "signedByBaseInputElementLabelMedium6"
                                        }
                                        data-plasmic-override={
                                          overrides.signedByBaseInputElementLabelMedium6
                                        }
                                        className={classNames(
                                          projectcss.all,
                                          sty.signedByBaseInputElementLabelMedium6
                                        )}
                                      />
                                    ) : null}
                                    <div
                                      data-plasmic-name={"typography71"}
                                      data-plasmic-override={
                                        overrides.typography71
                                      }
                                      className={classNames(
                                        projectcss.all,
                                        sty.typography71
                                      )}
                                    >
                                      {false ? (
                                        <div
                                          data-plasmic-name={
                                            "signedByBaseTypographyLabelMedium33"
                                          }
                                          data-plasmic-override={
                                            overrides.signedByBaseTypographyLabelMedium33
                                          }
                                          className={classNames(
                                            projectcss.all,
                                            sty.signedByBaseTypographyLabelMedium33
                                          )}
                                        />
                                      ) : null}
                                      <div
                                        data-plasmic-name={"text141"}
                                        data-plasmic-override={
                                          overrides.text141
                                        }
                                        className={classNames(
                                          projectcss.all,
                                          projectcss.__wab_text,
                                          sty.text141
                                        )}
                                      >
                                        {"Label"}
                                      </div>
                                      {false ? (
                                        <div
                                          data-plasmic-name={"spacer128"}
                                          data-plasmic-override={
                                            overrides.spacer128
                                          }
                                          className={classNames(
                                            projectcss.all,
                                            sty.spacer128
                                          )}
                                        />
                                      ) : null}
                                    </div>
                                    {false ? (
                                      <Stack__
                                        as={"div"}
                                        data-plasmic-name={
                                          "characterCountFrame6"
                                        }
                                        data-plasmic-override={
                                          overrides.characterCountFrame6
                                        }
                                        hasGap={true}
                                        className={classNames(
                                          projectcss.all,
                                          sty.characterCountFrame6
                                        )}
                                      >
                                        {false ? (
                                          <div
                                            data-plasmic-name={"heart52"}
                                            data-plasmic-override={
                                              overrides.heart52
                                            }
                                            className={classNames(
                                              projectcss.all,
                                              sty.heart52
                                            )}
                                          >
                                            {false ? (
                                              <OutlinedIcon
                                                className={classNames(
                                                  projectcss.all,
                                                  sty.svg___449T
                                                )}
                                                role={"img"}
                                              />
                                            ) : null}
                                            <FilledIcon
                                              className={classNames(
                                                projectcss.all,
                                                sty.svg__tO7Ep
                                              )}
                                              role={"img"}
                                            />
                                          </div>
                                        ) : null}
                                        <div
                                          data-plasmic-name={"typography72"}
                                          data-plasmic-override={
                                            overrides.typography72
                                          }
                                          className={classNames(
                                            projectcss.all,
                                            sty.typography72
                                          )}
                                        >
                                          {false ? (
                                            <div
                                              data-plasmic-name={
                                                "signedByBaseTypographyLabelMedium34"
                                              }
                                              data-plasmic-override={
                                                overrides.signedByBaseTypographyLabelMedium34
                                              }
                                              className={classNames(
                                                projectcss.all,
                                                sty.signedByBaseTypographyLabelMedium34
                                              )}
                                            />
                                          ) : null}
                                          <div
                                            data-plasmic-name={"text142"}
                                            data-plasmic-override={
                                              overrides.text142
                                            }
                                            className={classNames(
                                              projectcss.all,
                                              projectcss.__wab_text,
                                              sty.text142
                                            )}
                                          >
                                            {"0/100"}
                                          </div>
                                          {false ? (
                                            <div
                                              data-plasmic-name={"spacer129"}
                                              data-plasmic-override={
                                                overrides.spacer129
                                              }
                                              className={classNames(
                                                projectcss.all,
                                                sty.spacer129
                                              )}
                                            />
                                          ) : null}
                                        </div>
                                      </Stack__>
                                    ) : null}
                                  </Stack__>
                                ) : null}
                                <div
                                  data-plasmic-name={"inputElementTextField12"}
                                  data-plasmic-override={
                                    overrides.inputElementTextField12
                                  }
                                  className={classNames(
                                    projectcss.all,
                                    sty.inputElementTextField12
                                  )}
                                >
                                  {false ? (
                                    <div
                                      data-plasmic-name={
                                        "signedByBaseInputElementTextFieldMediumEnabled6"
                                      }
                                      data-plasmic-override={
                                        overrides.signedByBaseInputElementTextFieldMediumEnabled6
                                      }
                                      className={classNames(
                                        projectcss.all,
                                        sty.signedByBaseInputElementTextFieldMediumEnabled6
                                      )}
                                    />
                                  ) : null}
                                  <div
                                    data-plasmic-name={
                                      "leadingArtworkContainer24"
                                    }
                                    data-plasmic-override={
                                      overrides.leadingArtworkContainer24
                                    }
                                    className={classNames(
                                      projectcss.all,
                                      sty.leadingArtworkContainer24
                                    )}
                                  >
                                    <div
                                      data-plasmic-name={"search6"}
                                      data-plasmic-override={overrides.search6}
                                      className={classNames(
                                        projectcss.all,
                                        sty.search6
                                      )}
                                    >
                                      {false ? (
                                        <Outlined7Icon
                                          className={classNames(
                                            projectcss.all,
                                            sty.svg__b266C
                                          )}
                                          role={"img"}
                                        />
                                      ) : null}
                                      <Outlined7Icon
                                        className={classNames(
                                          projectcss.all,
                                          sty.svg__ntMn
                                        )}
                                        role={"img"}
                                      />
                                    </div>
                                  </div>
                                  {false ? (
                                    <div
                                      data-plasmic-name={
                                        "leadingLabelContainer24"
                                      }
                                      data-plasmic-override={
                                        overrides.leadingLabelContainer24
                                      }
                                      className={classNames(
                                        projectcss.all,
                                        sty.leadingLabelContainer24
                                      )}
                                    >
                                      {false ? (
                                        <div
                                          data-plasmic-name={"leadingLabel24"}
                                          data-plasmic-override={
                                            overrides.leadingLabel24
                                          }
                                          className={classNames(
                                            projectcss.all,
                                            sty.leadingLabel24
                                          )}
                                        >
                                          {false ? (
                                            <div
                                              data-plasmic-name={
                                                "signedByBaseTypographyLabelMedium35"
                                              }
                                              data-plasmic-override={
                                                overrides.signedByBaseTypographyLabelMedium35
                                              }
                                              className={classNames(
                                                projectcss.all,
                                                sty.signedByBaseTypographyLabelMedium35
                                              )}
                                            />
                                          ) : null}
                                          <div
                                            data-plasmic-name={"text143"}
                                            data-plasmic-override={
                                              overrides.text143
                                            }
                                            className={classNames(
                                              projectcss.all,
                                              projectcss.__wab_text,
                                              sty.text143
                                            )}
                                          >
                                            {"$"}
                                          </div>
                                          {false ? (
                                            <div
                                              data-plasmic-name={"spacer130"}
                                              data-plasmic-override={
                                                overrides.spacer130
                                              }
                                              className={classNames(
                                                projectcss.all,
                                                sty.spacer130
                                              )}
                                            />
                                          ) : null}
                                        </div>
                                      ) : null}
                                    </div>
                                  ) : null}
                                  <div
                                    data-plasmic-name={
                                      "inputElementContentText24"
                                    }
                                    data-plasmic-override={
                                      overrides.inputElementContentText24
                                    }
                                    className={classNames(
                                      projectcss.all,
                                      sty.inputElementContentText24
                                    )}
                                  >
                                    {false ? (
                                      <div
                                        data-plasmic-name={
                                          "signedByBaseInputElementContentTextMediumOff12"
                                        }
                                        data-plasmic-override={
                                          overrides.signedByBaseInputElementContentTextMediumOff12
                                        }
                                        className={classNames(
                                          projectcss.all,
                                          sty.signedByBaseInputElementContentTextMediumOff12
                                        )}
                                      />
                                    ) : null}
                                    <div
                                      data-plasmic-name={"text144"}
                                      data-plasmic-override={overrides.text144}
                                      className={classNames(
                                        projectcss.all,
                                        projectcss.__wab_text,
                                        sty.text144
                                      )}
                                    >
                                      {"Placeholder"}
                                    </div>
                                  </div>
                                  {false ? (
                                    <div
                                      data-plasmic-name={
                                        "trailingLabelEnhancer24"
                                      }
                                      data-plasmic-override={
                                        overrides.trailingLabelEnhancer24
                                      }
                                      className={classNames(
                                        projectcss.all,
                                        sty.trailingLabelEnhancer24
                                      )}
                                    >
                                      {false ? (
                                        <div
                                          data-plasmic-name={"trailingLabel24"}
                                          data-plasmic-override={
                                            overrides.trailingLabel24
                                          }
                                          className={classNames(
                                            projectcss.all,
                                            sty.trailingLabel24
                                          )}
                                        >
                                          {false ? (
                                            <div
                                              data-plasmic-name={
                                                "signedByBaseTypographyLabelMedium36"
                                              }
                                              data-plasmic-override={
                                                overrides.signedByBaseTypographyLabelMedium36
                                              }
                                              className={classNames(
                                                projectcss.all,
                                                sty.signedByBaseTypographyLabelMedium36
                                              )}
                                            />
                                          ) : null}
                                          <div
                                            data-plasmic-name={"text145"}
                                            data-plasmic-override={
                                              overrides.text145
                                            }
                                            className={classNames(
                                              projectcss.all,
                                              projectcss.__wab_text,
                                              sty.text145
                                            )}
                                          >
                                            {"USD"}
                                          </div>
                                          {false ? (
                                            <div
                                              data-plasmic-name={"spacer131"}
                                              data-plasmic-override={
                                                overrides.spacer131
                                              }
                                              className={classNames(
                                                projectcss.all,
                                                sty.spacer131
                                              )}
                                            />
                                          ) : null}
                                        </div>
                                      ) : null}
                                    </div>
                                  ) : null}
                                  {false ? (
                                    <div
                                      data-plasmic-name={
                                        "trailingArtworkContainer24"
                                      }
                                      data-plasmic-override={
                                        overrides.trailingArtworkContainer24
                                      }
                                      className={classNames(
                                        projectcss.all,
                                        sty.trailingArtworkContainer24
                                      )}
                                    >
                                      {false ? (
                                        <div
                                          data-plasmic-name={
                                            "trailingArtwork24"
                                          }
                                          data-plasmic-override={
                                            overrides.trailingArtwork24
                                          }
                                          className={classNames(
                                            projectcss.all,
                                            sty.trailingArtwork24
                                          )}
                                        >
                                          {false ? (
                                            <Outlined5Icon
                                              className={classNames(
                                                projectcss.all,
                                                sty.svg__mQrBg
                                              )}
                                              role={"img"}
                                            />
                                          ) : null}
                                          <Filled4Icon
                                            className={classNames(
                                              projectcss.all,
                                              sty.svg__kirlb
                                            )}
                                            role={"img"}
                                          />
                                        </div>
                                      ) : null}
                                    </div>
                                  ) : null}
                                </div>
                                {false ? (
                                  <Stack__
                                    as={"div"}
                                    data-plasmic-name={"inputElementHint12"}
                                    data-plasmic-override={
                                      overrides.inputElementHint12
                                    }
                                    hasGap={true}
                                    className={classNames(
                                      projectcss.all,
                                      sty.inputElementHint12
                                    )}
                                  >
                                    {false ? (
                                      <div
                                        data-plasmic-name={"heart53"}
                                        data-plasmic-override={
                                          overrides.heart53
                                        }
                                        className={classNames(
                                          projectcss.all,
                                          sty.heart53
                                        )}
                                      >
                                        {false ? (
                                          <Outlined4Icon
                                            className={classNames(
                                              projectcss.all,
                                              sty.svg___0Q1Lc
                                            )}
                                            role={"img"}
                                          />
                                        ) : null}
                                        <Filled3Icon
                                          className={classNames(
                                            projectcss.all,
                                            sty.svg__vMzyb
                                          )}
                                          role={"img"}
                                        />
                                      </div>
                                    ) : null}
                                    <div
                                      data-plasmic-name={"hint12"}
                                      data-plasmic-override={overrides.hint12}
                                      className={classNames(
                                        projectcss.all,
                                        sty.hint12
                                      )}
                                    >
                                      {false ? (
                                        <div
                                          data-plasmic-name={
                                            "signedByBaseTypographyParagraphSmall12"
                                          }
                                          data-plasmic-override={
                                            overrides.signedByBaseTypographyParagraphSmall12
                                          }
                                          className={classNames(
                                            projectcss.all,
                                            sty.signedByBaseTypographyParagraphSmall12
                                          )}
                                        />
                                      ) : null}
                                      <div
                                        data-plasmic-name={"text146"}
                                        data-plasmic-override={
                                          overrides.text146
                                        }
                                        className={classNames(
                                          projectcss.all,
                                          projectcss.__wab_text,
                                          sty.text146
                                        )}
                                      >
                                        {"Hint"}
                                      </div>
                                      {false ? (
                                        <div
                                          data-plasmic-name={"spacer132"}
                                          data-plasmic-override={
                                            overrides.spacer132
                                          }
                                          className={classNames(
                                            projectcss.all,
                                            sty.spacer132
                                          )}
                                        />
                                      ) : null}
                                    </div>
                                  </Stack__>
                                ) : null}
                              </Stack__>
                            </Stack__>
                          ) : null}
                          <Stack__
                            as={"div"}
                            data-plasmic-name={"menuItem27"}
                            data-plasmic-override={overrides.menuItem27}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.menuItem27
                            )}
                          >
                            {false ? (
                              <div
                                data-plasmic-name={
                                  "signedByBaseMenuItemOptionMediumStandardEnabled21"
                                }
                                data-plasmic-override={
                                  overrides.signedByBaseMenuItemOptionMediumStandardEnabled21
                                }
                                className={classNames(
                                  projectcss.all,
                                  sty.signedByBaseMenuItemOptionMediumStandardEnabled21
                                )}
                              />
                            ) : null}
                            {false ? (
                              <Stack__
                                as={"div"}
                                data-plasmic-name={
                                  "menuItemControlMediumCheckboxUnchecked21"
                                }
                                data-plasmic-override={
                                  overrides.menuItemControlMediumCheckboxUnchecked21
                                }
                                hasGap={true}
                                className={classNames(
                                  projectcss.all,
                                  sty.menuItemControlMediumCheckboxUnchecked21
                                )}
                              >
                                {false ? (
                                  <div
                                    data-plasmic-name={
                                      "signedByBaseMenuItemControlMediumCheckboxUnchecked21"
                                    }
                                    data-plasmic-override={
                                      overrides.signedByBaseMenuItemControlMediumCheckboxUnchecked21
                                    }
                                    className={classNames(
                                      projectcss.all,
                                      sty.signedByBaseMenuItemControlMediumCheckboxUnchecked21
                                    )}
                                  />
                                ) : null}
                                <div
                                  data-plasmic-name={"icon21"}
                                  data-plasmic-override={overrides.icon21}
                                  className={classNames(
                                    projectcss.all,
                                    sty.icon21
                                  )}
                                >
                                  {false ? (
                                    <Outlined8Icon
                                      className={classNames(
                                        projectcss.all,
                                        sty.svg__ejdO
                                      )}
                                      role={"img"}
                                    />
                                  ) : null}
                                  <Outlined8Icon
                                    className={classNames(
                                      projectcss.all,
                                      sty.svg__uXqPy
                                    )}
                                    role={"img"}
                                  />
                                </div>
                              </Stack__>
                            ) : null}
                            {false ? (
                              <Stack__
                                as={"div"}
                                data-plasmic-name={"leadingEnhancer21"}
                                data-plasmic-override={
                                  overrides.leadingEnhancer21
                                }
                                hasGap={true}
                                className={classNames(
                                  projectcss.all,
                                  sty.leadingEnhancer21
                                )}
                              >
                                <div
                                  data-plasmic-name={"heart54"}
                                  data-plasmic-override={overrides.heart54}
                                  className={classNames(
                                    projectcss.all,
                                    sty.heart54
                                  )}
                                >
                                  {false ? (
                                    <Outlined5Icon
                                      className={classNames(
                                        projectcss.all,
                                        sty.svg__xdcAv
                                      )}
                                      role={"img"}
                                    />
                                  ) : null}
                                  <Filled4Icon
                                    className={classNames(
                                      projectcss.all,
                                      sty.svg__rsIj
                                    )}
                                    role={"img"}
                                  />
                                </div>
                              </Stack__>
                            ) : null}
                            <Stack__
                              as={"div"}
                              data-plasmic-name={"textFrame21"}
                              data-plasmic-override={overrides.textFrame21}
                              hasGap={true}
                              className={classNames(
                                projectcss.all,
                                sty.textFrame21
                              )}
                            >
                              <div
                                data-plasmic-name={"leadingText21"}
                                data-plasmic-override={overrides.leadingText21}
                                className={classNames(
                                  projectcss.all,
                                  sty.leadingText21
                                )}
                              >
                                <div
                                  data-plasmic-name={"typography73"}
                                  data-plasmic-override={overrides.typography73}
                                  className={classNames(
                                    projectcss.all,
                                    sty.typography73
                                  )}
                                >
                                  {false ? (
                                    <div
                                      data-plasmic-name={
                                        "signedByBaseTypographyParagraphMedium61"
                                      }
                                      data-plasmic-override={
                                        overrides.signedByBaseTypographyParagraphMedium61
                                      }
                                      className={classNames(
                                        projectcss.all,
                                        sty.signedByBaseTypographyParagraphMedium61
                                      )}
                                    />
                                  ) : null}
                                  <div
                                    data-plasmic-name={"text147"}
                                    data-plasmic-override={overrides.text147}
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.__wab_text,
                                      sty.text147
                                    )}
                                  >
                                    {"Mod\u00e8le de concert 20h"}
                                  </div>
                                  {false ? (
                                    <div
                                      data-plasmic-name={"spacer133"}
                                      data-plasmic-override={
                                        overrides.spacer133
                                      }
                                      className={classNames(
                                        projectcss.all,
                                        sty.spacer133
                                      )}
                                    />
                                  ) : null}
                                </div>
                                {false ? (
                                  <div
                                    data-plasmic-name={"typography74"}
                                    data-plasmic-override={
                                      overrides.typography74
                                    }
                                    className={classNames(
                                      projectcss.all,
                                      sty.typography74
                                    )}
                                  >
                                    {false ? (
                                      <div
                                        data-plasmic-name={
                                          "signedByBaseTypographyParagraphMedium62"
                                        }
                                        data-plasmic-override={
                                          overrides.signedByBaseTypographyParagraphMedium62
                                        }
                                        className={classNames(
                                          projectcss.all,
                                          sty.signedByBaseTypographyParagraphMedium62
                                        )}
                                      />
                                    ) : null}
                                    <div
                                      data-plasmic-name={"text148"}
                                      data-plasmic-override={overrides.text148}
                                      className={classNames(
                                        projectcss.all,
                                        projectcss.__wab_text,
                                        sty.text148
                                      )}
                                    >
                                      {"Supporting text"}
                                    </div>
                                    {false ? (
                                      <div
                                        data-plasmic-name={"spacer134"}
                                        data-plasmic-override={
                                          overrides.spacer134
                                        }
                                        className={classNames(
                                          projectcss.all,
                                          sty.spacer134
                                        )}
                                      />
                                    ) : null}
                                  </div>
                                ) : null}
                              </div>
                              {false ? (
                                <div
                                  data-plasmic-name={"typography75"}
                                  data-plasmic-override={overrides.typography75}
                                  className={classNames(
                                    projectcss.all,
                                    sty.typography75
                                  )}
                                >
                                  {false ? (
                                    <div
                                      data-plasmic-name={
                                        "signedByBaseTypographyParagraphMedium63"
                                      }
                                      data-plasmic-override={
                                        overrides.signedByBaseTypographyParagraphMedium63
                                      }
                                      className={classNames(
                                        projectcss.all,
                                        sty.signedByBaseTypographyParagraphMedium63
                                      )}
                                    />
                                  ) : null}
                                  <div
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.__wab_text,
                                      sty.text__r4Nwx
                                    )}
                                  >
                                    {"Text"}
                                  </div>
                                  {false ? (
                                    <div
                                      data-plasmic-name={"spacer135"}
                                      data-plasmic-override={
                                        overrides.spacer135
                                      }
                                      className={classNames(
                                        projectcss.all,
                                        sty.spacer135
                                      )}
                                    />
                                  ) : null}
                                </div>
                              ) : null}
                            </Stack__>
                            {false ? (
                              <Stack__
                                as={"div"}
                                data-plasmic-name={"trailingEnhancer21"}
                                data-plasmic-override={
                                  overrides.trailingEnhancer21
                                }
                                hasGap={true}
                                className={classNames(
                                  projectcss.all,
                                  sty.trailingEnhancer21
                                )}
                              >
                                <div
                                  data-plasmic-name={"heart55"}
                                  data-plasmic-override={overrides.heart55}
                                  className={classNames(
                                    projectcss.all,
                                    sty.heart55
                                  )}
                                >
                                  {false ? (
                                    <Outlined5Icon
                                      className={classNames(
                                        projectcss.all,
                                        sty.svg__rVdjn
                                      )}
                                      role={"img"}
                                    />
                                  ) : null}
                                  <Filled4Icon
                                    className={classNames(
                                      projectcss.all,
                                      sty.svg__pWvC
                                    )}
                                    role={"img"}
                                  />
                                </div>
                              </Stack__>
                            ) : null}
                          </Stack__>
                          <Stack__
                            as={"div"}
                            data-plasmic-name={"menuItem28"}
                            data-plasmic-override={overrides.menuItem28}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.menuItem28
                            )}
                          >
                            {false ? (
                              <div
                                data-plasmic-name={
                                  "signedByBaseMenuItemOptionMediumStandardEnabled22"
                                }
                                data-plasmic-override={
                                  overrides.signedByBaseMenuItemOptionMediumStandardEnabled22
                                }
                                className={classNames(
                                  projectcss.all,
                                  sty.signedByBaseMenuItemOptionMediumStandardEnabled22
                                )}
                              />
                            ) : null}
                            {false ? (
                              <Stack__
                                as={"div"}
                                data-plasmic-name={
                                  "menuItemControlMediumCheckboxUnchecked22"
                                }
                                data-plasmic-override={
                                  overrides.menuItemControlMediumCheckboxUnchecked22
                                }
                                hasGap={true}
                                className={classNames(
                                  projectcss.all,
                                  sty.menuItemControlMediumCheckboxUnchecked22
                                )}
                              >
                                {false ? (
                                  <div
                                    data-plasmic-name={
                                      "signedByBaseMenuItemControlMediumCheckboxUnchecked22"
                                    }
                                    data-plasmic-override={
                                      overrides.signedByBaseMenuItemControlMediumCheckboxUnchecked22
                                    }
                                    className={classNames(
                                      projectcss.all,
                                      sty.signedByBaseMenuItemControlMediumCheckboxUnchecked22
                                    )}
                                  />
                                ) : null}
                                <div
                                  data-plasmic-name={"icon22"}
                                  data-plasmic-override={overrides.icon22}
                                  className={classNames(
                                    projectcss.all,
                                    sty.icon22
                                  )}
                                >
                                  {false ? (
                                    <Outlined8Icon
                                      className={classNames(
                                        projectcss.all,
                                        sty.svg__zGuuo
                                      )}
                                      role={"img"}
                                    />
                                  ) : null}
                                  <Outlined8Icon
                                    className={classNames(
                                      projectcss.all,
                                      sty.svg___5TM6T
                                    )}
                                    role={"img"}
                                  />
                                </div>
                              </Stack__>
                            ) : null}
                            {false ? (
                              <Stack__
                                as={"div"}
                                data-plasmic-name={"leadingEnhancer22"}
                                data-plasmic-override={
                                  overrides.leadingEnhancer22
                                }
                                hasGap={true}
                                className={classNames(
                                  projectcss.all,
                                  sty.leadingEnhancer22
                                )}
                              >
                                <div
                                  data-plasmic-name={"heart56"}
                                  data-plasmic-override={overrides.heart56}
                                  className={classNames(
                                    projectcss.all,
                                    sty.heart56
                                  )}
                                >
                                  {false ? (
                                    <Outlined5Icon
                                      className={classNames(
                                        projectcss.all,
                                        sty.svg__xzVoj
                                      )}
                                      role={"img"}
                                    />
                                  ) : null}
                                  <Filled4Icon
                                    className={classNames(
                                      projectcss.all,
                                      sty.svg___0VMRt
                                    )}
                                    role={"img"}
                                  />
                                </div>
                              </Stack__>
                            ) : null}
                            <Stack__
                              as={"div"}
                              data-plasmic-name={"textFrame22"}
                              data-plasmic-override={overrides.textFrame22}
                              hasGap={true}
                              className={classNames(
                                projectcss.all,
                                sty.textFrame22
                              )}
                            >
                              <div
                                data-plasmic-name={"leadingText22"}
                                data-plasmic-override={overrides.leadingText22}
                                className={classNames(
                                  projectcss.all,
                                  sty.leadingText22
                                )}
                              >
                                <div
                                  data-plasmic-name={"typography76"}
                                  data-plasmic-override={overrides.typography76}
                                  className={classNames(
                                    projectcss.all,
                                    sty.typography76
                                  )}
                                >
                                  {false ? (
                                    <div
                                      data-plasmic-name={
                                        "signedByBaseTypographyParagraphMedium64"
                                      }
                                      data-plasmic-override={
                                        overrides.signedByBaseTypographyParagraphMedium64
                                      }
                                      className={classNames(
                                        projectcss.all,
                                        sty.signedByBaseTypographyParagraphMedium64
                                      )}
                                    />
                                  ) : null}
                                  <div
                                    data-plasmic-name={"text149"}
                                    data-plasmic-override={overrides.text149}
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.__wab_text,
                                      sty.text149
                                    )}
                                  >
                                    {"Mod\u00e8le de match 21h"}
                                  </div>
                                  {false ? (
                                    <div
                                      data-plasmic-name={"spacer136"}
                                      data-plasmic-override={
                                        overrides.spacer136
                                      }
                                      className={classNames(
                                        projectcss.all,
                                        sty.spacer136
                                      )}
                                    />
                                  ) : null}
                                </div>
                                {false ? (
                                  <div
                                    data-plasmic-name={"typography77"}
                                    data-plasmic-override={
                                      overrides.typography77
                                    }
                                    className={classNames(
                                      projectcss.all,
                                      sty.typography77
                                    )}
                                  >
                                    {false ? (
                                      <div
                                        data-plasmic-name={
                                          "signedByBaseTypographyParagraphMedium65"
                                        }
                                        data-plasmic-override={
                                          overrides.signedByBaseTypographyParagraphMedium65
                                        }
                                        className={classNames(
                                          projectcss.all,
                                          sty.signedByBaseTypographyParagraphMedium65
                                        )}
                                      />
                                    ) : null}
                                    <div
                                      data-plasmic-name={"text150"}
                                      data-plasmic-override={overrides.text150}
                                      className={classNames(
                                        projectcss.all,
                                        projectcss.__wab_text,
                                        sty.text150
                                      )}
                                    >
                                      {"Supporting text"}
                                    </div>
                                    {false ? (
                                      <div
                                        data-plasmic-name={"spacer137"}
                                        data-plasmic-override={
                                          overrides.spacer137
                                        }
                                        className={classNames(
                                          projectcss.all,
                                          sty.spacer137
                                        )}
                                      />
                                    ) : null}
                                  </div>
                                ) : null}
                              </div>
                              {false ? (
                                <div
                                  data-plasmic-name={"typography78"}
                                  data-plasmic-override={overrides.typography78}
                                  className={classNames(
                                    projectcss.all,
                                    sty.typography78
                                  )}
                                >
                                  {false ? (
                                    <div
                                      data-plasmic-name={
                                        "signedByBaseTypographyParagraphMedium66"
                                      }
                                      data-plasmic-override={
                                        overrides.signedByBaseTypographyParagraphMedium66
                                      }
                                      className={classNames(
                                        projectcss.all,
                                        sty.signedByBaseTypographyParagraphMedium66
                                      )}
                                    />
                                  ) : null}
                                  <div
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.__wab_text,
                                      sty.text__nqSpr
                                    )}
                                  >
                                    {"Text"}
                                  </div>
                                  {false ? (
                                    <div
                                      data-plasmic-name={"spacer138"}
                                      data-plasmic-override={
                                        overrides.spacer138
                                      }
                                      className={classNames(
                                        projectcss.all,
                                        sty.spacer138
                                      )}
                                    />
                                  ) : null}
                                </div>
                              ) : null}
                            </Stack__>
                            {false ? (
                              <Stack__
                                as={"div"}
                                data-plasmic-name={"trailingEnhancer22"}
                                data-plasmic-override={
                                  overrides.trailingEnhancer22
                                }
                                hasGap={true}
                                className={classNames(
                                  projectcss.all,
                                  sty.trailingEnhancer22
                                )}
                              >
                                <div
                                  data-plasmic-name={"checkmarkSmall6"}
                                  data-plasmic-override={
                                    overrides.checkmarkSmall6
                                  }
                                  className={classNames(
                                    projectcss.all,
                                    sty.checkmarkSmall6
                                  )}
                                >
                                  {false ? (
                                    <Outlined9Icon
                                      className={classNames(
                                        projectcss.all,
                                        sty.svg__pdR3F
                                      )}
                                      role={"img"}
                                    />
                                  ) : null}
                                  <Outlined9Icon
                                    className={classNames(
                                      projectcss.all,
                                      sty.svg__kpnXt
                                    )}
                                    role={"img"}
                                  />
                                </div>
                              </Stack__>
                            ) : null}
                          </Stack__>
                          <Stack__
                            as={"div"}
                            data-plasmic-name={"menuItem29"}
                            data-plasmic-override={overrides.menuItem29}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.menuItem29
                            )}
                          >
                            {false ? (
                              <div
                                data-plasmic-name={
                                  "signedByBaseMenuItemOptionMediumStandardEnabled23"
                                }
                                data-plasmic-override={
                                  overrides.signedByBaseMenuItemOptionMediumStandardEnabled23
                                }
                                className={classNames(
                                  projectcss.all,
                                  sty.signedByBaseMenuItemOptionMediumStandardEnabled23
                                )}
                              />
                            ) : null}
                            {false ? (
                              <Stack__
                                as={"div"}
                                data-plasmic-name={
                                  "menuItemControlMediumCheckboxUnchecked23"
                                }
                                data-plasmic-override={
                                  overrides.menuItemControlMediumCheckboxUnchecked23
                                }
                                hasGap={true}
                                className={classNames(
                                  projectcss.all,
                                  sty.menuItemControlMediumCheckboxUnchecked23
                                )}
                              >
                                {false ? (
                                  <div
                                    data-plasmic-name={
                                      "signedByBaseMenuItemControlMediumCheckboxUnchecked23"
                                    }
                                    data-plasmic-override={
                                      overrides.signedByBaseMenuItemControlMediumCheckboxUnchecked23
                                    }
                                    className={classNames(
                                      projectcss.all,
                                      sty.signedByBaseMenuItemControlMediumCheckboxUnchecked23
                                    )}
                                  />
                                ) : null}
                                <div
                                  data-plasmic-name={"icon23"}
                                  data-plasmic-override={overrides.icon23}
                                  className={classNames(
                                    projectcss.all,
                                    sty.icon23
                                  )}
                                >
                                  {false ? (
                                    <Outlined8Icon
                                      className={classNames(
                                        projectcss.all,
                                        sty.svg__cdEpo
                                      )}
                                      role={"img"}
                                    />
                                  ) : null}
                                  <Outlined8Icon
                                    className={classNames(
                                      projectcss.all,
                                      sty.svg__pVZnc
                                    )}
                                    role={"img"}
                                  />
                                </div>
                              </Stack__>
                            ) : null}
                            {false ? (
                              <Stack__
                                as={"div"}
                                data-plasmic-name={"leadingEnhancer23"}
                                data-plasmic-override={
                                  overrides.leadingEnhancer23
                                }
                                hasGap={true}
                                className={classNames(
                                  projectcss.all,
                                  sty.leadingEnhancer23
                                )}
                              >
                                <div
                                  data-plasmic-name={"heart57"}
                                  data-plasmic-override={overrides.heart57}
                                  className={classNames(
                                    projectcss.all,
                                    sty.heart57
                                  )}
                                >
                                  {false ? (
                                    <Outlined5Icon
                                      className={classNames(
                                        projectcss.all,
                                        sty.svg__qX8Lc
                                      )}
                                      role={"img"}
                                    />
                                  ) : null}
                                  <Filled4Icon
                                    className={classNames(
                                      projectcss.all,
                                      sty.svg__ll3I9
                                    )}
                                    role={"img"}
                                  />
                                </div>
                              </Stack__>
                            ) : null}
                            <IcRoundPlusIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__mVDoe
                              )}
                              role={"img"}
                            />

                            <Stack__
                              as={"div"}
                              data-plasmic-name={"textFrame23"}
                              data-plasmic-override={overrides.textFrame23}
                              hasGap={true}
                              className={classNames(
                                projectcss.all,
                                sty.textFrame23
                              )}
                            >
                              <div
                                data-plasmic-name={"leadingText23"}
                                data-plasmic-override={overrides.leadingText23}
                                className={classNames(
                                  projectcss.all,
                                  sty.leadingText23
                                )}
                              >
                                <div
                                  data-plasmic-name={"typography79"}
                                  data-plasmic-override={overrides.typography79}
                                  className={classNames(
                                    projectcss.all,
                                    sty.typography79
                                  )}
                                >
                                  {false ? (
                                    <div
                                      data-plasmic-name={
                                        "signedByBaseTypographyParagraphMedium67"
                                      }
                                      data-plasmic-override={
                                        overrides.signedByBaseTypographyParagraphMedium67
                                      }
                                      className={classNames(
                                        projectcss.all,
                                        sty.signedByBaseTypographyParagraphMedium67
                                      )}
                                    />
                                  ) : null}
                                  <div
                                    data-plasmic-name={"text151"}
                                    data-plasmic-override={overrides.text151}
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.__wab_text,
                                      sty.text151
                                    )}
                                  >
                                    {"Dispositif vierge"}
                                  </div>
                                  {false ? (
                                    <div
                                      data-plasmic-name={"spacer139"}
                                      data-plasmic-override={
                                        overrides.spacer139
                                      }
                                      className={classNames(
                                        projectcss.all,
                                        sty.spacer139
                                      )}
                                    />
                                  ) : null}
                                </div>
                                {false ? (
                                  <div
                                    data-plasmic-name={"typography80"}
                                    data-plasmic-override={
                                      overrides.typography80
                                    }
                                    className={classNames(
                                      projectcss.all,
                                      sty.typography80
                                    )}
                                  >
                                    {false ? (
                                      <div
                                        data-plasmic-name={
                                          "signedByBaseTypographyParagraphMedium68"
                                        }
                                        data-plasmic-override={
                                          overrides.signedByBaseTypographyParagraphMedium68
                                        }
                                        className={classNames(
                                          projectcss.all,
                                          sty.signedByBaseTypographyParagraphMedium68
                                        )}
                                      />
                                    ) : null}
                                    <div
                                      data-plasmic-name={"text152"}
                                      data-plasmic-override={overrides.text152}
                                      className={classNames(
                                        projectcss.all,
                                        projectcss.__wab_text,
                                        sty.text152
                                      )}
                                    >
                                      {"Supporting text"}
                                    </div>
                                    {false ? (
                                      <div
                                        data-plasmic-name={"spacer140"}
                                        data-plasmic-override={
                                          overrides.spacer140
                                        }
                                        className={classNames(
                                          projectcss.all,
                                          sty.spacer140
                                        )}
                                      />
                                    ) : null}
                                  </div>
                                ) : null}
                              </div>
                              {false ? (
                                <div
                                  data-plasmic-name={"typography81"}
                                  data-plasmic-override={overrides.typography81}
                                  className={classNames(
                                    projectcss.all,
                                    sty.typography81
                                  )}
                                >
                                  {false ? (
                                    <div
                                      data-plasmic-name={
                                        "signedByBaseTypographyParagraphMedium69"
                                      }
                                      data-plasmic-override={
                                        overrides.signedByBaseTypographyParagraphMedium69
                                      }
                                      className={classNames(
                                        projectcss.all,
                                        sty.signedByBaseTypographyParagraphMedium69
                                      )}
                                    />
                                  ) : null}
                                  <div
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.__wab_text,
                                      sty.text__r1M4G
                                    )}
                                  >
                                    {"Text"}
                                  </div>
                                  {false ? (
                                    <div
                                      data-plasmic-name={"spacer141"}
                                      data-plasmic-override={
                                        overrides.spacer141
                                      }
                                      className={classNames(
                                        projectcss.all,
                                        sty.spacer141
                                      )}
                                    />
                                  ) : null}
                                </div>
                              ) : null}
                            </Stack__>
                            {false ? (
                              <Stack__
                                as={"div"}
                                data-plasmic-name={"trailingEnhancer23"}
                                data-plasmic-override={
                                  overrides.trailingEnhancer23
                                }
                                hasGap={true}
                                className={classNames(
                                  projectcss.all,
                                  sty.trailingEnhancer23
                                )}
                              >
                                <div
                                  data-plasmic-name={"heart58"}
                                  data-plasmic-override={overrides.heart58}
                                  className={classNames(
                                    projectcss.all,
                                    sty.heart58
                                  )}
                                >
                                  {false ? (
                                    <Outlined5Icon
                                      className={classNames(
                                        projectcss.all,
                                        sty.svg__drtNt
                                      )}
                                      role={"img"}
                                    />
                                  ) : null}
                                  <Filled4Icon
                                    className={classNames(
                                      projectcss.all,
                                      sty.svg__fgff0
                                    )}
                                    role={"img"}
                                  />
                                </div>
                              </Stack__>
                            ) : null}
                          </Stack__>
                          {false ? (
                            <Stack__
                              as={"div"}
                              data-plasmic-name={"menuItem30"}
                              data-plasmic-override={overrides.menuItem30}
                              hasGap={true}
                              className={classNames(
                                projectcss.all,
                                sty.menuItem30
                              )}
                            >
                              {false ? (
                                <div
                                  data-plasmic-name={
                                    "signedByBaseMenuItemOptionMediumStandardEnabled24"
                                  }
                                  data-plasmic-override={
                                    overrides.signedByBaseMenuItemOptionMediumStandardEnabled24
                                  }
                                  className={classNames(
                                    projectcss.all,
                                    sty.signedByBaseMenuItemOptionMediumStandardEnabled24
                                  )}
                                />
                              ) : null}
                              {false ? (
                                <Stack__
                                  as={"div"}
                                  data-plasmic-name={
                                    "menuItemControlMediumCheckboxUnchecked24"
                                  }
                                  data-plasmic-override={
                                    overrides.menuItemControlMediumCheckboxUnchecked24
                                  }
                                  hasGap={true}
                                  className={classNames(
                                    projectcss.all,
                                    sty.menuItemControlMediumCheckboxUnchecked24
                                  )}
                                >
                                  {false ? (
                                    <div
                                      data-plasmic-name={
                                        "signedByBaseMenuItemControlMediumCheckboxUnchecked24"
                                      }
                                      data-plasmic-override={
                                        overrides.signedByBaseMenuItemControlMediumCheckboxUnchecked24
                                      }
                                      className={classNames(
                                        projectcss.all,
                                        sty.signedByBaseMenuItemControlMediumCheckboxUnchecked24
                                      )}
                                    />
                                  ) : null}
                                  <div
                                    data-plasmic-name={"icon24"}
                                    data-plasmic-override={overrides.icon24}
                                    className={classNames(
                                      projectcss.all,
                                      sty.icon24
                                    )}
                                  >
                                    {false ? (
                                      <Outlined8Icon
                                        className={classNames(
                                          projectcss.all,
                                          sty.svg__kRBa
                                        )}
                                        role={"img"}
                                      />
                                    ) : null}
                                    <Outlined8Icon
                                      className={classNames(
                                        projectcss.all,
                                        sty.svg__rFgma
                                      )}
                                      role={"img"}
                                    />
                                  </div>
                                </Stack__>
                              ) : null}
                              {false ? (
                                <Stack__
                                  as={"div"}
                                  data-plasmic-name={"leadingEnhancer24"}
                                  data-plasmic-override={
                                    overrides.leadingEnhancer24
                                  }
                                  hasGap={true}
                                  className={classNames(
                                    projectcss.all,
                                    sty.leadingEnhancer24
                                  )}
                                >
                                  <div
                                    data-plasmic-name={"heart59"}
                                    data-plasmic-override={overrides.heart59}
                                    className={classNames(
                                      projectcss.all,
                                      sty.heart59
                                    )}
                                  >
                                    {false ? (
                                      <Outlined5Icon
                                        className={classNames(
                                          projectcss.all,
                                          sty.svg__bNby0
                                        )}
                                        role={"img"}
                                      />
                                    ) : null}
                                    <Filled4Icon
                                      className={classNames(
                                        projectcss.all,
                                        sty.svg__ogZnm
                                      )}
                                      role={"img"}
                                    />
                                  </div>
                                </Stack__>
                              ) : null}
                              <Stack__
                                as={"div"}
                                data-plasmic-name={"textFrame24"}
                                data-plasmic-override={overrides.textFrame24}
                                hasGap={true}
                                className={classNames(
                                  projectcss.all,
                                  sty.textFrame24
                                )}
                              >
                                <div
                                  data-plasmic-name={"leadingText24"}
                                  data-plasmic-override={
                                    overrides.leadingText24
                                  }
                                  className={classNames(
                                    projectcss.all,
                                    sty.leadingText24
                                  )}
                                >
                                  <div
                                    data-plasmic-name={"typography82"}
                                    data-plasmic-override={
                                      overrides.typography82
                                    }
                                    className={classNames(
                                      projectcss.all,
                                      sty.typography82
                                    )}
                                  >
                                    {false ? (
                                      <div
                                        data-plasmic-name={
                                          "signedByBaseTypographyParagraphMedium70"
                                        }
                                        data-plasmic-override={
                                          overrides.signedByBaseTypographyParagraphMedium70
                                        }
                                        className={classNames(
                                          projectcss.all,
                                          sty.signedByBaseTypographyParagraphMedium70
                                        )}
                                      />
                                    ) : null}
                                    <div
                                      data-plasmic-name={"text153"}
                                      data-plasmic-override={overrides.text153}
                                      className={classNames(
                                        projectcss.all,
                                        projectcss.__wab_text,
                                        sty.text153
                                      )}
                                    >
                                      {"Options"}
                                    </div>
                                    {false ? (
                                      <div
                                        data-plasmic-name={"spacer142"}
                                        data-plasmic-override={
                                          overrides.spacer142
                                        }
                                        className={classNames(
                                          projectcss.all,
                                          sty.spacer142
                                        )}
                                      />
                                    ) : null}
                                  </div>
                                  {false ? (
                                    <div
                                      data-plasmic-name={"typography83"}
                                      data-plasmic-override={
                                        overrides.typography83
                                      }
                                      className={classNames(
                                        projectcss.all,
                                        sty.typography83
                                      )}
                                    >
                                      {false ? (
                                        <div
                                          data-plasmic-name={
                                            "signedByBaseTypographyParagraphMedium71"
                                          }
                                          data-plasmic-override={
                                            overrides.signedByBaseTypographyParagraphMedium71
                                          }
                                          className={classNames(
                                            projectcss.all,
                                            sty.signedByBaseTypographyParagraphMedium71
                                          )}
                                        />
                                      ) : null}
                                      <div
                                        data-plasmic-name={"text154"}
                                        data-plasmic-override={
                                          overrides.text154
                                        }
                                        className={classNames(
                                          projectcss.all,
                                          projectcss.__wab_text,
                                          sty.text154
                                        )}
                                      >
                                        {"Supporting text"}
                                      </div>
                                      {false ? (
                                        <div
                                          data-plasmic-name={"spacer143"}
                                          data-plasmic-override={
                                            overrides.spacer143
                                          }
                                          className={classNames(
                                            projectcss.all,
                                            sty.spacer143
                                          )}
                                        />
                                      ) : null}
                                    </div>
                                  ) : null}
                                </div>
                                {false ? (
                                  <div
                                    data-plasmic-name={"typography84"}
                                    data-plasmic-override={
                                      overrides.typography84
                                    }
                                    className={classNames(
                                      projectcss.all,
                                      sty.typography84
                                    )}
                                  >
                                    {false ? (
                                      <div
                                        data-plasmic-name={
                                          "signedByBaseTypographyParagraphMedium72"
                                        }
                                        data-plasmic-override={
                                          overrides.signedByBaseTypographyParagraphMedium72
                                        }
                                        className={classNames(
                                          projectcss.all,
                                          sty.signedByBaseTypographyParagraphMedium72
                                        )}
                                      />
                                    ) : null}
                                    <div
                                      className={classNames(
                                        projectcss.all,
                                        projectcss.__wab_text,
                                        sty.text__oxbyz
                                      )}
                                    >
                                      {"Text"}
                                    </div>
                                    {false ? (
                                      <div
                                        data-plasmic-name={"spacer144"}
                                        data-plasmic-override={
                                          overrides.spacer144
                                        }
                                        className={classNames(
                                          projectcss.all,
                                          sty.spacer144
                                        )}
                                      />
                                    ) : null}
                                  </div>
                                ) : null}
                              </Stack__>
                              {false ? (
                                <Stack__
                                  as={"div"}
                                  data-plasmic-name={"trailingEnhancer24"}
                                  data-plasmic-override={
                                    overrides.trailingEnhancer24
                                  }
                                  hasGap={true}
                                  className={classNames(
                                    projectcss.all,
                                    sty.trailingEnhancer24
                                  )}
                                >
                                  <div
                                    data-plasmic-name={"heart60"}
                                    data-plasmic-override={overrides.heart60}
                                    className={classNames(
                                      projectcss.all,
                                      sty.heart60
                                    )}
                                  >
                                    {false ? (
                                      <Outlined5Icon
                                        className={classNames(
                                          projectcss.all,
                                          sty.svg___3WdaC
                                        )}
                                        role={"img"}
                                      />
                                    ) : null}
                                    <Filled4Icon
                                      className={classNames(
                                        projectcss.all,
                                        sty.svg__motXd
                                      )}
                                      role={"img"}
                                    />
                                  </div>
                                </Stack__>
                              ) : null}
                            </Stack__>
                          ) : null}
                          <div
                            data-plasmic-name={"scrollBar6"}
                            data-plasmic-override={overrides.scrollBar6}
                            className={classNames(
                              projectcss.all,
                              sty.scrollBar6
                            )}
                          />
                        </div>
                      </div>
                    </Stack__>
                  ) : null}
                  <DropDown
                    data-plasmic-name={"model6"}
                    data-plasmic-override={overrides.model6}
                    check={false}
                    className={classNames("__wab_instance", sty.model6)}
                    label={"Mod\u00e8le de Runsheet & Dispositif*"}
                    options={["Default", "Special"]}
                    showLabel={true}
                    state={"default"}
                    type={"default"}
                  />

                  <Stack__
                    as={"div"}
                    data-plasmic-name={"buttons6"}
                    data-plasmic-override={overrides.buttons6}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.buttons6)}
                  >
                    <Button
                      data-plasmic-name={"button21"}
                      data-plasmic-override={overrides.button21}
                      className={classNames("__wab_instance", sty.button21)}
                      label={
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text___5YQ1
                          )}
                        >
                          {"Cr\u00e9er"}
                        </div>
                      }
                    />

                    {false ? (
                      <Stack__
                        as={"div"}
                        data-plasmic-name={"frame1073713929"}
                        data-plasmic-override={overrides.frame1073713929}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.frame1073713929
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox___3WXb1
                          )}
                        >
                          <Line9Icon
                            className={classNames(
                              projectcss.all,
                              sty.svg__f8CyJ
                            )}
                            role={"img"}
                          />
                        </div>
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__cVoHy
                          )}
                        >
                          {"OU"}
                        </div>
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__x4Cea
                          )}
                        >
                          <Line9Icon
                            className={classNames(
                              projectcss.all,
                              sty.svg__ycC6M
                            )}
                            role={"img"}
                          />
                        </div>
                      </Stack__>
                    ) : null}
                    {false ? (
                      <Stack__
                        as={"div"}
                        data-plasmic-name={"frame1073713935"}
                        data-plasmic-override={overrides.frame1073713935}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.frame1073713935
                        )}
                      >
                        <Button
                          data-plasmic-name={"button22"}
                          data-plasmic-override={overrides.button22}
                          className={classNames("__wab_instance", sty.button22)}
                        />

                        <Stack__
                          as={"div"}
                          data-plasmic-name={"button23"}
                          data-plasmic-override={overrides.button23}
                          hasGap={true}
                          className={classNames(projectcss.all, sty.button23)}
                        >
                          <IcTwotoneAppleIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg__dfPsD
                            )}
                            role={"img"}
                          />

                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__uKmc3
                            )}
                          >
                            {"Apple"}
                          </div>
                        </Stack__>
                        <Stack__
                          as={"div"}
                          data-plasmic-name={"button24"}
                          data-plasmic-override={overrides.button24}
                          hasGap={true}
                          className={classNames(projectcss.all, sty.button24)}
                        >
                          <MdiFacebookIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg__zQqFu
                            )}
                            role={"img"}
                          />

                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__sJteH
                            )}
                          >
                            {"Facebook"}
                          </div>
                        </Stack__>
                      </Stack__>
                    ) : null}
                  </Stack__>
                </Stack__>
              </React.Fragment>
            }
            footer={
              <div className={classNames(projectcss.all, sty.freeBox__mnTCn)} />
            }
            heading={
              <div
                data-plasmic-name={"frame1437254030"}
                data-plasmic-override={overrides.frame1437254030}
                className={classNames(projectcss.all, sty.frame1437254030)}
              >
                <div
                  data-plasmic-name={"name12"}
                  data-plasmic-override={overrides.name12}
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.name12
                  )}
                >
                  {"Dupliquer cet \u00e9l\u00e9ment ?"}
                </div>
                <Stack__
                  as={"div"}
                  data-plasmic-name={"frame1437254031"}
                  data-plasmic-override={overrides.frame1437254031}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.frame1437254031)}
                >
                  <LinkSimpleIcon
                    className={classNames(projectcss.all, sty.svg__uOzBi)}
                    role={"img"}
                  />

                  <XIcon
                    className={classNames(projectcss.all, sty.svg__gOl9O)}
                    onClick={async event => {
                      const $steps = {};

                      $steps["updateDuplicateDispo"] = true
                        ? (() => {
                            const actionArgs = {
                              variable: {
                                objRoot: $state,
                                variablePath: ["duplicateDispo"]
                              },
                              operation: 0,
                              value: false
                            };
                            return (({
                              variable,
                              value,
                              startIndex,
                              deleteCount
                            }) => {
                              if (!variable) {
                                return;
                              }
                              const { objRoot, variablePath } = variable;

                              $stateSet(objRoot, variablePath, value);
                              return value;
                            })?.apply(null, [actionArgs]);
                          })()
                        : undefined;
                      if (
                        $steps["updateDuplicateDispo"] != null &&
                        typeof $steps["updateDuplicateDispo"] === "object" &&
                        typeof $steps["updateDuplicateDispo"].then ===
                          "function"
                      ) {
                        $steps["updateDuplicateDispo"] = await $steps[
                          "updateDuplicateDispo"
                        ];
                      }
                    }}
                    role={"img"}
                  />
                </Stack__>
              </div>
            }
            isOpen={generateStateValueProp($state, [
              "duplicateDispo3",
              "isOpen"
            ])}
            noTrigger={true}
            onOpenChange={async (...eventArgs: any) => {
              generateStateOnChangeProp($state, [
                "duplicateDispo3",
                "isOpen"
              ]).apply(null, eventArgs);

              if (
                eventArgs.length > 1 &&
                eventArgs[1] &&
                eventArgs[1]._plasmic_state_init_
              ) {
                return;
              }

              (async val => {
                const $steps = {};

                $steps["updateDuplicateDispo"] = true
                  ? (() => {
                      const actionArgs = {
                        variable: {
                          objRoot: $state,
                          variablePath: ["duplicateDispo"]
                        },
                        operation: 4
                      };
                      return (({
                        variable,
                        value,
                        startIndex,
                        deleteCount
                      }) => {
                        if (!variable) {
                          return;
                        }
                        const { objRoot, variablePath } = variable;

                        const oldValue = $stateGet(objRoot, variablePath);
                        $stateSet(objRoot, variablePath, !oldValue);
                        return !oldValue;
                      })?.apply(null, [actionArgs]);
                    })()
                  : undefined;
                if (
                  $steps["updateDuplicateDispo"] != null &&
                  typeof $steps["updateDuplicateDispo"] === "object" &&
                  typeof $steps["updateDuplicateDispo"].then === "function"
                ) {
                  $steps["updateDuplicateDispo"] = await $steps[
                    "updateDuplicateDispo"
                  ];
                }
              }).apply(null, eventArgs);
            }}
            showFooter={false}
            trigger={null}
          />

          <div
            data-plasmic-name={"container"}
            data-plasmic-override={overrides.container}
            className={classNames(projectcss.all, sty.container)}
          >
            <LeftMenu
              data-plasmic-name={"leftMenu"}
              data-plasmic-override={overrides.leftMenu}
              className={classNames("__wab_instance", sty.leftMenu)}
              onSubMenuParamsChange={async (...eventArgs: any) => {
                generateStateOnChangeProp($state, [
                  "leftMenu",
                  "subMenuParams"
                ]).apply(null, eventArgs);

                if (
                  eventArgs.length > 1 &&
                  eventArgs[1] &&
                  eventArgs[1]._plasmic_state_init_
                ) {
                  return;
                }
              }}
            />

            <div
              data-plasmic-name={"main"}
              data-plasmic-override={overrides.main}
              className={classNames(projectcss.all, sty.main)}
            >
              <div
                data-plasmic-name={"header2"}
                data-plasmic-override={overrides.header2}
                className={classNames(projectcss.all, sty.header2)}
              >
                <Header
                  data-plasmic-name={"header"}
                  data-plasmic-override={overrides.header}
                  className={classNames("__wab_instance", sty.header)}
                  onMoisChange={async (...eventArgs: any) => {
                    generateStateOnChangeProp($state, ["header", "mois"]).apply(
                      null,
                      eventArgs
                    );

                    if (
                      eventArgs.length > 1 &&
                      eventArgs[1] &&
                      eventArgs[1]._plasmic_state_init_
                    ) {
                      return;
                    }
                  }}
                  onOperationIdChange2={async (...eventArgs: any) => {
                    generateStateOnChangeProp($state, [
                      "header",
                      "operationId"
                    ]).apply(null, eventArgs);

                    if (
                      eventArgs.length > 1 &&
                      eventArgs[1] &&
                      eventArgs[1]._plasmic_state_init_
                    ) {
                      return;
                    }
                  }}
                  onRunsheetChange={async (...eventArgs: any) => {
                    generateStateOnChangeProp($state, [
                      "header",
                      "runsheet"
                    ]).apply(null, eventArgs);

                    if (
                      eventArgs.length > 1 &&
                      eventArgs[1] &&
                      eventArgs[1]._plasmic_state_init_
                    ) {
                      return;
                    }
                  }}
                  onUserClientIdChange={async (...eventArgs: any) => {
                    generateStateOnChangeProp($state, [
                      "header",
                      "userClientId"
                    ]).apply(null, eventArgs);

                    if (
                      eventArgs.length > 1 &&
                      eventArgs[1] &&
                      eventArgs[1]._plasmic_state_init_
                    ) {
                      return;
                    }
                  }}
                  operationId={generateStateValueProp($state, [
                    "header",
                    "operationId"
                  ])}
                  runsheet={generateStateValueProp($state, [
                    "header",
                    "runsheet"
                  ])}
                />
              </div>
              <TabsContainer
                data-plasmic-name={"tabsContainer"}
                data-plasmic-override={overrides.tabsContainer}
                initialKey={(() => {
                  try {
                    return $state.tabs2[0].id;
                  } catch (e) {
                    if (
                      e instanceof TypeError ||
                      e?.plasmicType === "PlasmicUndefinedDataError"
                    ) {
                      return undefined;
                    }
                    throw e;
                  }
                })()}
                previewAll={false}
              >
                <DataCtxReader__>
                  {$ctx => (
                    <Stack__
                      as={"div"}
                      data-plasmic-name={"mainContainer"}
                      data-plasmic-override={overrides.mainContainer}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.mainContainer)}
                    >
                      <div
                        data-plasmic-name={"tabButtons"}
                        data-plasmic-override={overrides.tabButtons}
                        className={classNames(projectcss.all, sty.tabButtons)}
                      >
                        {(_par =>
                          !_par ? [] : Array.isArray(_par) ? _par : [_par])(
                          (() => {
                            try {
                              return $state.tabs2;
                            } catch (e) {
                              if (
                                e instanceof TypeError ||
                                e?.plasmicType === "PlasmicUndefinedDataError"
                              ) {
                                return [];
                              }
                              throw e;
                            }
                          })()
                        ).map((__plasmic_item_0, __plasmic_idx_0) => {
                          const currentItem = __plasmic_item_0;
                          const currentIndex = __plasmic_idx_0;
                          return (
                            <TabButton
                              data-plasmic-name={"tabButton"}
                              data-plasmic-override={overrides.tabButton}
                              className={classNames(
                                "__wab_instance",
                                sty.tabButton
                              )}
                              key={currentIndex}
                              tabKey={(() => {
                                try {
                                  return currentItem.id;
                                } catch (e) {
                                  if (
                                    e instanceof TypeError ||
                                    e?.plasmicType ===
                                      "PlasmicUndefinedDataError"
                                  ) {
                                    return undefined;
                                  }
                                  throw e;
                                }
                              })()}
                            >
                              <Button
                                className={classNames(
                                  "__wab_instance",
                                  sty.button__msYAg
                                )}
                                label={
                                  <div
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.__wab_text,
                                      sty.text__kc2HX
                                    )}
                                  >
                                    <React.Fragment>
                                      {(() => {
                                        try {
                                          return currentItem.label;
                                        } catch (e) {
                                          if (
                                            e instanceof TypeError ||
                                            e?.plasmicType ===
                                              "PlasmicUndefinedDataError"
                                          ) {
                                            return "Text";
                                          }
                                          throw e;
                                        }
                                      })()}
                                    </React.Fragment>
                                  </div>
                                }
                                type={"tag"}
                              />
                            </TabButton>
                          );
                        })}
                        <TabUnderline
                          data-plasmic-name={"tabUnderline"}
                          data-plasmic-override={overrides.tabUnderline}
                          className={classNames(
                            "__wab_instance",
                            sty.tabUnderline
                          )}
                        />
                      </div>
                      <div
                        data-plasmic-name={"filters"}
                        data-plasmic-override={overrides.filters}
                        className={classNames(projectcss.all, sty.filters)}
                      >
                        <Button
                          data-plasmic-name={"buttonFilter"}
                          data-plasmic-override={overrides.buttonFilter}
                          className={classNames(
                            "__wab_instance",
                            sty.buttonFilter
                          )}
                          disabled={true}
                          end={
                            <PlusIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__yzqlB
                              )}
                              role={"img"}
                            />
                          }
                          iconStart={true}
                          label={
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text___1XTwI
                              )}
                            >
                              {"Filtrer"}
                            </div>
                          }
                          start={
                            <SlidersHorizontalIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__vgYb3
                              )}
                              role={"img"}
                            />
                          }
                          type={"secondary"}
                        />

                        {(() => {
                          try {
                            return $ctx.currentTabKey == 1;
                          } catch (e) {
                            if (
                              e instanceof TypeError ||
                              e?.plasmicType === "PlasmicUndefinedDataError"
                            ) {
                              return false;
                            }
                            throw e;
                          }
                        })() ? (
                          <Button
                            data-plasmic-name={"buttonAddAction"}
                            data-plasmic-override={overrides.buttonAddAction}
                            className={classNames(
                              "__wab_instance",
                              sty.buttonAddAction
                            )}
                            end={
                              <PlusIcon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__sVy1S
                                )}
                                role={"img"}
                              />
                            }
                            iconEnd={true}
                            label={
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__iIdXf
                                )}
                              >
                                {"Cr\u00e9er une nouvelle action"}
                              </div>
                            }
                            onClick={async event => {
                              const $steps = {};

                              $steps["updateVariable"] = true
                                ? (() => {
                                    const actionArgs = {
                                      variable: {
                                        objRoot: $state,
                                        variablePath: ["createTask", "open"]
                                      },
                                      operation: 0,
                                      value: true
                                    };
                                    return (({
                                      variable,
                                      value,
                                      startIndex,
                                      deleteCount
                                    }) => {
                                      if (!variable) {
                                        return;
                                      }
                                      const { objRoot, variablePath } =
                                        variable;

                                      $stateSet(objRoot, variablePath, value);
                                      return value;
                                    })?.apply(null, [actionArgs]);
                                  })()
                                : undefined;
                              if (
                                $steps["updateVariable"] != null &&
                                typeof $steps["updateVariable"] === "object" &&
                                typeof $steps["updateVariable"].then ===
                                  "function"
                              ) {
                                $steps["updateVariable"] = await $steps[
                                  "updateVariable"
                                ];
                              }
                            }}
                          />
                        ) : null}
                        {(() => {
                          try {
                            return $ctx.currentTabKey == 2;
                          } catch (e) {
                            if (
                              e instanceof TypeError ||
                              e?.plasmicType === "PlasmicUndefinedDataError"
                            ) {
                              return false;
                            }
                            throw e;
                          }
                        })() ? (
                          <Button
                            data-plasmic-name={"buttonAddStaff"}
                            data-plasmic-override={overrides.buttonAddStaff}
                            className={classNames(
                              "__wab_instance",
                              sty.buttonAddStaff
                            )}
                            end={
                              <PlusIcon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__h1Kig
                                )}
                                role={"img"}
                              />
                            }
                            iconEnd={true}
                            label={
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text___7UJu9
                                )}
                              >
                                {"Cr\u00e9er un nouveau dispositif"}
                              </div>
                            }
                            onClick={async event => {
                              const $steps = {};

                              $steps["updateVariable"] = true
                                ? (() => {
                                    const actionArgs = {
                                      variable: {
                                        objRoot: $state,
                                        variablePath: ["createDispo", "open"]
                                      },
                                      operation: 0,
                                      value: true
                                    };
                                    return (({
                                      variable,
                                      value,
                                      startIndex,
                                      deleteCount
                                    }) => {
                                      if (!variable) {
                                        return;
                                      }
                                      const { objRoot, variablePath } =
                                        variable;

                                      $stateSet(objRoot, variablePath, value);
                                      return value;
                                    })?.apply(null, [actionArgs]);
                                  })()
                                : undefined;
                              if (
                                $steps["updateVariable"] != null &&
                                typeof $steps["updateVariable"] === "object" &&
                                typeof $steps["updateVariable"].then ===
                                  "function"
                              ) {
                                $steps["updateVariable"] = await $steps[
                                  "updateVariable"
                                ];
                              }
                            }}
                          />
                        ) : null}
                        {(() => {
                          try {
                            return $ctx.currentTabKey == 3;
                          } catch (e) {
                            if (
                              e instanceof TypeError ||
                              e?.plasmicType === "PlasmicUndefinedDataError"
                            ) {
                              return false;
                            }
                            throw e;
                          }
                        })() ? (
                          <Button
                            data-plasmic-name={"buttonAddDoc"}
                            data-plasmic-override={overrides.buttonAddDoc}
                            className={classNames(
                              "__wab_instance",
                              sty.buttonAddDoc
                            )}
                            end={
                              <PlusIcon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__xvrOm
                                )}
                                role={"img"}
                              />
                            }
                            iconEnd={true}
                            label={
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text___2HBj
                                )}
                              >
                                {"Importer un nouveau document"}
                              </div>
                            }
                            onClick={async event => {
                              const $steps = {};

                              $steps["updateVariable"] = true
                                ? (() => {
                                    const actionArgs = {
                                      variable: {
                                        objRoot: $state,
                                        variablePath: ["newDoc"]
                                      },
                                      operation: 0,
                                      value: true
                                    };
                                    return (({
                                      variable,
                                      value,
                                      startIndex,
                                      deleteCount
                                    }) => {
                                      if (!variable) {
                                        return;
                                      }
                                      const { objRoot, variablePath } =
                                        variable;

                                      $stateSet(objRoot, variablePath, value);
                                      return value;
                                    })?.apply(null, [actionArgs]);
                                  })()
                                : undefined;
                              if (
                                $steps["updateVariable"] != null &&
                                typeof $steps["updateVariable"] === "object" &&
                                typeof $steps["updateVariable"].then ===
                                  "function"
                              ) {
                                $steps["updateVariable"] = await $steps[
                                  "updateVariable"
                                ];
                              }
                            }}
                          />
                        ) : null}
                      </div>
                      <div
                        data-plasmic-name={"tabContainers"}
                        data-plasmic-override={overrides.tabContainers}
                        className={classNames(
                          projectcss.all,
                          sty.tabContainers
                        )}
                      >
                        <TabContent
                          data-plasmic-name={"_1"}
                          data-plasmic-override={overrides._1}
                          className={classNames("__wab_instance", sty._1)}
                          tabKey={(() => {
                            try {
                              return 1;
                            } catch (e) {
                              if (
                                e instanceof TypeError ||
                                e?.plasmicType === "PlasmicUndefinedDataError"
                              ) {
                                return undefined;
                              }
                              throw e;
                            }
                          })()}
                        >
                          <div
                            data-plasmic-name={"runsheet"}
                            data-plasmic-override={overrides.runsheet}
                            className={classNames(projectcss.all, sty.runsheet)}
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                sty.freeBox___9CxdZ
                              )}
                            >
                              <DataGrid
                                className={classNames(
                                  "__wab_instance",
                                  sty.dataGrid___6Neqb
                                )}
                                columnLabels={{}}
                                currentPage={1}
                                emptyStateMessage={"Aucune donnée disponible"}
                                enableColumnReordering={true}
                                enableExport={false}
                                enablePrint={false}
                                exportFormats={"excel"}
                                monetaryColumns={["budget"]}
                                numericColumns={["budget"]}
                                onCopyClick={async taskId => {
                                  const $steps = {};

                                  $steps["updateDuplicateRunsheet"] = true
                                    ? (() => {
                                        const actionArgs = {
                                          variable: {
                                            objRoot: $state,
                                            variablePath: ["duplicateRunsheet"]
                                          },
                                          operation: 0,
                                          value: true
                                        };
                                        return (({
                                          variable,
                                          value,
                                          startIndex,
                                          deleteCount
                                        }) => {
                                          if (!variable) {
                                            return;
                                          }
                                          const { objRoot, variablePath } =
                                            variable;

                                          $stateSet(
                                            objRoot,
                                            variablePath,
                                            value
                                          );
                                          return value;
                                        })?.apply(null, [actionArgs]);
                                      })()
                                    : undefined;
                                  if (
                                    $steps["updateDuplicateRunsheet"] != null &&
                                    typeof $steps["updateDuplicateRunsheet"] ===
                                      "object" &&
                                    typeof $steps["updateDuplicateRunsheet"]
                                      .then === "function"
                                  ) {
                                    $steps["updateDuplicateRunsheet"] =
                                      await $steps["updateDuplicateRunsheet"];
                                  }

                                  $steps["updateTaskId"] = true
                                    ? (() => {
                                        const actionArgs = {
                                          variable: {
                                            objRoot: $state,
                                            variablePath: ["taskId"]
                                          },
                                          operation: 0,
                                          value: taskId
                                        };
                                        return (({
                                          variable,
                                          value,
                                          startIndex,
                                          deleteCount
                                        }) => {
                                          if (!variable) {
                                            return;
                                          }
                                          const { objRoot, variablePath } =
                                            variable;

                                          $stateSet(
                                            objRoot,
                                            variablePath,
                                            value
                                          );
                                          return value;
                                        })?.apply(null, [actionArgs]);
                                      })()
                                    : undefined;
                                  if (
                                    $steps["updateTaskId"] != null &&
                                    typeof $steps["updateTaskId"] ===
                                      "object" &&
                                    typeof $steps["updateTaskId"].then ===
                                      "function"
                                  ) {
                                    $steps["updateTaskId"] = await $steps[
                                      "updateTaskId"
                                    ];
                                  }
                                }}
                                onDeleteClick={async taskId => {
                                  const $steps = {};

                                  $steps["updateDeleteTask"] = true
                                    ? (() => {
                                        const actionArgs = {
                                          variable: {
                                            objRoot: $state,
                                            variablePath: ["deleteTask"]
                                          },
                                          operation: 0,
                                          value: true
                                        };
                                        return (({
                                          variable,
                                          value,
                                          startIndex,
                                          deleteCount
                                        }) => {
                                          if (!variable) {
                                            return;
                                          }
                                          const { objRoot, variablePath } =
                                            variable;

                                          $stateSet(
                                            objRoot,
                                            variablePath,
                                            value
                                          );
                                          return value;
                                        })?.apply(null, [actionArgs]);
                                      })()
                                    : undefined;
                                  if (
                                    $steps["updateDeleteTask"] != null &&
                                    typeof $steps["updateDeleteTask"] ===
                                      "object" &&
                                    typeof $steps["updateDeleteTask"].then ===
                                      "function"
                                  ) {
                                    $steps["updateDeleteTask"] = await $steps[
                                      "updateDeleteTask"
                                    ];
                                  }

                                  $steps["updateTaskId"] = true
                                    ? (() => {
                                        const actionArgs = {
                                          variable: {
                                            objRoot: $state,
                                            variablePath: ["taskId"]
                                          },
                                          operation: 0,
                                          value: taskId
                                        };
                                        return (({
                                          variable,
                                          value,
                                          startIndex,
                                          deleteCount
                                        }) => {
                                          if (!variable) {
                                            return;
                                          }
                                          const { objRoot, variablePath } =
                                            variable;

                                          $stateSet(
                                            objRoot,
                                            variablePath,
                                            value
                                          );
                                          return value;
                                        })?.apply(null, [actionArgs]);
                                      })()
                                    : undefined;
                                  if (
                                    $steps["updateTaskId"] != null &&
                                    typeof $steps["updateTaskId"] ===
                                      "object" &&
                                    typeof $steps["updateTaskId"].then ===
                                      "function"
                                  ) {
                                    $steps["updateTaskId"] = await $steps[
                                      "updateTaskId"
                                    ];
                                  }
                                }}
                                onEditClick={async taskId => {
                                  const $steps = {};

                                  $steps["taskId"] = true
                                    ? (() => {
                                        const actionArgs = {
                                          variable: {
                                            objRoot: $state,
                                            variablePath: [
                                              "updateTask2",
                                              "taskIdUpdate"
                                            ]
                                          },
                                          operation: 0,
                                          value: taskId
                                        };
                                        return (({
                                          variable,
                                          value,
                                          startIndex,
                                          deleteCount
                                        }) => {
                                          if (!variable) {
                                            return;
                                          }
                                          const { objRoot, variablePath } =
                                            variable;

                                          $stateSet(
                                            objRoot,
                                            variablePath,
                                            value
                                          );
                                          return value;
                                        })?.apply(null, [actionArgs]);
                                      })()
                                    : undefined;
                                  if (
                                    $steps["taskId"] != null &&
                                    typeof $steps["taskId"] === "object" &&
                                    typeof $steps["taskId"].then === "function"
                                  ) {
                                    $steps["taskId"] = await $steps["taskId"];
                                  }

                                  $steps["taskDispo"] = true
                                    ? (() => {
                                        const actionArgs = {
                                          variable: {
                                            objRoot: $state,
                                            variablePath: [
                                              "updateTask2",
                                              "stateTaskDispo"
                                            ]
                                          },
                                          operation: 0,
                                          value:
                                            $queries.mdTaskDispo.data.filter(
                                              d =>
                                                Number(d.task_id) ==
                                                Number(
                                                  $state.updateTask2
                                                    .taskIdUpdate
                                                )
                                            )
                                        };
                                        return (({
                                          variable,
                                          value,
                                          startIndex,
                                          deleteCount
                                        }) => {
                                          if (!variable) {
                                            return;
                                          }
                                          const { objRoot, variablePath } =
                                            variable;

                                          $stateSet(
                                            objRoot,
                                            variablePath,
                                            value
                                          );
                                          return value;
                                        })?.apply(null, [actionArgs]);
                                      })()
                                    : undefined;
                                  if (
                                    $steps["taskDispo"] != null &&
                                    typeof $steps["taskDispo"] === "object" &&
                                    typeof $steps["taskDispo"].then ===
                                      "function"
                                  ) {
                                    $steps["taskDispo"] = await $steps[
                                      "taskDispo"
                                    ];
                                  }

                                  $steps["open"] = true
                                    ? (() => {
                                        const actionArgs = {
                                          variable: {
                                            objRoot: $state,
                                            variablePath: [
                                              "updateTask2",
                                              "open"
                                            ]
                                          },
                                          operation: 0,
                                          value: true
                                        };
                                        return (({
                                          variable,
                                          value,
                                          startIndex,
                                          deleteCount
                                        }) => {
                                          if (!variable) {
                                            return;
                                          }
                                          const { objRoot, variablePath } =
                                            variable;

                                          $stateSet(
                                            objRoot,
                                            variablePath,
                                            value
                                          );
                                          return value;
                                        })?.apply(null, [actionArgs]);
                                      })()
                                    : undefined;
                                  if (
                                    $steps["open"] != null &&
                                    typeof $steps["open"] === "object" &&
                                    typeof $steps["open"].then === "function"
                                  ) {
                                    $steps["open"] = await $steps["open"];
                                  }
                                }}
                                pageSize={100}
                                pdfTitle={"Sitex - Commande"}
                                responsive={{
                                  minWidth: "100%",
                                  horizontalOverflow: "auto",
                                  verticalOverflow: "auto",
                                  stickyHeader: true,
                                  compactOnMobile: true,
                                  breakpoint: 768
                                }}
                                showActions={true}
                                tasks={(() => {
                                  try {
                                    return $queries.mdTasksModel.data.map(
                                      task => ({
                                        id: task.id,
                                        Titre: task.title,
                                        "Date de début": task.date_start,
                                        "Début de l'opération":
                                          task.starting_task ? "Oui" : "",
                                        Description: task.general_description,
                                        Précisions: task.precisions
                                      })
                                    );
                                  } catch (e) {
                                    if (
                                      e instanceof TypeError ||
                                      e?.plasmicType ===
                                        "PlasmicUndefinedDataError"
                                    ) {
                                      return [];
                                    }
                                    throw e;
                                  }
                                })()}
                                theme={{
                                  headerBgColor: "#ECE6DF",
                                  rowBgColor: "#ffffff",
                                  hoverBgColor: "#f9f5ff",
                                  borderColor: "#d9cdbf",
                                  textColor: "#333333",
                                  fontSize: "14px",
                                  dragHandleColor: "#6B21A8"
                                }}
                              />
                            </div>
                          </div>
                        </TabContent>
                        <TabContent
                          data-plasmic-name={"_2"}
                          data-plasmic-override={overrides._2}
                          className={classNames("__wab_instance", sty._2)}
                          tabKey={(() => {
                            try {
                              return 2;
                            } catch (e) {
                              if (
                                e instanceof TypeError ||
                                e?.plasmicType === "PlasmicUndefinedDataError"
                              ) {
                                return undefined;
                              }
                              throw e;
                            }
                          })()}
                        >
                          <div
                            data-plasmic-name={"dispositif"}
                            data-plasmic-override={overrides.dispositif}
                            className={classNames(
                              projectcss.all,
                              sty.dispositif
                            )}
                          >
                            <DataGrid
                              className={classNames(
                                "__wab_instance",
                                sty.dataGrid__wZeIi
                              )}
                              columnLabels={{
                                role_name: "Nom fonction",
                                id_sitex: "Matricule",
                                description: "Description",
                                main_mission: "Mission principale"
                              }}
                              currentPage={1}
                              emptyStateMessage={"Aucune donnée disponible"}
                              enableColumnReordering={true}
                              enableExport={false}
                              enablePrint={false}
                              exportFormats={"excel"}
                              monetaryColumns={["budget"]}
                              numericColumns={["budget"]}
                              onCopyClick={async taskId => {
                                const $steps = {};

                                $steps["updateDuplicateDispo"] = true
                                  ? (() => {
                                      const actionArgs = {
                                        variable: {
                                          objRoot: $state,
                                          variablePath: ["duplicateDispo"]
                                        },
                                        operation: 0,
                                        value: true
                                      };
                                      return (({
                                        variable,
                                        value,
                                        startIndex,
                                        deleteCount
                                      }) => {
                                        if (!variable) {
                                          return;
                                        }
                                        const { objRoot, variablePath } =
                                          variable;

                                        $stateSet(objRoot, variablePath, value);
                                        return value;
                                      })?.apply(null, [actionArgs]);
                                    })()
                                  : undefined;
                                if (
                                  $steps["updateDuplicateDispo"] != null &&
                                  typeof $steps["updateDuplicateDispo"] ===
                                    "object" &&
                                  typeof $steps["updateDuplicateDispo"].then ===
                                    "function"
                                ) {
                                  $steps["updateDuplicateDispo"] = await $steps[
                                    "updateDuplicateDispo"
                                  ];
                                }

                                $steps["updateDispoId"] = true
                                  ? (() => {
                                      const actionArgs = {
                                        variable: {
                                          objRoot: $state,
                                          variablePath: ["dispoId"]
                                        },
                                        operation: 0,
                                        value: taskId
                                      };
                                      return (({
                                        variable,
                                        value,
                                        startIndex,
                                        deleteCount
                                      }) => {
                                        if (!variable) {
                                          return;
                                        }
                                        const { objRoot, variablePath } =
                                          variable;

                                        $stateSet(objRoot, variablePath, value);
                                        return value;
                                      })?.apply(null, [actionArgs]);
                                    })()
                                  : undefined;
                                if (
                                  $steps["updateDispoId"] != null &&
                                  typeof $steps["updateDispoId"] === "object" &&
                                  typeof $steps["updateDispoId"].then ===
                                    "function"
                                ) {
                                  $steps["updateDispoId"] = await $steps[
                                    "updateDispoId"
                                  ];
                                }
                              }}
                              onDeleteClick={async taskId => {
                                const $steps = {};

                                $steps["updateDeleteDispo2"] = true
                                  ? (() => {
                                      const actionArgs = {
                                        variable: {
                                          objRoot: $state,
                                          variablePath: ["deleteDispo2"]
                                        },
                                        operation: 0,
                                        value: true
                                      };
                                      return (({
                                        variable,
                                        value,
                                        startIndex,
                                        deleteCount
                                      }) => {
                                        if (!variable) {
                                          return;
                                        }
                                        const { objRoot, variablePath } =
                                          variable;

                                        $stateSet(objRoot, variablePath, value);
                                        return value;
                                      })?.apply(null, [actionArgs]);
                                    })()
                                  : undefined;
                                if (
                                  $steps["updateDeleteDispo2"] != null &&
                                  typeof $steps["updateDeleteDispo2"] ===
                                    "object" &&
                                  typeof $steps["updateDeleteDispo2"].then ===
                                    "function"
                                ) {
                                  $steps["updateDeleteDispo2"] = await $steps[
                                    "updateDeleteDispo2"
                                  ];
                                }

                                $steps["updateDeleteDispo22"] = true
                                  ? (() => {
                                      const actionArgs = {
                                        variable: {
                                          objRoot: $state,
                                          variablePath: ["dispoId"]
                                        },
                                        operation: 0,
                                        value: taskId
                                      };
                                      return (({
                                        variable,
                                        value,
                                        startIndex,
                                        deleteCount
                                      }) => {
                                        if (!variable) {
                                          return;
                                        }
                                        const { objRoot, variablePath } =
                                          variable;

                                        $stateSet(objRoot, variablePath, value);
                                        return value;
                                      })?.apply(null, [actionArgs]);
                                    })()
                                  : undefined;
                                if (
                                  $steps["updateDeleteDispo22"] != null &&
                                  typeof $steps["updateDeleteDispo22"] ===
                                    "object" &&
                                  typeof $steps["updateDeleteDispo22"].then ===
                                    "function"
                                ) {
                                  $steps["updateDeleteDispo22"] = await $steps[
                                    "updateDeleteDispo22"
                                  ];
                                }
                              }}
                              onEditClick={async taskId => {
                                const $steps = {};

                                $steps["dispoId"] = true
                                  ? (() => {
                                      const actionArgs = {
                                        variable: {
                                          objRoot: $state,
                                          variablePath: [
                                            "updateDispo",
                                            "dispoIdUpdate"
                                          ]
                                        },
                                        operation: 0,
                                        value: taskId
                                      };
                                      return (({
                                        variable,
                                        value,
                                        startIndex,
                                        deleteCount
                                      }) => {
                                        if (!variable) {
                                          return;
                                        }
                                        const { objRoot, variablePath } =
                                          variable;

                                        $stateSet(objRoot, variablePath, value);
                                        return value;
                                      })?.apply(null, [actionArgs]);
                                    })()
                                  : undefined;
                                if (
                                  $steps["dispoId"] != null &&
                                  typeof $steps["dispoId"] === "object" &&
                                  typeof $steps["dispoId"].then === "function"
                                ) {
                                  $steps["dispoId"] = await $steps["dispoId"];
                                }

                                $steps["taskDispo"] = true
                                  ? (() => {
                                      const actionArgs = {
                                        variable: {
                                          objRoot: $state,
                                          variablePath: [
                                            "updateDispo",
                                            "stateTaskDispo2"
                                          ]
                                        },
                                        operation: 0,
                                        value: $queries.mdTaskDispo.data.filter(
                                          da =>
                                            Number(da.dispositif_id) ==
                                            Number(
                                              $state.updateDispo.dispoIdUpdate
                                            )
                                        )
                                      };
                                      return (({
                                        variable,
                                        value,
                                        startIndex,
                                        deleteCount
                                      }) => {
                                        if (!variable) {
                                          return;
                                        }
                                        const { objRoot, variablePath } =
                                          variable;

                                        $stateSet(objRoot, variablePath, value);
                                        return value;
                                      })?.apply(null, [actionArgs]);
                                    })()
                                  : undefined;
                                if (
                                  $steps["taskDispo"] != null &&
                                  typeof $steps["taskDispo"] === "object" &&
                                  typeof $steps["taskDispo"].then === "function"
                                ) {
                                  $steps["taskDispo"] = await $steps[
                                    "taskDispo"
                                  ];
                                }

                                $steps["open"] = true
                                  ? (() => {
                                      const actionArgs = {
                                        variable: {
                                          objRoot: $state,
                                          variablePath: ["updateDispo", "open"]
                                        },
                                        operation: 0,
                                        value: true
                                      };
                                      return (({
                                        variable,
                                        value,
                                        startIndex,
                                        deleteCount
                                      }) => {
                                        if (!variable) {
                                          return;
                                        }
                                        const { objRoot, variablePath } =
                                          variable;

                                        $stateSet(objRoot, variablePath, value);
                                        return value;
                                      })?.apply(null, [actionArgs]);
                                    })()
                                  : undefined;
                                if (
                                  $steps["open"] != null &&
                                  typeof $steps["open"] === "object" &&
                                  typeof $steps["open"].then === "function"
                                ) {
                                  $steps["open"] = await $steps["open"];
                                }
                              }}
                              pageSize={10}
                              pdfTitle={"Sitex - Commande"}
                              responsive={{
                                minWidth: "100%",
                                horizontalOverflow: "auto",
                                verticalOverflow: "auto",
                                stickyHeader: true,
                                compactOnMobile: true,
                                breakpoint: 768
                              }}
                              showActions={true}
                              tasks={(() => {
                                try {
                                  return $queries.mdDispositif.data.map(
                                    item => ({
                                      id: item.id,
                                      role_name: item.role_name,
                                      id_sitex: item.id_sitex,
                                      description: item.description
                                    })
                                  );
                                } catch (e) {
                                  if (
                                    e instanceof TypeError ||
                                    e?.plasmicType ===
                                      "PlasmicUndefinedDataError"
                                  ) {
                                    return [];
                                  }
                                  throw e;
                                }
                              })()}
                              theme={{
                                headerBgColor: "#ECE6DF",
                                rowBgColor: "#ffffff",
                                hoverBgColor: "#f9f5ff",
                                borderColor: "#d9cdbf",
                                textColor: "#333333",
                                fontSize: "14px",
                                dragHandleColor: "#6B21A8"
                              }}
                            />
                          </div>
                        </TabContent>
                        <TabContent
                          data-plasmic-name={"_3"}
                          data-plasmic-override={overrides._3}
                          className={classNames("__wab_instance", sty._3)}
                          tabKey={(() => {
                            try {
                              return 3;
                            } catch (e) {
                              if (
                                e instanceof TypeError ||
                                e?.plasmicType === "PlasmicUndefinedDataError"
                              ) {
                                return undefined;
                              }
                              throw e;
                            }
                          })()}
                        >
                          <Stack__
                            as={"div"}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__g3Q4
                            )}
                          >
                            <Modal
                              data-plasmic-name={"uploadFile"}
                              data-plasmic-override={overrides.uploadFile}
                              className={classNames(
                                "__wab_instance",
                                sty.uploadFile
                              )}
                              closeOnBackdropClick={true}
                              content={
                                <React.Fragment>
                                  <Stack__
                                    as={"div"}
                                    data-plasmic-name={"files2"}
                                    data-plasmic-override={overrides.files2}
                                    hasGap={true}
                                    className={classNames(
                                      projectcss.all,
                                      sty.files2
                                    )}
                                  >
                                    <div
                                      className={classNames(
                                        projectcss.all,
                                        projectcss.__wab_text,
                                        sty.text__jgGoX
                                      )}
                                    >
                                      <React.Fragment>
                                        <span
                                          className={
                                            "plasmic_default__all plasmic_default__span"
                                          }
                                          style={{ fontWeight: 700 }}
                                        >
                                          {"Fichier attach\u00e9"}
                                        </span>
                                      </React.Fragment>
                                    </div>
                                    <UploadWrapper
                                      data-plasmic-name={"upload5"}
                                      data-plasmic-override={overrides.upload5}
                                      accept={""}
                                      className={classNames(
                                        "__wab_instance",
                                        sty.upload5
                                      )}
                                      dragAndDropFiles={true}
                                      files={generateStateValueProp($state, [
                                        "upload5",
                                        "files"
                                      ])}
                                      maxCount={1}
                                      onFilesChange={async (
                                        ...eventArgs: any
                                      ) => {
                                        generateStateOnChangeProp($state, [
                                          "upload5",
                                          "files"
                                        ]).apply(null, eventArgs);
                                      }}
                                      showUploadList={true}
                                    >
                                      <AntdButton
                                        className={classNames(
                                          "__wab_instance",
                                          sty.button__xOmD
                                        )}
                                        size={"large"}
                                      >
                                        <div
                                          className={classNames(
                                            projectcss.all,
                                            projectcss.__wab_text,
                                            sty.text__aPa24
                                          )}
                                        >
                                          <React.Fragment>
                                            <span
                                              className={
                                                "plasmic_default__all plasmic_default__span"
                                              }
                                              style={{ fontWeight: 700 }}
                                            >
                                              {
                                                "Importer ou d\u00e9poser un fichier"
                                              }
                                            </span>
                                          </React.Fragment>
                                        </div>
                                        <div
                                          className={classNames(
                                            projectcss.all,
                                            projectcss.__wab_text,
                                            sty.text__usHwp
                                          )}
                                        >
                                          {"10 Mb max"}
                                        </div>
                                      </AntdButton>
                                    </UploadWrapper>
                                  </Stack__>
                                  <Button
                                    className={classNames(
                                      "__wab_instance",
                                      sty.button___3Remf
                                    )}
                                    disabled={(() => {
                                      try {
                                        return $state.upload5.files.length == 0;
                                      } catch (e) {
                                        if (
                                          e instanceof TypeError ||
                                          e?.plasmicType ===
                                            "PlasmicUndefinedDataError"
                                        ) {
                                          return undefined;
                                        }
                                        throw e;
                                      }
                                    })()}
                                    label={
                                      <div
                                        className={classNames(
                                          projectcss.all,
                                          projectcss.__wab_text,
                                          sty.text__c4DGa
                                        )}
                                      >
                                        {"Importer"}
                                      </div>
                                    }
                                    onClick={async event => {
                                      const $steps = {};

                                      $steps["supabaseUploadFile"] =
                                        $state.upload5.files.length > 0
                                          ? (() => {
                                              const actionArgs = {
                                                dataOp: {
                                                  sourceId:
                                                    "m24ybmDtQiMCnPaXvSSHEf",
                                                  opId: "21b08d1a-e6b8-46c4-ae86-7a9ab821cd88",
                                                  userArgs: {
                                                    path: [
                                                      $state.upload5.files[0]
                                                        .name
                                                    ],
                                                    content: [
                                                      $state.upload5.files[0]
                                                        .contents
                                                    ],
                                                    contentType: [
                                                      $state.upload5.files[0]
                                                        .type
                                                    ]
                                                  },
                                                  cacheKey: null,
                                                  invalidatedKeys: [],
                                                  roleId: null
                                                }
                                              };
                                              return (async ({
                                                dataOp,
                                                continueOnError
                                              }) => {
                                                try {
                                                  const response =
                                                    await executePlasmicDataOp(
                                                      dataOp,
                                                      {
                                                        userAuthToken:
                                                          dataSourcesCtx?.userAuthToken,
                                                        user: dataSourcesCtx?.user
                                                      }
                                                    );
                                                  await plasmicInvalidate(
                                                    dataOp.invalidatedKeys
                                                  );
                                                  return response;
                                                } catch (e) {
                                                  if (!continueOnError) {
                                                    throw e;
                                                  }
                                                  return e;
                                                }
                                              })?.apply(null, [actionArgs]);
                                            })()
                                          : undefined;
                                      if (
                                        $steps["supabaseUploadFile"] != null &&
                                        typeof $steps["supabaseUploadFile"] ===
                                          "object" &&
                                        typeof $steps["supabaseUploadFile"]
                                          .then === "function"
                                      ) {
                                        $steps["supabaseUploadFile"] =
                                          await $steps["supabaseUploadFile"];
                                      }

                                      $steps["postgresCreate"] =
                                        $state.upload5.files.length > 0
                                          ? (() => {
                                              const actionArgs = {
                                                dataOp: {
                                                  sourceId:
                                                    "v6umJuHyep6kPNyCAJjouT",
                                                  opId: "6a9f997b-a3b8-4226-bcce-6fc56630a066",
                                                  userArgs: {
                                                    variables: [
                                                      $ctx.params.model_id,
                                                      $steps.supabaseUploadFile
                                                        ?.path
                                                    ]
                                                  },
                                                  cacheKey: null,
                                                  invalidatedKeys: [
                                                    "bbc046fa-9e23-4163-bb6f-732f7e5d160f"
                                                  ],
                                                  roleId: null
                                                }
                                              };
                                              return (async ({
                                                dataOp,
                                                continueOnError
                                              }) => {
                                                try {
                                                  const response =
                                                    await executePlasmicDataOp(
                                                      dataOp,
                                                      {
                                                        userAuthToken:
                                                          dataSourcesCtx?.userAuthToken,
                                                        user: dataSourcesCtx?.user
                                                      }
                                                    );
                                                  await plasmicInvalidate(
                                                    dataOp.invalidatedKeys
                                                  );
                                                  return response;
                                                } catch (e) {
                                                  if (!continueOnError) {
                                                    throw e;
                                                  }
                                                  return e;
                                                }
                                              })?.apply(null, [actionArgs]);
                                            })()
                                          : undefined;
                                      if (
                                        $steps["postgresCreate"] != null &&
                                        typeof $steps["postgresCreate"] ===
                                          "object" &&
                                        typeof $steps["postgresCreate"].then ===
                                          "function"
                                      ) {
                                        $steps["postgresCreate"] = await $steps[
                                          "postgresCreate"
                                        ];
                                      }

                                      $steps["updateNewDoc"] = true
                                        ? (() => {
                                            const actionArgs = {
                                              variable: {
                                                objRoot: $state,
                                                variablePath: ["newDoc"]
                                              },
                                              operation: 0,
                                              value: false
                                            };
                                            return (({
                                              variable,
                                              value,
                                              startIndex,
                                              deleteCount
                                            }) => {
                                              if (!variable) {
                                                return;
                                              }
                                              const { objRoot, variablePath } =
                                                variable;

                                              $stateSet(
                                                objRoot,
                                                variablePath,
                                                value
                                              );
                                              return value;
                                            })?.apply(null, [actionArgs]);
                                          })()
                                        : undefined;
                                      if (
                                        $steps["updateNewDoc"] != null &&
                                        typeof $steps["updateNewDoc"] ===
                                          "object" &&
                                        typeof $steps["updateNewDoc"].then ===
                                          "function"
                                      ) {
                                        $steps["updateNewDoc"] = await $steps[
                                          "updateNewDoc"
                                        ];
                                      }
                                    }}
                                    submitsForm={false}
                                  />
                                </React.Fragment>
                              }
                              footer={
                                <div
                                  className={classNames(
                                    projectcss.all,
                                    sty.freeBox__slZtR
                                  )}
                                />
                              }
                              heading={
                                <div
                                  data-plasmic-name={"frame1437254034"}
                                  data-plasmic-override={
                                    overrides.frame1437254034
                                  }
                                  className={classNames(
                                    projectcss.all,
                                    sty.frame1437254034
                                  )}
                                >
                                  <div
                                    data-plasmic-name={"name16"}
                                    data-plasmic-override={overrides.name16}
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.__wab_text,
                                      sty.name16
                                    )}
                                  >
                                    {"Nouveau document"}
                                  </div>
                                  <Stack__
                                    as={"div"}
                                    data-plasmic-name={"frame1437254035"}
                                    data-plasmic-override={
                                      overrides.frame1437254035
                                    }
                                    hasGap={true}
                                    className={classNames(
                                      projectcss.all,
                                      sty.frame1437254035
                                    )}
                                  >
                                    <LinkSimpleIcon
                                      className={classNames(
                                        projectcss.all,
                                        sty.svg__h6Uuv
                                      )}
                                      role={"img"}
                                    />

                                    <XIcon
                                      className={classNames(
                                        projectcss.all,
                                        sty.svg__zvMsD
                                      )}
                                      onClick={async event => {
                                        const $steps = {};

                                        $steps["updateNewDoc"] = true
                                          ? (() => {
                                              const actionArgs = {
                                                variable: {
                                                  objRoot: $state,
                                                  variablePath: ["newDoc"]
                                                },
                                                operation: 0,
                                                value: false
                                              };
                                              return (({
                                                variable,
                                                value,
                                                startIndex,
                                                deleteCount
                                              }) => {
                                                if (!variable) {
                                                  return;
                                                }
                                                const {
                                                  objRoot,
                                                  variablePath
                                                } = variable;

                                                $stateSet(
                                                  objRoot,
                                                  variablePath,
                                                  value
                                                );
                                                return value;
                                              })?.apply(null, [actionArgs]);
                                            })()
                                          : undefined;
                                        if (
                                          $steps["updateNewDoc"] != null &&
                                          typeof $steps["updateNewDoc"] ===
                                            "object" &&
                                          typeof $steps["updateNewDoc"].then ===
                                            "function"
                                        ) {
                                          $steps["updateNewDoc"] = await $steps[
                                            "updateNewDoc"
                                          ];
                                        }
                                      }}
                                      role={"img"}
                                    />
                                  </Stack__>
                                </div>
                              }
                              isOpen={generateStateValueProp($state, [
                                "uploadFile",
                                "isOpen"
                              ])}
                              noTrigger={true}
                              onOpenChange={async (...eventArgs: any) => {
                                generateStateOnChangeProp($state, [
                                  "uploadFile",
                                  "isOpen"
                                ]).apply(null, eventArgs);

                                if (
                                  eventArgs.length > 1 &&
                                  eventArgs[1] &&
                                  eventArgs[1]._plasmic_state_init_
                                ) {
                                  return;
                                }

                                (async val => {
                                  const $steps = {};

                                  $steps["updateNewDoc"] = true
                                    ? (() => {
                                        const actionArgs = {
                                          variable: {
                                            objRoot: $state,
                                            variablePath: ["newDoc"]
                                          },
                                          operation: 4
                                        };
                                        return (({
                                          variable,
                                          value,
                                          startIndex,
                                          deleteCount
                                        }) => {
                                          if (!variable) {
                                            return;
                                          }
                                          const { objRoot, variablePath } =
                                            variable;

                                          const oldValue = $stateGet(
                                            objRoot,
                                            variablePath
                                          );
                                          $stateSet(
                                            objRoot,
                                            variablePath,
                                            !oldValue
                                          );
                                          return !oldValue;
                                        })?.apply(null, [actionArgs]);
                                      })()
                                    : undefined;
                                  if (
                                    $steps["updateNewDoc"] != null &&
                                    typeof $steps["updateNewDoc"] ===
                                      "object" &&
                                    typeof $steps["updateNewDoc"].then ===
                                      "function"
                                  ) {
                                    $steps["updateNewDoc"] = await $steps[
                                      "updateNewDoc"
                                    ];
                                  }
                                }).apply(null, eventArgs);
                              }}
                              showFooter={false}
                              trigger={null}
                            />

                            {(_par =>
                              !_par ? [] : Array.isArray(_par) ? _par : [_par])(
                              (() => {
                                try {
                                  return $queries.mdFiles.data;
                                } catch (e) {
                                  if (
                                    e instanceof TypeError ||
                                    e?.plasmicType ===
                                      "PlasmicUndefinedDataError"
                                  ) {
                                    return [];
                                  }
                                  throw e;
                                }
                              })()
                            ).map((__plasmic_item_0, __plasmic_idx_0) => {
                              const currentItem = __plasmic_item_0;
                              const currentIndex = __plasmic_idx_0;
                              return (() => {
                                const child$Props = {
                                  className: classNames(
                                    "__wab_instance",
                                    sty.file
                                  ),
                                  currentItem: currentItem,

                                  fileId: generateStateValueProp($state, [
                                    "file",
                                    __plasmic_idx_0,
                                    "fileId"
                                  ]),
                                  key: currentIndex,
                                  onFileIdChange: async (...eventArgs: any) => {
                                    generateStateOnChangeProp($state, [
                                      "file",
                                      __plasmic_idx_0,
                                      "fileId"
                                    ]).apply(null, eventArgs);

                                    if (
                                      eventArgs.length > 1 &&
                                      eventArgs[1] &&
                                      eventArgs[1]._plasmic_state_init_
                                    ) {
                                      return;
                                    }
                                  },
                                  onTypeChange2: async (...eventArgs: any) => {
                                    generateStateOnChangeProp($state, [
                                      "file",
                                      __plasmic_idx_0,
                                      "type"
                                    ]).apply(null, eventArgs);

                                    if (
                                      eventArgs.length > 1 &&
                                      eventArgs[1] &&
                                      eventArgs[1]._plasmic_state_init_
                                    ) {
                                      return;
                                    }
                                  },
                                  type: generateStateValueProp($state, [
                                    "file",
                                    __plasmic_idx_0,
                                    "type"
                                  ])
                                };

                                initializePlasmicStates(
                                  $state,
                                  [
                                    {
                                      name: "file[].fileId",
                                      initFunc: ({
                                        $props,
                                        $state,
                                        $queries
                                      }) =>
                                        (() => {
                                          try {
                                            return currentItem.id;
                                          } catch (e) {
                                            if (
                                              e instanceof TypeError ||
                                              e?.plasmicType ===
                                                "PlasmicUndefinedDataError"
                                            ) {
                                              return 0;
                                            }
                                            throw e;
                                          }
                                        })()
                                    },
                                    {
                                      name: "file[].type",
                                      initFunc: ({
                                        $props,
                                        $state,
                                        $queries
                                      }) => "model"
                                    }
                                  ],
                                  [__plasmic_idx_0]
                                );
                                return (
                                  <File
                                    data-plasmic-name={"file"}
                                    data-plasmic-override={overrides.file}
                                    {...child$Props}
                                  />
                                );
                              })();
                            })}
                          </Stack__>
                        </TabContent>
                      </div>
                    </Stack__>
                  )}
                </DataCtxReader__>
              </TabsContainer>
            </div>
          </div>
          <BottomMenu
            data-plasmic-name={"bottomMenu"}
            data-plasmic-override={overrides.bottomMenu}
            className={classNames("__wab_instance", sty.bottomMenu)}
          />
        </div>
      </div>
    </React.Fragment>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: [
    "root",
    "createTask",
    "createDispo",
    "updateDispo",
    "updateTask2",
    "deleteDispo",
    "frame1437254026",
    "name8",
    "frame1437254027",
    "delteDispo",
    "content4",
    "titre4",
    "texinput24",
    "date4",
    "label9",
    "timePicker10",
    "type4",
    "budget4",
    "comments4",
    "input15",
    "name9",
    "datePickerWeb4",
    "inputSelect4",
    "signedByBaseFieldGroupSmall4",
    "endDateCalendar4",
    "inputElementTextField7",
    "signedByBaseInputElementTextFieldSmallEnabled4",
    "leadingArtworkContainer13",
    "leadingArtwork7",
    "leadingLabelContainer13",
    "leadingLabel13",
    "signedByBaseTypographyLabelSmall7",
    "text80",
    "spacer73",
    "inputElementContentText13",
    "signedByBaseInputElementContentTextSmallOff4",
    "text81",
    "trailingLabelEnhancer13",
    "trailingLabel13",
    "signedByBaseTypographyLabelSmall8",
    "text82",
    "spacer74",
    "trailingArtworkContainer13",
    "trailingArtwork13",
    "calendar4",
    "signedByBaseInputElementSelectXSmallWebSingleDefaultEnabled4",
    "leadingArtworkContainer14",
    "text83",
    "leadingLabelContainer14",
    "leadingLabel14",
    "signedByBaseTypographyLabelXSmall7",
    "text84",
    "spacer75",
    "inputElementContentText14",
    "signedByBaseInputElementContentTextXSmallWebOff4",
    "text85",
    "trailingLabelEnhancer14",
    "trailingLabel14",
    "signedByBaseTypographyLabelXSmall8",
    "text86",
    "spacer76",
    "trailingArtworkContainer14",
    "trailingArtwork14",
    "selectIndicatorContainer7",
    "chevronIcon7",
    "inputElementHint7",
    "heart31",
    "hint7",
    "signedByBaseTypographyParagraphSmall7",
    "text87",
    "spacer77",
    "inputElementSelect4",
    "signedByBaseInputElementSelectMediumSingleDefaultActive4",
    "selectFrame4",
    "leadingArtworkContainer15",
    "leadingArtwork8",
    "leadingLabelContainer15",
    "leadingLabel15",
    "signedByBaseTypographyLabelMedium19",
    "text88",
    "spacer78",
    "inputElementContentText15",
    "signedByBaseInputElementContentTextMediumOff7",
    "text89",
    "trailingLabelEnhancer15",
    "trailingLabel15",
    "signedByBaseTypographyLabelMedium20",
    "text90",
    "spacer79",
    "trailingArtworkContainer15",
    "trailingArtwork15",
    "selectIndicatorContainer8",
    "chevronIcon8",
    "menu4",
    "signedByBaseMenuListMedium4",
    "menuItem16",
    "signedByBaseMenuItemSearchMediumNoneEnabled4",
    "searchField4",
    "signedByBaseSearchFieldMediumEnabled4",
    "inputElementLabel4",
    "signedByBaseInputElementLabelMedium4",
    "typography43",
    "signedByBaseTypographyLabelMedium21",
    "text91",
    "spacer80",
    "characterCountFrame4",
    "heart32",
    "typography44",
    "signedByBaseTypographyLabelMedium22",
    "text92",
    "spacer81",
    "inputElementTextField8",
    "signedByBaseInputElementTextFieldMediumEnabled4",
    "leadingArtworkContainer16",
    "search4",
    "leadingLabelContainer16",
    "leadingLabel16",
    "signedByBaseTypographyLabelMedium23",
    "text93",
    "spacer82",
    "inputElementContentText16",
    "signedByBaseInputElementContentTextMediumOff8",
    "text94",
    "trailingLabelEnhancer16",
    "trailingLabel16",
    "signedByBaseTypographyLabelMedium24",
    "text95",
    "spacer83",
    "trailingArtworkContainer16",
    "trailingArtwork16",
    "inputElementHint8",
    "heart33",
    "hint8",
    "signedByBaseTypographyParagraphSmall8",
    "text96",
    "spacer84",
    "menuItem17",
    "signedByBaseMenuItemOptionMediumStandardEnabled13",
    "menuItemControlMediumCheckboxUnchecked13",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked13",
    "icon13",
    "leadingEnhancer13",
    "heart34",
    "textFrame13",
    "leadingText13",
    "typography45",
    "signedByBaseTypographyParagraphMedium37",
    "text97",
    "spacer85",
    "typography46",
    "signedByBaseTypographyParagraphMedium38",
    "text98",
    "spacer86",
    "typography47",
    "signedByBaseTypographyParagraphMedium39",
    "spacer87",
    "trailingEnhancer13",
    "heart35",
    "menuItem18",
    "signedByBaseMenuItemOptionMediumStandardEnabled14",
    "menuItemControlMediumCheckboxUnchecked14",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked14",
    "icon14",
    "leadingEnhancer14",
    "heart36",
    "textFrame14",
    "leadingText14",
    "typography48",
    "signedByBaseTypographyParagraphMedium40",
    "text99",
    "spacer88",
    "typography49",
    "signedByBaseTypographyParagraphMedium41",
    "text100",
    "spacer89",
    "typography50",
    "signedByBaseTypographyParagraphMedium42",
    "spacer90",
    "trailingEnhancer14",
    "checkmarkSmall4",
    "menuItem19",
    "signedByBaseMenuItemOptionMediumStandardEnabled15",
    "menuItemControlMediumCheckboxUnchecked15",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked15",
    "icon15",
    "leadingEnhancer15",
    "heart37",
    "textFrame15",
    "leadingText15",
    "typography51",
    "signedByBaseTypographyParagraphMedium43",
    "text101",
    "spacer91",
    "typography52",
    "signedByBaseTypographyParagraphMedium44",
    "text102",
    "spacer92",
    "typography53",
    "signedByBaseTypographyParagraphMedium45",
    "spacer93",
    "trailingEnhancer15",
    "heart38",
    "menuItem20",
    "signedByBaseMenuItemOptionMediumStandardEnabled16",
    "menuItemControlMediumCheckboxUnchecked16",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked16",
    "icon16",
    "leadingEnhancer16",
    "heart39",
    "textFrame16",
    "leadingText16",
    "typography54",
    "signedByBaseTypographyParagraphMedium46",
    "text103",
    "spacer94",
    "typography55",
    "signedByBaseTypographyParagraphMedium47",
    "text104",
    "spacer95",
    "typography56",
    "signedByBaseTypographyParagraphMedium48",
    "spacer96",
    "trailingEnhancer16",
    "heart40",
    "scrollBar4",
    "model4",
    "buttons4",
    "button13",
    "frame1073713927",
    "frame1073713933",
    "button14",
    "button15",
    "button16",
    "deleteTaskRunsheet",
    "frame1437254018",
    "name5",
    "frame1437254021",
    "form3",
    "content3",
    "titre3",
    "texinput23",
    "date3",
    "label8",
    "timePicker9",
    "type3",
    "budget3",
    "comments3",
    "input9",
    "name6",
    "datePickerWeb3",
    "inputSelect3",
    "signedByBaseFieldGroupSmall3",
    "endDateCalendar3",
    "inputElementTextField5",
    "signedByBaseInputElementTextFieldSmallEnabled3",
    "leadingArtworkContainer9",
    "leadingArtwork5",
    "leadingLabelContainer9",
    "leadingLabel9",
    "signedByBaseTypographyLabelSmall5",
    "text55",
    "spacer49",
    "inputElementContentText9",
    "signedByBaseInputElementContentTextSmallOff3",
    "text56",
    "trailingLabelEnhancer9",
    "trailingLabel9",
    "signedByBaseTypographyLabelSmall6",
    "text57",
    "spacer50",
    "trailingArtworkContainer9",
    "trailingArtwork9",
    "calendar3",
    "signedByBaseInputElementSelectXSmallWebSingleDefaultEnabled3",
    "leadingArtworkContainer10",
    "text58",
    "leadingLabelContainer10",
    "leadingLabel10",
    "signedByBaseTypographyLabelXSmall5",
    "text59",
    "spacer51",
    "inputElementContentText10",
    "signedByBaseInputElementContentTextXSmallWebOff3",
    "text60",
    "trailingLabelEnhancer10",
    "trailingLabel10",
    "signedByBaseTypographyLabelXSmall6",
    "text61",
    "spacer52",
    "trailingArtworkContainer10",
    "trailingArtwork10",
    "selectIndicatorContainer5",
    "chevronIcon5",
    "inputElementHint5",
    "heart21",
    "hint5",
    "signedByBaseTypographyParagraphSmall5",
    "text62",
    "spacer53",
    "inputElementSelect3",
    "signedByBaseInputElementSelectMediumSingleDefaultActive3",
    "selectFrame3",
    "leadingArtworkContainer11",
    "leadingArtwork6",
    "leadingLabelContainer11",
    "leadingLabel11",
    "signedByBaseTypographyLabelMedium13",
    "text63",
    "spacer54",
    "inputElementContentText11",
    "signedByBaseInputElementContentTextMediumOff5",
    "text64",
    "trailingLabelEnhancer11",
    "trailingLabel11",
    "signedByBaseTypographyLabelMedium14",
    "text65",
    "spacer55",
    "trailingArtworkContainer11",
    "trailingArtwork11",
    "selectIndicatorContainer6",
    "chevronIcon6",
    "menu3",
    "signedByBaseMenuListMedium3",
    "menuItem11",
    "signedByBaseMenuItemSearchMediumNoneEnabled3",
    "searchField3",
    "signedByBaseSearchFieldMediumEnabled3",
    "inputElementLabel3",
    "signedByBaseInputElementLabelMedium3",
    "typography29",
    "signedByBaseTypographyLabelMedium15",
    "text66",
    "spacer56",
    "characterCountFrame3",
    "heart22",
    "typography30",
    "signedByBaseTypographyLabelMedium16",
    "text67",
    "spacer57",
    "inputElementTextField6",
    "signedByBaseInputElementTextFieldMediumEnabled3",
    "leadingArtworkContainer12",
    "search3",
    "leadingLabelContainer12",
    "leadingLabel12",
    "signedByBaseTypographyLabelMedium17",
    "text68",
    "spacer58",
    "inputElementContentText12",
    "signedByBaseInputElementContentTextMediumOff6",
    "text69",
    "trailingLabelEnhancer12",
    "trailingLabel12",
    "signedByBaseTypographyLabelMedium18",
    "text70",
    "spacer59",
    "trailingArtworkContainer12",
    "trailingArtwork12",
    "inputElementHint6",
    "heart23",
    "hint6",
    "signedByBaseTypographyParagraphSmall6",
    "text71",
    "spacer60",
    "menuItem12",
    "signedByBaseMenuItemOptionMediumStandardEnabled9",
    "menuItemControlMediumCheckboxUnchecked9",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked9",
    "icon9",
    "leadingEnhancer9",
    "heart24",
    "textFrame9",
    "leadingText9",
    "typography31",
    "signedByBaseTypographyParagraphMedium25",
    "text72",
    "spacer61",
    "typography32",
    "signedByBaseTypographyParagraphMedium26",
    "text73",
    "spacer62",
    "typography33",
    "signedByBaseTypographyParagraphMedium27",
    "spacer63",
    "trailingEnhancer9",
    "heart25",
    "menuItem13",
    "signedByBaseMenuItemOptionMediumStandardEnabled10",
    "menuItemControlMediumCheckboxUnchecked10",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked10",
    "icon10",
    "leadingEnhancer10",
    "heart26",
    "textFrame10",
    "leadingText10",
    "typography34",
    "signedByBaseTypographyParagraphMedium28",
    "text74",
    "spacer64",
    "typography35",
    "signedByBaseTypographyParagraphMedium29",
    "text75",
    "spacer65",
    "typography36",
    "signedByBaseTypographyParagraphMedium30",
    "spacer66",
    "trailingEnhancer10",
    "checkmarkSmall3",
    "menuItem14",
    "signedByBaseMenuItemOptionMediumStandardEnabled11",
    "menuItemControlMediumCheckboxUnchecked11",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked11",
    "icon11",
    "leadingEnhancer11",
    "heart27",
    "textFrame11",
    "leadingText11",
    "typography37",
    "signedByBaseTypographyParagraphMedium31",
    "text76",
    "spacer67",
    "typography38",
    "signedByBaseTypographyParagraphMedium32",
    "text77",
    "spacer68",
    "typography39",
    "signedByBaseTypographyParagraphMedium33",
    "spacer69",
    "trailingEnhancer11",
    "heart28",
    "menuItem15",
    "signedByBaseMenuItemOptionMediumStandardEnabled12",
    "menuItemControlMediumCheckboxUnchecked12",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked12",
    "icon12",
    "leadingEnhancer12",
    "heart29",
    "textFrame12",
    "leadingText12",
    "typography40",
    "signedByBaseTypographyParagraphMedium34",
    "text78",
    "spacer70",
    "typography41",
    "signedByBaseTypographyParagraphMedium35",
    "text79",
    "spacer71",
    "typography42",
    "signedByBaseTypographyParagraphMedium36",
    "spacer72",
    "trailingEnhancer12",
    "heart30",
    "scrollBar3",
    "model3",
    "buttons3",
    "button9",
    "frame1073713926",
    "frame1073713932",
    "button10",
    "button11",
    "button12",
    "duplicateTaskRunsheet2",
    "frame1437254028",
    "name10",
    "frame1437254029",
    "duplicateRs",
    "content5",
    "titre5",
    "texinput25",
    "date5",
    "label10",
    "timePicker11",
    "type5",
    "budget5",
    "comments5",
    "input16",
    "name11",
    "datePickerWeb5",
    "inputSelect5",
    "signedByBaseFieldGroupSmall5",
    "endDateCalendar5",
    "inputElementTextField9",
    "signedByBaseInputElementTextFieldSmallEnabled5",
    "leadingArtworkContainer17",
    "leadingArtwork9",
    "leadingLabelContainer17",
    "leadingLabel17",
    "signedByBaseTypographyLabelSmall9",
    "text105",
    "spacer97",
    "inputElementContentText17",
    "signedByBaseInputElementContentTextSmallOff5",
    "text106",
    "trailingLabelEnhancer17",
    "trailingLabel17",
    "signedByBaseTypographyLabelSmall10",
    "text107",
    "spacer98",
    "trailingArtworkContainer17",
    "trailingArtwork17",
    "calendar5",
    "signedByBaseInputElementSelectXSmallWebSingleDefaultEnabled5",
    "leadingArtworkContainer18",
    "text108",
    "leadingLabelContainer18",
    "leadingLabel18",
    "signedByBaseTypographyLabelXSmall9",
    "text109",
    "spacer99",
    "inputElementContentText18",
    "signedByBaseInputElementContentTextXSmallWebOff5",
    "text110",
    "trailingLabelEnhancer18",
    "trailingLabel18",
    "signedByBaseTypographyLabelXSmall10",
    "text111",
    "spacer100",
    "trailingArtworkContainer18",
    "trailingArtwork18",
    "selectIndicatorContainer9",
    "chevronIcon9",
    "inputElementHint9",
    "heart41",
    "hint9",
    "signedByBaseTypographyParagraphSmall9",
    "text112",
    "spacer101",
    "inputElementSelect5",
    "signedByBaseInputElementSelectMediumSingleDefaultActive5",
    "selectFrame5",
    "leadingArtworkContainer19",
    "leadingArtwork10",
    "leadingLabelContainer19",
    "leadingLabel19",
    "signedByBaseTypographyLabelMedium25",
    "text113",
    "spacer102",
    "inputElementContentText19",
    "signedByBaseInputElementContentTextMediumOff9",
    "text114",
    "trailingLabelEnhancer19",
    "trailingLabel19",
    "signedByBaseTypographyLabelMedium26",
    "text115",
    "spacer103",
    "trailingArtworkContainer19",
    "trailingArtwork19",
    "selectIndicatorContainer10",
    "chevronIcon10",
    "menu5",
    "signedByBaseMenuListMedium5",
    "menuItem21",
    "signedByBaseMenuItemSearchMediumNoneEnabled5",
    "searchField5",
    "signedByBaseSearchFieldMediumEnabled5",
    "inputElementLabel5",
    "signedByBaseInputElementLabelMedium5",
    "typography57",
    "signedByBaseTypographyLabelMedium27",
    "text116",
    "spacer104",
    "characterCountFrame5",
    "heart42",
    "typography58",
    "signedByBaseTypographyLabelMedium28",
    "text117",
    "spacer105",
    "inputElementTextField10",
    "signedByBaseInputElementTextFieldMediumEnabled5",
    "leadingArtworkContainer20",
    "search5",
    "leadingLabelContainer20",
    "leadingLabel20",
    "signedByBaseTypographyLabelMedium29",
    "text118",
    "spacer106",
    "inputElementContentText20",
    "signedByBaseInputElementContentTextMediumOff10",
    "text119",
    "trailingLabelEnhancer20",
    "trailingLabel20",
    "signedByBaseTypographyLabelMedium30",
    "text120",
    "spacer107",
    "trailingArtworkContainer20",
    "trailingArtwork20",
    "inputElementHint10",
    "heart43",
    "hint10",
    "signedByBaseTypographyParagraphSmall10",
    "text121",
    "spacer108",
    "menuItem22",
    "signedByBaseMenuItemOptionMediumStandardEnabled17",
    "menuItemControlMediumCheckboxUnchecked17",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked17",
    "icon17",
    "leadingEnhancer17",
    "heart44",
    "textFrame17",
    "leadingText17",
    "typography59",
    "signedByBaseTypographyParagraphMedium49",
    "text122",
    "spacer109",
    "typography60",
    "signedByBaseTypographyParagraphMedium50",
    "text123",
    "spacer110",
    "typography61",
    "signedByBaseTypographyParagraphMedium51",
    "spacer111",
    "trailingEnhancer17",
    "heart45",
    "menuItem23",
    "signedByBaseMenuItemOptionMediumStandardEnabled18",
    "menuItemControlMediumCheckboxUnchecked18",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked18",
    "icon18",
    "leadingEnhancer18",
    "heart46",
    "textFrame18",
    "leadingText18",
    "typography62",
    "signedByBaseTypographyParagraphMedium52",
    "text124",
    "spacer112",
    "typography63",
    "signedByBaseTypographyParagraphMedium53",
    "text125",
    "spacer113",
    "typography64",
    "signedByBaseTypographyParagraphMedium54",
    "spacer114",
    "trailingEnhancer18",
    "checkmarkSmall5",
    "menuItem24",
    "signedByBaseMenuItemOptionMediumStandardEnabled19",
    "menuItemControlMediumCheckboxUnchecked19",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked19",
    "icon19",
    "leadingEnhancer19",
    "heart47",
    "textFrame19",
    "leadingText19",
    "typography65",
    "signedByBaseTypographyParagraphMedium55",
    "text126",
    "spacer115",
    "typography66",
    "signedByBaseTypographyParagraphMedium56",
    "text127",
    "spacer116",
    "typography67",
    "signedByBaseTypographyParagraphMedium57",
    "spacer117",
    "trailingEnhancer19",
    "heart48",
    "menuItem25",
    "signedByBaseMenuItemOptionMediumStandardEnabled20",
    "menuItemControlMediumCheckboxUnchecked20",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked20",
    "icon20",
    "leadingEnhancer20",
    "heart49",
    "textFrame20",
    "leadingText20",
    "typography68",
    "signedByBaseTypographyParagraphMedium58",
    "text128",
    "spacer118",
    "typography69",
    "signedByBaseTypographyParagraphMedium59",
    "text129",
    "spacer119",
    "typography70",
    "signedByBaseTypographyParagraphMedium60",
    "spacer120",
    "trailingEnhancer20",
    "heart50",
    "scrollBar5",
    "model5",
    "buttons5",
    "button17",
    "frame1073713928",
    "frame1073713934",
    "button18",
    "button19",
    "button20",
    "duplicateDispo3",
    "frame1437254030",
    "name12",
    "frame1437254031",
    "duplicateDispo2",
    "content6",
    "titre6",
    "texinput26",
    "date6",
    "label11",
    "timePicker12",
    "type6",
    "budget6",
    "comments6",
    "input17",
    "name13",
    "datePickerWeb6",
    "inputSelect6",
    "signedByBaseFieldGroupSmall6",
    "endDateCalendar6",
    "inputElementTextField11",
    "signedByBaseInputElementTextFieldSmallEnabled6",
    "leadingArtworkContainer21",
    "leadingArtwork11",
    "leadingLabelContainer21",
    "leadingLabel21",
    "signedByBaseTypographyLabelSmall11",
    "text130",
    "spacer121",
    "inputElementContentText21",
    "signedByBaseInputElementContentTextSmallOff6",
    "text131",
    "trailingLabelEnhancer21",
    "trailingLabel21",
    "signedByBaseTypographyLabelSmall12",
    "text132",
    "spacer122",
    "trailingArtworkContainer21",
    "trailingArtwork21",
    "calendar6",
    "signedByBaseInputElementSelectXSmallWebSingleDefaultEnabled6",
    "leadingArtworkContainer22",
    "text133",
    "leadingLabelContainer22",
    "leadingLabel22",
    "signedByBaseTypographyLabelXSmall11",
    "text134",
    "spacer123",
    "inputElementContentText22",
    "signedByBaseInputElementContentTextXSmallWebOff6",
    "text135",
    "trailingLabelEnhancer22",
    "trailingLabel22",
    "signedByBaseTypographyLabelXSmall12",
    "text136",
    "spacer124",
    "trailingArtworkContainer22",
    "trailingArtwork22",
    "selectIndicatorContainer11",
    "chevronIcon11",
    "inputElementHint11",
    "heart51",
    "hint11",
    "signedByBaseTypographyParagraphSmall11",
    "text137",
    "spacer125",
    "inputElementSelect6",
    "signedByBaseInputElementSelectMediumSingleDefaultActive6",
    "selectFrame6",
    "leadingArtworkContainer23",
    "leadingArtwork12",
    "leadingLabelContainer23",
    "leadingLabel23",
    "signedByBaseTypographyLabelMedium31",
    "text138",
    "spacer126",
    "inputElementContentText23",
    "signedByBaseInputElementContentTextMediumOff11",
    "text139",
    "trailingLabelEnhancer23",
    "trailingLabel23",
    "signedByBaseTypographyLabelMedium32",
    "text140",
    "spacer127",
    "trailingArtworkContainer23",
    "trailingArtwork23",
    "selectIndicatorContainer12",
    "chevronIcon12",
    "menu6",
    "signedByBaseMenuListMedium6",
    "menuItem26",
    "signedByBaseMenuItemSearchMediumNoneEnabled6",
    "searchField6",
    "signedByBaseSearchFieldMediumEnabled6",
    "inputElementLabel6",
    "signedByBaseInputElementLabelMedium6",
    "typography71",
    "signedByBaseTypographyLabelMedium33",
    "text141",
    "spacer128",
    "characterCountFrame6",
    "heart52",
    "typography72",
    "signedByBaseTypographyLabelMedium34",
    "text142",
    "spacer129",
    "inputElementTextField12",
    "signedByBaseInputElementTextFieldMediumEnabled6",
    "leadingArtworkContainer24",
    "search6",
    "leadingLabelContainer24",
    "leadingLabel24",
    "signedByBaseTypographyLabelMedium35",
    "text143",
    "spacer130",
    "inputElementContentText24",
    "signedByBaseInputElementContentTextMediumOff12",
    "text144",
    "trailingLabelEnhancer24",
    "trailingLabel24",
    "signedByBaseTypographyLabelMedium36",
    "text145",
    "spacer131",
    "trailingArtworkContainer24",
    "trailingArtwork24",
    "inputElementHint12",
    "heart53",
    "hint12",
    "signedByBaseTypographyParagraphSmall12",
    "text146",
    "spacer132",
    "menuItem27",
    "signedByBaseMenuItemOptionMediumStandardEnabled21",
    "menuItemControlMediumCheckboxUnchecked21",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked21",
    "icon21",
    "leadingEnhancer21",
    "heart54",
    "textFrame21",
    "leadingText21",
    "typography73",
    "signedByBaseTypographyParagraphMedium61",
    "text147",
    "spacer133",
    "typography74",
    "signedByBaseTypographyParagraphMedium62",
    "text148",
    "spacer134",
    "typography75",
    "signedByBaseTypographyParagraphMedium63",
    "spacer135",
    "trailingEnhancer21",
    "heart55",
    "menuItem28",
    "signedByBaseMenuItemOptionMediumStandardEnabled22",
    "menuItemControlMediumCheckboxUnchecked22",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked22",
    "icon22",
    "leadingEnhancer22",
    "heart56",
    "textFrame22",
    "leadingText22",
    "typography76",
    "signedByBaseTypographyParagraphMedium64",
    "text149",
    "spacer136",
    "typography77",
    "signedByBaseTypographyParagraphMedium65",
    "text150",
    "spacer137",
    "typography78",
    "signedByBaseTypographyParagraphMedium66",
    "spacer138",
    "trailingEnhancer22",
    "checkmarkSmall6",
    "menuItem29",
    "signedByBaseMenuItemOptionMediumStandardEnabled23",
    "menuItemControlMediumCheckboxUnchecked23",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked23",
    "icon23",
    "leadingEnhancer23",
    "heart57",
    "textFrame23",
    "leadingText23",
    "typography79",
    "signedByBaseTypographyParagraphMedium67",
    "text151",
    "spacer139",
    "typography80",
    "signedByBaseTypographyParagraphMedium68",
    "text152",
    "spacer140",
    "typography81",
    "signedByBaseTypographyParagraphMedium69",
    "spacer141",
    "trailingEnhancer23",
    "heart58",
    "menuItem30",
    "signedByBaseMenuItemOptionMediumStandardEnabled24",
    "menuItemControlMediumCheckboxUnchecked24",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked24",
    "icon24",
    "leadingEnhancer24",
    "heart59",
    "textFrame24",
    "leadingText24",
    "typography82",
    "signedByBaseTypographyParagraphMedium70",
    "text153",
    "spacer142",
    "typography83",
    "signedByBaseTypographyParagraphMedium71",
    "text154",
    "spacer143",
    "typography84",
    "signedByBaseTypographyParagraphMedium72",
    "spacer144",
    "trailingEnhancer24",
    "heart60",
    "scrollBar6",
    "model6",
    "buttons6",
    "button21",
    "frame1073713929",
    "frame1073713935",
    "button22",
    "button23",
    "button24",
    "container",
    "leftMenu",
    "main",
    "header2",
    "header",
    "tabsContainer",
    "mainContainer",
    "tabButtons",
    "tabButton",
    "tabUnderline",
    "filters",
    "buttonFilter",
    "buttonAddAction",
    "buttonAddStaff",
    "buttonAddDoc",
    "tabContainers",
    "_1",
    "runsheet",
    "_2",
    "dispositif",
    "_3",
    "uploadFile",
    "frame1437254034",
    "name16",
    "frame1437254035",
    "files2",
    "upload5",
    "file",
    "bottomMenu"
  ],
  createTask: ["createTask"],
  createDispo: ["createDispo"],
  updateDispo: ["updateDispo"],
  updateTask2: ["updateTask2"],
  deleteDispo: [
    "deleteDispo",
    "frame1437254026",
    "name8",
    "frame1437254027",
    "delteDispo",
    "content4",
    "titre4",
    "texinput24",
    "date4",
    "label9",
    "timePicker10",
    "type4",
    "budget4",
    "comments4",
    "input15",
    "name9",
    "datePickerWeb4",
    "inputSelect4",
    "signedByBaseFieldGroupSmall4",
    "endDateCalendar4",
    "inputElementTextField7",
    "signedByBaseInputElementTextFieldSmallEnabled4",
    "leadingArtworkContainer13",
    "leadingArtwork7",
    "leadingLabelContainer13",
    "leadingLabel13",
    "signedByBaseTypographyLabelSmall7",
    "text80",
    "spacer73",
    "inputElementContentText13",
    "signedByBaseInputElementContentTextSmallOff4",
    "text81",
    "trailingLabelEnhancer13",
    "trailingLabel13",
    "signedByBaseTypographyLabelSmall8",
    "text82",
    "spacer74",
    "trailingArtworkContainer13",
    "trailingArtwork13",
    "calendar4",
    "signedByBaseInputElementSelectXSmallWebSingleDefaultEnabled4",
    "leadingArtworkContainer14",
    "text83",
    "leadingLabelContainer14",
    "leadingLabel14",
    "signedByBaseTypographyLabelXSmall7",
    "text84",
    "spacer75",
    "inputElementContentText14",
    "signedByBaseInputElementContentTextXSmallWebOff4",
    "text85",
    "trailingLabelEnhancer14",
    "trailingLabel14",
    "signedByBaseTypographyLabelXSmall8",
    "text86",
    "spacer76",
    "trailingArtworkContainer14",
    "trailingArtwork14",
    "selectIndicatorContainer7",
    "chevronIcon7",
    "inputElementHint7",
    "heart31",
    "hint7",
    "signedByBaseTypographyParagraphSmall7",
    "text87",
    "spacer77",
    "inputElementSelect4",
    "signedByBaseInputElementSelectMediumSingleDefaultActive4",
    "selectFrame4",
    "leadingArtworkContainer15",
    "leadingArtwork8",
    "leadingLabelContainer15",
    "leadingLabel15",
    "signedByBaseTypographyLabelMedium19",
    "text88",
    "spacer78",
    "inputElementContentText15",
    "signedByBaseInputElementContentTextMediumOff7",
    "text89",
    "trailingLabelEnhancer15",
    "trailingLabel15",
    "signedByBaseTypographyLabelMedium20",
    "text90",
    "spacer79",
    "trailingArtworkContainer15",
    "trailingArtwork15",
    "selectIndicatorContainer8",
    "chevronIcon8",
    "menu4",
    "signedByBaseMenuListMedium4",
    "menuItem16",
    "signedByBaseMenuItemSearchMediumNoneEnabled4",
    "searchField4",
    "signedByBaseSearchFieldMediumEnabled4",
    "inputElementLabel4",
    "signedByBaseInputElementLabelMedium4",
    "typography43",
    "signedByBaseTypographyLabelMedium21",
    "text91",
    "spacer80",
    "characterCountFrame4",
    "heart32",
    "typography44",
    "signedByBaseTypographyLabelMedium22",
    "text92",
    "spacer81",
    "inputElementTextField8",
    "signedByBaseInputElementTextFieldMediumEnabled4",
    "leadingArtworkContainer16",
    "search4",
    "leadingLabelContainer16",
    "leadingLabel16",
    "signedByBaseTypographyLabelMedium23",
    "text93",
    "spacer82",
    "inputElementContentText16",
    "signedByBaseInputElementContentTextMediumOff8",
    "text94",
    "trailingLabelEnhancer16",
    "trailingLabel16",
    "signedByBaseTypographyLabelMedium24",
    "text95",
    "spacer83",
    "trailingArtworkContainer16",
    "trailingArtwork16",
    "inputElementHint8",
    "heart33",
    "hint8",
    "signedByBaseTypographyParagraphSmall8",
    "text96",
    "spacer84",
    "menuItem17",
    "signedByBaseMenuItemOptionMediumStandardEnabled13",
    "menuItemControlMediumCheckboxUnchecked13",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked13",
    "icon13",
    "leadingEnhancer13",
    "heart34",
    "textFrame13",
    "leadingText13",
    "typography45",
    "signedByBaseTypographyParagraphMedium37",
    "text97",
    "spacer85",
    "typography46",
    "signedByBaseTypographyParagraphMedium38",
    "text98",
    "spacer86",
    "typography47",
    "signedByBaseTypographyParagraphMedium39",
    "spacer87",
    "trailingEnhancer13",
    "heart35",
    "menuItem18",
    "signedByBaseMenuItemOptionMediumStandardEnabled14",
    "menuItemControlMediumCheckboxUnchecked14",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked14",
    "icon14",
    "leadingEnhancer14",
    "heart36",
    "textFrame14",
    "leadingText14",
    "typography48",
    "signedByBaseTypographyParagraphMedium40",
    "text99",
    "spacer88",
    "typography49",
    "signedByBaseTypographyParagraphMedium41",
    "text100",
    "spacer89",
    "typography50",
    "signedByBaseTypographyParagraphMedium42",
    "spacer90",
    "trailingEnhancer14",
    "checkmarkSmall4",
    "menuItem19",
    "signedByBaseMenuItemOptionMediumStandardEnabled15",
    "menuItemControlMediumCheckboxUnchecked15",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked15",
    "icon15",
    "leadingEnhancer15",
    "heart37",
    "textFrame15",
    "leadingText15",
    "typography51",
    "signedByBaseTypographyParagraphMedium43",
    "text101",
    "spacer91",
    "typography52",
    "signedByBaseTypographyParagraphMedium44",
    "text102",
    "spacer92",
    "typography53",
    "signedByBaseTypographyParagraphMedium45",
    "spacer93",
    "trailingEnhancer15",
    "heart38",
    "menuItem20",
    "signedByBaseMenuItemOptionMediumStandardEnabled16",
    "menuItemControlMediumCheckboxUnchecked16",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked16",
    "icon16",
    "leadingEnhancer16",
    "heart39",
    "textFrame16",
    "leadingText16",
    "typography54",
    "signedByBaseTypographyParagraphMedium46",
    "text103",
    "spacer94",
    "typography55",
    "signedByBaseTypographyParagraphMedium47",
    "text104",
    "spacer95",
    "typography56",
    "signedByBaseTypographyParagraphMedium48",
    "spacer96",
    "trailingEnhancer16",
    "heart40",
    "scrollBar4",
    "model4",
    "buttons4",
    "button13",
    "frame1073713927",
    "frame1073713933",
    "button14",
    "button15",
    "button16"
  ],
  frame1437254026: ["frame1437254026", "name8", "frame1437254027"],
  name8: ["name8"],
  frame1437254027: ["frame1437254027"],
  delteDispo: ["delteDispo"],
  content4: [
    "content4",
    "titre4",
    "texinput24",
    "date4",
    "label9",
    "timePicker10",
    "type4",
    "budget4",
    "comments4",
    "input15",
    "name9",
    "datePickerWeb4",
    "inputSelect4",
    "signedByBaseFieldGroupSmall4",
    "endDateCalendar4",
    "inputElementTextField7",
    "signedByBaseInputElementTextFieldSmallEnabled4",
    "leadingArtworkContainer13",
    "leadingArtwork7",
    "leadingLabelContainer13",
    "leadingLabel13",
    "signedByBaseTypographyLabelSmall7",
    "text80",
    "spacer73",
    "inputElementContentText13",
    "signedByBaseInputElementContentTextSmallOff4",
    "text81",
    "trailingLabelEnhancer13",
    "trailingLabel13",
    "signedByBaseTypographyLabelSmall8",
    "text82",
    "spacer74",
    "trailingArtworkContainer13",
    "trailingArtwork13",
    "calendar4",
    "signedByBaseInputElementSelectXSmallWebSingleDefaultEnabled4",
    "leadingArtworkContainer14",
    "text83",
    "leadingLabelContainer14",
    "leadingLabel14",
    "signedByBaseTypographyLabelXSmall7",
    "text84",
    "spacer75",
    "inputElementContentText14",
    "signedByBaseInputElementContentTextXSmallWebOff4",
    "text85",
    "trailingLabelEnhancer14",
    "trailingLabel14",
    "signedByBaseTypographyLabelXSmall8",
    "text86",
    "spacer76",
    "trailingArtworkContainer14",
    "trailingArtwork14",
    "selectIndicatorContainer7",
    "chevronIcon7",
    "inputElementHint7",
    "heart31",
    "hint7",
    "signedByBaseTypographyParagraphSmall7",
    "text87",
    "spacer77",
    "inputElementSelect4",
    "signedByBaseInputElementSelectMediumSingleDefaultActive4",
    "selectFrame4",
    "leadingArtworkContainer15",
    "leadingArtwork8",
    "leadingLabelContainer15",
    "leadingLabel15",
    "signedByBaseTypographyLabelMedium19",
    "text88",
    "spacer78",
    "inputElementContentText15",
    "signedByBaseInputElementContentTextMediumOff7",
    "text89",
    "trailingLabelEnhancer15",
    "trailingLabel15",
    "signedByBaseTypographyLabelMedium20",
    "text90",
    "spacer79",
    "trailingArtworkContainer15",
    "trailingArtwork15",
    "selectIndicatorContainer8",
    "chevronIcon8",
    "menu4",
    "signedByBaseMenuListMedium4",
    "menuItem16",
    "signedByBaseMenuItemSearchMediumNoneEnabled4",
    "searchField4",
    "signedByBaseSearchFieldMediumEnabled4",
    "inputElementLabel4",
    "signedByBaseInputElementLabelMedium4",
    "typography43",
    "signedByBaseTypographyLabelMedium21",
    "text91",
    "spacer80",
    "characterCountFrame4",
    "heart32",
    "typography44",
    "signedByBaseTypographyLabelMedium22",
    "text92",
    "spacer81",
    "inputElementTextField8",
    "signedByBaseInputElementTextFieldMediumEnabled4",
    "leadingArtworkContainer16",
    "search4",
    "leadingLabelContainer16",
    "leadingLabel16",
    "signedByBaseTypographyLabelMedium23",
    "text93",
    "spacer82",
    "inputElementContentText16",
    "signedByBaseInputElementContentTextMediumOff8",
    "text94",
    "trailingLabelEnhancer16",
    "trailingLabel16",
    "signedByBaseTypographyLabelMedium24",
    "text95",
    "spacer83",
    "trailingArtworkContainer16",
    "trailingArtwork16",
    "inputElementHint8",
    "heart33",
    "hint8",
    "signedByBaseTypographyParagraphSmall8",
    "text96",
    "spacer84",
    "menuItem17",
    "signedByBaseMenuItemOptionMediumStandardEnabled13",
    "menuItemControlMediumCheckboxUnchecked13",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked13",
    "icon13",
    "leadingEnhancer13",
    "heart34",
    "textFrame13",
    "leadingText13",
    "typography45",
    "signedByBaseTypographyParagraphMedium37",
    "text97",
    "spacer85",
    "typography46",
    "signedByBaseTypographyParagraphMedium38",
    "text98",
    "spacer86",
    "typography47",
    "signedByBaseTypographyParagraphMedium39",
    "spacer87",
    "trailingEnhancer13",
    "heart35",
    "menuItem18",
    "signedByBaseMenuItemOptionMediumStandardEnabled14",
    "menuItemControlMediumCheckboxUnchecked14",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked14",
    "icon14",
    "leadingEnhancer14",
    "heart36",
    "textFrame14",
    "leadingText14",
    "typography48",
    "signedByBaseTypographyParagraphMedium40",
    "text99",
    "spacer88",
    "typography49",
    "signedByBaseTypographyParagraphMedium41",
    "text100",
    "spacer89",
    "typography50",
    "signedByBaseTypographyParagraphMedium42",
    "spacer90",
    "trailingEnhancer14",
    "checkmarkSmall4",
    "menuItem19",
    "signedByBaseMenuItemOptionMediumStandardEnabled15",
    "menuItemControlMediumCheckboxUnchecked15",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked15",
    "icon15",
    "leadingEnhancer15",
    "heart37",
    "textFrame15",
    "leadingText15",
    "typography51",
    "signedByBaseTypographyParagraphMedium43",
    "text101",
    "spacer91",
    "typography52",
    "signedByBaseTypographyParagraphMedium44",
    "text102",
    "spacer92",
    "typography53",
    "signedByBaseTypographyParagraphMedium45",
    "spacer93",
    "trailingEnhancer15",
    "heart38",
    "menuItem20",
    "signedByBaseMenuItemOptionMediumStandardEnabled16",
    "menuItemControlMediumCheckboxUnchecked16",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked16",
    "icon16",
    "leadingEnhancer16",
    "heart39",
    "textFrame16",
    "leadingText16",
    "typography54",
    "signedByBaseTypographyParagraphMedium46",
    "text103",
    "spacer94",
    "typography55",
    "signedByBaseTypographyParagraphMedium47",
    "text104",
    "spacer95",
    "typography56",
    "signedByBaseTypographyParagraphMedium48",
    "spacer96",
    "trailingEnhancer16",
    "heart40",
    "scrollBar4",
    "model4",
    "buttons4",
    "button13",
    "frame1073713927",
    "frame1073713933",
    "button14",
    "button15",
    "button16"
  ],
  titre4: ["titre4"],
  texinput24: ["texinput24"],
  date4: ["date4", "label9", "timePicker10"],
  label9: ["label9"],
  timePicker10: ["timePicker10"],
  type4: ["type4"],
  budget4: ["budget4"],
  comments4: ["comments4"],
  input15: [
    "input15",
    "name9",
    "datePickerWeb4",
    "inputSelect4",
    "signedByBaseFieldGroupSmall4",
    "endDateCalendar4",
    "inputElementTextField7",
    "signedByBaseInputElementTextFieldSmallEnabled4",
    "leadingArtworkContainer13",
    "leadingArtwork7",
    "leadingLabelContainer13",
    "leadingLabel13",
    "signedByBaseTypographyLabelSmall7",
    "text80",
    "spacer73",
    "inputElementContentText13",
    "signedByBaseInputElementContentTextSmallOff4",
    "text81",
    "trailingLabelEnhancer13",
    "trailingLabel13",
    "signedByBaseTypographyLabelSmall8",
    "text82",
    "spacer74",
    "trailingArtworkContainer13",
    "trailingArtwork13",
    "calendar4",
    "signedByBaseInputElementSelectXSmallWebSingleDefaultEnabled4",
    "leadingArtworkContainer14",
    "text83",
    "leadingLabelContainer14",
    "leadingLabel14",
    "signedByBaseTypographyLabelXSmall7",
    "text84",
    "spacer75",
    "inputElementContentText14",
    "signedByBaseInputElementContentTextXSmallWebOff4",
    "text85",
    "trailingLabelEnhancer14",
    "trailingLabel14",
    "signedByBaseTypographyLabelXSmall8",
    "text86",
    "spacer76",
    "trailingArtworkContainer14",
    "trailingArtwork14",
    "selectIndicatorContainer7",
    "chevronIcon7",
    "inputElementHint7",
    "heart31",
    "hint7",
    "signedByBaseTypographyParagraphSmall7",
    "text87",
    "spacer77",
    "inputElementSelect4",
    "signedByBaseInputElementSelectMediumSingleDefaultActive4",
    "selectFrame4",
    "leadingArtworkContainer15",
    "leadingArtwork8",
    "leadingLabelContainer15",
    "leadingLabel15",
    "signedByBaseTypographyLabelMedium19",
    "text88",
    "spacer78",
    "inputElementContentText15",
    "signedByBaseInputElementContentTextMediumOff7",
    "text89",
    "trailingLabelEnhancer15",
    "trailingLabel15",
    "signedByBaseTypographyLabelMedium20",
    "text90",
    "spacer79",
    "trailingArtworkContainer15",
    "trailingArtwork15",
    "selectIndicatorContainer8",
    "chevronIcon8",
    "menu4",
    "signedByBaseMenuListMedium4",
    "menuItem16",
    "signedByBaseMenuItemSearchMediumNoneEnabled4",
    "searchField4",
    "signedByBaseSearchFieldMediumEnabled4",
    "inputElementLabel4",
    "signedByBaseInputElementLabelMedium4",
    "typography43",
    "signedByBaseTypographyLabelMedium21",
    "text91",
    "spacer80",
    "characterCountFrame4",
    "heart32",
    "typography44",
    "signedByBaseTypographyLabelMedium22",
    "text92",
    "spacer81",
    "inputElementTextField8",
    "signedByBaseInputElementTextFieldMediumEnabled4",
    "leadingArtworkContainer16",
    "search4",
    "leadingLabelContainer16",
    "leadingLabel16",
    "signedByBaseTypographyLabelMedium23",
    "text93",
    "spacer82",
    "inputElementContentText16",
    "signedByBaseInputElementContentTextMediumOff8",
    "text94",
    "trailingLabelEnhancer16",
    "trailingLabel16",
    "signedByBaseTypographyLabelMedium24",
    "text95",
    "spacer83",
    "trailingArtworkContainer16",
    "trailingArtwork16",
    "inputElementHint8",
    "heart33",
    "hint8",
    "signedByBaseTypographyParagraphSmall8",
    "text96",
    "spacer84",
    "menuItem17",
    "signedByBaseMenuItemOptionMediumStandardEnabled13",
    "menuItemControlMediumCheckboxUnchecked13",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked13",
    "icon13",
    "leadingEnhancer13",
    "heart34",
    "textFrame13",
    "leadingText13",
    "typography45",
    "signedByBaseTypographyParagraphMedium37",
    "text97",
    "spacer85",
    "typography46",
    "signedByBaseTypographyParagraphMedium38",
    "text98",
    "spacer86",
    "typography47",
    "signedByBaseTypographyParagraphMedium39",
    "spacer87",
    "trailingEnhancer13",
    "heart35",
    "menuItem18",
    "signedByBaseMenuItemOptionMediumStandardEnabled14",
    "menuItemControlMediumCheckboxUnchecked14",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked14",
    "icon14",
    "leadingEnhancer14",
    "heart36",
    "textFrame14",
    "leadingText14",
    "typography48",
    "signedByBaseTypographyParagraphMedium40",
    "text99",
    "spacer88",
    "typography49",
    "signedByBaseTypographyParagraphMedium41",
    "text100",
    "spacer89",
    "typography50",
    "signedByBaseTypographyParagraphMedium42",
    "spacer90",
    "trailingEnhancer14",
    "checkmarkSmall4",
    "menuItem19",
    "signedByBaseMenuItemOptionMediumStandardEnabled15",
    "menuItemControlMediumCheckboxUnchecked15",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked15",
    "icon15",
    "leadingEnhancer15",
    "heart37",
    "textFrame15",
    "leadingText15",
    "typography51",
    "signedByBaseTypographyParagraphMedium43",
    "text101",
    "spacer91",
    "typography52",
    "signedByBaseTypographyParagraphMedium44",
    "text102",
    "spacer92",
    "typography53",
    "signedByBaseTypographyParagraphMedium45",
    "spacer93",
    "trailingEnhancer15",
    "heart38",
    "menuItem20",
    "signedByBaseMenuItemOptionMediumStandardEnabled16",
    "menuItemControlMediumCheckboxUnchecked16",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked16",
    "icon16",
    "leadingEnhancer16",
    "heart39",
    "textFrame16",
    "leadingText16",
    "typography54",
    "signedByBaseTypographyParagraphMedium46",
    "text103",
    "spacer94",
    "typography55",
    "signedByBaseTypographyParagraphMedium47",
    "text104",
    "spacer95",
    "typography56",
    "signedByBaseTypographyParagraphMedium48",
    "spacer96",
    "trailingEnhancer16",
    "heart40",
    "scrollBar4"
  ],
  name9: ["name9"],
  datePickerWeb4: [
    "datePickerWeb4",
    "inputSelect4",
    "signedByBaseFieldGroupSmall4",
    "endDateCalendar4",
    "inputElementTextField7",
    "signedByBaseInputElementTextFieldSmallEnabled4",
    "leadingArtworkContainer13",
    "leadingArtwork7",
    "leadingLabelContainer13",
    "leadingLabel13",
    "signedByBaseTypographyLabelSmall7",
    "text80",
    "spacer73",
    "inputElementContentText13",
    "signedByBaseInputElementContentTextSmallOff4",
    "text81",
    "trailingLabelEnhancer13",
    "trailingLabel13",
    "signedByBaseTypographyLabelSmall8",
    "text82",
    "spacer74",
    "trailingArtworkContainer13",
    "trailingArtwork13",
    "calendar4",
    "signedByBaseInputElementSelectXSmallWebSingleDefaultEnabled4",
    "leadingArtworkContainer14",
    "text83",
    "leadingLabelContainer14",
    "leadingLabel14",
    "signedByBaseTypographyLabelXSmall7",
    "text84",
    "spacer75",
    "inputElementContentText14",
    "signedByBaseInputElementContentTextXSmallWebOff4",
    "text85",
    "trailingLabelEnhancer14",
    "trailingLabel14",
    "signedByBaseTypographyLabelXSmall8",
    "text86",
    "spacer76",
    "trailingArtworkContainer14",
    "trailingArtwork14",
    "selectIndicatorContainer7",
    "chevronIcon7",
    "inputElementHint7",
    "heart31",
    "hint7",
    "signedByBaseTypographyParagraphSmall7",
    "text87",
    "spacer77"
  ],
  inputSelect4: [
    "inputSelect4",
    "signedByBaseFieldGroupSmall4",
    "endDateCalendar4",
    "inputElementTextField7",
    "signedByBaseInputElementTextFieldSmallEnabled4",
    "leadingArtworkContainer13",
    "leadingArtwork7",
    "leadingLabelContainer13",
    "leadingLabel13",
    "signedByBaseTypographyLabelSmall7",
    "text80",
    "spacer73",
    "inputElementContentText13",
    "signedByBaseInputElementContentTextSmallOff4",
    "text81",
    "trailingLabelEnhancer13",
    "trailingLabel13",
    "signedByBaseTypographyLabelSmall8",
    "text82",
    "spacer74",
    "trailingArtworkContainer13",
    "trailingArtwork13",
    "calendar4",
    "signedByBaseInputElementSelectXSmallWebSingleDefaultEnabled4",
    "leadingArtworkContainer14",
    "text83",
    "leadingLabelContainer14",
    "leadingLabel14",
    "signedByBaseTypographyLabelXSmall7",
    "text84",
    "spacer75",
    "inputElementContentText14",
    "signedByBaseInputElementContentTextXSmallWebOff4",
    "text85",
    "trailingLabelEnhancer14",
    "trailingLabel14",
    "signedByBaseTypographyLabelXSmall8",
    "text86",
    "spacer76",
    "trailingArtworkContainer14",
    "trailingArtwork14",
    "selectIndicatorContainer7",
    "chevronIcon7",
    "inputElementHint7",
    "heart31",
    "hint7",
    "signedByBaseTypographyParagraphSmall7",
    "text87",
    "spacer77"
  ],
  signedByBaseFieldGroupSmall4: ["signedByBaseFieldGroupSmall4"],
  endDateCalendar4: [
    "endDateCalendar4",
    "inputElementTextField7",
    "signedByBaseInputElementTextFieldSmallEnabled4",
    "leadingArtworkContainer13",
    "leadingArtwork7",
    "leadingLabelContainer13",
    "leadingLabel13",
    "signedByBaseTypographyLabelSmall7",
    "text80",
    "spacer73",
    "inputElementContentText13",
    "signedByBaseInputElementContentTextSmallOff4",
    "text81",
    "trailingLabelEnhancer13",
    "trailingLabel13",
    "signedByBaseTypographyLabelSmall8",
    "text82",
    "spacer74",
    "trailingArtworkContainer13",
    "trailingArtwork13",
    "calendar4",
    "signedByBaseInputElementSelectXSmallWebSingleDefaultEnabled4",
    "leadingArtworkContainer14",
    "text83",
    "leadingLabelContainer14",
    "leadingLabel14",
    "signedByBaseTypographyLabelXSmall7",
    "text84",
    "spacer75",
    "inputElementContentText14",
    "signedByBaseInputElementContentTextXSmallWebOff4",
    "text85",
    "trailingLabelEnhancer14",
    "trailingLabel14",
    "signedByBaseTypographyLabelXSmall8",
    "text86",
    "spacer76",
    "trailingArtworkContainer14",
    "trailingArtwork14",
    "selectIndicatorContainer7",
    "chevronIcon7"
  ],
  inputElementTextField7: [
    "inputElementTextField7",
    "signedByBaseInputElementTextFieldSmallEnabled4",
    "leadingArtworkContainer13",
    "leadingArtwork7",
    "leadingLabelContainer13",
    "leadingLabel13",
    "signedByBaseTypographyLabelSmall7",
    "text80",
    "spacer73",
    "inputElementContentText13",
    "signedByBaseInputElementContentTextSmallOff4",
    "text81",
    "trailingLabelEnhancer13",
    "trailingLabel13",
    "signedByBaseTypographyLabelSmall8",
    "text82",
    "spacer74",
    "trailingArtworkContainer13",
    "trailingArtwork13"
  ],
  signedByBaseInputElementTextFieldSmallEnabled4: [
    "signedByBaseInputElementTextFieldSmallEnabled4"
  ],
  leadingArtworkContainer13: ["leadingArtworkContainer13", "leadingArtwork7"],
  leadingArtwork7: ["leadingArtwork7"],
  leadingLabelContainer13: [
    "leadingLabelContainer13",
    "leadingLabel13",
    "signedByBaseTypographyLabelSmall7",
    "text80",
    "spacer73"
  ],
  leadingLabel13: [
    "leadingLabel13",
    "signedByBaseTypographyLabelSmall7",
    "text80",
    "spacer73"
  ],
  signedByBaseTypographyLabelSmall7: ["signedByBaseTypographyLabelSmall7"],
  text80: ["text80"],
  spacer73: ["spacer73"],
  inputElementContentText13: [
    "inputElementContentText13",
    "signedByBaseInputElementContentTextSmallOff4",
    "text81"
  ],
  signedByBaseInputElementContentTextSmallOff4: [
    "signedByBaseInputElementContentTextSmallOff4"
  ],
  text81: ["text81"],
  trailingLabelEnhancer13: [
    "trailingLabelEnhancer13",
    "trailingLabel13",
    "signedByBaseTypographyLabelSmall8",
    "text82",
    "spacer74"
  ],
  trailingLabel13: [
    "trailingLabel13",
    "signedByBaseTypographyLabelSmall8",
    "text82",
    "spacer74"
  ],
  signedByBaseTypographyLabelSmall8: ["signedByBaseTypographyLabelSmall8"],
  text82: ["text82"],
  spacer74: ["spacer74"],
  trailingArtworkContainer13: [
    "trailingArtworkContainer13",
    "trailingArtwork13"
  ],
  trailingArtwork13: ["trailingArtwork13"],
  calendar4: [
    "calendar4",
    "signedByBaseInputElementSelectXSmallWebSingleDefaultEnabled4",
    "leadingArtworkContainer14",
    "text83",
    "leadingLabelContainer14",
    "leadingLabel14",
    "signedByBaseTypographyLabelXSmall7",
    "text84",
    "spacer75",
    "inputElementContentText14",
    "signedByBaseInputElementContentTextXSmallWebOff4",
    "text85",
    "trailingLabelEnhancer14",
    "trailingLabel14",
    "signedByBaseTypographyLabelXSmall8",
    "text86",
    "spacer76",
    "trailingArtworkContainer14",
    "trailingArtwork14",
    "selectIndicatorContainer7",
    "chevronIcon7"
  ],
  signedByBaseInputElementSelectXSmallWebSingleDefaultEnabled4: [
    "signedByBaseInputElementSelectXSmallWebSingleDefaultEnabled4"
  ],
  leadingArtworkContainer14: ["leadingArtworkContainer14", "text83"],
  text83: ["text83"],
  leadingLabelContainer14: [
    "leadingLabelContainer14",
    "leadingLabel14",
    "signedByBaseTypographyLabelXSmall7",
    "text84",
    "spacer75"
  ],
  leadingLabel14: [
    "leadingLabel14",
    "signedByBaseTypographyLabelXSmall7",
    "text84",
    "spacer75"
  ],
  signedByBaseTypographyLabelXSmall7: ["signedByBaseTypographyLabelXSmall7"],
  text84: ["text84"],
  spacer75: ["spacer75"],
  inputElementContentText14: [
    "inputElementContentText14",
    "signedByBaseInputElementContentTextXSmallWebOff4",
    "text85"
  ],
  signedByBaseInputElementContentTextXSmallWebOff4: [
    "signedByBaseInputElementContentTextXSmallWebOff4"
  ],
  text85: ["text85"],
  trailingLabelEnhancer14: [
    "trailingLabelEnhancer14",
    "trailingLabel14",
    "signedByBaseTypographyLabelXSmall8",
    "text86",
    "spacer76"
  ],
  trailingLabel14: [
    "trailingLabel14",
    "signedByBaseTypographyLabelXSmall8",
    "text86",
    "spacer76"
  ],
  signedByBaseTypographyLabelXSmall8: ["signedByBaseTypographyLabelXSmall8"],
  text86: ["text86"],
  spacer76: ["spacer76"],
  trailingArtworkContainer14: [
    "trailingArtworkContainer14",
    "trailingArtwork14"
  ],
  trailingArtwork14: ["trailingArtwork14"],
  selectIndicatorContainer7: ["selectIndicatorContainer7", "chevronIcon7"],
  chevronIcon7: ["chevronIcon7"],
  inputElementHint7: [
    "inputElementHint7",
    "heart31",
    "hint7",
    "signedByBaseTypographyParagraphSmall7",
    "text87",
    "spacer77"
  ],
  heart31: ["heart31"],
  hint7: [
    "hint7",
    "signedByBaseTypographyParagraphSmall7",
    "text87",
    "spacer77"
  ],
  signedByBaseTypographyParagraphSmall7: [
    "signedByBaseTypographyParagraphSmall7"
  ],
  text87: ["text87"],
  spacer77: ["spacer77"],
  inputElementSelect4: [
    "inputElementSelect4",
    "signedByBaseInputElementSelectMediumSingleDefaultActive4",
    "selectFrame4",
    "leadingArtworkContainer15",
    "leadingArtwork8",
    "leadingLabelContainer15",
    "leadingLabel15",
    "signedByBaseTypographyLabelMedium19",
    "text88",
    "spacer78",
    "inputElementContentText15",
    "signedByBaseInputElementContentTextMediumOff7",
    "text89",
    "trailingLabelEnhancer15",
    "trailingLabel15",
    "signedByBaseTypographyLabelMedium20",
    "text90",
    "spacer79",
    "trailingArtworkContainer15",
    "trailingArtwork15",
    "selectIndicatorContainer8",
    "chevronIcon8",
    "menu4",
    "signedByBaseMenuListMedium4",
    "menuItem16",
    "signedByBaseMenuItemSearchMediumNoneEnabled4",
    "searchField4",
    "signedByBaseSearchFieldMediumEnabled4",
    "inputElementLabel4",
    "signedByBaseInputElementLabelMedium4",
    "typography43",
    "signedByBaseTypographyLabelMedium21",
    "text91",
    "spacer80",
    "characterCountFrame4",
    "heart32",
    "typography44",
    "signedByBaseTypographyLabelMedium22",
    "text92",
    "spacer81",
    "inputElementTextField8",
    "signedByBaseInputElementTextFieldMediumEnabled4",
    "leadingArtworkContainer16",
    "search4",
    "leadingLabelContainer16",
    "leadingLabel16",
    "signedByBaseTypographyLabelMedium23",
    "text93",
    "spacer82",
    "inputElementContentText16",
    "signedByBaseInputElementContentTextMediumOff8",
    "text94",
    "trailingLabelEnhancer16",
    "trailingLabel16",
    "signedByBaseTypographyLabelMedium24",
    "text95",
    "spacer83",
    "trailingArtworkContainer16",
    "trailingArtwork16",
    "inputElementHint8",
    "heart33",
    "hint8",
    "signedByBaseTypographyParagraphSmall8",
    "text96",
    "spacer84",
    "menuItem17",
    "signedByBaseMenuItemOptionMediumStandardEnabled13",
    "menuItemControlMediumCheckboxUnchecked13",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked13",
    "icon13",
    "leadingEnhancer13",
    "heart34",
    "textFrame13",
    "leadingText13",
    "typography45",
    "signedByBaseTypographyParagraphMedium37",
    "text97",
    "spacer85",
    "typography46",
    "signedByBaseTypographyParagraphMedium38",
    "text98",
    "spacer86",
    "typography47",
    "signedByBaseTypographyParagraphMedium39",
    "spacer87",
    "trailingEnhancer13",
    "heart35",
    "menuItem18",
    "signedByBaseMenuItemOptionMediumStandardEnabled14",
    "menuItemControlMediumCheckboxUnchecked14",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked14",
    "icon14",
    "leadingEnhancer14",
    "heart36",
    "textFrame14",
    "leadingText14",
    "typography48",
    "signedByBaseTypographyParagraphMedium40",
    "text99",
    "spacer88",
    "typography49",
    "signedByBaseTypographyParagraphMedium41",
    "text100",
    "spacer89",
    "typography50",
    "signedByBaseTypographyParagraphMedium42",
    "spacer90",
    "trailingEnhancer14",
    "checkmarkSmall4",
    "menuItem19",
    "signedByBaseMenuItemOptionMediumStandardEnabled15",
    "menuItemControlMediumCheckboxUnchecked15",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked15",
    "icon15",
    "leadingEnhancer15",
    "heart37",
    "textFrame15",
    "leadingText15",
    "typography51",
    "signedByBaseTypographyParagraphMedium43",
    "text101",
    "spacer91",
    "typography52",
    "signedByBaseTypographyParagraphMedium44",
    "text102",
    "spacer92",
    "typography53",
    "signedByBaseTypographyParagraphMedium45",
    "spacer93",
    "trailingEnhancer15",
    "heart38",
    "menuItem20",
    "signedByBaseMenuItemOptionMediumStandardEnabled16",
    "menuItemControlMediumCheckboxUnchecked16",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked16",
    "icon16",
    "leadingEnhancer16",
    "heart39",
    "textFrame16",
    "leadingText16",
    "typography54",
    "signedByBaseTypographyParagraphMedium46",
    "text103",
    "spacer94",
    "typography55",
    "signedByBaseTypographyParagraphMedium47",
    "text104",
    "spacer95",
    "typography56",
    "signedByBaseTypographyParagraphMedium48",
    "spacer96",
    "trailingEnhancer16",
    "heart40",
    "scrollBar4"
  ],
  signedByBaseInputElementSelectMediumSingleDefaultActive4: [
    "signedByBaseInputElementSelectMediumSingleDefaultActive4"
  ],
  selectFrame4: [
    "selectFrame4",
    "leadingArtworkContainer15",
    "leadingArtwork8",
    "leadingLabelContainer15",
    "leadingLabel15",
    "signedByBaseTypographyLabelMedium19",
    "text88",
    "spacer78",
    "inputElementContentText15",
    "signedByBaseInputElementContentTextMediumOff7",
    "text89",
    "trailingLabelEnhancer15",
    "trailingLabel15",
    "signedByBaseTypographyLabelMedium20",
    "text90",
    "spacer79",
    "trailingArtworkContainer15",
    "trailingArtwork15",
    "selectIndicatorContainer8",
    "chevronIcon8"
  ],
  leadingArtworkContainer15: ["leadingArtworkContainer15", "leadingArtwork8"],
  leadingArtwork8: ["leadingArtwork8"],
  leadingLabelContainer15: [
    "leadingLabelContainer15",
    "leadingLabel15",
    "signedByBaseTypographyLabelMedium19",
    "text88",
    "spacer78"
  ],
  leadingLabel15: [
    "leadingLabel15",
    "signedByBaseTypographyLabelMedium19",
    "text88",
    "spacer78"
  ],
  signedByBaseTypographyLabelMedium19: ["signedByBaseTypographyLabelMedium19"],
  text88: ["text88"],
  spacer78: ["spacer78"],
  inputElementContentText15: [
    "inputElementContentText15",
    "signedByBaseInputElementContentTextMediumOff7",
    "text89"
  ],
  signedByBaseInputElementContentTextMediumOff7: [
    "signedByBaseInputElementContentTextMediumOff7"
  ],
  text89: ["text89"],
  trailingLabelEnhancer15: [
    "trailingLabelEnhancer15",
    "trailingLabel15",
    "signedByBaseTypographyLabelMedium20",
    "text90",
    "spacer79"
  ],
  trailingLabel15: [
    "trailingLabel15",
    "signedByBaseTypographyLabelMedium20",
    "text90",
    "spacer79"
  ],
  signedByBaseTypographyLabelMedium20: ["signedByBaseTypographyLabelMedium20"],
  text90: ["text90"],
  spacer79: ["spacer79"],
  trailingArtworkContainer15: [
    "trailingArtworkContainer15",
    "trailingArtwork15"
  ],
  trailingArtwork15: ["trailingArtwork15"],
  selectIndicatorContainer8: ["selectIndicatorContainer8", "chevronIcon8"],
  chevronIcon8: ["chevronIcon8"],
  menu4: [
    "menu4",
    "signedByBaseMenuListMedium4",
    "menuItem16",
    "signedByBaseMenuItemSearchMediumNoneEnabled4",
    "searchField4",
    "signedByBaseSearchFieldMediumEnabled4",
    "inputElementLabel4",
    "signedByBaseInputElementLabelMedium4",
    "typography43",
    "signedByBaseTypographyLabelMedium21",
    "text91",
    "spacer80",
    "characterCountFrame4",
    "heart32",
    "typography44",
    "signedByBaseTypographyLabelMedium22",
    "text92",
    "spacer81",
    "inputElementTextField8",
    "signedByBaseInputElementTextFieldMediumEnabled4",
    "leadingArtworkContainer16",
    "search4",
    "leadingLabelContainer16",
    "leadingLabel16",
    "signedByBaseTypographyLabelMedium23",
    "text93",
    "spacer82",
    "inputElementContentText16",
    "signedByBaseInputElementContentTextMediumOff8",
    "text94",
    "trailingLabelEnhancer16",
    "trailingLabel16",
    "signedByBaseTypographyLabelMedium24",
    "text95",
    "spacer83",
    "trailingArtworkContainer16",
    "trailingArtwork16",
    "inputElementHint8",
    "heart33",
    "hint8",
    "signedByBaseTypographyParagraphSmall8",
    "text96",
    "spacer84",
    "menuItem17",
    "signedByBaseMenuItemOptionMediumStandardEnabled13",
    "menuItemControlMediumCheckboxUnchecked13",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked13",
    "icon13",
    "leadingEnhancer13",
    "heart34",
    "textFrame13",
    "leadingText13",
    "typography45",
    "signedByBaseTypographyParagraphMedium37",
    "text97",
    "spacer85",
    "typography46",
    "signedByBaseTypographyParagraphMedium38",
    "text98",
    "spacer86",
    "typography47",
    "signedByBaseTypographyParagraphMedium39",
    "spacer87",
    "trailingEnhancer13",
    "heart35",
    "menuItem18",
    "signedByBaseMenuItemOptionMediumStandardEnabled14",
    "menuItemControlMediumCheckboxUnchecked14",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked14",
    "icon14",
    "leadingEnhancer14",
    "heart36",
    "textFrame14",
    "leadingText14",
    "typography48",
    "signedByBaseTypographyParagraphMedium40",
    "text99",
    "spacer88",
    "typography49",
    "signedByBaseTypographyParagraphMedium41",
    "text100",
    "spacer89",
    "typography50",
    "signedByBaseTypographyParagraphMedium42",
    "spacer90",
    "trailingEnhancer14",
    "checkmarkSmall4",
    "menuItem19",
    "signedByBaseMenuItemOptionMediumStandardEnabled15",
    "menuItemControlMediumCheckboxUnchecked15",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked15",
    "icon15",
    "leadingEnhancer15",
    "heart37",
    "textFrame15",
    "leadingText15",
    "typography51",
    "signedByBaseTypographyParagraphMedium43",
    "text101",
    "spacer91",
    "typography52",
    "signedByBaseTypographyParagraphMedium44",
    "text102",
    "spacer92",
    "typography53",
    "signedByBaseTypographyParagraphMedium45",
    "spacer93",
    "trailingEnhancer15",
    "heart38",
    "menuItem20",
    "signedByBaseMenuItemOptionMediumStandardEnabled16",
    "menuItemControlMediumCheckboxUnchecked16",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked16",
    "icon16",
    "leadingEnhancer16",
    "heart39",
    "textFrame16",
    "leadingText16",
    "typography54",
    "signedByBaseTypographyParagraphMedium46",
    "text103",
    "spacer94",
    "typography55",
    "signedByBaseTypographyParagraphMedium47",
    "text104",
    "spacer95",
    "typography56",
    "signedByBaseTypographyParagraphMedium48",
    "spacer96",
    "trailingEnhancer16",
    "heart40",
    "scrollBar4"
  ],
  signedByBaseMenuListMedium4: ["signedByBaseMenuListMedium4"],
  menuItem16: [
    "menuItem16",
    "signedByBaseMenuItemSearchMediumNoneEnabled4",
    "searchField4",
    "signedByBaseSearchFieldMediumEnabled4",
    "inputElementLabel4",
    "signedByBaseInputElementLabelMedium4",
    "typography43",
    "signedByBaseTypographyLabelMedium21",
    "text91",
    "spacer80",
    "characterCountFrame4",
    "heart32",
    "typography44",
    "signedByBaseTypographyLabelMedium22",
    "text92",
    "spacer81",
    "inputElementTextField8",
    "signedByBaseInputElementTextFieldMediumEnabled4",
    "leadingArtworkContainer16",
    "search4",
    "leadingLabelContainer16",
    "leadingLabel16",
    "signedByBaseTypographyLabelMedium23",
    "text93",
    "spacer82",
    "inputElementContentText16",
    "signedByBaseInputElementContentTextMediumOff8",
    "text94",
    "trailingLabelEnhancer16",
    "trailingLabel16",
    "signedByBaseTypographyLabelMedium24",
    "text95",
    "spacer83",
    "trailingArtworkContainer16",
    "trailingArtwork16",
    "inputElementHint8",
    "heart33",
    "hint8",
    "signedByBaseTypographyParagraphSmall8",
    "text96",
    "spacer84"
  ],
  signedByBaseMenuItemSearchMediumNoneEnabled4: [
    "signedByBaseMenuItemSearchMediumNoneEnabled4"
  ],
  searchField4: [
    "searchField4",
    "signedByBaseSearchFieldMediumEnabled4",
    "inputElementLabel4",
    "signedByBaseInputElementLabelMedium4",
    "typography43",
    "signedByBaseTypographyLabelMedium21",
    "text91",
    "spacer80",
    "characterCountFrame4",
    "heart32",
    "typography44",
    "signedByBaseTypographyLabelMedium22",
    "text92",
    "spacer81",
    "inputElementTextField8",
    "signedByBaseInputElementTextFieldMediumEnabled4",
    "leadingArtworkContainer16",
    "search4",
    "leadingLabelContainer16",
    "leadingLabel16",
    "signedByBaseTypographyLabelMedium23",
    "text93",
    "spacer82",
    "inputElementContentText16",
    "signedByBaseInputElementContentTextMediumOff8",
    "text94",
    "trailingLabelEnhancer16",
    "trailingLabel16",
    "signedByBaseTypographyLabelMedium24",
    "text95",
    "spacer83",
    "trailingArtworkContainer16",
    "trailingArtwork16",
    "inputElementHint8",
    "heart33",
    "hint8",
    "signedByBaseTypographyParagraphSmall8",
    "text96",
    "spacer84"
  ],
  signedByBaseSearchFieldMediumEnabled4: [
    "signedByBaseSearchFieldMediumEnabled4"
  ],
  inputElementLabel4: [
    "inputElementLabel4",
    "signedByBaseInputElementLabelMedium4",
    "typography43",
    "signedByBaseTypographyLabelMedium21",
    "text91",
    "spacer80",
    "characterCountFrame4",
    "heart32",
    "typography44",
    "signedByBaseTypographyLabelMedium22",
    "text92",
    "spacer81"
  ],
  signedByBaseInputElementLabelMedium4: [
    "signedByBaseInputElementLabelMedium4"
  ],
  typography43: [
    "typography43",
    "signedByBaseTypographyLabelMedium21",
    "text91",
    "spacer80"
  ],
  signedByBaseTypographyLabelMedium21: ["signedByBaseTypographyLabelMedium21"],
  text91: ["text91"],
  spacer80: ["spacer80"],
  characterCountFrame4: [
    "characterCountFrame4",
    "heart32",
    "typography44",
    "signedByBaseTypographyLabelMedium22",
    "text92",
    "spacer81"
  ],
  heart32: ["heart32"],
  typography44: [
    "typography44",
    "signedByBaseTypographyLabelMedium22",
    "text92",
    "spacer81"
  ],
  signedByBaseTypographyLabelMedium22: ["signedByBaseTypographyLabelMedium22"],
  text92: ["text92"],
  spacer81: ["spacer81"],
  inputElementTextField8: [
    "inputElementTextField8",
    "signedByBaseInputElementTextFieldMediumEnabled4",
    "leadingArtworkContainer16",
    "search4",
    "leadingLabelContainer16",
    "leadingLabel16",
    "signedByBaseTypographyLabelMedium23",
    "text93",
    "spacer82",
    "inputElementContentText16",
    "signedByBaseInputElementContentTextMediumOff8",
    "text94",
    "trailingLabelEnhancer16",
    "trailingLabel16",
    "signedByBaseTypographyLabelMedium24",
    "text95",
    "spacer83",
    "trailingArtworkContainer16",
    "trailingArtwork16"
  ],
  signedByBaseInputElementTextFieldMediumEnabled4: [
    "signedByBaseInputElementTextFieldMediumEnabled4"
  ],
  leadingArtworkContainer16: ["leadingArtworkContainer16", "search4"],
  search4: ["search4"],
  leadingLabelContainer16: [
    "leadingLabelContainer16",
    "leadingLabel16",
    "signedByBaseTypographyLabelMedium23",
    "text93",
    "spacer82"
  ],
  leadingLabel16: [
    "leadingLabel16",
    "signedByBaseTypographyLabelMedium23",
    "text93",
    "spacer82"
  ],
  signedByBaseTypographyLabelMedium23: ["signedByBaseTypographyLabelMedium23"],
  text93: ["text93"],
  spacer82: ["spacer82"],
  inputElementContentText16: [
    "inputElementContentText16",
    "signedByBaseInputElementContentTextMediumOff8",
    "text94"
  ],
  signedByBaseInputElementContentTextMediumOff8: [
    "signedByBaseInputElementContentTextMediumOff8"
  ],
  text94: ["text94"],
  trailingLabelEnhancer16: [
    "trailingLabelEnhancer16",
    "trailingLabel16",
    "signedByBaseTypographyLabelMedium24",
    "text95",
    "spacer83"
  ],
  trailingLabel16: [
    "trailingLabel16",
    "signedByBaseTypographyLabelMedium24",
    "text95",
    "spacer83"
  ],
  signedByBaseTypographyLabelMedium24: ["signedByBaseTypographyLabelMedium24"],
  text95: ["text95"],
  spacer83: ["spacer83"],
  trailingArtworkContainer16: [
    "trailingArtworkContainer16",
    "trailingArtwork16"
  ],
  trailingArtwork16: ["trailingArtwork16"],
  inputElementHint8: [
    "inputElementHint8",
    "heart33",
    "hint8",
    "signedByBaseTypographyParagraphSmall8",
    "text96",
    "spacer84"
  ],
  heart33: ["heart33"],
  hint8: [
    "hint8",
    "signedByBaseTypographyParagraphSmall8",
    "text96",
    "spacer84"
  ],
  signedByBaseTypographyParagraphSmall8: [
    "signedByBaseTypographyParagraphSmall8"
  ],
  text96: ["text96"],
  spacer84: ["spacer84"],
  menuItem17: [
    "menuItem17",
    "signedByBaseMenuItemOptionMediumStandardEnabled13",
    "menuItemControlMediumCheckboxUnchecked13",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked13",
    "icon13",
    "leadingEnhancer13",
    "heart34",
    "textFrame13",
    "leadingText13",
    "typography45",
    "signedByBaseTypographyParagraphMedium37",
    "text97",
    "spacer85",
    "typography46",
    "signedByBaseTypographyParagraphMedium38",
    "text98",
    "spacer86",
    "typography47",
    "signedByBaseTypographyParagraphMedium39",
    "spacer87",
    "trailingEnhancer13",
    "heart35"
  ],
  signedByBaseMenuItemOptionMediumStandardEnabled13: [
    "signedByBaseMenuItemOptionMediumStandardEnabled13"
  ],
  menuItemControlMediumCheckboxUnchecked13: [
    "menuItemControlMediumCheckboxUnchecked13",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked13",
    "icon13"
  ],
  signedByBaseMenuItemControlMediumCheckboxUnchecked13: [
    "signedByBaseMenuItemControlMediumCheckboxUnchecked13"
  ],
  icon13: ["icon13"],
  leadingEnhancer13: ["leadingEnhancer13", "heart34"],
  heart34: ["heart34"],
  textFrame13: [
    "textFrame13",
    "leadingText13",
    "typography45",
    "signedByBaseTypographyParagraphMedium37",
    "text97",
    "spacer85",
    "typography46",
    "signedByBaseTypographyParagraphMedium38",
    "text98",
    "spacer86",
    "typography47",
    "signedByBaseTypographyParagraphMedium39",
    "spacer87"
  ],
  leadingText13: [
    "leadingText13",
    "typography45",
    "signedByBaseTypographyParagraphMedium37",
    "text97",
    "spacer85",
    "typography46",
    "signedByBaseTypographyParagraphMedium38",
    "text98",
    "spacer86"
  ],
  typography45: [
    "typography45",
    "signedByBaseTypographyParagraphMedium37",
    "text97",
    "spacer85"
  ],
  signedByBaseTypographyParagraphMedium37: [
    "signedByBaseTypographyParagraphMedium37"
  ],
  text97: ["text97"],
  spacer85: ["spacer85"],
  typography46: [
    "typography46",
    "signedByBaseTypographyParagraphMedium38",
    "text98",
    "spacer86"
  ],
  signedByBaseTypographyParagraphMedium38: [
    "signedByBaseTypographyParagraphMedium38"
  ],
  text98: ["text98"],
  spacer86: ["spacer86"],
  typography47: [
    "typography47",
    "signedByBaseTypographyParagraphMedium39",
    "spacer87"
  ],
  signedByBaseTypographyParagraphMedium39: [
    "signedByBaseTypographyParagraphMedium39"
  ],
  spacer87: ["spacer87"],
  trailingEnhancer13: ["trailingEnhancer13", "heart35"],
  heart35: ["heart35"],
  menuItem18: [
    "menuItem18",
    "signedByBaseMenuItemOptionMediumStandardEnabled14",
    "menuItemControlMediumCheckboxUnchecked14",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked14",
    "icon14",
    "leadingEnhancer14",
    "heart36",
    "textFrame14",
    "leadingText14",
    "typography48",
    "signedByBaseTypographyParagraphMedium40",
    "text99",
    "spacer88",
    "typography49",
    "signedByBaseTypographyParagraphMedium41",
    "text100",
    "spacer89",
    "typography50",
    "signedByBaseTypographyParagraphMedium42",
    "spacer90",
    "trailingEnhancer14",
    "checkmarkSmall4"
  ],
  signedByBaseMenuItemOptionMediumStandardEnabled14: [
    "signedByBaseMenuItemOptionMediumStandardEnabled14"
  ],
  menuItemControlMediumCheckboxUnchecked14: [
    "menuItemControlMediumCheckboxUnchecked14",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked14",
    "icon14"
  ],
  signedByBaseMenuItemControlMediumCheckboxUnchecked14: [
    "signedByBaseMenuItemControlMediumCheckboxUnchecked14"
  ],
  icon14: ["icon14"],
  leadingEnhancer14: ["leadingEnhancer14", "heart36"],
  heart36: ["heart36"],
  textFrame14: [
    "textFrame14",
    "leadingText14",
    "typography48",
    "signedByBaseTypographyParagraphMedium40",
    "text99",
    "spacer88",
    "typography49",
    "signedByBaseTypographyParagraphMedium41",
    "text100",
    "spacer89",
    "typography50",
    "signedByBaseTypographyParagraphMedium42",
    "spacer90"
  ],
  leadingText14: [
    "leadingText14",
    "typography48",
    "signedByBaseTypographyParagraphMedium40",
    "text99",
    "spacer88",
    "typography49",
    "signedByBaseTypographyParagraphMedium41",
    "text100",
    "spacer89"
  ],
  typography48: [
    "typography48",
    "signedByBaseTypographyParagraphMedium40",
    "text99",
    "spacer88"
  ],
  signedByBaseTypographyParagraphMedium40: [
    "signedByBaseTypographyParagraphMedium40"
  ],
  text99: ["text99"],
  spacer88: ["spacer88"],
  typography49: [
    "typography49",
    "signedByBaseTypographyParagraphMedium41",
    "text100",
    "spacer89"
  ],
  signedByBaseTypographyParagraphMedium41: [
    "signedByBaseTypographyParagraphMedium41"
  ],
  text100: ["text100"],
  spacer89: ["spacer89"],
  typography50: [
    "typography50",
    "signedByBaseTypographyParagraphMedium42",
    "spacer90"
  ],
  signedByBaseTypographyParagraphMedium42: [
    "signedByBaseTypographyParagraphMedium42"
  ],
  spacer90: ["spacer90"],
  trailingEnhancer14: ["trailingEnhancer14", "checkmarkSmall4"],
  checkmarkSmall4: ["checkmarkSmall4"],
  menuItem19: [
    "menuItem19",
    "signedByBaseMenuItemOptionMediumStandardEnabled15",
    "menuItemControlMediumCheckboxUnchecked15",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked15",
    "icon15",
    "leadingEnhancer15",
    "heart37",
    "textFrame15",
    "leadingText15",
    "typography51",
    "signedByBaseTypographyParagraphMedium43",
    "text101",
    "spacer91",
    "typography52",
    "signedByBaseTypographyParagraphMedium44",
    "text102",
    "spacer92",
    "typography53",
    "signedByBaseTypographyParagraphMedium45",
    "spacer93",
    "trailingEnhancer15",
    "heart38"
  ],
  signedByBaseMenuItemOptionMediumStandardEnabled15: [
    "signedByBaseMenuItemOptionMediumStandardEnabled15"
  ],
  menuItemControlMediumCheckboxUnchecked15: [
    "menuItemControlMediumCheckboxUnchecked15",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked15",
    "icon15"
  ],
  signedByBaseMenuItemControlMediumCheckboxUnchecked15: [
    "signedByBaseMenuItemControlMediumCheckboxUnchecked15"
  ],
  icon15: ["icon15"],
  leadingEnhancer15: ["leadingEnhancer15", "heart37"],
  heart37: ["heart37"],
  textFrame15: [
    "textFrame15",
    "leadingText15",
    "typography51",
    "signedByBaseTypographyParagraphMedium43",
    "text101",
    "spacer91",
    "typography52",
    "signedByBaseTypographyParagraphMedium44",
    "text102",
    "spacer92",
    "typography53",
    "signedByBaseTypographyParagraphMedium45",
    "spacer93"
  ],
  leadingText15: [
    "leadingText15",
    "typography51",
    "signedByBaseTypographyParagraphMedium43",
    "text101",
    "spacer91",
    "typography52",
    "signedByBaseTypographyParagraphMedium44",
    "text102",
    "spacer92"
  ],
  typography51: [
    "typography51",
    "signedByBaseTypographyParagraphMedium43",
    "text101",
    "spacer91"
  ],
  signedByBaseTypographyParagraphMedium43: [
    "signedByBaseTypographyParagraphMedium43"
  ],
  text101: ["text101"],
  spacer91: ["spacer91"],
  typography52: [
    "typography52",
    "signedByBaseTypographyParagraphMedium44",
    "text102",
    "spacer92"
  ],
  signedByBaseTypographyParagraphMedium44: [
    "signedByBaseTypographyParagraphMedium44"
  ],
  text102: ["text102"],
  spacer92: ["spacer92"],
  typography53: [
    "typography53",
    "signedByBaseTypographyParagraphMedium45",
    "spacer93"
  ],
  signedByBaseTypographyParagraphMedium45: [
    "signedByBaseTypographyParagraphMedium45"
  ],
  spacer93: ["spacer93"],
  trailingEnhancer15: ["trailingEnhancer15", "heart38"],
  heart38: ["heart38"],
  menuItem20: [
    "menuItem20",
    "signedByBaseMenuItemOptionMediumStandardEnabled16",
    "menuItemControlMediumCheckboxUnchecked16",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked16",
    "icon16",
    "leadingEnhancer16",
    "heart39",
    "textFrame16",
    "leadingText16",
    "typography54",
    "signedByBaseTypographyParagraphMedium46",
    "text103",
    "spacer94",
    "typography55",
    "signedByBaseTypographyParagraphMedium47",
    "text104",
    "spacer95",
    "typography56",
    "signedByBaseTypographyParagraphMedium48",
    "spacer96",
    "trailingEnhancer16",
    "heart40"
  ],
  signedByBaseMenuItemOptionMediumStandardEnabled16: [
    "signedByBaseMenuItemOptionMediumStandardEnabled16"
  ],
  menuItemControlMediumCheckboxUnchecked16: [
    "menuItemControlMediumCheckboxUnchecked16",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked16",
    "icon16"
  ],
  signedByBaseMenuItemControlMediumCheckboxUnchecked16: [
    "signedByBaseMenuItemControlMediumCheckboxUnchecked16"
  ],
  icon16: ["icon16"],
  leadingEnhancer16: ["leadingEnhancer16", "heart39"],
  heart39: ["heart39"],
  textFrame16: [
    "textFrame16",
    "leadingText16",
    "typography54",
    "signedByBaseTypographyParagraphMedium46",
    "text103",
    "spacer94",
    "typography55",
    "signedByBaseTypographyParagraphMedium47",
    "text104",
    "spacer95",
    "typography56",
    "signedByBaseTypographyParagraphMedium48",
    "spacer96"
  ],
  leadingText16: [
    "leadingText16",
    "typography54",
    "signedByBaseTypographyParagraphMedium46",
    "text103",
    "spacer94",
    "typography55",
    "signedByBaseTypographyParagraphMedium47",
    "text104",
    "spacer95"
  ],
  typography54: [
    "typography54",
    "signedByBaseTypographyParagraphMedium46",
    "text103",
    "spacer94"
  ],
  signedByBaseTypographyParagraphMedium46: [
    "signedByBaseTypographyParagraphMedium46"
  ],
  text103: ["text103"],
  spacer94: ["spacer94"],
  typography55: [
    "typography55",
    "signedByBaseTypographyParagraphMedium47",
    "text104",
    "spacer95"
  ],
  signedByBaseTypographyParagraphMedium47: [
    "signedByBaseTypographyParagraphMedium47"
  ],
  text104: ["text104"],
  spacer95: ["spacer95"],
  typography56: [
    "typography56",
    "signedByBaseTypographyParagraphMedium48",
    "spacer96"
  ],
  signedByBaseTypographyParagraphMedium48: [
    "signedByBaseTypographyParagraphMedium48"
  ],
  spacer96: ["spacer96"],
  trailingEnhancer16: ["trailingEnhancer16", "heart40"],
  heart40: ["heart40"],
  scrollBar4: ["scrollBar4"],
  model4: ["model4"],
  buttons4: [
    "buttons4",
    "button13",
    "frame1073713927",
    "frame1073713933",
    "button14",
    "button15",
    "button16"
  ],
  button13: ["button13"],
  frame1073713927: ["frame1073713927"],
  frame1073713933: ["frame1073713933", "button14", "button15", "button16"],
  button14: ["button14"],
  button15: ["button15"],
  button16: ["button16"],
  deleteTaskRunsheet: [
    "deleteTaskRunsheet",
    "frame1437254018",
    "name5",
    "frame1437254021",
    "form3",
    "content3",
    "titre3",
    "texinput23",
    "date3",
    "label8",
    "timePicker9",
    "type3",
    "budget3",
    "comments3",
    "input9",
    "name6",
    "datePickerWeb3",
    "inputSelect3",
    "signedByBaseFieldGroupSmall3",
    "endDateCalendar3",
    "inputElementTextField5",
    "signedByBaseInputElementTextFieldSmallEnabled3",
    "leadingArtworkContainer9",
    "leadingArtwork5",
    "leadingLabelContainer9",
    "leadingLabel9",
    "signedByBaseTypographyLabelSmall5",
    "text55",
    "spacer49",
    "inputElementContentText9",
    "signedByBaseInputElementContentTextSmallOff3",
    "text56",
    "trailingLabelEnhancer9",
    "trailingLabel9",
    "signedByBaseTypographyLabelSmall6",
    "text57",
    "spacer50",
    "trailingArtworkContainer9",
    "trailingArtwork9",
    "calendar3",
    "signedByBaseInputElementSelectXSmallWebSingleDefaultEnabled3",
    "leadingArtworkContainer10",
    "text58",
    "leadingLabelContainer10",
    "leadingLabel10",
    "signedByBaseTypographyLabelXSmall5",
    "text59",
    "spacer51",
    "inputElementContentText10",
    "signedByBaseInputElementContentTextXSmallWebOff3",
    "text60",
    "trailingLabelEnhancer10",
    "trailingLabel10",
    "signedByBaseTypographyLabelXSmall6",
    "text61",
    "spacer52",
    "trailingArtworkContainer10",
    "trailingArtwork10",
    "selectIndicatorContainer5",
    "chevronIcon5",
    "inputElementHint5",
    "heart21",
    "hint5",
    "signedByBaseTypographyParagraphSmall5",
    "text62",
    "spacer53",
    "inputElementSelect3",
    "signedByBaseInputElementSelectMediumSingleDefaultActive3",
    "selectFrame3",
    "leadingArtworkContainer11",
    "leadingArtwork6",
    "leadingLabelContainer11",
    "leadingLabel11",
    "signedByBaseTypographyLabelMedium13",
    "text63",
    "spacer54",
    "inputElementContentText11",
    "signedByBaseInputElementContentTextMediumOff5",
    "text64",
    "trailingLabelEnhancer11",
    "trailingLabel11",
    "signedByBaseTypographyLabelMedium14",
    "text65",
    "spacer55",
    "trailingArtworkContainer11",
    "trailingArtwork11",
    "selectIndicatorContainer6",
    "chevronIcon6",
    "menu3",
    "signedByBaseMenuListMedium3",
    "menuItem11",
    "signedByBaseMenuItemSearchMediumNoneEnabled3",
    "searchField3",
    "signedByBaseSearchFieldMediumEnabled3",
    "inputElementLabel3",
    "signedByBaseInputElementLabelMedium3",
    "typography29",
    "signedByBaseTypographyLabelMedium15",
    "text66",
    "spacer56",
    "characterCountFrame3",
    "heart22",
    "typography30",
    "signedByBaseTypographyLabelMedium16",
    "text67",
    "spacer57",
    "inputElementTextField6",
    "signedByBaseInputElementTextFieldMediumEnabled3",
    "leadingArtworkContainer12",
    "search3",
    "leadingLabelContainer12",
    "leadingLabel12",
    "signedByBaseTypographyLabelMedium17",
    "text68",
    "spacer58",
    "inputElementContentText12",
    "signedByBaseInputElementContentTextMediumOff6",
    "text69",
    "trailingLabelEnhancer12",
    "trailingLabel12",
    "signedByBaseTypographyLabelMedium18",
    "text70",
    "spacer59",
    "trailingArtworkContainer12",
    "trailingArtwork12",
    "inputElementHint6",
    "heart23",
    "hint6",
    "signedByBaseTypographyParagraphSmall6",
    "text71",
    "spacer60",
    "menuItem12",
    "signedByBaseMenuItemOptionMediumStandardEnabled9",
    "menuItemControlMediumCheckboxUnchecked9",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked9",
    "icon9",
    "leadingEnhancer9",
    "heart24",
    "textFrame9",
    "leadingText9",
    "typography31",
    "signedByBaseTypographyParagraphMedium25",
    "text72",
    "spacer61",
    "typography32",
    "signedByBaseTypographyParagraphMedium26",
    "text73",
    "spacer62",
    "typography33",
    "signedByBaseTypographyParagraphMedium27",
    "spacer63",
    "trailingEnhancer9",
    "heart25",
    "menuItem13",
    "signedByBaseMenuItemOptionMediumStandardEnabled10",
    "menuItemControlMediumCheckboxUnchecked10",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked10",
    "icon10",
    "leadingEnhancer10",
    "heart26",
    "textFrame10",
    "leadingText10",
    "typography34",
    "signedByBaseTypographyParagraphMedium28",
    "text74",
    "spacer64",
    "typography35",
    "signedByBaseTypographyParagraphMedium29",
    "text75",
    "spacer65",
    "typography36",
    "signedByBaseTypographyParagraphMedium30",
    "spacer66",
    "trailingEnhancer10",
    "checkmarkSmall3",
    "menuItem14",
    "signedByBaseMenuItemOptionMediumStandardEnabled11",
    "menuItemControlMediumCheckboxUnchecked11",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked11",
    "icon11",
    "leadingEnhancer11",
    "heart27",
    "textFrame11",
    "leadingText11",
    "typography37",
    "signedByBaseTypographyParagraphMedium31",
    "text76",
    "spacer67",
    "typography38",
    "signedByBaseTypographyParagraphMedium32",
    "text77",
    "spacer68",
    "typography39",
    "signedByBaseTypographyParagraphMedium33",
    "spacer69",
    "trailingEnhancer11",
    "heart28",
    "menuItem15",
    "signedByBaseMenuItemOptionMediumStandardEnabled12",
    "menuItemControlMediumCheckboxUnchecked12",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked12",
    "icon12",
    "leadingEnhancer12",
    "heart29",
    "textFrame12",
    "leadingText12",
    "typography40",
    "signedByBaseTypographyParagraphMedium34",
    "text78",
    "spacer70",
    "typography41",
    "signedByBaseTypographyParagraphMedium35",
    "text79",
    "spacer71",
    "typography42",
    "signedByBaseTypographyParagraphMedium36",
    "spacer72",
    "trailingEnhancer12",
    "heart30",
    "scrollBar3",
    "model3",
    "buttons3",
    "button9",
    "frame1073713926",
    "frame1073713932",
    "button10",
    "button11",
    "button12"
  ],
  frame1437254018: ["frame1437254018", "name5", "frame1437254021"],
  name5: ["name5"],
  frame1437254021: ["frame1437254021"],
  form3: ["form3"],
  content3: [
    "content3",
    "titre3",
    "texinput23",
    "date3",
    "label8",
    "timePicker9",
    "type3",
    "budget3",
    "comments3",
    "input9",
    "name6",
    "datePickerWeb3",
    "inputSelect3",
    "signedByBaseFieldGroupSmall3",
    "endDateCalendar3",
    "inputElementTextField5",
    "signedByBaseInputElementTextFieldSmallEnabled3",
    "leadingArtworkContainer9",
    "leadingArtwork5",
    "leadingLabelContainer9",
    "leadingLabel9",
    "signedByBaseTypographyLabelSmall5",
    "text55",
    "spacer49",
    "inputElementContentText9",
    "signedByBaseInputElementContentTextSmallOff3",
    "text56",
    "trailingLabelEnhancer9",
    "trailingLabel9",
    "signedByBaseTypographyLabelSmall6",
    "text57",
    "spacer50",
    "trailingArtworkContainer9",
    "trailingArtwork9",
    "calendar3",
    "signedByBaseInputElementSelectXSmallWebSingleDefaultEnabled3",
    "leadingArtworkContainer10",
    "text58",
    "leadingLabelContainer10",
    "leadingLabel10",
    "signedByBaseTypographyLabelXSmall5",
    "text59",
    "spacer51",
    "inputElementContentText10",
    "signedByBaseInputElementContentTextXSmallWebOff3",
    "text60",
    "trailingLabelEnhancer10",
    "trailingLabel10",
    "signedByBaseTypographyLabelXSmall6",
    "text61",
    "spacer52",
    "trailingArtworkContainer10",
    "trailingArtwork10",
    "selectIndicatorContainer5",
    "chevronIcon5",
    "inputElementHint5",
    "heart21",
    "hint5",
    "signedByBaseTypographyParagraphSmall5",
    "text62",
    "spacer53",
    "inputElementSelect3",
    "signedByBaseInputElementSelectMediumSingleDefaultActive3",
    "selectFrame3",
    "leadingArtworkContainer11",
    "leadingArtwork6",
    "leadingLabelContainer11",
    "leadingLabel11",
    "signedByBaseTypographyLabelMedium13",
    "text63",
    "spacer54",
    "inputElementContentText11",
    "signedByBaseInputElementContentTextMediumOff5",
    "text64",
    "trailingLabelEnhancer11",
    "trailingLabel11",
    "signedByBaseTypographyLabelMedium14",
    "text65",
    "spacer55",
    "trailingArtworkContainer11",
    "trailingArtwork11",
    "selectIndicatorContainer6",
    "chevronIcon6",
    "menu3",
    "signedByBaseMenuListMedium3",
    "menuItem11",
    "signedByBaseMenuItemSearchMediumNoneEnabled3",
    "searchField3",
    "signedByBaseSearchFieldMediumEnabled3",
    "inputElementLabel3",
    "signedByBaseInputElementLabelMedium3",
    "typography29",
    "signedByBaseTypographyLabelMedium15",
    "text66",
    "spacer56",
    "characterCountFrame3",
    "heart22",
    "typography30",
    "signedByBaseTypographyLabelMedium16",
    "text67",
    "spacer57",
    "inputElementTextField6",
    "signedByBaseInputElementTextFieldMediumEnabled3",
    "leadingArtworkContainer12",
    "search3",
    "leadingLabelContainer12",
    "leadingLabel12",
    "signedByBaseTypographyLabelMedium17",
    "text68",
    "spacer58",
    "inputElementContentText12",
    "signedByBaseInputElementContentTextMediumOff6",
    "text69",
    "trailingLabelEnhancer12",
    "trailingLabel12",
    "signedByBaseTypographyLabelMedium18",
    "text70",
    "spacer59",
    "trailingArtworkContainer12",
    "trailingArtwork12",
    "inputElementHint6",
    "heart23",
    "hint6",
    "signedByBaseTypographyParagraphSmall6",
    "text71",
    "spacer60",
    "menuItem12",
    "signedByBaseMenuItemOptionMediumStandardEnabled9",
    "menuItemControlMediumCheckboxUnchecked9",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked9",
    "icon9",
    "leadingEnhancer9",
    "heart24",
    "textFrame9",
    "leadingText9",
    "typography31",
    "signedByBaseTypographyParagraphMedium25",
    "text72",
    "spacer61",
    "typography32",
    "signedByBaseTypographyParagraphMedium26",
    "text73",
    "spacer62",
    "typography33",
    "signedByBaseTypographyParagraphMedium27",
    "spacer63",
    "trailingEnhancer9",
    "heart25",
    "menuItem13",
    "signedByBaseMenuItemOptionMediumStandardEnabled10",
    "menuItemControlMediumCheckboxUnchecked10",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked10",
    "icon10",
    "leadingEnhancer10",
    "heart26",
    "textFrame10",
    "leadingText10",
    "typography34",
    "signedByBaseTypographyParagraphMedium28",
    "text74",
    "spacer64",
    "typography35",
    "signedByBaseTypographyParagraphMedium29",
    "text75",
    "spacer65",
    "typography36",
    "signedByBaseTypographyParagraphMedium30",
    "spacer66",
    "trailingEnhancer10",
    "checkmarkSmall3",
    "menuItem14",
    "signedByBaseMenuItemOptionMediumStandardEnabled11",
    "menuItemControlMediumCheckboxUnchecked11",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked11",
    "icon11",
    "leadingEnhancer11",
    "heart27",
    "textFrame11",
    "leadingText11",
    "typography37",
    "signedByBaseTypographyParagraphMedium31",
    "text76",
    "spacer67",
    "typography38",
    "signedByBaseTypographyParagraphMedium32",
    "text77",
    "spacer68",
    "typography39",
    "signedByBaseTypographyParagraphMedium33",
    "spacer69",
    "trailingEnhancer11",
    "heart28",
    "menuItem15",
    "signedByBaseMenuItemOptionMediumStandardEnabled12",
    "menuItemControlMediumCheckboxUnchecked12",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked12",
    "icon12",
    "leadingEnhancer12",
    "heart29",
    "textFrame12",
    "leadingText12",
    "typography40",
    "signedByBaseTypographyParagraphMedium34",
    "text78",
    "spacer70",
    "typography41",
    "signedByBaseTypographyParagraphMedium35",
    "text79",
    "spacer71",
    "typography42",
    "signedByBaseTypographyParagraphMedium36",
    "spacer72",
    "trailingEnhancer12",
    "heart30",
    "scrollBar3",
    "model3",
    "buttons3",
    "button9",
    "frame1073713926",
    "frame1073713932",
    "button10",
    "button11",
    "button12"
  ],
  titre3: ["titre3"],
  texinput23: ["texinput23"],
  date3: ["date3", "label8", "timePicker9"],
  label8: ["label8"],
  timePicker9: ["timePicker9"],
  type3: ["type3"],
  budget3: ["budget3"],
  comments3: ["comments3"],
  input9: [
    "input9",
    "name6",
    "datePickerWeb3",
    "inputSelect3",
    "signedByBaseFieldGroupSmall3",
    "endDateCalendar3",
    "inputElementTextField5",
    "signedByBaseInputElementTextFieldSmallEnabled3",
    "leadingArtworkContainer9",
    "leadingArtwork5",
    "leadingLabelContainer9",
    "leadingLabel9",
    "signedByBaseTypographyLabelSmall5",
    "text55",
    "spacer49",
    "inputElementContentText9",
    "signedByBaseInputElementContentTextSmallOff3",
    "text56",
    "trailingLabelEnhancer9",
    "trailingLabel9",
    "signedByBaseTypographyLabelSmall6",
    "text57",
    "spacer50",
    "trailingArtworkContainer9",
    "trailingArtwork9",
    "calendar3",
    "signedByBaseInputElementSelectXSmallWebSingleDefaultEnabled3",
    "leadingArtworkContainer10",
    "text58",
    "leadingLabelContainer10",
    "leadingLabel10",
    "signedByBaseTypographyLabelXSmall5",
    "text59",
    "spacer51",
    "inputElementContentText10",
    "signedByBaseInputElementContentTextXSmallWebOff3",
    "text60",
    "trailingLabelEnhancer10",
    "trailingLabel10",
    "signedByBaseTypographyLabelXSmall6",
    "text61",
    "spacer52",
    "trailingArtworkContainer10",
    "trailingArtwork10",
    "selectIndicatorContainer5",
    "chevronIcon5",
    "inputElementHint5",
    "heart21",
    "hint5",
    "signedByBaseTypographyParagraphSmall5",
    "text62",
    "spacer53",
    "inputElementSelect3",
    "signedByBaseInputElementSelectMediumSingleDefaultActive3",
    "selectFrame3",
    "leadingArtworkContainer11",
    "leadingArtwork6",
    "leadingLabelContainer11",
    "leadingLabel11",
    "signedByBaseTypographyLabelMedium13",
    "text63",
    "spacer54",
    "inputElementContentText11",
    "signedByBaseInputElementContentTextMediumOff5",
    "text64",
    "trailingLabelEnhancer11",
    "trailingLabel11",
    "signedByBaseTypographyLabelMedium14",
    "text65",
    "spacer55",
    "trailingArtworkContainer11",
    "trailingArtwork11",
    "selectIndicatorContainer6",
    "chevronIcon6",
    "menu3",
    "signedByBaseMenuListMedium3",
    "menuItem11",
    "signedByBaseMenuItemSearchMediumNoneEnabled3",
    "searchField3",
    "signedByBaseSearchFieldMediumEnabled3",
    "inputElementLabel3",
    "signedByBaseInputElementLabelMedium3",
    "typography29",
    "signedByBaseTypographyLabelMedium15",
    "text66",
    "spacer56",
    "characterCountFrame3",
    "heart22",
    "typography30",
    "signedByBaseTypographyLabelMedium16",
    "text67",
    "spacer57",
    "inputElementTextField6",
    "signedByBaseInputElementTextFieldMediumEnabled3",
    "leadingArtworkContainer12",
    "search3",
    "leadingLabelContainer12",
    "leadingLabel12",
    "signedByBaseTypographyLabelMedium17",
    "text68",
    "spacer58",
    "inputElementContentText12",
    "signedByBaseInputElementContentTextMediumOff6",
    "text69",
    "trailingLabelEnhancer12",
    "trailingLabel12",
    "signedByBaseTypographyLabelMedium18",
    "text70",
    "spacer59",
    "trailingArtworkContainer12",
    "trailingArtwork12",
    "inputElementHint6",
    "heart23",
    "hint6",
    "signedByBaseTypographyParagraphSmall6",
    "text71",
    "spacer60",
    "menuItem12",
    "signedByBaseMenuItemOptionMediumStandardEnabled9",
    "menuItemControlMediumCheckboxUnchecked9",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked9",
    "icon9",
    "leadingEnhancer9",
    "heart24",
    "textFrame9",
    "leadingText9",
    "typography31",
    "signedByBaseTypographyParagraphMedium25",
    "text72",
    "spacer61",
    "typography32",
    "signedByBaseTypographyParagraphMedium26",
    "text73",
    "spacer62",
    "typography33",
    "signedByBaseTypographyParagraphMedium27",
    "spacer63",
    "trailingEnhancer9",
    "heart25",
    "menuItem13",
    "signedByBaseMenuItemOptionMediumStandardEnabled10",
    "menuItemControlMediumCheckboxUnchecked10",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked10",
    "icon10",
    "leadingEnhancer10",
    "heart26",
    "textFrame10",
    "leadingText10",
    "typography34",
    "signedByBaseTypographyParagraphMedium28",
    "text74",
    "spacer64",
    "typography35",
    "signedByBaseTypographyParagraphMedium29",
    "text75",
    "spacer65",
    "typography36",
    "signedByBaseTypographyParagraphMedium30",
    "spacer66",
    "trailingEnhancer10",
    "checkmarkSmall3",
    "menuItem14",
    "signedByBaseMenuItemOptionMediumStandardEnabled11",
    "menuItemControlMediumCheckboxUnchecked11",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked11",
    "icon11",
    "leadingEnhancer11",
    "heart27",
    "textFrame11",
    "leadingText11",
    "typography37",
    "signedByBaseTypographyParagraphMedium31",
    "text76",
    "spacer67",
    "typography38",
    "signedByBaseTypographyParagraphMedium32",
    "text77",
    "spacer68",
    "typography39",
    "signedByBaseTypographyParagraphMedium33",
    "spacer69",
    "trailingEnhancer11",
    "heart28",
    "menuItem15",
    "signedByBaseMenuItemOptionMediumStandardEnabled12",
    "menuItemControlMediumCheckboxUnchecked12",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked12",
    "icon12",
    "leadingEnhancer12",
    "heart29",
    "textFrame12",
    "leadingText12",
    "typography40",
    "signedByBaseTypographyParagraphMedium34",
    "text78",
    "spacer70",
    "typography41",
    "signedByBaseTypographyParagraphMedium35",
    "text79",
    "spacer71",
    "typography42",
    "signedByBaseTypographyParagraphMedium36",
    "spacer72",
    "trailingEnhancer12",
    "heart30",
    "scrollBar3"
  ],
  name6: ["name6"],
  datePickerWeb3: [
    "datePickerWeb3",
    "inputSelect3",
    "signedByBaseFieldGroupSmall3",
    "endDateCalendar3",
    "inputElementTextField5",
    "signedByBaseInputElementTextFieldSmallEnabled3",
    "leadingArtworkContainer9",
    "leadingArtwork5",
    "leadingLabelContainer9",
    "leadingLabel9",
    "signedByBaseTypographyLabelSmall5",
    "text55",
    "spacer49",
    "inputElementContentText9",
    "signedByBaseInputElementContentTextSmallOff3",
    "text56",
    "trailingLabelEnhancer9",
    "trailingLabel9",
    "signedByBaseTypographyLabelSmall6",
    "text57",
    "spacer50",
    "trailingArtworkContainer9",
    "trailingArtwork9",
    "calendar3",
    "signedByBaseInputElementSelectXSmallWebSingleDefaultEnabled3",
    "leadingArtworkContainer10",
    "text58",
    "leadingLabelContainer10",
    "leadingLabel10",
    "signedByBaseTypographyLabelXSmall5",
    "text59",
    "spacer51",
    "inputElementContentText10",
    "signedByBaseInputElementContentTextXSmallWebOff3",
    "text60",
    "trailingLabelEnhancer10",
    "trailingLabel10",
    "signedByBaseTypographyLabelXSmall6",
    "text61",
    "spacer52",
    "trailingArtworkContainer10",
    "trailingArtwork10",
    "selectIndicatorContainer5",
    "chevronIcon5",
    "inputElementHint5",
    "heart21",
    "hint5",
    "signedByBaseTypographyParagraphSmall5",
    "text62",
    "spacer53"
  ],
  inputSelect3: [
    "inputSelect3",
    "signedByBaseFieldGroupSmall3",
    "endDateCalendar3",
    "inputElementTextField5",
    "signedByBaseInputElementTextFieldSmallEnabled3",
    "leadingArtworkContainer9",
    "leadingArtwork5",
    "leadingLabelContainer9",
    "leadingLabel9",
    "signedByBaseTypographyLabelSmall5",
    "text55",
    "spacer49",
    "inputElementContentText9",
    "signedByBaseInputElementContentTextSmallOff3",
    "text56",
    "trailingLabelEnhancer9",
    "trailingLabel9",
    "signedByBaseTypographyLabelSmall6",
    "text57",
    "spacer50",
    "trailingArtworkContainer9",
    "trailingArtwork9",
    "calendar3",
    "signedByBaseInputElementSelectXSmallWebSingleDefaultEnabled3",
    "leadingArtworkContainer10",
    "text58",
    "leadingLabelContainer10",
    "leadingLabel10",
    "signedByBaseTypographyLabelXSmall5",
    "text59",
    "spacer51",
    "inputElementContentText10",
    "signedByBaseInputElementContentTextXSmallWebOff3",
    "text60",
    "trailingLabelEnhancer10",
    "trailingLabel10",
    "signedByBaseTypographyLabelXSmall6",
    "text61",
    "spacer52",
    "trailingArtworkContainer10",
    "trailingArtwork10",
    "selectIndicatorContainer5",
    "chevronIcon5",
    "inputElementHint5",
    "heart21",
    "hint5",
    "signedByBaseTypographyParagraphSmall5",
    "text62",
    "spacer53"
  ],
  signedByBaseFieldGroupSmall3: ["signedByBaseFieldGroupSmall3"],
  endDateCalendar3: [
    "endDateCalendar3",
    "inputElementTextField5",
    "signedByBaseInputElementTextFieldSmallEnabled3",
    "leadingArtworkContainer9",
    "leadingArtwork5",
    "leadingLabelContainer9",
    "leadingLabel9",
    "signedByBaseTypographyLabelSmall5",
    "text55",
    "spacer49",
    "inputElementContentText9",
    "signedByBaseInputElementContentTextSmallOff3",
    "text56",
    "trailingLabelEnhancer9",
    "trailingLabel9",
    "signedByBaseTypographyLabelSmall6",
    "text57",
    "spacer50",
    "trailingArtworkContainer9",
    "trailingArtwork9",
    "calendar3",
    "signedByBaseInputElementSelectXSmallWebSingleDefaultEnabled3",
    "leadingArtworkContainer10",
    "text58",
    "leadingLabelContainer10",
    "leadingLabel10",
    "signedByBaseTypographyLabelXSmall5",
    "text59",
    "spacer51",
    "inputElementContentText10",
    "signedByBaseInputElementContentTextXSmallWebOff3",
    "text60",
    "trailingLabelEnhancer10",
    "trailingLabel10",
    "signedByBaseTypographyLabelXSmall6",
    "text61",
    "spacer52",
    "trailingArtworkContainer10",
    "trailingArtwork10",
    "selectIndicatorContainer5",
    "chevronIcon5"
  ],
  inputElementTextField5: [
    "inputElementTextField5",
    "signedByBaseInputElementTextFieldSmallEnabled3",
    "leadingArtworkContainer9",
    "leadingArtwork5",
    "leadingLabelContainer9",
    "leadingLabel9",
    "signedByBaseTypographyLabelSmall5",
    "text55",
    "spacer49",
    "inputElementContentText9",
    "signedByBaseInputElementContentTextSmallOff3",
    "text56",
    "trailingLabelEnhancer9",
    "trailingLabel9",
    "signedByBaseTypographyLabelSmall6",
    "text57",
    "spacer50",
    "trailingArtworkContainer9",
    "trailingArtwork9"
  ],
  signedByBaseInputElementTextFieldSmallEnabled3: [
    "signedByBaseInputElementTextFieldSmallEnabled3"
  ],
  leadingArtworkContainer9: ["leadingArtworkContainer9", "leadingArtwork5"],
  leadingArtwork5: ["leadingArtwork5"],
  leadingLabelContainer9: [
    "leadingLabelContainer9",
    "leadingLabel9",
    "signedByBaseTypographyLabelSmall5",
    "text55",
    "spacer49"
  ],
  leadingLabel9: [
    "leadingLabel9",
    "signedByBaseTypographyLabelSmall5",
    "text55",
    "spacer49"
  ],
  signedByBaseTypographyLabelSmall5: ["signedByBaseTypographyLabelSmall5"],
  text55: ["text55"],
  spacer49: ["spacer49"],
  inputElementContentText9: [
    "inputElementContentText9",
    "signedByBaseInputElementContentTextSmallOff3",
    "text56"
  ],
  signedByBaseInputElementContentTextSmallOff3: [
    "signedByBaseInputElementContentTextSmallOff3"
  ],
  text56: ["text56"],
  trailingLabelEnhancer9: [
    "trailingLabelEnhancer9",
    "trailingLabel9",
    "signedByBaseTypographyLabelSmall6",
    "text57",
    "spacer50"
  ],
  trailingLabel9: [
    "trailingLabel9",
    "signedByBaseTypographyLabelSmall6",
    "text57",
    "spacer50"
  ],
  signedByBaseTypographyLabelSmall6: ["signedByBaseTypographyLabelSmall6"],
  text57: ["text57"],
  spacer50: ["spacer50"],
  trailingArtworkContainer9: ["trailingArtworkContainer9", "trailingArtwork9"],
  trailingArtwork9: ["trailingArtwork9"],
  calendar3: [
    "calendar3",
    "signedByBaseInputElementSelectXSmallWebSingleDefaultEnabled3",
    "leadingArtworkContainer10",
    "text58",
    "leadingLabelContainer10",
    "leadingLabel10",
    "signedByBaseTypographyLabelXSmall5",
    "text59",
    "spacer51",
    "inputElementContentText10",
    "signedByBaseInputElementContentTextXSmallWebOff3",
    "text60",
    "trailingLabelEnhancer10",
    "trailingLabel10",
    "signedByBaseTypographyLabelXSmall6",
    "text61",
    "spacer52",
    "trailingArtworkContainer10",
    "trailingArtwork10",
    "selectIndicatorContainer5",
    "chevronIcon5"
  ],
  signedByBaseInputElementSelectXSmallWebSingleDefaultEnabled3: [
    "signedByBaseInputElementSelectXSmallWebSingleDefaultEnabled3"
  ],
  leadingArtworkContainer10: ["leadingArtworkContainer10", "text58"],
  text58: ["text58"],
  leadingLabelContainer10: [
    "leadingLabelContainer10",
    "leadingLabel10",
    "signedByBaseTypographyLabelXSmall5",
    "text59",
    "spacer51"
  ],
  leadingLabel10: [
    "leadingLabel10",
    "signedByBaseTypographyLabelXSmall5",
    "text59",
    "spacer51"
  ],
  signedByBaseTypographyLabelXSmall5: ["signedByBaseTypographyLabelXSmall5"],
  text59: ["text59"],
  spacer51: ["spacer51"],
  inputElementContentText10: [
    "inputElementContentText10",
    "signedByBaseInputElementContentTextXSmallWebOff3",
    "text60"
  ],
  signedByBaseInputElementContentTextXSmallWebOff3: [
    "signedByBaseInputElementContentTextXSmallWebOff3"
  ],
  text60: ["text60"],
  trailingLabelEnhancer10: [
    "trailingLabelEnhancer10",
    "trailingLabel10",
    "signedByBaseTypographyLabelXSmall6",
    "text61",
    "spacer52"
  ],
  trailingLabel10: [
    "trailingLabel10",
    "signedByBaseTypographyLabelXSmall6",
    "text61",
    "spacer52"
  ],
  signedByBaseTypographyLabelXSmall6: ["signedByBaseTypographyLabelXSmall6"],
  text61: ["text61"],
  spacer52: ["spacer52"],
  trailingArtworkContainer10: [
    "trailingArtworkContainer10",
    "trailingArtwork10"
  ],
  trailingArtwork10: ["trailingArtwork10"],
  selectIndicatorContainer5: ["selectIndicatorContainer5", "chevronIcon5"],
  chevronIcon5: ["chevronIcon5"],
  inputElementHint5: [
    "inputElementHint5",
    "heart21",
    "hint5",
    "signedByBaseTypographyParagraphSmall5",
    "text62",
    "spacer53"
  ],
  heart21: ["heart21"],
  hint5: [
    "hint5",
    "signedByBaseTypographyParagraphSmall5",
    "text62",
    "spacer53"
  ],
  signedByBaseTypographyParagraphSmall5: [
    "signedByBaseTypographyParagraphSmall5"
  ],
  text62: ["text62"],
  spacer53: ["spacer53"],
  inputElementSelect3: [
    "inputElementSelect3",
    "signedByBaseInputElementSelectMediumSingleDefaultActive3",
    "selectFrame3",
    "leadingArtworkContainer11",
    "leadingArtwork6",
    "leadingLabelContainer11",
    "leadingLabel11",
    "signedByBaseTypographyLabelMedium13",
    "text63",
    "spacer54",
    "inputElementContentText11",
    "signedByBaseInputElementContentTextMediumOff5",
    "text64",
    "trailingLabelEnhancer11",
    "trailingLabel11",
    "signedByBaseTypographyLabelMedium14",
    "text65",
    "spacer55",
    "trailingArtworkContainer11",
    "trailingArtwork11",
    "selectIndicatorContainer6",
    "chevronIcon6",
    "menu3",
    "signedByBaseMenuListMedium3",
    "menuItem11",
    "signedByBaseMenuItemSearchMediumNoneEnabled3",
    "searchField3",
    "signedByBaseSearchFieldMediumEnabled3",
    "inputElementLabel3",
    "signedByBaseInputElementLabelMedium3",
    "typography29",
    "signedByBaseTypographyLabelMedium15",
    "text66",
    "spacer56",
    "characterCountFrame3",
    "heart22",
    "typography30",
    "signedByBaseTypographyLabelMedium16",
    "text67",
    "spacer57",
    "inputElementTextField6",
    "signedByBaseInputElementTextFieldMediumEnabled3",
    "leadingArtworkContainer12",
    "search3",
    "leadingLabelContainer12",
    "leadingLabel12",
    "signedByBaseTypographyLabelMedium17",
    "text68",
    "spacer58",
    "inputElementContentText12",
    "signedByBaseInputElementContentTextMediumOff6",
    "text69",
    "trailingLabelEnhancer12",
    "trailingLabel12",
    "signedByBaseTypographyLabelMedium18",
    "text70",
    "spacer59",
    "trailingArtworkContainer12",
    "trailingArtwork12",
    "inputElementHint6",
    "heart23",
    "hint6",
    "signedByBaseTypographyParagraphSmall6",
    "text71",
    "spacer60",
    "menuItem12",
    "signedByBaseMenuItemOptionMediumStandardEnabled9",
    "menuItemControlMediumCheckboxUnchecked9",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked9",
    "icon9",
    "leadingEnhancer9",
    "heart24",
    "textFrame9",
    "leadingText9",
    "typography31",
    "signedByBaseTypographyParagraphMedium25",
    "text72",
    "spacer61",
    "typography32",
    "signedByBaseTypographyParagraphMedium26",
    "text73",
    "spacer62",
    "typography33",
    "signedByBaseTypographyParagraphMedium27",
    "spacer63",
    "trailingEnhancer9",
    "heart25",
    "menuItem13",
    "signedByBaseMenuItemOptionMediumStandardEnabled10",
    "menuItemControlMediumCheckboxUnchecked10",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked10",
    "icon10",
    "leadingEnhancer10",
    "heart26",
    "textFrame10",
    "leadingText10",
    "typography34",
    "signedByBaseTypographyParagraphMedium28",
    "text74",
    "spacer64",
    "typography35",
    "signedByBaseTypographyParagraphMedium29",
    "text75",
    "spacer65",
    "typography36",
    "signedByBaseTypographyParagraphMedium30",
    "spacer66",
    "trailingEnhancer10",
    "checkmarkSmall3",
    "menuItem14",
    "signedByBaseMenuItemOptionMediumStandardEnabled11",
    "menuItemControlMediumCheckboxUnchecked11",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked11",
    "icon11",
    "leadingEnhancer11",
    "heart27",
    "textFrame11",
    "leadingText11",
    "typography37",
    "signedByBaseTypographyParagraphMedium31",
    "text76",
    "spacer67",
    "typography38",
    "signedByBaseTypographyParagraphMedium32",
    "text77",
    "spacer68",
    "typography39",
    "signedByBaseTypographyParagraphMedium33",
    "spacer69",
    "trailingEnhancer11",
    "heart28",
    "menuItem15",
    "signedByBaseMenuItemOptionMediumStandardEnabled12",
    "menuItemControlMediumCheckboxUnchecked12",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked12",
    "icon12",
    "leadingEnhancer12",
    "heart29",
    "textFrame12",
    "leadingText12",
    "typography40",
    "signedByBaseTypographyParagraphMedium34",
    "text78",
    "spacer70",
    "typography41",
    "signedByBaseTypographyParagraphMedium35",
    "text79",
    "spacer71",
    "typography42",
    "signedByBaseTypographyParagraphMedium36",
    "spacer72",
    "trailingEnhancer12",
    "heart30",
    "scrollBar3"
  ],
  signedByBaseInputElementSelectMediumSingleDefaultActive3: [
    "signedByBaseInputElementSelectMediumSingleDefaultActive3"
  ],
  selectFrame3: [
    "selectFrame3",
    "leadingArtworkContainer11",
    "leadingArtwork6",
    "leadingLabelContainer11",
    "leadingLabel11",
    "signedByBaseTypographyLabelMedium13",
    "text63",
    "spacer54",
    "inputElementContentText11",
    "signedByBaseInputElementContentTextMediumOff5",
    "text64",
    "trailingLabelEnhancer11",
    "trailingLabel11",
    "signedByBaseTypographyLabelMedium14",
    "text65",
    "spacer55",
    "trailingArtworkContainer11",
    "trailingArtwork11",
    "selectIndicatorContainer6",
    "chevronIcon6"
  ],
  leadingArtworkContainer11: ["leadingArtworkContainer11", "leadingArtwork6"],
  leadingArtwork6: ["leadingArtwork6"],
  leadingLabelContainer11: [
    "leadingLabelContainer11",
    "leadingLabel11",
    "signedByBaseTypographyLabelMedium13",
    "text63",
    "spacer54"
  ],
  leadingLabel11: [
    "leadingLabel11",
    "signedByBaseTypographyLabelMedium13",
    "text63",
    "spacer54"
  ],
  signedByBaseTypographyLabelMedium13: ["signedByBaseTypographyLabelMedium13"],
  text63: ["text63"],
  spacer54: ["spacer54"],
  inputElementContentText11: [
    "inputElementContentText11",
    "signedByBaseInputElementContentTextMediumOff5",
    "text64"
  ],
  signedByBaseInputElementContentTextMediumOff5: [
    "signedByBaseInputElementContentTextMediumOff5"
  ],
  text64: ["text64"],
  trailingLabelEnhancer11: [
    "trailingLabelEnhancer11",
    "trailingLabel11",
    "signedByBaseTypographyLabelMedium14",
    "text65",
    "spacer55"
  ],
  trailingLabel11: [
    "trailingLabel11",
    "signedByBaseTypographyLabelMedium14",
    "text65",
    "spacer55"
  ],
  signedByBaseTypographyLabelMedium14: ["signedByBaseTypographyLabelMedium14"],
  text65: ["text65"],
  spacer55: ["spacer55"],
  trailingArtworkContainer11: [
    "trailingArtworkContainer11",
    "trailingArtwork11"
  ],
  trailingArtwork11: ["trailingArtwork11"],
  selectIndicatorContainer6: ["selectIndicatorContainer6", "chevronIcon6"],
  chevronIcon6: ["chevronIcon6"],
  menu3: [
    "menu3",
    "signedByBaseMenuListMedium3",
    "menuItem11",
    "signedByBaseMenuItemSearchMediumNoneEnabled3",
    "searchField3",
    "signedByBaseSearchFieldMediumEnabled3",
    "inputElementLabel3",
    "signedByBaseInputElementLabelMedium3",
    "typography29",
    "signedByBaseTypographyLabelMedium15",
    "text66",
    "spacer56",
    "characterCountFrame3",
    "heart22",
    "typography30",
    "signedByBaseTypographyLabelMedium16",
    "text67",
    "spacer57",
    "inputElementTextField6",
    "signedByBaseInputElementTextFieldMediumEnabled3",
    "leadingArtworkContainer12",
    "search3",
    "leadingLabelContainer12",
    "leadingLabel12",
    "signedByBaseTypographyLabelMedium17",
    "text68",
    "spacer58",
    "inputElementContentText12",
    "signedByBaseInputElementContentTextMediumOff6",
    "text69",
    "trailingLabelEnhancer12",
    "trailingLabel12",
    "signedByBaseTypographyLabelMedium18",
    "text70",
    "spacer59",
    "trailingArtworkContainer12",
    "trailingArtwork12",
    "inputElementHint6",
    "heart23",
    "hint6",
    "signedByBaseTypographyParagraphSmall6",
    "text71",
    "spacer60",
    "menuItem12",
    "signedByBaseMenuItemOptionMediumStandardEnabled9",
    "menuItemControlMediumCheckboxUnchecked9",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked9",
    "icon9",
    "leadingEnhancer9",
    "heart24",
    "textFrame9",
    "leadingText9",
    "typography31",
    "signedByBaseTypographyParagraphMedium25",
    "text72",
    "spacer61",
    "typography32",
    "signedByBaseTypographyParagraphMedium26",
    "text73",
    "spacer62",
    "typography33",
    "signedByBaseTypographyParagraphMedium27",
    "spacer63",
    "trailingEnhancer9",
    "heart25",
    "menuItem13",
    "signedByBaseMenuItemOptionMediumStandardEnabled10",
    "menuItemControlMediumCheckboxUnchecked10",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked10",
    "icon10",
    "leadingEnhancer10",
    "heart26",
    "textFrame10",
    "leadingText10",
    "typography34",
    "signedByBaseTypographyParagraphMedium28",
    "text74",
    "spacer64",
    "typography35",
    "signedByBaseTypographyParagraphMedium29",
    "text75",
    "spacer65",
    "typography36",
    "signedByBaseTypographyParagraphMedium30",
    "spacer66",
    "trailingEnhancer10",
    "checkmarkSmall3",
    "menuItem14",
    "signedByBaseMenuItemOptionMediumStandardEnabled11",
    "menuItemControlMediumCheckboxUnchecked11",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked11",
    "icon11",
    "leadingEnhancer11",
    "heart27",
    "textFrame11",
    "leadingText11",
    "typography37",
    "signedByBaseTypographyParagraphMedium31",
    "text76",
    "spacer67",
    "typography38",
    "signedByBaseTypographyParagraphMedium32",
    "text77",
    "spacer68",
    "typography39",
    "signedByBaseTypographyParagraphMedium33",
    "spacer69",
    "trailingEnhancer11",
    "heart28",
    "menuItem15",
    "signedByBaseMenuItemOptionMediumStandardEnabled12",
    "menuItemControlMediumCheckboxUnchecked12",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked12",
    "icon12",
    "leadingEnhancer12",
    "heart29",
    "textFrame12",
    "leadingText12",
    "typography40",
    "signedByBaseTypographyParagraphMedium34",
    "text78",
    "spacer70",
    "typography41",
    "signedByBaseTypographyParagraphMedium35",
    "text79",
    "spacer71",
    "typography42",
    "signedByBaseTypographyParagraphMedium36",
    "spacer72",
    "trailingEnhancer12",
    "heart30",
    "scrollBar3"
  ],
  signedByBaseMenuListMedium3: ["signedByBaseMenuListMedium3"],
  menuItem11: [
    "menuItem11",
    "signedByBaseMenuItemSearchMediumNoneEnabled3",
    "searchField3",
    "signedByBaseSearchFieldMediumEnabled3",
    "inputElementLabel3",
    "signedByBaseInputElementLabelMedium3",
    "typography29",
    "signedByBaseTypographyLabelMedium15",
    "text66",
    "spacer56",
    "characterCountFrame3",
    "heart22",
    "typography30",
    "signedByBaseTypographyLabelMedium16",
    "text67",
    "spacer57",
    "inputElementTextField6",
    "signedByBaseInputElementTextFieldMediumEnabled3",
    "leadingArtworkContainer12",
    "search3",
    "leadingLabelContainer12",
    "leadingLabel12",
    "signedByBaseTypographyLabelMedium17",
    "text68",
    "spacer58",
    "inputElementContentText12",
    "signedByBaseInputElementContentTextMediumOff6",
    "text69",
    "trailingLabelEnhancer12",
    "trailingLabel12",
    "signedByBaseTypographyLabelMedium18",
    "text70",
    "spacer59",
    "trailingArtworkContainer12",
    "trailingArtwork12",
    "inputElementHint6",
    "heart23",
    "hint6",
    "signedByBaseTypographyParagraphSmall6",
    "text71",
    "spacer60"
  ],
  signedByBaseMenuItemSearchMediumNoneEnabled3: [
    "signedByBaseMenuItemSearchMediumNoneEnabled3"
  ],
  searchField3: [
    "searchField3",
    "signedByBaseSearchFieldMediumEnabled3",
    "inputElementLabel3",
    "signedByBaseInputElementLabelMedium3",
    "typography29",
    "signedByBaseTypographyLabelMedium15",
    "text66",
    "spacer56",
    "characterCountFrame3",
    "heart22",
    "typography30",
    "signedByBaseTypographyLabelMedium16",
    "text67",
    "spacer57",
    "inputElementTextField6",
    "signedByBaseInputElementTextFieldMediumEnabled3",
    "leadingArtworkContainer12",
    "search3",
    "leadingLabelContainer12",
    "leadingLabel12",
    "signedByBaseTypographyLabelMedium17",
    "text68",
    "spacer58",
    "inputElementContentText12",
    "signedByBaseInputElementContentTextMediumOff6",
    "text69",
    "trailingLabelEnhancer12",
    "trailingLabel12",
    "signedByBaseTypographyLabelMedium18",
    "text70",
    "spacer59",
    "trailingArtworkContainer12",
    "trailingArtwork12",
    "inputElementHint6",
    "heart23",
    "hint6",
    "signedByBaseTypographyParagraphSmall6",
    "text71",
    "spacer60"
  ],
  signedByBaseSearchFieldMediumEnabled3: [
    "signedByBaseSearchFieldMediumEnabled3"
  ],
  inputElementLabel3: [
    "inputElementLabel3",
    "signedByBaseInputElementLabelMedium3",
    "typography29",
    "signedByBaseTypographyLabelMedium15",
    "text66",
    "spacer56",
    "characterCountFrame3",
    "heart22",
    "typography30",
    "signedByBaseTypographyLabelMedium16",
    "text67",
    "spacer57"
  ],
  signedByBaseInputElementLabelMedium3: [
    "signedByBaseInputElementLabelMedium3"
  ],
  typography29: [
    "typography29",
    "signedByBaseTypographyLabelMedium15",
    "text66",
    "spacer56"
  ],
  signedByBaseTypographyLabelMedium15: ["signedByBaseTypographyLabelMedium15"],
  text66: ["text66"],
  spacer56: ["spacer56"],
  characterCountFrame3: [
    "characterCountFrame3",
    "heart22",
    "typography30",
    "signedByBaseTypographyLabelMedium16",
    "text67",
    "spacer57"
  ],
  heart22: ["heart22"],
  typography30: [
    "typography30",
    "signedByBaseTypographyLabelMedium16",
    "text67",
    "spacer57"
  ],
  signedByBaseTypographyLabelMedium16: ["signedByBaseTypographyLabelMedium16"],
  text67: ["text67"],
  spacer57: ["spacer57"],
  inputElementTextField6: [
    "inputElementTextField6",
    "signedByBaseInputElementTextFieldMediumEnabled3",
    "leadingArtworkContainer12",
    "search3",
    "leadingLabelContainer12",
    "leadingLabel12",
    "signedByBaseTypographyLabelMedium17",
    "text68",
    "spacer58",
    "inputElementContentText12",
    "signedByBaseInputElementContentTextMediumOff6",
    "text69",
    "trailingLabelEnhancer12",
    "trailingLabel12",
    "signedByBaseTypographyLabelMedium18",
    "text70",
    "spacer59",
    "trailingArtworkContainer12",
    "trailingArtwork12"
  ],
  signedByBaseInputElementTextFieldMediumEnabled3: [
    "signedByBaseInputElementTextFieldMediumEnabled3"
  ],
  leadingArtworkContainer12: ["leadingArtworkContainer12", "search3"],
  search3: ["search3"],
  leadingLabelContainer12: [
    "leadingLabelContainer12",
    "leadingLabel12",
    "signedByBaseTypographyLabelMedium17",
    "text68",
    "spacer58"
  ],
  leadingLabel12: [
    "leadingLabel12",
    "signedByBaseTypographyLabelMedium17",
    "text68",
    "spacer58"
  ],
  signedByBaseTypographyLabelMedium17: ["signedByBaseTypographyLabelMedium17"],
  text68: ["text68"],
  spacer58: ["spacer58"],
  inputElementContentText12: [
    "inputElementContentText12",
    "signedByBaseInputElementContentTextMediumOff6",
    "text69"
  ],
  signedByBaseInputElementContentTextMediumOff6: [
    "signedByBaseInputElementContentTextMediumOff6"
  ],
  text69: ["text69"],
  trailingLabelEnhancer12: [
    "trailingLabelEnhancer12",
    "trailingLabel12",
    "signedByBaseTypographyLabelMedium18",
    "text70",
    "spacer59"
  ],
  trailingLabel12: [
    "trailingLabel12",
    "signedByBaseTypographyLabelMedium18",
    "text70",
    "spacer59"
  ],
  signedByBaseTypographyLabelMedium18: ["signedByBaseTypographyLabelMedium18"],
  text70: ["text70"],
  spacer59: ["spacer59"],
  trailingArtworkContainer12: [
    "trailingArtworkContainer12",
    "trailingArtwork12"
  ],
  trailingArtwork12: ["trailingArtwork12"],
  inputElementHint6: [
    "inputElementHint6",
    "heart23",
    "hint6",
    "signedByBaseTypographyParagraphSmall6",
    "text71",
    "spacer60"
  ],
  heart23: ["heart23"],
  hint6: [
    "hint6",
    "signedByBaseTypographyParagraphSmall6",
    "text71",
    "spacer60"
  ],
  signedByBaseTypographyParagraphSmall6: [
    "signedByBaseTypographyParagraphSmall6"
  ],
  text71: ["text71"],
  spacer60: ["spacer60"],
  menuItem12: [
    "menuItem12",
    "signedByBaseMenuItemOptionMediumStandardEnabled9",
    "menuItemControlMediumCheckboxUnchecked9",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked9",
    "icon9",
    "leadingEnhancer9",
    "heart24",
    "textFrame9",
    "leadingText9",
    "typography31",
    "signedByBaseTypographyParagraphMedium25",
    "text72",
    "spacer61",
    "typography32",
    "signedByBaseTypographyParagraphMedium26",
    "text73",
    "spacer62",
    "typography33",
    "signedByBaseTypographyParagraphMedium27",
    "spacer63",
    "trailingEnhancer9",
    "heart25"
  ],
  signedByBaseMenuItemOptionMediumStandardEnabled9: [
    "signedByBaseMenuItemOptionMediumStandardEnabled9"
  ],
  menuItemControlMediumCheckboxUnchecked9: [
    "menuItemControlMediumCheckboxUnchecked9",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked9",
    "icon9"
  ],
  signedByBaseMenuItemControlMediumCheckboxUnchecked9: [
    "signedByBaseMenuItemControlMediumCheckboxUnchecked9"
  ],
  icon9: ["icon9"],
  leadingEnhancer9: ["leadingEnhancer9", "heart24"],
  heart24: ["heart24"],
  textFrame9: [
    "textFrame9",
    "leadingText9",
    "typography31",
    "signedByBaseTypographyParagraphMedium25",
    "text72",
    "spacer61",
    "typography32",
    "signedByBaseTypographyParagraphMedium26",
    "text73",
    "spacer62",
    "typography33",
    "signedByBaseTypographyParagraphMedium27",
    "spacer63"
  ],
  leadingText9: [
    "leadingText9",
    "typography31",
    "signedByBaseTypographyParagraphMedium25",
    "text72",
    "spacer61",
    "typography32",
    "signedByBaseTypographyParagraphMedium26",
    "text73",
    "spacer62"
  ],
  typography31: [
    "typography31",
    "signedByBaseTypographyParagraphMedium25",
    "text72",
    "spacer61"
  ],
  signedByBaseTypographyParagraphMedium25: [
    "signedByBaseTypographyParagraphMedium25"
  ],
  text72: ["text72"],
  spacer61: ["spacer61"],
  typography32: [
    "typography32",
    "signedByBaseTypographyParagraphMedium26",
    "text73",
    "spacer62"
  ],
  signedByBaseTypographyParagraphMedium26: [
    "signedByBaseTypographyParagraphMedium26"
  ],
  text73: ["text73"],
  spacer62: ["spacer62"],
  typography33: [
    "typography33",
    "signedByBaseTypographyParagraphMedium27",
    "spacer63"
  ],
  signedByBaseTypographyParagraphMedium27: [
    "signedByBaseTypographyParagraphMedium27"
  ],
  spacer63: ["spacer63"],
  trailingEnhancer9: ["trailingEnhancer9", "heart25"],
  heart25: ["heart25"],
  menuItem13: [
    "menuItem13",
    "signedByBaseMenuItemOptionMediumStandardEnabled10",
    "menuItemControlMediumCheckboxUnchecked10",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked10",
    "icon10",
    "leadingEnhancer10",
    "heart26",
    "textFrame10",
    "leadingText10",
    "typography34",
    "signedByBaseTypographyParagraphMedium28",
    "text74",
    "spacer64",
    "typography35",
    "signedByBaseTypographyParagraphMedium29",
    "text75",
    "spacer65",
    "typography36",
    "signedByBaseTypographyParagraphMedium30",
    "spacer66",
    "trailingEnhancer10",
    "checkmarkSmall3"
  ],
  signedByBaseMenuItemOptionMediumStandardEnabled10: [
    "signedByBaseMenuItemOptionMediumStandardEnabled10"
  ],
  menuItemControlMediumCheckboxUnchecked10: [
    "menuItemControlMediumCheckboxUnchecked10",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked10",
    "icon10"
  ],
  signedByBaseMenuItemControlMediumCheckboxUnchecked10: [
    "signedByBaseMenuItemControlMediumCheckboxUnchecked10"
  ],
  icon10: ["icon10"],
  leadingEnhancer10: ["leadingEnhancer10", "heart26"],
  heart26: ["heart26"],
  textFrame10: [
    "textFrame10",
    "leadingText10",
    "typography34",
    "signedByBaseTypographyParagraphMedium28",
    "text74",
    "spacer64",
    "typography35",
    "signedByBaseTypographyParagraphMedium29",
    "text75",
    "spacer65",
    "typography36",
    "signedByBaseTypographyParagraphMedium30",
    "spacer66"
  ],
  leadingText10: [
    "leadingText10",
    "typography34",
    "signedByBaseTypographyParagraphMedium28",
    "text74",
    "spacer64",
    "typography35",
    "signedByBaseTypographyParagraphMedium29",
    "text75",
    "spacer65"
  ],
  typography34: [
    "typography34",
    "signedByBaseTypographyParagraphMedium28",
    "text74",
    "spacer64"
  ],
  signedByBaseTypographyParagraphMedium28: [
    "signedByBaseTypographyParagraphMedium28"
  ],
  text74: ["text74"],
  spacer64: ["spacer64"],
  typography35: [
    "typography35",
    "signedByBaseTypographyParagraphMedium29",
    "text75",
    "spacer65"
  ],
  signedByBaseTypographyParagraphMedium29: [
    "signedByBaseTypographyParagraphMedium29"
  ],
  text75: ["text75"],
  spacer65: ["spacer65"],
  typography36: [
    "typography36",
    "signedByBaseTypographyParagraphMedium30",
    "spacer66"
  ],
  signedByBaseTypographyParagraphMedium30: [
    "signedByBaseTypographyParagraphMedium30"
  ],
  spacer66: ["spacer66"],
  trailingEnhancer10: ["trailingEnhancer10", "checkmarkSmall3"],
  checkmarkSmall3: ["checkmarkSmall3"],
  menuItem14: [
    "menuItem14",
    "signedByBaseMenuItemOptionMediumStandardEnabled11",
    "menuItemControlMediumCheckboxUnchecked11",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked11",
    "icon11",
    "leadingEnhancer11",
    "heart27",
    "textFrame11",
    "leadingText11",
    "typography37",
    "signedByBaseTypographyParagraphMedium31",
    "text76",
    "spacer67",
    "typography38",
    "signedByBaseTypographyParagraphMedium32",
    "text77",
    "spacer68",
    "typography39",
    "signedByBaseTypographyParagraphMedium33",
    "spacer69",
    "trailingEnhancer11",
    "heart28"
  ],
  signedByBaseMenuItemOptionMediumStandardEnabled11: [
    "signedByBaseMenuItemOptionMediumStandardEnabled11"
  ],
  menuItemControlMediumCheckboxUnchecked11: [
    "menuItemControlMediumCheckboxUnchecked11",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked11",
    "icon11"
  ],
  signedByBaseMenuItemControlMediumCheckboxUnchecked11: [
    "signedByBaseMenuItemControlMediumCheckboxUnchecked11"
  ],
  icon11: ["icon11"],
  leadingEnhancer11: ["leadingEnhancer11", "heart27"],
  heart27: ["heart27"],
  textFrame11: [
    "textFrame11",
    "leadingText11",
    "typography37",
    "signedByBaseTypographyParagraphMedium31",
    "text76",
    "spacer67",
    "typography38",
    "signedByBaseTypographyParagraphMedium32",
    "text77",
    "spacer68",
    "typography39",
    "signedByBaseTypographyParagraphMedium33",
    "spacer69"
  ],
  leadingText11: [
    "leadingText11",
    "typography37",
    "signedByBaseTypographyParagraphMedium31",
    "text76",
    "spacer67",
    "typography38",
    "signedByBaseTypographyParagraphMedium32",
    "text77",
    "spacer68"
  ],
  typography37: [
    "typography37",
    "signedByBaseTypographyParagraphMedium31",
    "text76",
    "spacer67"
  ],
  signedByBaseTypographyParagraphMedium31: [
    "signedByBaseTypographyParagraphMedium31"
  ],
  text76: ["text76"],
  spacer67: ["spacer67"],
  typography38: [
    "typography38",
    "signedByBaseTypographyParagraphMedium32",
    "text77",
    "spacer68"
  ],
  signedByBaseTypographyParagraphMedium32: [
    "signedByBaseTypographyParagraphMedium32"
  ],
  text77: ["text77"],
  spacer68: ["spacer68"],
  typography39: [
    "typography39",
    "signedByBaseTypographyParagraphMedium33",
    "spacer69"
  ],
  signedByBaseTypographyParagraphMedium33: [
    "signedByBaseTypographyParagraphMedium33"
  ],
  spacer69: ["spacer69"],
  trailingEnhancer11: ["trailingEnhancer11", "heart28"],
  heart28: ["heart28"],
  menuItem15: [
    "menuItem15",
    "signedByBaseMenuItemOptionMediumStandardEnabled12",
    "menuItemControlMediumCheckboxUnchecked12",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked12",
    "icon12",
    "leadingEnhancer12",
    "heart29",
    "textFrame12",
    "leadingText12",
    "typography40",
    "signedByBaseTypographyParagraphMedium34",
    "text78",
    "spacer70",
    "typography41",
    "signedByBaseTypographyParagraphMedium35",
    "text79",
    "spacer71",
    "typography42",
    "signedByBaseTypographyParagraphMedium36",
    "spacer72",
    "trailingEnhancer12",
    "heart30"
  ],
  signedByBaseMenuItemOptionMediumStandardEnabled12: [
    "signedByBaseMenuItemOptionMediumStandardEnabled12"
  ],
  menuItemControlMediumCheckboxUnchecked12: [
    "menuItemControlMediumCheckboxUnchecked12",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked12",
    "icon12"
  ],
  signedByBaseMenuItemControlMediumCheckboxUnchecked12: [
    "signedByBaseMenuItemControlMediumCheckboxUnchecked12"
  ],
  icon12: ["icon12"],
  leadingEnhancer12: ["leadingEnhancer12", "heart29"],
  heart29: ["heart29"],
  textFrame12: [
    "textFrame12",
    "leadingText12",
    "typography40",
    "signedByBaseTypographyParagraphMedium34",
    "text78",
    "spacer70",
    "typography41",
    "signedByBaseTypographyParagraphMedium35",
    "text79",
    "spacer71",
    "typography42",
    "signedByBaseTypographyParagraphMedium36",
    "spacer72"
  ],
  leadingText12: [
    "leadingText12",
    "typography40",
    "signedByBaseTypographyParagraphMedium34",
    "text78",
    "spacer70",
    "typography41",
    "signedByBaseTypographyParagraphMedium35",
    "text79",
    "spacer71"
  ],
  typography40: [
    "typography40",
    "signedByBaseTypographyParagraphMedium34",
    "text78",
    "spacer70"
  ],
  signedByBaseTypographyParagraphMedium34: [
    "signedByBaseTypographyParagraphMedium34"
  ],
  text78: ["text78"],
  spacer70: ["spacer70"],
  typography41: [
    "typography41",
    "signedByBaseTypographyParagraphMedium35",
    "text79",
    "spacer71"
  ],
  signedByBaseTypographyParagraphMedium35: [
    "signedByBaseTypographyParagraphMedium35"
  ],
  text79: ["text79"],
  spacer71: ["spacer71"],
  typography42: [
    "typography42",
    "signedByBaseTypographyParagraphMedium36",
    "spacer72"
  ],
  signedByBaseTypographyParagraphMedium36: [
    "signedByBaseTypographyParagraphMedium36"
  ],
  spacer72: ["spacer72"],
  trailingEnhancer12: ["trailingEnhancer12", "heart30"],
  heart30: ["heart30"],
  scrollBar3: ["scrollBar3"],
  model3: ["model3"],
  buttons3: [
    "buttons3",
    "button9",
    "frame1073713926",
    "frame1073713932",
    "button10",
    "button11",
    "button12"
  ],
  button9: ["button9"],
  frame1073713926: ["frame1073713926"],
  frame1073713932: ["frame1073713932", "button10", "button11", "button12"],
  button10: ["button10"],
  button11: ["button11"],
  button12: ["button12"],
  duplicateTaskRunsheet2: [
    "duplicateTaskRunsheet2",
    "frame1437254028",
    "name10",
    "frame1437254029",
    "duplicateRs",
    "content5",
    "titre5",
    "texinput25",
    "date5",
    "label10",
    "timePicker11",
    "type5",
    "budget5",
    "comments5",
    "input16",
    "name11",
    "datePickerWeb5",
    "inputSelect5",
    "signedByBaseFieldGroupSmall5",
    "endDateCalendar5",
    "inputElementTextField9",
    "signedByBaseInputElementTextFieldSmallEnabled5",
    "leadingArtworkContainer17",
    "leadingArtwork9",
    "leadingLabelContainer17",
    "leadingLabel17",
    "signedByBaseTypographyLabelSmall9",
    "text105",
    "spacer97",
    "inputElementContentText17",
    "signedByBaseInputElementContentTextSmallOff5",
    "text106",
    "trailingLabelEnhancer17",
    "trailingLabel17",
    "signedByBaseTypographyLabelSmall10",
    "text107",
    "spacer98",
    "trailingArtworkContainer17",
    "trailingArtwork17",
    "calendar5",
    "signedByBaseInputElementSelectXSmallWebSingleDefaultEnabled5",
    "leadingArtworkContainer18",
    "text108",
    "leadingLabelContainer18",
    "leadingLabel18",
    "signedByBaseTypographyLabelXSmall9",
    "text109",
    "spacer99",
    "inputElementContentText18",
    "signedByBaseInputElementContentTextXSmallWebOff5",
    "text110",
    "trailingLabelEnhancer18",
    "trailingLabel18",
    "signedByBaseTypographyLabelXSmall10",
    "text111",
    "spacer100",
    "trailingArtworkContainer18",
    "trailingArtwork18",
    "selectIndicatorContainer9",
    "chevronIcon9",
    "inputElementHint9",
    "heart41",
    "hint9",
    "signedByBaseTypographyParagraphSmall9",
    "text112",
    "spacer101",
    "inputElementSelect5",
    "signedByBaseInputElementSelectMediumSingleDefaultActive5",
    "selectFrame5",
    "leadingArtworkContainer19",
    "leadingArtwork10",
    "leadingLabelContainer19",
    "leadingLabel19",
    "signedByBaseTypographyLabelMedium25",
    "text113",
    "spacer102",
    "inputElementContentText19",
    "signedByBaseInputElementContentTextMediumOff9",
    "text114",
    "trailingLabelEnhancer19",
    "trailingLabel19",
    "signedByBaseTypographyLabelMedium26",
    "text115",
    "spacer103",
    "trailingArtworkContainer19",
    "trailingArtwork19",
    "selectIndicatorContainer10",
    "chevronIcon10",
    "menu5",
    "signedByBaseMenuListMedium5",
    "menuItem21",
    "signedByBaseMenuItemSearchMediumNoneEnabled5",
    "searchField5",
    "signedByBaseSearchFieldMediumEnabled5",
    "inputElementLabel5",
    "signedByBaseInputElementLabelMedium5",
    "typography57",
    "signedByBaseTypographyLabelMedium27",
    "text116",
    "spacer104",
    "characterCountFrame5",
    "heart42",
    "typography58",
    "signedByBaseTypographyLabelMedium28",
    "text117",
    "spacer105",
    "inputElementTextField10",
    "signedByBaseInputElementTextFieldMediumEnabled5",
    "leadingArtworkContainer20",
    "search5",
    "leadingLabelContainer20",
    "leadingLabel20",
    "signedByBaseTypographyLabelMedium29",
    "text118",
    "spacer106",
    "inputElementContentText20",
    "signedByBaseInputElementContentTextMediumOff10",
    "text119",
    "trailingLabelEnhancer20",
    "trailingLabel20",
    "signedByBaseTypographyLabelMedium30",
    "text120",
    "spacer107",
    "trailingArtworkContainer20",
    "trailingArtwork20",
    "inputElementHint10",
    "heart43",
    "hint10",
    "signedByBaseTypographyParagraphSmall10",
    "text121",
    "spacer108",
    "menuItem22",
    "signedByBaseMenuItemOptionMediumStandardEnabled17",
    "menuItemControlMediumCheckboxUnchecked17",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked17",
    "icon17",
    "leadingEnhancer17",
    "heart44",
    "textFrame17",
    "leadingText17",
    "typography59",
    "signedByBaseTypographyParagraphMedium49",
    "text122",
    "spacer109",
    "typography60",
    "signedByBaseTypographyParagraphMedium50",
    "text123",
    "spacer110",
    "typography61",
    "signedByBaseTypographyParagraphMedium51",
    "spacer111",
    "trailingEnhancer17",
    "heart45",
    "menuItem23",
    "signedByBaseMenuItemOptionMediumStandardEnabled18",
    "menuItemControlMediumCheckboxUnchecked18",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked18",
    "icon18",
    "leadingEnhancer18",
    "heart46",
    "textFrame18",
    "leadingText18",
    "typography62",
    "signedByBaseTypographyParagraphMedium52",
    "text124",
    "spacer112",
    "typography63",
    "signedByBaseTypographyParagraphMedium53",
    "text125",
    "spacer113",
    "typography64",
    "signedByBaseTypographyParagraphMedium54",
    "spacer114",
    "trailingEnhancer18",
    "checkmarkSmall5",
    "menuItem24",
    "signedByBaseMenuItemOptionMediumStandardEnabled19",
    "menuItemControlMediumCheckboxUnchecked19",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked19",
    "icon19",
    "leadingEnhancer19",
    "heart47",
    "textFrame19",
    "leadingText19",
    "typography65",
    "signedByBaseTypographyParagraphMedium55",
    "text126",
    "spacer115",
    "typography66",
    "signedByBaseTypographyParagraphMedium56",
    "text127",
    "spacer116",
    "typography67",
    "signedByBaseTypographyParagraphMedium57",
    "spacer117",
    "trailingEnhancer19",
    "heart48",
    "menuItem25",
    "signedByBaseMenuItemOptionMediumStandardEnabled20",
    "menuItemControlMediumCheckboxUnchecked20",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked20",
    "icon20",
    "leadingEnhancer20",
    "heart49",
    "textFrame20",
    "leadingText20",
    "typography68",
    "signedByBaseTypographyParagraphMedium58",
    "text128",
    "spacer118",
    "typography69",
    "signedByBaseTypographyParagraphMedium59",
    "text129",
    "spacer119",
    "typography70",
    "signedByBaseTypographyParagraphMedium60",
    "spacer120",
    "trailingEnhancer20",
    "heart50",
    "scrollBar5",
    "model5",
    "buttons5",
    "button17",
    "frame1073713928",
    "frame1073713934",
    "button18",
    "button19",
    "button20"
  ],
  frame1437254028: ["frame1437254028", "name10", "frame1437254029"],
  name10: ["name10"],
  frame1437254029: ["frame1437254029"],
  duplicateRs: ["duplicateRs"],
  content5: [
    "content5",
    "titre5",
    "texinput25",
    "date5",
    "label10",
    "timePicker11",
    "type5",
    "budget5",
    "comments5",
    "input16",
    "name11",
    "datePickerWeb5",
    "inputSelect5",
    "signedByBaseFieldGroupSmall5",
    "endDateCalendar5",
    "inputElementTextField9",
    "signedByBaseInputElementTextFieldSmallEnabled5",
    "leadingArtworkContainer17",
    "leadingArtwork9",
    "leadingLabelContainer17",
    "leadingLabel17",
    "signedByBaseTypographyLabelSmall9",
    "text105",
    "spacer97",
    "inputElementContentText17",
    "signedByBaseInputElementContentTextSmallOff5",
    "text106",
    "trailingLabelEnhancer17",
    "trailingLabel17",
    "signedByBaseTypographyLabelSmall10",
    "text107",
    "spacer98",
    "trailingArtworkContainer17",
    "trailingArtwork17",
    "calendar5",
    "signedByBaseInputElementSelectXSmallWebSingleDefaultEnabled5",
    "leadingArtworkContainer18",
    "text108",
    "leadingLabelContainer18",
    "leadingLabel18",
    "signedByBaseTypographyLabelXSmall9",
    "text109",
    "spacer99",
    "inputElementContentText18",
    "signedByBaseInputElementContentTextXSmallWebOff5",
    "text110",
    "trailingLabelEnhancer18",
    "trailingLabel18",
    "signedByBaseTypographyLabelXSmall10",
    "text111",
    "spacer100",
    "trailingArtworkContainer18",
    "trailingArtwork18",
    "selectIndicatorContainer9",
    "chevronIcon9",
    "inputElementHint9",
    "heart41",
    "hint9",
    "signedByBaseTypographyParagraphSmall9",
    "text112",
    "spacer101",
    "inputElementSelect5",
    "signedByBaseInputElementSelectMediumSingleDefaultActive5",
    "selectFrame5",
    "leadingArtworkContainer19",
    "leadingArtwork10",
    "leadingLabelContainer19",
    "leadingLabel19",
    "signedByBaseTypographyLabelMedium25",
    "text113",
    "spacer102",
    "inputElementContentText19",
    "signedByBaseInputElementContentTextMediumOff9",
    "text114",
    "trailingLabelEnhancer19",
    "trailingLabel19",
    "signedByBaseTypographyLabelMedium26",
    "text115",
    "spacer103",
    "trailingArtworkContainer19",
    "trailingArtwork19",
    "selectIndicatorContainer10",
    "chevronIcon10",
    "menu5",
    "signedByBaseMenuListMedium5",
    "menuItem21",
    "signedByBaseMenuItemSearchMediumNoneEnabled5",
    "searchField5",
    "signedByBaseSearchFieldMediumEnabled5",
    "inputElementLabel5",
    "signedByBaseInputElementLabelMedium5",
    "typography57",
    "signedByBaseTypographyLabelMedium27",
    "text116",
    "spacer104",
    "characterCountFrame5",
    "heart42",
    "typography58",
    "signedByBaseTypographyLabelMedium28",
    "text117",
    "spacer105",
    "inputElementTextField10",
    "signedByBaseInputElementTextFieldMediumEnabled5",
    "leadingArtworkContainer20",
    "search5",
    "leadingLabelContainer20",
    "leadingLabel20",
    "signedByBaseTypographyLabelMedium29",
    "text118",
    "spacer106",
    "inputElementContentText20",
    "signedByBaseInputElementContentTextMediumOff10",
    "text119",
    "trailingLabelEnhancer20",
    "trailingLabel20",
    "signedByBaseTypographyLabelMedium30",
    "text120",
    "spacer107",
    "trailingArtworkContainer20",
    "trailingArtwork20",
    "inputElementHint10",
    "heart43",
    "hint10",
    "signedByBaseTypographyParagraphSmall10",
    "text121",
    "spacer108",
    "menuItem22",
    "signedByBaseMenuItemOptionMediumStandardEnabled17",
    "menuItemControlMediumCheckboxUnchecked17",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked17",
    "icon17",
    "leadingEnhancer17",
    "heart44",
    "textFrame17",
    "leadingText17",
    "typography59",
    "signedByBaseTypographyParagraphMedium49",
    "text122",
    "spacer109",
    "typography60",
    "signedByBaseTypographyParagraphMedium50",
    "text123",
    "spacer110",
    "typography61",
    "signedByBaseTypographyParagraphMedium51",
    "spacer111",
    "trailingEnhancer17",
    "heart45",
    "menuItem23",
    "signedByBaseMenuItemOptionMediumStandardEnabled18",
    "menuItemControlMediumCheckboxUnchecked18",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked18",
    "icon18",
    "leadingEnhancer18",
    "heart46",
    "textFrame18",
    "leadingText18",
    "typography62",
    "signedByBaseTypographyParagraphMedium52",
    "text124",
    "spacer112",
    "typography63",
    "signedByBaseTypographyParagraphMedium53",
    "text125",
    "spacer113",
    "typography64",
    "signedByBaseTypographyParagraphMedium54",
    "spacer114",
    "trailingEnhancer18",
    "checkmarkSmall5",
    "menuItem24",
    "signedByBaseMenuItemOptionMediumStandardEnabled19",
    "menuItemControlMediumCheckboxUnchecked19",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked19",
    "icon19",
    "leadingEnhancer19",
    "heart47",
    "textFrame19",
    "leadingText19",
    "typography65",
    "signedByBaseTypographyParagraphMedium55",
    "text126",
    "spacer115",
    "typography66",
    "signedByBaseTypographyParagraphMedium56",
    "text127",
    "spacer116",
    "typography67",
    "signedByBaseTypographyParagraphMedium57",
    "spacer117",
    "trailingEnhancer19",
    "heart48",
    "menuItem25",
    "signedByBaseMenuItemOptionMediumStandardEnabled20",
    "menuItemControlMediumCheckboxUnchecked20",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked20",
    "icon20",
    "leadingEnhancer20",
    "heart49",
    "textFrame20",
    "leadingText20",
    "typography68",
    "signedByBaseTypographyParagraphMedium58",
    "text128",
    "spacer118",
    "typography69",
    "signedByBaseTypographyParagraphMedium59",
    "text129",
    "spacer119",
    "typography70",
    "signedByBaseTypographyParagraphMedium60",
    "spacer120",
    "trailingEnhancer20",
    "heart50",
    "scrollBar5",
    "model5",
    "buttons5",
    "button17",
    "frame1073713928",
    "frame1073713934",
    "button18",
    "button19",
    "button20"
  ],
  titre5: ["titre5"],
  texinput25: ["texinput25"],
  date5: ["date5", "label10", "timePicker11"],
  label10: ["label10"],
  timePicker11: ["timePicker11"],
  type5: ["type5"],
  budget5: ["budget5"],
  comments5: ["comments5"],
  input16: [
    "input16",
    "name11",
    "datePickerWeb5",
    "inputSelect5",
    "signedByBaseFieldGroupSmall5",
    "endDateCalendar5",
    "inputElementTextField9",
    "signedByBaseInputElementTextFieldSmallEnabled5",
    "leadingArtworkContainer17",
    "leadingArtwork9",
    "leadingLabelContainer17",
    "leadingLabel17",
    "signedByBaseTypographyLabelSmall9",
    "text105",
    "spacer97",
    "inputElementContentText17",
    "signedByBaseInputElementContentTextSmallOff5",
    "text106",
    "trailingLabelEnhancer17",
    "trailingLabel17",
    "signedByBaseTypographyLabelSmall10",
    "text107",
    "spacer98",
    "trailingArtworkContainer17",
    "trailingArtwork17",
    "calendar5",
    "signedByBaseInputElementSelectXSmallWebSingleDefaultEnabled5",
    "leadingArtworkContainer18",
    "text108",
    "leadingLabelContainer18",
    "leadingLabel18",
    "signedByBaseTypographyLabelXSmall9",
    "text109",
    "spacer99",
    "inputElementContentText18",
    "signedByBaseInputElementContentTextXSmallWebOff5",
    "text110",
    "trailingLabelEnhancer18",
    "trailingLabel18",
    "signedByBaseTypographyLabelXSmall10",
    "text111",
    "spacer100",
    "trailingArtworkContainer18",
    "trailingArtwork18",
    "selectIndicatorContainer9",
    "chevronIcon9",
    "inputElementHint9",
    "heart41",
    "hint9",
    "signedByBaseTypographyParagraphSmall9",
    "text112",
    "spacer101",
    "inputElementSelect5",
    "signedByBaseInputElementSelectMediumSingleDefaultActive5",
    "selectFrame5",
    "leadingArtworkContainer19",
    "leadingArtwork10",
    "leadingLabelContainer19",
    "leadingLabel19",
    "signedByBaseTypographyLabelMedium25",
    "text113",
    "spacer102",
    "inputElementContentText19",
    "signedByBaseInputElementContentTextMediumOff9",
    "text114",
    "trailingLabelEnhancer19",
    "trailingLabel19",
    "signedByBaseTypographyLabelMedium26",
    "text115",
    "spacer103",
    "trailingArtworkContainer19",
    "trailingArtwork19",
    "selectIndicatorContainer10",
    "chevronIcon10",
    "menu5",
    "signedByBaseMenuListMedium5",
    "menuItem21",
    "signedByBaseMenuItemSearchMediumNoneEnabled5",
    "searchField5",
    "signedByBaseSearchFieldMediumEnabled5",
    "inputElementLabel5",
    "signedByBaseInputElementLabelMedium5",
    "typography57",
    "signedByBaseTypographyLabelMedium27",
    "text116",
    "spacer104",
    "characterCountFrame5",
    "heart42",
    "typography58",
    "signedByBaseTypographyLabelMedium28",
    "text117",
    "spacer105",
    "inputElementTextField10",
    "signedByBaseInputElementTextFieldMediumEnabled5",
    "leadingArtworkContainer20",
    "search5",
    "leadingLabelContainer20",
    "leadingLabel20",
    "signedByBaseTypographyLabelMedium29",
    "text118",
    "spacer106",
    "inputElementContentText20",
    "signedByBaseInputElementContentTextMediumOff10",
    "text119",
    "trailingLabelEnhancer20",
    "trailingLabel20",
    "signedByBaseTypographyLabelMedium30",
    "text120",
    "spacer107",
    "trailingArtworkContainer20",
    "trailingArtwork20",
    "inputElementHint10",
    "heart43",
    "hint10",
    "signedByBaseTypographyParagraphSmall10",
    "text121",
    "spacer108",
    "menuItem22",
    "signedByBaseMenuItemOptionMediumStandardEnabled17",
    "menuItemControlMediumCheckboxUnchecked17",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked17",
    "icon17",
    "leadingEnhancer17",
    "heart44",
    "textFrame17",
    "leadingText17",
    "typography59",
    "signedByBaseTypographyParagraphMedium49",
    "text122",
    "spacer109",
    "typography60",
    "signedByBaseTypographyParagraphMedium50",
    "text123",
    "spacer110",
    "typography61",
    "signedByBaseTypographyParagraphMedium51",
    "spacer111",
    "trailingEnhancer17",
    "heart45",
    "menuItem23",
    "signedByBaseMenuItemOptionMediumStandardEnabled18",
    "menuItemControlMediumCheckboxUnchecked18",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked18",
    "icon18",
    "leadingEnhancer18",
    "heart46",
    "textFrame18",
    "leadingText18",
    "typography62",
    "signedByBaseTypographyParagraphMedium52",
    "text124",
    "spacer112",
    "typography63",
    "signedByBaseTypographyParagraphMedium53",
    "text125",
    "spacer113",
    "typography64",
    "signedByBaseTypographyParagraphMedium54",
    "spacer114",
    "trailingEnhancer18",
    "checkmarkSmall5",
    "menuItem24",
    "signedByBaseMenuItemOptionMediumStandardEnabled19",
    "menuItemControlMediumCheckboxUnchecked19",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked19",
    "icon19",
    "leadingEnhancer19",
    "heart47",
    "textFrame19",
    "leadingText19",
    "typography65",
    "signedByBaseTypographyParagraphMedium55",
    "text126",
    "spacer115",
    "typography66",
    "signedByBaseTypographyParagraphMedium56",
    "text127",
    "spacer116",
    "typography67",
    "signedByBaseTypographyParagraphMedium57",
    "spacer117",
    "trailingEnhancer19",
    "heart48",
    "menuItem25",
    "signedByBaseMenuItemOptionMediumStandardEnabled20",
    "menuItemControlMediumCheckboxUnchecked20",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked20",
    "icon20",
    "leadingEnhancer20",
    "heart49",
    "textFrame20",
    "leadingText20",
    "typography68",
    "signedByBaseTypographyParagraphMedium58",
    "text128",
    "spacer118",
    "typography69",
    "signedByBaseTypographyParagraphMedium59",
    "text129",
    "spacer119",
    "typography70",
    "signedByBaseTypographyParagraphMedium60",
    "spacer120",
    "trailingEnhancer20",
    "heart50",
    "scrollBar5"
  ],
  name11: ["name11"],
  datePickerWeb5: [
    "datePickerWeb5",
    "inputSelect5",
    "signedByBaseFieldGroupSmall5",
    "endDateCalendar5",
    "inputElementTextField9",
    "signedByBaseInputElementTextFieldSmallEnabled5",
    "leadingArtworkContainer17",
    "leadingArtwork9",
    "leadingLabelContainer17",
    "leadingLabel17",
    "signedByBaseTypographyLabelSmall9",
    "text105",
    "spacer97",
    "inputElementContentText17",
    "signedByBaseInputElementContentTextSmallOff5",
    "text106",
    "trailingLabelEnhancer17",
    "trailingLabel17",
    "signedByBaseTypographyLabelSmall10",
    "text107",
    "spacer98",
    "trailingArtworkContainer17",
    "trailingArtwork17",
    "calendar5",
    "signedByBaseInputElementSelectXSmallWebSingleDefaultEnabled5",
    "leadingArtworkContainer18",
    "text108",
    "leadingLabelContainer18",
    "leadingLabel18",
    "signedByBaseTypographyLabelXSmall9",
    "text109",
    "spacer99",
    "inputElementContentText18",
    "signedByBaseInputElementContentTextXSmallWebOff5",
    "text110",
    "trailingLabelEnhancer18",
    "trailingLabel18",
    "signedByBaseTypographyLabelXSmall10",
    "text111",
    "spacer100",
    "trailingArtworkContainer18",
    "trailingArtwork18",
    "selectIndicatorContainer9",
    "chevronIcon9",
    "inputElementHint9",
    "heart41",
    "hint9",
    "signedByBaseTypographyParagraphSmall9",
    "text112",
    "spacer101"
  ],
  inputSelect5: [
    "inputSelect5",
    "signedByBaseFieldGroupSmall5",
    "endDateCalendar5",
    "inputElementTextField9",
    "signedByBaseInputElementTextFieldSmallEnabled5",
    "leadingArtworkContainer17",
    "leadingArtwork9",
    "leadingLabelContainer17",
    "leadingLabel17",
    "signedByBaseTypographyLabelSmall9",
    "text105",
    "spacer97",
    "inputElementContentText17",
    "signedByBaseInputElementContentTextSmallOff5",
    "text106",
    "trailingLabelEnhancer17",
    "trailingLabel17",
    "signedByBaseTypographyLabelSmall10",
    "text107",
    "spacer98",
    "trailingArtworkContainer17",
    "trailingArtwork17",
    "calendar5",
    "signedByBaseInputElementSelectXSmallWebSingleDefaultEnabled5",
    "leadingArtworkContainer18",
    "text108",
    "leadingLabelContainer18",
    "leadingLabel18",
    "signedByBaseTypographyLabelXSmall9",
    "text109",
    "spacer99",
    "inputElementContentText18",
    "signedByBaseInputElementContentTextXSmallWebOff5",
    "text110",
    "trailingLabelEnhancer18",
    "trailingLabel18",
    "signedByBaseTypographyLabelXSmall10",
    "text111",
    "spacer100",
    "trailingArtworkContainer18",
    "trailingArtwork18",
    "selectIndicatorContainer9",
    "chevronIcon9",
    "inputElementHint9",
    "heart41",
    "hint9",
    "signedByBaseTypographyParagraphSmall9",
    "text112",
    "spacer101"
  ],
  signedByBaseFieldGroupSmall5: ["signedByBaseFieldGroupSmall5"],
  endDateCalendar5: [
    "endDateCalendar5",
    "inputElementTextField9",
    "signedByBaseInputElementTextFieldSmallEnabled5",
    "leadingArtworkContainer17",
    "leadingArtwork9",
    "leadingLabelContainer17",
    "leadingLabel17",
    "signedByBaseTypographyLabelSmall9",
    "text105",
    "spacer97",
    "inputElementContentText17",
    "signedByBaseInputElementContentTextSmallOff5",
    "text106",
    "trailingLabelEnhancer17",
    "trailingLabel17",
    "signedByBaseTypographyLabelSmall10",
    "text107",
    "spacer98",
    "trailingArtworkContainer17",
    "trailingArtwork17",
    "calendar5",
    "signedByBaseInputElementSelectXSmallWebSingleDefaultEnabled5",
    "leadingArtworkContainer18",
    "text108",
    "leadingLabelContainer18",
    "leadingLabel18",
    "signedByBaseTypographyLabelXSmall9",
    "text109",
    "spacer99",
    "inputElementContentText18",
    "signedByBaseInputElementContentTextXSmallWebOff5",
    "text110",
    "trailingLabelEnhancer18",
    "trailingLabel18",
    "signedByBaseTypographyLabelXSmall10",
    "text111",
    "spacer100",
    "trailingArtworkContainer18",
    "trailingArtwork18",
    "selectIndicatorContainer9",
    "chevronIcon9"
  ],
  inputElementTextField9: [
    "inputElementTextField9",
    "signedByBaseInputElementTextFieldSmallEnabled5",
    "leadingArtworkContainer17",
    "leadingArtwork9",
    "leadingLabelContainer17",
    "leadingLabel17",
    "signedByBaseTypographyLabelSmall9",
    "text105",
    "spacer97",
    "inputElementContentText17",
    "signedByBaseInputElementContentTextSmallOff5",
    "text106",
    "trailingLabelEnhancer17",
    "trailingLabel17",
    "signedByBaseTypographyLabelSmall10",
    "text107",
    "spacer98",
    "trailingArtworkContainer17",
    "trailingArtwork17"
  ],
  signedByBaseInputElementTextFieldSmallEnabled5: [
    "signedByBaseInputElementTextFieldSmallEnabled5"
  ],
  leadingArtworkContainer17: ["leadingArtworkContainer17", "leadingArtwork9"],
  leadingArtwork9: ["leadingArtwork9"],
  leadingLabelContainer17: [
    "leadingLabelContainer17",
    "leadingLabel17",
    "signedByBaseTypographyLabelSmall9",
    "text105",
    "spacer97"
  ],
  leadingLabel17: [
    "leadingLabel17",
    "signedByBaseTypographyLabelSmall9",
    "text105",
    "spacer97"
  ],
  signedByBaseTypographyLabelSmall9: ["signedByBaseTypographyLabelSmall9"],
  text105: ["text105"],
  spacer97: ["spacer97"],
  inputElementContentText17: [
    "inputElementContentText17",
    "signedByBaseInputElementContentTextSmallOff5",
    "text106"
  ],
  signedByBaseInputElementContentTextSmallOff5: [
    "signedByBaseInputElementContentTextSmallOff5"
  ],
  text106: ["text106"],
  trailingLabelEnhancer17: [
    "trailingLabelEnhancer17",
    "trailingLabel17",
    "signedByBaseTypographyLabelSmall10",
    "text107",
    "spacer98"
  ],
  trailingLabel17: [
    "trailingLabel17",
    "signedByBaseTypographyLabelSmall10",
    "text107",
    "spacer98"
  ],
  signedByBaseTypographyLabelSmall10: ["signedByBaseTypographyLabelSmall10"],
  text107: ["text107"],
  spacer98: ["spacer98"],
  trailingArtworkContainer17: [
    "trailingArtworkContainer17",
    "trailingArtwork17"
  ],
  trailingArtwork17: ["trailingArtwork17"],
  calendar5: [
    "calendar5",
    "signedByBaseInputElementSelectXSmallWebSingleDefaultEnabled5",
    "leadingArtworkContainer18",
    "text108",
    "leadingLabelContainer18",
    "leadingLabel18",
    "signedByBaseTypographyLabelXSmall9",
    "text109",
    "spacer99",
    "inputElementContentText18",
    "signedByBaseInputElementContentTextXSmallWebOff5",
    "text110",
    "trailingLabelEnhancer18",
    "trailingLabel18",
    "signedByBaseTypographyLabelXSmall10",
    "text111",
    "spacer100",
    "trailingArtworkContainer18",
    "trailingArtwork18",
    "selectIndicatorContainer9",
    "chevronIcon9"
  ],
  signedByBaseInputElementSelectXSmallWebSingleDefaultEnabled5: [
    "signedByBaseInputElementSelectXSmallWebSingleDefaultEnabled5"
  ],
  leadingArtworkContainer18: ["leadingArtworkContainer18", "text108"],
  text108: ["text108"],
  leadingLabelContainer18: [
    "leadingLabelContainer18",
    "leadingLabel18",
    "signedByBaseTypographyLabelXSmall9",
    "text109",
    "spacer99"
  ],
  leadingLabel18: [
    "leadingLabel18",
    "signedByBaseTypographyLabelXSmall9",
    "text109",
    "spacer99"
  ],
  signedByBaseTypographyLabelXSmall9: ["signedByBaseTypographyLabelXSmall9"],
  text109: ["text109"],
  spacer99: ["spacer99"],
  inputElementContentText18: [
    "inputElementContentText18",
    "signedByBaseInputElementContentTextXSmallWebOff5",
    "text110"
  ],
  signedByBaseInputElementContentTextXSmallWebOff5: [
    "signedByBaseInputElementContentTextXSmallWebOff5"
  ],
  text110: ["text110"],
  trailingLabelEnhancer18: [
    "trailingLabelEnhancer18",
    "trailingLabel18",
    "signedByBaseTypographyLabelXSmall10",
    "text111",
    "spacer100"
  ],
  trailingLabel18: [
    "trailingLabel18",
    "signedByBaseTypographyLabelXSmall10",
    "text111",
    "spacer100"
  ],
  signedByBaseTypographyLabelXSmall10: ["signedByBaseTypographyLabelXSmall10"],
  text111: ["text111"],
  spacer100: ["spacer100"],
  trailingArtworkContainer18: [
    "trailingArtworkContainer18",
    "trailingArtwork18"
  ],
  trailingArtwork18: ["trailingArtwork18"],
  selectIndicatorContainer9: ["selectIndicatorContainer9", "chevronIcon9"],
  chevronIcon9: ["chevronIcon9"],
  inputElementHint9: [
    "inputElementHint9",
    "heart41",
    "hint9",
    "signedByBaseTypographyParagraphSmall9",
    "text112",
    "spacer101"
  ],
  heart41: ["heart41"],
  hint9: [
    "hint9",
    "signedByBaseTypographyParagraphSmall9",
    "text112",
    "spacer101"
  ],
  signedByBaseTypographyParagraphSmall9: [
    "signedByBaseTypographyParagraphSmall9"
  ],
  text112: ["text112"],
  spacer101: ["spacer101"],
  inputElementSelect5: [
    "inputElementSelect5",
    "signedByBaseInputElementSelectMediumSingleDefaultActive5",
    "selectFrame5",
    "leadingArtworkContainer19",
    "leadingArtwork10",
    "leadingLabelContainer19",
    "leadingLabel19",
    "signedByBaseTypographyLabelMedium25",
    "text113",
    "spacer102",
    "inputElementContentText19",
    "signedByBaseInputElementContentTextMediumOff9",
    "text114",
    "trailingLabelEnhancer19",
    "trailingLabel19",
    "signedByBaseTypographyLabelMedium26",
    "text115",
    "spacer103",
    "trailingArtworkContainer19",
    "trailingArtwork19",
    "selectIndicatorContainer10",
    "chevronIcon10",
    "menu5",
    "signedByBaseMenuListMedium5",
    "menuItem21",
    "signedByBaseMenuItemSearchMediumNoneEnabled5",
    "searchField5",
    "signedByBaseSearchFieldMediumEnabled5",
    "inputElementLabel5",
    "signedByBaseInputElementLabelMedium5",
    "typography57",
    "signedByBaseTypographyLabelMedium27",
    "text116",
    "spacer104",
    "characterCountFrame5",
    "heart42",
    "typography58",
    "signedByBaseTypographyLabelMedium28",
    "text117",
    "spacer105",
    "inputElementTextField10",
    "signedByBaseInputElementTextFieldMediumEnabled5",
    "leadingArtworkContainer20",
    "search5",
    "leadingLabelContainer20",
    "leadingLabel20",
    "signedByBaseTypographyLabelMedium29",
    "text118",
    "spacer106",
    "inputElementContentText20",
    "signedByBaseInputElementContentTextMediumOff10",
    "text119",
    "trailingLabelEnhancer20",
    "trailingLabel20",
    "signedByBaseTypographyLabelMedium30",
    "text120",
    "spacer107",
    "trailingArtworkContainer20",
    "trailingArtwork20",
    "inputElementHint10",
    "heart43",
    "hint10",
    "signedByBaseTypographyParagraphSmall10",
    "text121",
    "spacer108",
    "menuItem22",
    "signedByBaseMenuItemOptionMediumStandardEnabled17",
    "menuItemControlMediumCheckboxUnchecked17",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked17",
    "icon17",
    "leadingEnhancer17",
    "heart44",
    "textFrame17",
    "leadingText17",
    "typography59",
    "signedByBaseTypographyParagraphMedium49",
    "text122",
    "spacer109",
    "typography60",
    "signedByBaseTypographyParagraphMedium50",
    "text123",
    "spacer110",
    "typography61",
    "signedByBaseTypographyParagraphMedium51",
    "spacer111",
    "trailingEnhancer17",
    "heart45",
    "menuItem23",
    "signedByBaseMenuItemOptionMediumStandardEnabled18",
    "menuItemControlMediumCheckboxUnchecked18",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked18",
    "icon18",
    "leadingEnhancer18",
    "heart46",
    "textFrame18",
    "leadingText18",
    "typography62",
    "signedByBaseTypographyParagraphMedium52",
    "text124",
    "spacer112",
    "typography63",
    "signedByBaseTypographyParagraphMedium53",
    "text125",
    "spacer113",
    "typography64",
    "signedByBaseTypographyParagraphMedium54",
    "spacer114",
    "trailingEnhancer18",
    "checkmarkSmall5",
    "menuItem24",
    "signedByBaseMenuItemOptionMediumStandardEnabled19",
    "menuItemControlMediumCheckboxUnchecked19",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked19",
    "icon19",
    "leadingEnhancer19",
    "heart47",
    "textFrame19",
    "leadingText19",
    "typography65",
    "signedByBaseTypographyParagraphMedium55",
    "text126",
    "spacer115",
    "typography66",
    "signedByBaseTypographyParagraphMedium56",
    "text127",
    "spacer116",
    "typography67",
    "signedByBaseTypographyParagraphMedium57",
    "spacer117",
    "trailingEnhancer19",
    "heart48",
    "menuItem25",
    "signedByBaseMenuItemOptionMediumStandardEnabled20",
    "menuItemControlMediumCheckboxUnchecked20",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked20",
    "icon20",
    "leadingEnhancer20",
    "heart49",
    "textFrame20",
    "leadingText20",
    "typography68",
    "signedByBaseTypographyParagraphMedium58",
    "text128",
    "spacer118",
    "typography69",
    "signedByBaseTypographyParagraphMedium59",
    "text129",
    "spacer119",
    "typography70",
    "signedByBaseTypographyParagraphMedium60",
    "spacer120",
    "trailingEnhancer20",
    "heart50",
    "scrollBar5"
  ],
  signedByBaseInputElementSelectMediumSingleDefaultActive5: [
    "signedByBaseInputElementSelectMediumSingleDefaultActive5"
  ],
  selectFrame5: [
    "selectFrame5",
    "leadingArtworkContainer19",
    "leadingArtwork10",
    "leadingLabelContainer19",
    "leadingLabel19",
    "signedByBaseTypographyLabelMedium25",
    "text113",
    "spacer102",
    "inputElementContentText19",
    "signedByBaseInputElementContentTextMediumOff9",
    "text114",
    "trailingLabelEnhancer19",
    "trailingLabel19",
    "signedByBaseTypographyLabelMedium26",
    "text115",
    "spacer103",
    "trailingArtworkContainer19",
    "trailingArtwork19",
    "selectIndicatorContainer10",
    "chevronIcon10"
  ],
  leadingArtworkContainer19: ["leadingArtworkContainer19", "leadingArtwork10"],
  leadingArtwork10: ["leadingArtwork10"],
  leadingLabelContainer19: [
    "leadingLabelContainer19",
    "leadingLabel19",
    "signedByBaseTypographyLabelMedium25",
    "text113",
    "spacer102"
  ],
  leadingLabel19: [
    "leadingLabel19",
    "signedByBaseTypographyLabelMedium25",
    "text113",
    "spacer102"
  ],
  signedByBaseTypographyLabelMedium25: ["signedByBaseTypographyLabelMedium25"],
  text113: ["text113"],
  spacer102: ["spacer102"],
  inputElementContentText19: [
    "inputElementContentText19",
    "signedByBaseInputElementContentTextMediumOff9",
    "text114"
  ],
  signedByBaseInputElementContentTextMediumOff9: [
    "signedByBaseInputElementContentTextMediumOff9"
  ],
  text114: ["text114"],
  trailingLabelEnhancer19: [
    "trailingLabelEnhancer19",
    "trailingLabel19",
    "signedByBaseTypographyLabelMedium26",
    "text115",
    "spacer103"
  ],
  trailingLabel19: [
    "trailingLabel19",
    "signedByBaseTypographyLabelMedium26",
    "text115",
    "spacer103"
  ],
  signedByBaseTypographyLabelMedium26: ["signedByBaseTypographyLabelMedium26"],
  text115: ["text115"],
  spacer103: ["spacer103"],
  trailingArtworkContainer19: [
    "trailingArtworkContainer19",
    "trailingArtwork19"
  ],
  trailingArtwork19: ["trailingArtwork19"],
  selectIndicatorContainer10: ["selectIndicatorContainer10", "chevronIcon10"],
  chevronIcon10: ["chevronIcon10"],
  menu5: [
    "menu5",
    "signedByBaseMenuListMedium5",
    "menuItem21",
    "signedByBaseMenuItemSearchMediumNoneEnabled5",
    "searchField5",
    "signedByBaseSearchFieldMediumEnabled5",
    "inputElementLabel5",
    "signedByBaseInputElementLabelMedium5",
    "typography57",
    "signedByBaseTypographyLabelMedium27",
    "text116",
    "spacer104",
    "characterCountFrame5",
    "heart42",
    "typography58",
    "signedByBaseTypographyLabelMedium28",
    "text117",
    "spacer105",
    "inputElementTextField10",
    "signedByBaseInputElementTextFieldMediumEnabled5",
    "leadingArtworkContainer20",
    "search5",
    "leadingLabelContainer20",
    "leadingLabel20",
    "signedByBaseTypographyLabelMedium29",
    "text118",
    "spacer106",
    "inputElementContentText20",
    "signedByBaseInputElementContentTextMediumOff10",
    "text119",
    "trailingLabelEnhancer20",
    "trailingLabel20",
    "signedByBaseTypographyLabelMedium30",
    "text120",
    "spacer107",
    "trailingArtworkContainer20",
    "trailingArtwork20",
    "inputElementHint10",
    "heart43",
    "hint10",
    "signedByBaseTypographyParagraphSmall10",
    "text121",
    "spacer108",
    "menuItem22",
    "signedByBaseMenuItemOptionMediumStandardEnabled17",
    "menuItemControlMediumCheckboxUnchecked17",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked17",
    "icon17",
    "leadingEnhancer17",
    "heart44",
    "textFrame17",
    "leadingText17",
    "typography59",
    "signedByBaseTypographyParagraphMedium49",
    "text122",
    "spacer109",
    "typography60",
    "signedByBaseTypographyParagraphMedium50",
    "text123",
    "spacer110",
    "typography61",
    "signedByBaseTypographyParagraphMedium51",
    "spacer111",
    "trailingEnhancer17",
    "heart45",
    "menuItem23",
    "signedByBaseMenuItemOptionMediumStandardEnabled18",
    "menuItemControlMediumCheckboxUnchecked18",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked18",
    "icon18",
    "leadingEnhancer18",
    "heart46",
    "textFrame18",
    "leadingText18",
    "typography62",
    "signedByBaseTypographyParagraphMedium52",
    "text124",
    "spacer112",
    "typography63",
    "signedByBaseTypographyParagraphMedium53",
    "text125",
    "spacer113",
    "typography64",
    "signedByBaseTypographyParagraphMedium54",
    "spacer114",
    "trailingEnhancer18",
    "checkmarkSmall5",
    "menuItem24",
    "signedByBaseMenuItemOptionMediumStandardEnabled19",
    "menuItemControlMediumCheckboxUnchecked19",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked19",
    "icon19",
    "leadingEnhancer19",
    "heart47",
    "textFrame19",
    "leadingText19",
    "typography65",
    "signedByBaseTypographyParagraphMedium55",
    "text126",
    "spacer115",
    "typography66",
    "signedByBaseTypographyParagraphMedium56",
    "text127",
    "spacer116",
    "typography67",
    "signedByBaseTypographyParagraphMedium57",
    "spacer117",
    "trailingEnhancer19",
    "heart48",
    "menuItem25",
    "signedByBaseMenuItemOptionMediumStandardEnabled20",
    "menuItemControlMediumCheckboxUnchecked20",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked20",
    "icon20",
    "leadingEnhancer20",
    "heart49",
    "textFrame20",
    "leadingText20",
    "typography68",
    "signedByBaseTypographyParagraphMedium58",
    "text128",
    "spacer118",
    "typography69",
    "signedByBaseTypographyParagraphMedium59",
    "text129",
    "spacer119",
    "typography70",
    "signedByBaseTypographyParagraphMedium60",
    "spacer120",
    "trailingEnhancer20",
    "heart50",
    "scrollBar5"
  ],
  signedByBaseMenuListMedium5: ["signedByBaseMenuListMedium5"],
  menuItem21: [
    "menuItem21",
    "signedByBaseMenuItemSearchMediumNoneEnabled5",
    "searchField5",
    "signedByBaseSearchFieldMediumEnabled5",
    "inputElementLabel5",
    "signedByBaseInputElementLabelMedium5",
    "typography57",
    "signedByBaseTypographyLabelMedium27",
    "text116",
    "spacer104",
    "characterCountFrame5",
    "heart42",
    "typography58",
    "signedByBaseTypographyLabelMedium28",
    "text117",
    "spacer105",
    "inputElementTextField10",
    "signedByBaseInputElementTextFieldMediumEnabled5",
    "leadingArtworkContainer20",
    "search5",
    "leadingLabelContainer20",
    "leadingLabel20",
    "signedByBaseTypographyLabelMedium29",
    "text118",
    "spacer106",
    "inputElementContentText20",
    "signedByBaseInputElementContentTextMediumOff10",
    "text119",
    "trailingLabelEnhancer20",
    "trailingLabel20",
    "signedByBaseTypographyLabelMedium30",
    "text120",
    "spacer107",
    "trailingArtworkContainer20",
    "trailingArtwork20",
    "inputElementHint10",
    "heart43",
    "hint10",
    "signedByBaseTypographyParagraphSmall10",
    "text121",
    "spacer108"
  ],
  signedByBaseMenuItemSearchMediumNoneEnabled5: [
    "signedByBaseMenuItemSearchMediumNoneEnabled5"
  ],
  searchField5: [
    "searchField5",
    "signedByBaseSearchFieldMediumEnabled5",
    "inputElementLabel5",
    "signedByBaseInputElementLabelMedium5",
    "typography57",
    "signedByBaseTypographyLabelMedium27",
    "text116",
    "spacer104",
    "characterCountFrame5",
    "heart42",
    "typography58",
    "signedByBaseTypographyLabelMedium28",
    "text117",
    "spacer105",
    "inputElementTextField10",
    "signedByBaseInputElementTextFieldMediumEnabled5",
    "leadingArtworkContainer20",
    "search5",
    "leadingLabelContainer20",
    "leadingLabel20",
    "signedByBaseTypographyLabelMedium29",
    "text118",
    "spacer106",
    "inputElementContentText20",
    "signedByBaseInputElementContentTextMediumOff10",
    "text119",
    "trailingLabelEnhancer20",
    "trailingLabel20",
    "signedByBaseTypographyLabelMedium30",
    "text120",
    "spacer107",
    "trailingArtworkContainer20",
    "trailingArtwork20",
    "inputElementHint10",
    "heart43",
    "hint10",
    "signedByBaseTypographyParagraphSmall10",
    "text121",
    "spacer108"
  ],
  signedByBaseSearchFieldMediumEnabled5: [
    "signedByBaseSearchFieldMediumEnabled5"
  ],
  inputElementLabel5: [
    "inputElementLabel5",
    "signedByBaseInputElementLabelMedium5",
    "typography57",
    "signedByBaseTypographyLabelMedium27",
    "text116",
    "spacer104",
    "characterCountFrame5",
    "heart42",
    "typography58",
    "signedByBaseTypographyLabelMedium28",
    "text117",
    "spacer105"
  ],
  signedByBaseInputElementLabelMedium5: [
    "signedByBaseInputElementLabelMedium5"
  ],
  typography57: [
    "typography57",
    "signedByBaseTypographyLabelMedium27",
    "text116",
    "spacer104"
  ],
  signedByBaseTypographyLabelMedium27: ["signedByBaseTypographyLabelMedium27"],
  text116: ["text116"],
  spacer104: ["spacer104"],
  characterCountFrame5: [
    "characterCountFrame5",
    "heart42",
    "typography58",
    "signedByBaseTypographyLabelMedium28",
    "text117",
    "spacer105"
  ],
  heart42: ["heart42"],
  typography58: [
    "typography58",
    "signedByBaseTypographyLabelMedium28",
    "text117",
    "spacer105"
  ],
  signedByBaseTypographyLabelMedium28: ["signedByBaseTypographyLabelMedium28"],
  text117: ["text117"],
  spacer105: ["spacer105"],
  inputElementTextField10: [
    "inputElementTextField10",
    "signedByBaseInputElementTextFieldMediumEnabled5",
    "leadingArtworkContainer20",
    "search5",
    "leadingLabelContainer20",
    "leadingLabel20",
    "signedByBaseTypographyLabelMedium29",
    "text118",
    "spacer106",
    "inputElementContentText20",
    "signedByBaseInputElementContentTextMediumOff10",
    "text119",
    "trailingLabelEnhancer20",
    "trailingLabel20",
    "signedByBaseTypographyLabelMedium30",
    "text120",
    "spacer107",
    "trailingArtworkContainer20",
    "trailingArtwork20"
  ],
  signedByBaseInputElementTextFieldMediumEnabled5: [
    "signedByBaseInputElementTextFieldMediumEnabled5"
  ],
  leadingArtworkContainer20: ["leadingArtworkContainer20", "search5"],
  search5: ["search5"],
  leadingLabelContainer20: [
    "leadingLabelContainer20",
    "leadingLabel20",
    "signedByBaseTypographyLabelMedium29",
    "text118",
    "spacer106"
  ],
  leadingLabel20: [
    "leadingLabel20",
    "signedByBaseTypographyLabelMedium29",
    "text118",
    "spacer106"
  ],
  signedByBaseTypographyLabelMedium29: ["signedByBaseTypographyLabelMedium29"],
  text118: ["text118"],
  spacer106: ["spacer106"],
  inputElementContentText20: [
    "inputElementContentText20",
    "signedByBaseInputElementContentTextMediumOff10",
    "text119"
  ],
  signedByBaseInputElementContentTextMediumOff10: [
    "signedByBaseInputElementContentTextMediumOff10"
  ],
  text119: ["text119"],
  trailingLabelEnhancer20: [
    "trailingLabelEnhancer20",
    "trailingLabel20",
    "signedByBaseTypographyLabelMedium30",
    "text120",
    "spacer107"
  ],
  trailingLabel20: [
    "trailingLabel20",
    "signedByBaseTypographyLabelMedium30",
    "text120",
    "spacer107"
  ],
  signedByBaseTypographyLabelMedium30: ["signedByBaseTypographyLabelMedium30"],
  text120: ["text120"],
  spacer107: ["spacer107"],
  trailingArtworkContainer20: [
    "trailingArtworkContainer20",
    "trailingArtwork20"
  ],
  trailingArtwork20: ["trailingArtwork20"],
  inputElementHint10: [
    "inputElementHint10",
    "heart43",
    "hint10",
    "signedByBaseTypographyParagraphSmall10",
    "text121",
    "spacer108"
  ],
  heart43: ["heart43"],
  hint10: [
    "hint10",
    "signedByBaseTypographyParagraphSmall10",
    "text121",
    "spacer108"
  ],
  signedByBaseTypographyParagraphSmall10: [
    "signedByBaseTypographyParagraphSmall10"
  ],
  text121: ["text121"],
  spacer108: ["spacer108"],
  menuItem22: [
    "menuItem22",
    "signedByBaseMenuItemOptionMediumStandardEnabled17",
    "menuItemControlMediumCheckboxUnchecked17",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked17",
    "icon17",
    "leadingEnhancer17",
    "heart44",
    "textFrame17",
    "leadingText17",
    "typography59",
    "signedByBaseTypographyParagraphMedium49",
    "text122",
    "spacer109",
    "typography60",
    "signedByBaseTypographyParagraphMedium50",
    "text123",
    "spacer110",
    "typography61",
    "signedByBaseTypographyParagraphMedium51",
    "spacer111",
    "trailingEnhancer17",
    "heart45"
  ],
  signedByBaseMenuItemOptionMediumStandardEnabled17: [
    "signedByBaseMenuItemOptionMediumStandardEnabled17"
  ],
  menuItemControlMediumCheckboxUnchecked17: [
    "menuItemControlMediumCheckboxUnchecked17",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked17",
    "icon17"
  ],
  signedByBaseMenuItemControlMediumCheckboxUnchecked17: [
    "signedByBaseMenuItemControlMediumCheckboxUnchecked17"
  ],
  icon17: ["icon17"],
  leadingEnhancer17: ["leadingEnhancer17", "heart44"],
  heart44: ["heart44"],
  textFrame17: [
    "textFrame17",
    "leadingText17",
    "typography59",
    "signedByBaseTypographyParagraphMedium49",
    "text122",
    "spacer109",
    "typography60",
    "signedByBaseTypographyParagraphMedium50",
    "text123",
    "spacer110",
    "typography61",
    "signedByBaseTypographyParagraphMedium51",
    "spacer111"
  ],
  leadingText17: [
    "leadingText17",
    "typography59",
    "signedByBaseTypographyParagraphMedium49",
    "text122",
    "spacer109",
    "typography60",
    "signedByBaseTypographyParagraphMedium50",
    "text123",
    "spacer110"
  ],
  typography59: [
    "typography59",
    "signedByBaseTypographyParagraphMedium49",
    "text122",
    "spacer109"
  ],
  signedByBaseTypographyParagraphMedium49: [
    "signedByBaseTypographyParagraphMedium49"
  ],
  text122: ["text122"],
  spacer109: ["spacer109"],
  typography60: [
    "typography60",
    "signedByBaseTypographyParagraphMedium50",
    "text123",
    "spacer110"
  ],
  signedByBaseTypographyParagraphMedium50: [
    "signedByBaseTypographyParagraphMedium50"
  ],
  text123: ["text123"],
  spacer110: ["spacer110"],
  typography61: [
    "typography61",
    "signedByBaseTypographyParagraphMedium51",
    "spacer111"
  ],
  signedByBaseTypographyParagraphMedium51: [
    "signedByBaseTypographyParagraphMedium51"
  ],
  spacer111: ["spacer111"],
  trailingEnhancer17: ["trailingEnhancer17", "heart45"],
  heart45: ["heart45"],
  menuItem23: [
    "menuItem23",
    "signedByBaseMenuItemOptionMediumStandardEnabled18",
    "menuItemControlMediumCheckboxUnchecked18",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked18",
    "icon18",
    "leadingEnhancer18",
    "heart46",
    "textFrame18",
    "leadingText18",
    "typography62",
    "signedByBaseTypographyParagraphMedium52",
    "text124",
    "spacer112",
    "typography63",
    "signedByBaseTypographyParagraphMedium53",
    "text125",
    "spacer113",
    "typography64",
    "signedByBaseTypographyParagraphMedium54",
    "spacer114",
    "trailingEnhancer18",
    "checkmarkSmall5"
  ],
  signedByBaseMenuItemOptionMediumStandardEnabled18: [
    "signedByBaseMenuItemOptionMediumStandardEnabled18"
  ],
  menuItemControlMediumCheckboxUnchecked18: [
    "menuItemControlMediumCheckboxUnchecked18",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked18",
    "icon18"
  ],
  signedByBaseMenuItemControlMediumCheckboxUnchecked18: [
    "signedByBaseMenuItemControlMediumCheckboxUnchecked18"
  ],
  icon18: ["icon18"],
  leadingEnhancer18: ["leadingEnhancer18", "heart46"],
  heart46: ["heart46"],
  textFrame18: [
    "textFrame18",
    "leadingText18",
    "typography62",
    "signedByBaseTypographyParagraphMedium52",
    "text124",
    "spacer112",
    "typography63",
    "signedByBaseTypographyParagraphMedium53",
    "text125",
    "spacer113",
    "typography64",
    "signedByBaseTypographyParagraphMedium54",
    "spacer114"
  ],
  leadingText18: [
    "leadingText18",
    "typography62",
    "signedByBaseTypographyParagraphMedium52",
    "text124",
    "spacer112",
    "typography63",
    "signedByBaseTypographyParagraphMedium53",
    "text125",
    "spacer113"
  ],
  typography62: [
    "typography62",
    "signedByBaseTypographyParagraphMedium52",
    "text124",
    "spacer112"
  ],
  signedByBaseTypographyParagraphMedium52: [
    "signedByBaseTypographyParagraphMedium52"
  ],
  text124: ["text124"],
  spacer112: ["spacer112"],
  typography63: [
    "typography63",
    "signedByBaseTypographyParagraphMedium53",
    "text125",
    "spacer113"
  ],
  signedByBaseTypographyParagraphMedium53: [
    "signedByBaseTypographyParagraphMedium53"
  ],
  text125: ["text125"],
  spacer113: ["spacer113"],
  typography64: [
    "typography64",
    "signedByBaseTypographyParagraphMedium54",
    "spacer114"
  ],
  signedByBaseTypographyParagraphMedium54: [
    "signedByBaseTypographyParagraphMedium54"
  ],
  spacer114: ["spacer114"],
  trailingEnhancer18: ["trailingEnhancer18", "checkmarkSmall5"],
  checkmarkSmall5: ["checkmarkSmall5"],
  menuItem24: [
    "menuItem24",
    "signedByBaseMenuItemOptionMediumStandardEnabled19",
    "menuItemControlMediumCheckboxUnchecked19",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked19",
    "icon19",
    "leadingEnhancer19",
    "heart47",
    "textFrame19",
    "leadingText19",
    "typography65",
    "signedByBaseTypographyParagraphMedium55",
    "text126",
    "spacer115",
    "typography66",
    "signedByBaseTypographyParagraphMedium56",
    "text127",
    "spacer116",
    "typography67",
    "signedByBaseTypographyParagraphMedium57",
    "spacer117",
    "trailingEnhancer19",
    "heart48"
  ],
  signedByBaseMenuItemOptionMediumStandardEnabled19: [
    "signedByBaseMenuItemOptionMediumStandardEnabled19"
  ],
  menuItemControlMediumCheckboxUnchecked19: [
    "menuItemControlMediumCheckboxUnchecked19",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked19",
    "icon19"
  ],
  signedByBaseMenuItemControlMediumCheckboxUnchecked19: [
    "signedByBaseMenuItemControlMediumCheckboxUnchecked19"
  ],
  icon19: ["icon19"],
  leadingEnhancer19: ["leadingEnhancer19", "heart47"],
  heart47: ["heart47"],
  textFrame19: [
    "textFrame19",
    "leadingText19",
    "typography65",
    "signedByBaseTypographyParagraphMedium55",
    "text126",
    "spacer115",
    "typography66",
    "signedByBaseTypographyParagraphMedium56",
    "text127",
    "spacer116",
    "typography67",
    "signedByBaseTypographyParagraphMedium57",
    "spacer117"
  ],
  leadingText19: [
    "leadingText19",
    "typography65",
    "signedByBaseTypographyParagraphMedium55",
    "text126",
    "spacer115",
    "typography66",
    "signedByBaseTypographyParagraphMedium56",
    "text127",
    "spacer116"
  ],
  typography65: [
    "typography65",
    "signedByBaseTypographyParagraphMedium55",
    "text126",
    "spacer115"
  ],
  signedByBaseTypographyParagraphMedium55: [
    "signedByBaseTypographyParagraphMedium55"
  ],
  text126: ["text126"],
  spacer115: ["spacer115"],
  typography66: [
    "typography66",
    "signedByBaseTypographyParagraphMedium56",
    "text127",
    "spacer116"
  ],
  signedByBaseTypographyParagraphMedium56: [
    "signedByBaseTypographyParagraphMedium56"
  ],
  text127: ["text127"],
  spacer116: ["spacer116"],
  typography67: [
    "typography67",
    "signedByBaseTypographyParagraphMedium57",
    "spacer117"
  ],
  signedByBaseTypographyParagraphMedium57: [
    "signedByBaseTypographyParagraphMedium57"
  ],
  spacer117: ["spacer117"],
  trailingEnhancer19: ["trailingEnhancer19", "heart48"],
  heart48: ["heart48"],
  menuItem25: [
    "menuItem25",
    "signedByBaseMenuItemOptionMediumStandardEnabled20",
    "menuItemControlMediumCheckboxUnchecked20",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked20",
    "icon20",
    "leadingEnhancer20",
    "heart49",
    "textFrame20",
    "leadingText20",
    "typography68",
    "signedByBaseTypographyParagraphMedium58",
    "text128",
    "spacer118",
    "typography69",
    "signedByBaseTypographyParagraphMedium59",
    "text129",
    "spacer119",
    "typography70",
    "signedByBaseTypographyParagraphMedium60",
    "spacer120",
    "trailingEnhancer20",
    "heart50"
  ],
  signedByBaseMenuItemOptionMediumStandardEnabled20: [
    "signedByBaseMenuItemOptionMediumStandardEnabled20"
  ],
  menuItemControlMediumCheckboxUnchecked20: [
    "menuItemControlMediumCheckboxUnchecked20",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked20",
    "icon20"
  ],
  signedByBaseMenuItemControlMediumCheckboxUnchecked20: [
    "signedByBaseMenuItemControlMediumCheckboxUnchecked20"
  ],
  icon20: ["icon20"],
  leadingEnhancer20: ["leadingEnhancer20", "heart49"],
  heart49: ["heart49"],
  textFrame20: [
    "textFrame20",
    "leadingText20",
    "typography68",
    "signedByBaseTypographyParagraphMedium58",
    "text128",
    "spacer118",
    "typography69",
    "signedByBaseTypographyParagraphMedium59",
    "text129",
    "spacer119",
    "typography70",
    "signedByBaseTypographyParagraphMedium60",
    "spacer120"
  ],
  leadingText20: [
    "leadingText20",
    "typography68",
    "signedByBaseTypographyParagraphMedium58",
    "text128",
    "spacer118",
    "typography69",
    "signedByBaseTypographyParagraphMedium59",
    "text129",
    "spacer119"
  ],
  typography68: [
    "typography68",
    "signedByBaseTypographyParagraphMedium58",
    "text128",
    "spacer118"
  ],
  signedByBaseTypographyParagraphMedium58: [
    "signedByBaseTypographyParagraphMedium58"
  ],
  text128: ["text128"],
  spacer118: ["spacer118"],
  typography69: [
    "typography69",
    "signedByBaseTypographyParagraphMedium59",
    "text129",
    "spacer119"
  ],
  signedByBaseTypographyParagraphMedium59: [
    "signedByBaseTypographyParagraphMedium59"
  ],
  text129: ["text129"],
  spacer119: ["spacer119"],
  typography70: [
    "typography70",
    "signedByBaseTypographyParagraphMedium60",
    "spacer120"
  ],
  signedByBaseTypographyParagraphMedium60: [
    "signedByBaseTypographyParagraphMedium60"
  ],
  spacer120: ["spacer120"],
  trailingEnhancer20: ["trailingEnhancer20", "heart50"],
  heart50: ["heart50"],
  scrollBar5: ["scrollBar5"],
  model5: ["model5"],
  buttons5: [
    "buttons5",
    "button17",
    "frame1073713928",
    "frame1073713934",
    "button18",
    "button19",
    "button20"
  ],
  button17: ["button17"],
  frame1073713928: ["frame1073713928"],
  frame1073713934: ["frame1073713934", "button18", "button19", "button20"],
  button18: ["button18"],
  button19: ["button19"],
  button20: ["button20"],
  duplicateDispo3: [
    "duplicateDispo3",
    "frame1437254030",
    "name12",
    "frame1437254031",
    "duplicateDispo2",
    "content6",
    "titre6",
    "texinput26",
    "date6",
    "label11",
    "timePicker12",
    "type6",
    "budget6",
    "comments6",
    "input17",
    "name13",
    "datePickerWeb6",
    "inputSelect6",
    "signedByBaseFieldGroupSmall6",
    "endDateCalendar6",
    "inputElementTextField11",
    "signedByBaseInputElementTextFieldSmallEnabled6",
    "leadingArtworkContainer21",
    "leadingArtwork11",
    "leadingLabelContainer21",
    "leadingLabel21",
    "signedByBaseTypographyLabelSmall11",
    "text130",
    "spacer121",
    "inputElementContentText21",
    "signedByBaseInputElementContentTextSmallOff6",
    "text131",
    "trailingLabelEnhancer21",
    "trailingLabel21",
    "signedByBaseTypographyLabelSmall12",
    "text132",
    "spacer122",
    "trailingArtworkContainer21",
    "trailingArtwork21",
    "calendar6",
    "signedByBaseInputElementSelectXSmallWebSingleDefaultEnabled6",
    "leadingArtworkContainer22",
    "text133",
    "leadingLabelContainer22",
    "leadingLabel22",
    "signedByBaseTypographyLabelXSmall11",
    "text134",
    "spacer123",
    "inputElementContentText22",
    "signedByBaseInputElementContentTextXSmallWebOff6",
    "text135",
    "trailingLabelEnhancer22",
    "trailingLabel22",
    "signedByBaseTypographyLabelXSmall12",
    "text136",
    "spacer124",
    "trailingArtworkContainer22",
    "trailingArtwork22",
    "selectIndicatorContainer11",
    "chevronIcon11",
    "inputElementHint11",
    "heart51",
    "hint11",
    "signedByBaseTypographyParagraphSmall11",
    "text137",
    "spacer125",
    "inputElementSelect6",
    "signedByBaseInputElementSelectMediumSingleDefaultActive6",
    "selectFrame6",
    "leadingArtworkContainer23",
    "leadingArtwork12",
    "leadingLabelContainer23",
    "leadingLabel23",
    "signedByBaseTypographyLabelMedium31",
    "text138",
    "spacer126",
    "inputElementContentText23",
    "signedByBaseInputElementContentTextMediumOff11",
    "text139",
    "trailingLabelEnhancer23",
    "trailingLabel23",
    "signedByBaseTypographyLabelMedium32",
    "text140",
    "spacer127",
    "trailingArtworkContainer23",
    "trailingArtwork23",
    "selectIndicatorContainer12",
    "chevronIcon12",
    "menu6",
    "signedByBaseMenuListMedium6",
    "menuItem26",
    "signedByBaseMenuItemSearchMediumNoneEnabled6",
    "searchField6",
    "signedByBaseSearchFieldMediumEnabled6",
    "inputElementLabel6",
    "signedByBaseInputElementLabelMedium6",
    "typography71",
    "signedByBaseTypographyLabelMedium33",
    "text141",
    "spacer128",
    "characterCountFrame6",
    "heart52",
    "typography72",
    "signedByBaseTypographyLabelMedium34",
    "text142",
    "spacer129",
    "inputElementTextField12",
    "signedByBaseInputElementTextFieldMediumEnabled6",
    "leadingArtworkContainer24",
    "search6",
    "leadingLabelContainer24",
    "leadingLabel24",
    "signedByBaseTypographyLabelMedium35",
    "text143",
    "spacer130",
    "inputElementContentText24",
    "signedByBaseInputElementContentTextMediumOff12",
    "text144",
    "trailingLabelEnhancer24",
    "trailingLabel24",
    "signedByBaseTypographyLabelMedium36",
    "text145",
    "spacer131",
    "trailingArtworkContainer24",
    "trailingArtwork24",
    "inputElementHint12",
    "heart53",
    "hint12",
    "signedByBaseTypographyParagraphSmall12",
    "text146",
    "spacer132",
    "menuItem27",
    "signedByBaseMenuItemOptionMediumStandardEnabled21",
    "menuItemControlMediumCheckboxUnchecked21",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked21",
    "icon21",
    "leadingEnhancer21",
    "heart54",
    "textFrame21",
    "leadingText21",
    "typography73",
    "signedByBaseTypographyParagraphMedium61",
    "text147",
    "spacer133",
    "typography74",
    "signedByBaseTypographyParagraphMedium62",
    "text148",
    "spacer134",
    "typography75",
    "signedByBaseTypographyParagraphMedium63",
    "spacer135",
    "trailingEnhancer21",
    "heart55",
    "menuItem28",
    "signedByBaseMenuItemOptionMediumStandardEnabled22",
    "menuItemControlMediumCheckboxUnchecked22",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked22",
    "icon22",
    "leadingEnhancer22",
    "heart56",
    "textFrame22",
    "leadingText22",
    "typography76",
    "signedByBaseTypographyParagraphMedium64",
    "text149",
    "spacer136",
    "typography77",
    "signedByBaseTypographyParagraphMedium65",
    "text150",
    "spacer137",
    "typography78",
    "signedByBaseTypographyParagraphMedium66",
    "spacer138",
    "trailingEnhancer22",
    "checkmarkSmall6",
    "menuItem29",
    "signedByBaseMenuItemOptionMediumStandardEnabled23",
    "menuItemControlMediumCheckboxUnchecked23",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked23",
    "icon23",
    "leadingEnhancer23",
    "heart57",
    "textFrame23",
    "leadingText23",
    "typography79",
    "signedByBaseTypographyParagraphMedium67",
    "text151",
    "spacer139",
    "typography80",
    "signedByBaseTypographyParagraphMedium68",
    "text152",
    "spacer140",
    "typography81",
    "signedByBaseTypographyParagraphMedium69",
    "spacer141",
    "trailingEnhancer23",
    "heart58",
    "menuItem30",
    "signedByBaseMenuItemOptionMediumStandardEnabled24",
    "menuItemControlMediumCheckboxUnchecked24",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked24",
    "icon24",
    "leadingEnhancer24",
    "heart59",
    "textFrame24",
    "leadingText24",
    "typography82",
    "signedByBaseTypographyParagraphMedium70",
    "text153",
    "spacer142",
    "typography83",
    "signedByBaseTypographyParagraphMedium71",
    "text154",
    "spacer143",
    "typography84",
    "signedByBaseTypographyParagraphMedium72",
    "spacer144",
    "trailingEnhancer24",
    "heart60",
    "scrollBar6",
    "model6",
    "buttons6",
    "button21",
    "frame1073713929",
    "frame1073713935",
    "button22",
    "button23",
    "button24"
  ],
  frame1437254030: ["frame1437254030", "name12", "frame1437254031"],
  name12: ["name12"],
  frame1437254031: ["frame1437254031"],
  duplicateDispo2: ["duplicateDispo2"],
  content6: [
    "content6",
    "titre6",
    "texinput26",
    "date6",
    "label11",
    "timePicker12",
    "type6",
    "budget6",
    "comments6",
    "input17",
    "name13",
    "datePickerWeb6",
    "inputSelect6",
    "signedByBaseFieldGroupSmall6",
    "endDateCalendar6",
    "inputElementTextField11",
    "signedByBaseInputElementTextFieldSmallEnabled6",
    "leadingArtworkContainer21",
    "leadingArtwork11",
    "leadingLabelContainer21",
    "leadingLabel21",
    "signedByBaseTypographyLabelSmall11",
    "text130",
    "spacer121",
    "inputElementContentText21",
    "signedByBaseInputElementContentTextSmallOff6",
    "text131",
    "trailingLabelEnhancer21",
    "trailingLabel21",
    "signedByBaseTypographyLabelSmall12",
    "text132",
    "spacer122",
    "trailingArtworkContainer21",
    "trailingArtwork21",
    "calendar6",
    "signedByBaseInputElementSelectXSmallWebSingleDefaultEnabled6",
    "leadingArtworkContainer22",
    "text133",
    "leadingLabelContainer22",
    "leadingLabel22",
    "signedByBaseTypographyLabelXSmall11",
    "text134",
    "spacer123",
    "inputElementContentText22",
    "signedByBaseInputElementContentTextXSmallWebOff6",
    "text135",
    "trailingLabelEnhancer22",
    "trailingLabel22",
    "signedByBaseTypographyLabelXSmall12",
    "text136",
    "spacer124",
    "trailingArtworkContainer22",
    "trailingArtwork22",
    "selectIndicatorContainer11",
    "chevronIcon11",
    "inputElementHint11",
    "heart51",
    "hint11",
    "signedByBaseTypographyParagraphSmall11",
    "text137",
    "spacer125",
    "inputElementSelect6",
    "signedByBaseInputElementSelectMediumSingleDefaultActive6",
    "selectFrame6",
    "leadingArtworkContainer23",
    "leadingArtwork12",
    "leadingLabelContainer23",
    "leadingLabel23",
    "signedByBaseTypographyLabelMedium31",
    "text138",
    "spacer126",
    "inputElementContentText23",
    "signedByBaseInputElementContentTextMediumOff11",
    "text139",
    "trailingLabelEnhancer23",
    "trailingLabel23",
    "signedByBaseTypographyLabelMedium32",
    "text140",
    "spacer127",
    "trailingArtworkContainer23",
    "trailingArtwork23",
    "selectIndicatorContainer12",
    "chevronIcon12",
    "menu6",
    "signedByBaseMenuListMedium6",
    "menuItem26",
    "signedByBaseMenuItemSearchMediumNoneEnabled6",
    "searchField6",
    "signedByBaseSearchFieldMediumEnabled6",
    "inputElementLabel6",
    "signedByBaseInputElementLabelMedium6",
    "typography71",
    "signedByBaseTypographyLabelMedium33",
    "text141",
    "spacer128",
    "characterCountFrame6",
    "heart52",
    "typography72",
    "signedByBaseTypographyLabelMedium34",
    "text142",
    "spacer129",
    "inputElementTextField12",
    "signedByBaseInputElementTextFieldMediumEnabled6",
    "leadingArtworkContainer24",
    "search6",
    "leadingLabelContainer24",
    "leadingLabel24",
    "signedByBaseTypographyLabelMedium35",
    "text143",
    "spacer130",
    "inputElementContentText24",
    "signedByBaseInputElementContentTextMediumOff12",
    "text144",
    "trailingLabelEnhancer24",
    "trailingLabel24",
    "signedByBaseTypographyLabelMedium36",
    "text145",
    "spacer131",
    "trailingArtworkContainer24",
    "trailingArtwork24",
    "inputElementHint12",
    "heart53",
    "hint12",
    "signedByBaseTypographyParagraphSmall12",
    "text146",
    "spacer132",
    "menuItem27",
    "signedByBaseMenuItemOptionMediumStandardEnabled21",
    "menuItemControlMediumCheckboxUnchecked21",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked21",
    "icon21",
    "leadingEnhancer21",
    "heart54",
    "textFrame21",
    "leadingText21",
    "typography73",
    "signedByBaseTypographyParagraphMedium61",
    "text147",
    "spacer133",
    "typography74",
    "signedByBaseTypographyParagraphMedium62",
    "text148",
    "spacer134",
    "typography75",
    "signedByBaseTypographyParagraphMedium63",
    "spacer135",
    "trailingEnhancer21",
    "heart55",
    "menuItem28",
    "signedByBaseMenuItemOptionMediumStandardEnabled22",
    "menuItemControlMediumCheckboxUnchecked22",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked22",
    "icon22",
    "leadingEnhancer22",
    "heart56",
    "textFrame22",
    "leadingText22",
    "typography76",
    "signedByBaseTypographyParagraphMedium64",
    "text149",
    "spacer136",
    "typography77",
    "signedByBaseTypographyParagraphMedium65",
    "text150",
    "spacer137",
    "typography78",
    "signedByBaseTypographyParagraphMedium66",
    "spacer138",
    "trailingEnhancer22",
    "checkmarkSmall6",
    "menuItem29",
    "signedByBaseMenuItemOptionMediumStandardEnabled23",
    "menuItemControlMediumCheckboxUnchecked23",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked23",
    "icon23",
    "leadingEnhancer23",
    "heart57",
    "textFrame23",
    "leadingText23",
    "typography79",
    "signedByBaseTypographyParagraphMedium67",
    "text151",
    "spacer139",
    "typography80",
    "signedByBaseTypographyParagraphMedium68",
    "text152",
    "spacer140",
    "typography81",
    "signedByBaseTypographyParagraphMedium69",
    "spacer141",
    "trailingEnhancer23",
    "heart58",
    "menuItem30",
    "signedByBaseMenuItemOptionMediumStandardEnabled24",
    "menuItemControlMediumCheckboxUnchecked24",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked24",
    "icon24",
    "leadingEnhancer24",
    "heart59",
    "textFrame24",
    "leadingText24",
    "typography82",
    "signedByBaseTypographyParagraphMedium70",
    "text153",
    "spacer142",
    "typography83",
    "signedByBaseTypographyParagraphMedium71",
    "text154",
    "spacer143",
    "typography84",
    "signedByBaseTypographyParagraphMedium72",
    "spacer144",
    "trailingEnhancer24",
    "heart60",
    "scrollBar6",
    "model6",
    "buttons6",
    "button21",
    "frame1073713929",
    "frame1073713935",
    "button22",
    "button23",
    "button24"
  ],
  titre6: ["titre6"],
  texinput26: ["texinput26"],
  date6: ["date6", "label11", "timePicker12"],
  label11: ["label11"],
  timePicker12: ["timePicker12"],
  type6: ["type6"],
  budget6: ["budget6"],
  comments6: ["comments6"],
  input17: [
    "input17",
    "name13",
    "datePickerWeb6",
    "inputSelect6",
    "signedByBaseFieldGroupSmall6",
    "endDateCalendar6",
    "inputElementTextField11",
    "signedByBaseInputElementTextFieldSmallEnabled6",
    "leadingArtworkContainer21",
    "leadingArtwork11",
    "leadingLabelContainer21",
    "leadingLabel21",
    "signedByBaseTypographyLabelSmall11",
    "text130",
    "spacer121",
    "inputElementContentText21",
    "signedByBaseInputElementContentTextSmallOff6",
    "text131",
    "trailingLabelEnhancer21",
    "trailingLabel21",
    "signedByBaseTypographyLabelSmall12",
    "text132",
    "spacer122",
    "trailingArtworkContainer21",
    "trailingArtwork21",
    "calendar6",
    "signedByBaseInputElementSelectXSmallWebSingleDefaultEnabled6",
    "leadingArtworkContainer22",
    "text133",
    "leadingLabelContainer22",
    "leadingLabel22",
    "signedByBaseTypographyLabelXSmall11",
    "text134",
    "spacer123",
    "inputElementContentText22",
    "signedByBaseInputElementContentTextXSmallWebOff6",
    "text135",
    "trailingLabelEnhancer22",
    "trailingLabel22",
    "signedByBaseTypographyLabelXSmall12",
    "text136",
    "spacer124",
    "trailingArtworkContainer22",
    "trailingArtwork22",
    "selectIndicatorContainer11",
    "chevronIcon11",
    "inputElementHint11",
    "heart51",
    "hint11",
    "signedByBaseTypographyParagraphSmall11",
    "text137",
    "spacer125",
    "inputElementSelect6",
    "signedByBaseInputElementSelectMediumSingleDefaultActive6",
    "selectFrame6",
    "leadingArtworkContainer23",
    "leadingArtwork12",
    "leadingLabelContainer23",
    "leadingLabel23",
    "signedByBaseTypographyLabelMedium31",
    "text138",
    "spacer126",
    "inputElementContentText23",
    "signedByBaseInputElementContentTextMediumOff11",
    "text139",
    "trailingLabelEnhancer23",
    "trailingLabel23",
    "signedByBaseTypographyLabelMedium32",
    "text140",
    "spacer127",
    "trailingArtworkContainer23",
    "trailingArtwork23",
    "selectIndicatorContainer12",
    "chevronIcon12",
    "menu6",
    "signedByBaseMenuListMedium6",
    "menuItem26",
    "signedByBaseMenuItemSearchMediumNoneEnabled6",
    "searchField6",
    "signedByBaseSearchFieldMediumEnabled6",
    "inputElementLabel6",
    "signedByBaseInputElementLabelMedium6",
    "typography71",
    "signedByBaseTypographyLabelMedium33",
    "text141",
    "spacer128",
    "characterCountFrame6",
    "heart52",
    "typography72",
    "signedByBaseTypographyLabelMedium34",
    "text142",
    "spacer129",
    "inputElementTextField12",
    "signedByBaseInputElementTextFieldMediumEnabled6",
    "leadingArtworkContainer24",
    "search6",
    "leadingLabelContainer24",
    "leadingLabel24",
    "signedByBaseTypographyLabelMedium35",
    "text143",
    "spacer130",
    "inputElementContentText24",
    "signedByBaseInputElementContentTextMediumOff12",
    "text144",
    "trailingLabelEnhancer24",
    "trailingLabel24",
    "signedByBaseTypographyLabelMedium36",
    "text145",
    "spacer131",
    "trailingArtworkContainer24",
    "trailingArtwork24",
    "inputElementHint12",
    "heart53",
    "hint12",
    "signedByBaseTypographyParagraphSmall12",
    "text146",
    "spacer132",
    "menuItem27",
    "signedByBaseMenuItemOptionMediumStandardEnabled21",
    "menuItemControlMediumCheckboxUnchecked21",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked21",
    "icon21",
    "leadingEnhancer21",
    "heart54",
    "textFrame21",
    "leadingText21",
    "typography73",
    "signedByBaseTypographyParagraphMedium61",
    "text147",
    "spacer133",
    "typography74",
    "signedByBaseTypographyParagraphMedium62",
    "text148",
    "spacer134",
    "typography75",
    "signedByBaseTypographyParagraphMedium63",
    "spacer135",
    "trailingEnhancer21",
    "heart55",
    "menuItem28",
    "signedByBaseMenuItemOptionMediumStandardEnabled22",
    "menuItemControlMediumCheckboxUnchecked22",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked22",
    "icon22",
    "leadingEnhancer22",
    "heart56",
    "textFrame22",
    "leadingText22",
    "typography76",
    "signedByBaseTypographyParagraphMedium64",
    "text149",
    "spacer136",
    "typography77",
    "signedByBaseTypographyParagraphMedium65",
    "text150",
    "spacer137",
    "typography78",
    "signedByBaseTypographyParagraphMedium66",
    "spacer138",
    "trailingEnhancer22",
    "checkmarkSmall6",
    "menuItem29",
    "signedByBaseMenuItemOptionMediumStandardEnabled23",
    "menuItemControlMediumCheckboxUnchecked23",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked23",
    "icon23",
    "leadingEnhancer23",
    "heart57",
    "textFrame23",
    "leadingText23",
    "typography79",
    "signedByBaseTypographyParagraphMedium67",
    "text151",
    "spacer139",
    "typography80",
    "signedByBaseTypographyParagraphMedium68",
    "text152",
    "spacer140",
    "typography81",
    "signedByBaseTypographyParagraphMedium69",
    "spacer141",
    "trailingEnhancer23",
    "heart58",
    "menuItem30",
    "signedByBaseMenuItemOptionMediumStandardEnabled24",
    "menuItemControlMediumCheckboxUnchecked24",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked24",
    "icon24",
    "leadingEnhancer24",
    "heart59",
    "textFrame24",
    "leadingText24",
    "typography82",
    "signedByBaseTypographyParagraphMedium70",
    "text153",
    "spacer142",
    "typography83",
    "signedByBaseTypographyParagraphMedium71",
    "text154",
    "spacer143",
    "typography84",
    "signedByBaseTypographyParagraphMedium72",
    "spacer144",
    "trailingEnhancer24",
    "heart60",
    "scrollBar6"
  ],
  name13: ["name13"],
  datePickerWeb6: [
    "datePickerWeb6",
    "inputSelect6",
    "signedByBaseFieldGroupSmall6",
    "endDateCalendar6",
    "inputElementTextField11",
    "signedByBaseInputElementTextFieldSmallEnabled6",
    "leadingArtworkContainer21",
    "leadingArtwork11",
    "leadingLabelContainer21",
    "leadingLabel21",
    "signedByBaseTypographyLabelSmall11",
    "text130",
    "spacer121",
    "inputElementContentText21",
    "signedByBaseInputElementContentTextSmallOff6",
    "text131",
    "trailingLabelEnhancer21",
    "trailingLabel21",
    "signedByBaseTypographyLabelSmall12",
    "text132",
    "spacer122",
    "trailingArtworkContainer21",
    "trailingArtwork21",
    "calendar6",
    "signedByBaseInputElementSelectXSmallWebSingleDefaultEnabled6",
    "leadingArtworkContainer22",
    "text133",
    "leadingLabelContainer22",
    "leadingLabel22",
    "signedByBaseTypographyLabelXSmall11",
    "text134",
    "spacer123",
    "inputElementContentText22",
    "signedByBaseInputElementContentTextXSmallWebOff6",
    "text135",
    "trailingLabelEnhancer22",
    "trailingLabel22",
    "signedByBaseTypographyLabelXSmall12",
    "text136",
    "spacer124",
    "trailingArtworkContainer22",
    "trailingArtwork22",
    "selectIndicatorContainer11",
    "chevronIcon11",
    "inputElementHint11",
    "heart51",
    "hint11",
    "signedByBaseTypographyParagraphSmall11",
    "text137",
    "spacer125"
  ],
  inputSelect6: [
    "inputSelect6",
    "signedByBaseFieldGroupSmall6",
    "endDateCalendar6",
    "inputElementTextField11",
    "signedByBaseInputElementTextFieldSmallEnabled6",
    "leadingArtworkContainer21",
    "leadingArtwork11",
    "leadingLabelContainer21",
    "leadingLabel21",
    "signedByBaseTypographyLabelSmall11",
    "text130",
    "spacer121",
    "inputElementContentText21",
    "signedByBaseInputElementContentTextSmallOff6",
    "text131",
    "trailingLabelEnhancer21",
    "trailingLabel21",
    "signedByBaseTypographyLabelSmall12",
    "text132",
    "spacer122",
    "trailingArtworkContainer21",
    "trailingArtwork21",
    "calendar6",
    "signedByBaseInputElementSelectXSmallWebSingleDefaultEnabled6",
    "leadingArtworkContainer22",
    "text133",
    "leadingLabelContainer22",
    "leadingLabel22",
    "signedByBaseTypographyLabelXSmall11",
    "text134",
    "spacer123",
    "inputElementContentText22",
    "signedByBaseInputElementContentTextXSmallWebOff6",
    "text135",
    "trailingLabelEnhancer22",
    "trailingLabel22",
    "signedByBaseTypographyLabelXSmall12",
    "text136",
    "spacer124",
    "trailingArtworkContainer22",
    "trailingArtwork22",
    "selectIndicatorContainer11",
    "chevronIcon11",
    "inputElementHint11",
    "heart51",
    "hint11",
    "signedByBaseTypographyParagraphSmall11",
    "text137",
    "spacer125"
  ],
  signedByBaseFieldGroupSmall6: ["signedByBaseFieldGroupSmall6"],
  endDateCalendar6: [
    "endDateCalendar6",
    "inputElementTextField11",
    "signedByBaseInputElementTextFieldSmallEnabled6",
    "leadingArtworkContainer21",
    "leadingArtwork11",
    "leadingLabelContainer21",
    "leadingLabel21",
    "signedByBaseTypographyLabelSmall11",
    "text130",
    "spacer121",
    "inputElementContentText21",
    "signedByBaseInputElementContentTextSmallOff6",
    "text131",
    "trailingLabelEnhancer21",
    "trailingLabel21",
    "signedByBaseTypographyLabelSmall12",
    "text132",
    "spacer122",
    "trailingArtworkContainer21",
    "trailingArtwork21",
    "calendar6",
    "signedByBaseInputElementSelectXSmallWebSingleDefaultEnabled6",
    "leadingArtworkContainer22",
    "text133",
    "leadingLabelContainer22",
    "leadingLabel22",
    "signedByBaseTypographyLabelXSmall11",
    "text134",
    "spacer123",
    "inputElementContentText22",
    "signedByBaseInputElementContentTextXSmallWebOff6",
    "text135",
    "trailingLabelEnhancer22",
    "trailingLabel22",
    "signedByBaseTypographyLabelXSmall12",
    "text136",
    "spacer124",
    "trailingArtworkContainer22",
    "trailingArtwork22",
    "selectIndicatorContainer11",
    "chevronIcon11"
  ],
  inputElementTextField11: [
    "inputElementTextField11",
    "signedByBaseInputElementTextFieldSmallEnabled6",
    "leadingArtworkContainer21",
    "leadingArtwork11",
    "leadingLabelContainer21",
    "leadingLabel21",
    "signedByBaseTypographyLabelSmall11",
    "text130",
    "spacer121",
    "inputElementContentText21",
    "signedByBaseInputElementContentTextSmallOff6",
    "text131",
    "trailingLabelEnhancer21",
    "trailingLabel21",
    "signedByBaseTypographyLabelSmall12",
    "text132",
    "spacer122",
    "trailingArtworkContainer21",
    "trailingArtwork21"
  ],
  signedByBaseInputElementTextFieldSmallEnabled6: [
    "signedByBaseInputElementTextFieldSmallEnabled6"
  ],
  leadingArtworkContainer21: ["leadingArtworkContainer21", "leadingArtwork11"],
  leadingArtwork11: ["leadingArtwork11"],
  leadingLabelContainer21: [
    "leadingLabelContainer21",
    "leadingLabel21",
    "signedByBaseTypographyLabelSmall11",
    "text130",
    "spacer121"
  ],
  leadingLabel21: [
    "leadingLabel21",
    "signedByBaseTypographyLabelSmall11",
    "text130",
    "spacer121"
  ],
  signedByBaseTypographyLabelSmall11: ["signedByBaseTypographyLabelSmall11"],
  text130: ["text130"],
  spacer121: ["spacer121"],
  inputElementContentText21: [
    "inputElementContentText21",
    "signedByBaseInputElementContentTextSmallOff6",
    "text131"
  ],
  signedByBaseInputElementContentTextSmallOff6: [
    "signedByBaseInputElementContentTextSmallOff6"
  ],
  text131: ["text131"],
  trailingLabelEnhancer21: [
    "trailingLabelEnhancer21",
    "trailingLabel21",
    "signedByBaseTypographyLabelSmall12",
    "text132",
    "spacer122"
  ],
  trailingLabel21: [
    "trailingLabel21",
    "signedByBaseTypographyLabelSmall12",
    "text132",
    "spacer122"
  ],
  signedByBaseTypographyLabelSmall12: ["signedByBaseTypographyLabelSmall12"],
  text132: ["text132"],
  spacer122: ["spacer122"],
  trailingArtworkContainer21: [
    "trailingArtworkContainer21",
    "trailingArtwork21"
  ],
  trailingArtwork21: ["trailingArtwork21"],
  calendar6: [
    "calendar6",
    "signedByBaseInputElementSelectXSmallWebSingleDefaultEnabled6",
    "leadingArtworkContainer22",
    "text133",
    "leadingLabelContainer22",
    "leadingLabel22",
    "signedByBaseTypographyLabelXSmall11",
    "text134",
    "spacer123",
    "inputElementContentText22",
    "signedByBaseInputElementContentTextXSmallWebOff6",
    "text135",
    "trailingLabelEnhancer22",
    "trailingLabel22",
    "signedByBaseTypographyLabelXSmall12",
    "text136",
    "spacer124",
    "trailingArtworkContainer22",
    "trailingArtwork22",
    "selectIndicatorContainer11",
    "chevronIcon11"
  ],
  signedByBaseInputElementSelectXSmallWebSingleDefaultEnabled6: [
    "signedByBaseInputElementSelectXSmallWebSingleDefaultEnabled6"
  ],
  leadingArtworkContainer22: ["leadingArtworkContainer22", "text133"],
  text133: ["text133"],
  leadingLabelContainer22: [
    "leadingLabelContainer22",
    "leadingLabel22",
    "signedByBaseTypographyLabelXSmall11",
    "text134",
    "spacer123"
  ],
  leadingLabel22: [
    "leadingLabel22",
    "signedByBaseTypographyLabelXSmall11",
    "text134",
    "spacer123"
  ],
  signedByBaseTypographyLabelXSmall11: ["signedByBaseTypographyLabelXSmall11"],
  text134: ["text134"],
  spacer123: ["spacer123"],
  inputElementContentText22: [
    "inputElementContentText22",
    "signedByBaseInputElementContentTextXSmallWebOff6",
    "text135"
  ],
  signedByBaseInputElementContentTextXSmallWebOff6: [
    "signedByBaseInputElementContentTextXSmallWebOff6"
  ],
  text135: ["text135"],
  trailingLabelEnhancer22: [
    "trailingLabelEnhancer22",
    "trailingLabel22",
    "signedByBaseTypographyLabelXSmall12",
    "text136",
    "spacer124"
  ],
  trailingLabel22: [
    "trailingLabel22",
    "signedByBaseTypographyLabelXSmall12",
    "text136",
    "spacer124"
  ],
  signedByBaseTypographyLabelXSmall12: ["signedByBaseTypographyLabelXSmall12"],
  text136: ["text136"],
  spacer124: ["spacer124"],
  trailingArtworkContainer22: [
    "trailingArtworkContainer22",
    "trailingArtwork22"
  ],
  trailingArtwork22: ["trailingArtwork22"],
  selectIndicatorContainer11: ["selectIndicatorContainer11", "chevronIcon11"],
  chevronIcon11: ["chevronIcon11"],
  inputElementHint11: [
    "inputElementHint11",
    "heart51",
    "hint11",
    "signedByBaseTypographyParagraphSmall11",
    "text137",
    "spacer125"
  ],
  heart51: ["heart51"],
  hint11: [
    "hint11",
    "signedByBaseTypographyParagraphSmall11",
    "text137",
    "spacer125"
  ],
  signedByBaseTypographyParagraphSmall11: [
    "signedByBaseTypographyParagraphSmall11"
  ],
  text137: ["text137"],
  spacer125: ["spacer125"],
  inputElementSelect6: [
    "inputElementSelect6",
    "signedByBaseInputElementSelectMediumSingleDefaultActive6",
    "selectFrame6",
    "leadingArtworkContainer23",
    "leadingArtwork12",
    "leadingLabelContainer23",
    "leadingLabel23",
    "signedByBaseTypographyLabelMedium31",
    "text138",
    "spacer126",
    "inputElementContentText23",
    "signedByBaseInputElementContentTextMediumOff11",
    "text139",
    "trailingLabelEnhancer23",
    "trailingLabel23",
    "signedByBaseTypographyLabelMedium32",
    "text140",
    "spacer127",
    "trailingArtworkContainer23",
    "trailingArtwork23",
    "selectIndicatorContainer12",
    "chevronIcon12",
    "menu6",
    "signedByBaseMenuListMedium6",
    "menuItem26",
    "signedByBaseMenuItemSearchMediumNoneEnabled6",
    "searchField6",
    "signedByBaseSearchFieldMediumEnabled6",
    "inputElementLabel6",
    "signedByBaseInputElementLabelMedium6",
    "typography71",
    "signedByBaseTypographyLabelMedium33",
    "text141",
    "spacer128",
    "characterCountFrame6",
    "heart52",
    "typography72",
    "signedByBaseTypographyLabelMedium34",
    "text142",
    "spacer129",
    "inputElementTextField12",
    "signedByBaseInputElementTextFieldMediumEnabled6",
    "leadingArtworkContainer24",
    "search6",
    "leadingLabelContainer24",
    "leadingLabel24",
    "signedByBaseTypographyLabelMedium35",
    "text143",
    "spacer130",
    "inputElementContentText24",
    "signedByBaseInputElementContentTextMediumOff12",
    "text144",
    "trailingLabelEnhancer24",
    "trailingLabel24",
    "signedByBaseTypographyLabelMedium36",
    "text145",
    "spacer131",
    "trailingArtworkContainer24",
    "trailingArtwork24",
    "inputElementHint12",
    "heart53",
    "hint12",
    "signedByBaseTypographyParagraphSmall12",
    "text146",
    "spacer132",
    "menuItem27",
    "signedByBaseMenuItemOptionMediumStandardEnabled21",
    "menuItemControlMediumCheckboxUnchecked21",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked21",
    "icon21",
    "leadingEnhancer21",
    "heart54",
    "textFrame21",
    "leadingText21",
    "typography73",
    "signedByBaseTypographyParagraphMedium61",
    "text147",
    "spacer133",
    "typography74",
    "signedByBaseTypographyParagraphMedium62",
    "text148",
    "spacer134",
    "typography75",
    "signedByBaseTypographyParagraphMedium63",
    "spacer135",
    "trailingEnhancer21",
    "heart55",
    "menuItem28",
    "signedByBaseMenuItemOptionMediumStandardEnabled22",
    "menuItemControlMediumCheckboxUnchecked22",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked22",
    "icon22",
    "leadingEnhancer22",
    "heart56",
    "textFrame22",
    "leadingText22",
    "typography76",
    "signedByBaseTypographyParagraphMedium64",
    "text149",
    "spacer136",
    "typography77",
    "signedByBaseTypographyParagraphMedium65",
    "text150",
    "spacer137",
    "typography78",
    "signedByBaseTypographyParagraphMedium66",
    "spacer138",
    "trailingEnhancer22",
    "checkmarkSmall6",
    "menuItem29",
    "signedByBaseMenuItemOptionMediumStandardEnabled23",
    "menuItemControlMediumCheckboxUnchecked23",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked23",
    "icon23",
    "leadingEnhancer23",
    "heart57",
    "textFrame23",
    "leadingText23",
    "typography79",
    "signedByBaseTypographyParagraphMedium67",
    "text151",
    "spacer139",
    "typography80",
    "signedByBaseTypographyParagraphMedium68",
    "text152",
    "spacer140",
    "typography81",
    "signedByBaseTypographyParagraphMedium69",
    "spacer141",
    "trailingEnhancer23",
    "heart58",
    "menuItem30",
    "signedByBaseMenuItemOptionMediumStandardEnabled24",
    "menuItemControlMediumCheckboxUnchecked24",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked24",
    "icon24",
    "leadingEnhancer24",
    "heart59",
    "textFrame24",
    "leadingText24",
    "typography82",
    "signedByBaseTypographyParagraphMedium70",
    "text153",
    "spacer142",
    "typography83",
    "signedByBaseTypographyParagraphMedium71",
    "text154",
    "spacer143",
    "typography84",
    "signedByBaseTypographyParagraphMedium72",
    "spacer144",
    "trailingEnhancer24",
    "heart60",
    "scrollBar6"
  ],
  signedByBaseInputElementSelectMediumSingleDefaultActive6: [
    "signedByBaseInputElementSelectMediumSingleDefaultActive6"
  ],
  selectFrame6: [
    "selectFrame6",
    "leadingArtworkContainer23",
    "leadingArtwork12",
    "leadingLabelContainer23",
    "leadingLabel23",
    "signedByBaseTypographyLabelMedium31",
    "text138",
    "spacer126",
    "inputElementContentText23",
    "signedByBaseInputElementContentTextMediumOff11",
    "text139",
    "trailingLabelEnhancer23",
    "trailingLabel23",
    "signedByBaseTypographyLabelMedium32",
    "text140",
    "spacer127",
    "trailingArtworkContainer23",
    "trailingArtwork23",
    "selectIndicatorContainer12",
    "chevronIcon12"
  ],
  leadingArtworkContainer23: ["leadingArtworkContainer23", "leadingArtwork12"],
  leadingArtwork12: ["leadingArtwork12"],
  leadingLabelContainer23: [
    "leadingLabelContainer23",
    "leadingLabel23",
    "signedByBaseTypographyLabelMedium31",
    "text138",
    "spacer126"
  ],
  leadingLabel23: [
    "leadingLabel23",
    "signedByBaseTypographyLabelMedium31",
    "text138",
    "spacer126"
  ],
  signedByBaseTypographyLabelMedium31: ["signedByBaseTypographyLabelMedium31"],
  text138: ["text138"],
  spacer126: ["spacer126"],
  inputElementContentText23: [
    "inputElementContentText23",
    "signedByBaseInputElementContentTextMediumOff11",
    "text139"
  ],
  signedByBaseInputElementContentTextMediumOff11: [
    "signedByBaseInputElementContentTextMediumOff11"
  ],
  text139: ["text139"],
  trailingLabelEnhancer23: [
    "trailingLabelEnhancer23",
    "trailingLabel23",
    "signedByBaseTypographyLabelMedium32",
    "text140",
    "spacer127"
  ],
  trailingLabel23: [
    "trailingLabel23",
    "signedByBaseTypographyLabelMedium32",
    "text140",
    "spacer127"
  ],
  signedByBaseTypographyLabelMedium32: ["signedByBaseTypographyLabelMedium32"],
  text140: ["text140"],
  spacer127: ["spacer127"],
  trailingArtworkContainer23: [
    "trailingArtworkContainer23",
    "trailingArtwork23"
  ],
  trailingArtwork23: ["trailingArtwork23"],
  selectIndicatorContainer12: ["selectIndicatorContainer12", "chevronIcon12"],
  chevronIcon12: ["chevronIcon12"],
  menu6: [
    "menu6",
    "signedByBaseMenuListMedium6",
    "menuItem26",
    "signedByBaseMenuItemSearchMediumNoneEnabled6",
    "searchField6",
    "signedByBaseSearchFieldMediumEnabled6",
    "inputElementLabel6",
    "signedByBaseInputElementLabelMedium6",
    "typography71",
    "signedByBaseTypographyLabelMedium33",
    "text141",
    "spacer128",
    "characterCountFrame6",
    "heart52",
    "typography72",
    "signedByBaseTypographyLabelMedium34",
    "text142",
    "spacer129",
    "inputElementTextField12",
    "signedByBaseInputElementTextFieldMediumEnabled6",
    "leadingArtworkContainer24",
    "search6",
    "leadingLabelContainer24",
    "leadingLabel24",
    "signedByBaseTypographyLabelMedium35",
    "text143",
    "spacer130",
    "inputElementContentText24",
    "signedByBaseInputElementContentTextMediumOff12",
    "text144",
    "trailingLabelEnhancer24",
    "trailingLabel24",
    "signedByBaseTypographyLabelMedium36",
    "text145",
    "spacer131",
    "trailingArtworkContainer24",
    "trailingArtwork24",
    "inputElementHint12",
    "heart53",
    "hint12",
    "signedByBaseTypographyParagraphSmall12",
    "text146",
    "spacer132",
    "menuItem27",
    "signedByBaseMenuItemOptionMediumStandardEnabled21",
    "menuItemControlMediumCheckboxUnchecked21",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked21",
    "icon21",
    "leadingEnhancer21",
    "heart54",
    "textFrame21",
    "leadingText21",
    "typography73",
    "signedByBaseTypographyParagraphMedium61",
    "text147",
    "spacer133",
    "typography74",
    "signedByBaseTypographyParagraphMedium62",
    "text148",
    "spacer134",
    "typography75",
    "signedByBaseTypographyParagraphMedium63",
    "spacer135",
    "trailingEnhancer21",
    "heart55",
    "menuItem28",
    "signedByBaseMenuItemOptionMediumStandardEnabled22",
    "menuItemControlMediumCheckboxUnchecked22",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked22",
    "icon22",
    "leadingEnhancer22",
    "heart56",
    "textFrame22",
    "leadingText22",
    "typography76",
    "signedByBaseTypographyParagraphMedium64",
    "text149",
    "spacer136",
    "typography77",
    "signedByBaseTypographyParagraphMedium65",
    "text150",
    "spacer137",
    "typography78",
    "signedByBaseTypographyParagraphMedium66",
    "spacer138",
    "trailingEnhancer22",
    "checkmarkSmall6",
    "menuItem29",
    "signedByBaseMenuItemOptionMediumStandardEnabled23",
    "menuItemControlMediumCheckboxUnchecked23",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked23",
    "icon23",
    "leadingEnhancer23",
    "heart57",
    "textFrame23",
    "leadingText23",
    "typography79",
    "signedByBaseTypographyParagraphMedium67",
    "text151",
    "spacer139",
    "typography80",
    "signedByBaseTypographyParagraphMedium68",
    "text152",
    "spacer140",
    "typography81",
    "signedByBaseTypographyParagraphMedium69",
    "spacer141",
    "trailingEnhancer23",
    "heart58",
    "menuItem30",
    "signedByBaseMenuItemOptionMediumStandardEnabled24",
    "menuItemControlMediumCheckboxUnchecked24",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked24",
    "icon24",
    "leadingEnhancer24",
    "heart59",
    "textFrame24",
    "leadingText24",
    "typography82",
    "signedByBaseTypographyParagraphMedium70",
    "text153",
    "spacer142",
    "typography83",
    "signedByBaseTypographyParagraphMedium71",
    "text154",
    "spacer143",
    "typography84",
    "signedByBaseTypographyParagraphMedium72",
    "spacer144",
    "trailingEnhancer24",
    "heart60",
    "scrollBar6"
  ],
  signedByBaseMenuListMedium6: ["signedByBaseMenuListMedium6"],
  menuItem26: [
    "menuItem26",
    "signedByBaseMenuItemSearchMediumNoneEnabled6",
    "searchField6",
    "signedByBaseSearchFieldMediumEnabled6",
    "inputElementLabel6",
    "signedByBaseInputElementLabelMedium6",
    "typography71",
    "signedByBaseTypographyLabelMedium33",
    "text141",
    "spacer128",
    "characterCountFrame6",
    "heart52",
    "typography72",
    "signedByBaseTypographyLabelMedium34",
    "text142",
    "spacer129",
    "inputElementTextField12",
    "signedByBaseInputElementTextFieldMediumEnabled6",
    "leadingArtworkContainer24",
    "search6",
    "leadingLabelContainer24",
    "leadingLabel24",
    "signedByBaseTypographyLabelMedium35",
    "text143",
    "spacer130",
    "inputElementContentText24",
    "signedByBaseInputElementContentTextMediumOff12",
    "text144",
    "trailingLabelEnhancer24",
    "trailingLabel24",
    "signedByBaseTypographyLabelMedium36",
    "text145",
    "spacer131",
    "trailingArtworkContainer24",
    "trailingArtwork24",
    "inputElementHint12",
    "heart53",
    "hint12",
    "signedByBaseTypographyParagraphSmall12",
    "text146",
    "spacer132"
  ],
  signedByBaseMenuItemSearchMediumNoneEnabled6: [
    "signedByBaseMenuItemSearchMediumNoneEnabled6"
  ],
  searchField6: [
    "searchField6",
    "signedByBaseSearchFieldMediumEnabled6",
    "inputElementLabel6",
    "signedByBaseInputElementLabelMedium6",
    "typography71",
    "signedByBaseTypographyLabelMedium33",
    "text141",
    "spacer128",
    "characterCountFrame6",
    "heart52",
    "typography72",
    "signedByBaseTypographyLabelMedium34",
    "text142",
    "spacer129",
    "inputElementTextField12",
    "signedByBaseInputElementTextFieldMediumEnabled6",
    "leadingArtworkContainer24",
    "search6",
    "leadingLabelContainer24",
    "leadingLabel24",
    "signedByBaseTypographyLabelMedium35",
    "text143",
    "spacer130",
    "inputElementContentText24",
    "signedByBaseInputElementContentTextMediumOff12",
    "text144",
    "trailingLabelEnhancer24",
    "trailingLabel24",
    "signedByBaseTypographyLabelMedium36",
    "text145",
    "spacer131",
    "trailingArtworkContainer24",
    "trailingArtwork24",
    "inputElementHint12",
    "heart53",
    "hint12",
    "signedByBaseTypographyParagraphSmall12",
    "text146",
    "spacer132"
  ],
  signedByBaseSearchFieldMediumEnabled6: [
    "signedByBaseSearchFieldMediumEnabled6"
  ],
  inputElementLabel6: [
    "inputElementLabel6",
    "signedByBaseInputElementLabelMedium6",
    "typography71",
    "signedByBaseTypographyLabelMedium33",
    "text141",
    "spacer128",
    "characterCountFrame6",
    "heart52",
    "typography72",
    "signedByBaseTypographyLabelMedium34",
    "text142",
    "spacer129"
  ],
  signedByBaseInputElementLabelMedium6: [
    "signedByBaseInputElementLabelMedium6"
  ],
  typography71: [
    "typography71",
    "signedByBaseTypographyLabelMedium33",
    "text141",
    "spacer128"
  ],
  signedByBaseTypographyLabelMedium33: ["signedByBaseTypographyLabelMedium33"],
  text141: ["text141"],
  spacer128: ["spacer128"],
  characterCountFrame6: [
    "characterCountFrame6",
    "heart52",
    "typography72",
    "signedByBaseTypographyLabelMedium34",
    "text142",
    "spacer129"
  ],
  heart52: ["heart52"],
  typography72: [
    "typography72",
    "signedByBaseTypographyLabelMedium34",
    "text142",
    "spacer129"
  ],
  signedByBaseTypographyLabelMedium34: ["signedByBaseTypographyLabelMedium34"],
  text142: ["text142"],
  spacer129: ["spacer129"],
  inputElementTextField12: [
    "inputElementTextField12",
    "signedByBaseInputElementTextFieldMediumEnabled6",
    "leadingArtworkContainer24",
    "search6",
    "leadingLabelContainer24",
    "leadingLabel24",
    "signedByBaseTypographyLabelMedium35",
    "text143",
    "spacer130",
    "inputElementContentText24",
    "signedByBaseInputElementContentTextMediumOff12",
    "text144",
    "trailingLabelEnhancer24",
    "trailingLabel24",
    "signedByBaseTypographyLabelMedium36",
    "text145",
    "spacer131",
    "trailingArtworkContainer24",
    "trailingArtwork24"
  ],
  signedByBaseInputElementTextFieldMediumEnabled6: [
    "signedByBaseInputElementTextFieldMediumEnabled6"
  ],
  leadingArtworkContainer24: ["leadingArtworkContainer24", "search6"],
  search6: ["search6"],
  leadingLabelContainer24: [
    "leadingLabelContainer24",
    "leadingLabel24",
    "signedByBaseTypographyLabelMedium35",
    "text143",
    "spacer130"
  ],
  leadingLabel24: [
    "leadingLabel24",
    "signedByBaseTypographyLabelMedium35",
    "text143",
    "spacer130"
  ],
  signedByBaseTypographyLabelMedium35: ["signedByBaseTypographyLabelMedium35"],
  text143: ["text143"],
  spacer130: ["spacer130"],
  inputElementContentText24: [
    "inputElementContentText24",
    "signedByBaseInputElementContentTextMediumOff12",
    "text144"
  ],
  signedByBaseInputElementContentTextMediumOff12: [
    "signedByBaseInputElementContentTextMediumOff12"
  ],
  text144: ["text144"],
  trailingLabelEnhancer24: [
    "trailingLabelEnhancer24",
    "trailingLabel24",
    "signedByBaseTypographyLabelMedium36",
    "text145",
    "spacer131"
  ],
  trailingLabel24: [
    "trailingLabel24",
    "signedByBaseTypographyLabelMedium36",
    "text145",
    "spacer131"
  ],
  signedByBaseTypographyLabelMedium36: ["signedByBaseTypographyLabelMedium36"],
  text145: ["text145"],
  spacer131: ["spacer131"],
  trailingArtworkContainer24: [
    "trailingArtworkContainer24",
    "trailingArtwork24"
  ],
  trailingArtwork24: ["trailingArtwork24"],
  inputElementHint12: [
    "inputElementHint12",
    "heart53",
    "hint12",
    "signedByBaseTypographyParagraphSmall12",
    "text146",
    "spacer132"
  ],
  heart53: ["heart53"],
  hint12: [
    "hint12",
    "signedByBaseTypographyParagraphSmall12",
    "text146",
    "spacer132"
  ],
  signedByBaseTypographyParagraphSmall12: [
    "signedByBaseTypographyParagraphSmall12"
  ],
  text146: ["text146"],
  spacer132: ["spacer132"],
  menuItem27: [
    "menuItem27",
    "signedByBaseMenuItemOptionMediumStandardEnabled21",
    "menuItemControlMediumCheckboxUnchecked21",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked21",
    "icon21",
    "leadingEnhancer21",
    "heart54",
    "textFrame21",
    "leadingText21",
    "typography73",
    "signedByBaseTypographyParagraphMedium61",
    "text147",
    "spacer133",
    "typography74",
    "signedByBaseTypographyParagraphMedium62",
    "text148",
    "spacer134",
    "typography75",
    "signedByBaseTypographyParagraphMedium63",
    "spacer135",
    "trailingEnhancer21",
    "heart55"
  ],
  signedByBaseMenuItemOptionMediumStandardEnabled21: [
    "signedByBaseMenuItemOptionMediumStandardEnabled21"
  ],
  menuItemControlMediumCheckboxUnchecked21: [
    "menuItemControlMediumCheckboxUnchecked21",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked21",
    "icon21"
  ],
  signedByBaseMenuItemControlMediumCheckboxUnchecked21: [
    "signedByBaseMenuItemControlMediumCheckboxUnchecked21"
  ],
  icon21: ["icon21"],
  leadingEnhancer21: ["leadingEnhancer21", "heart54"],
  heart54: ["heart54"],
  textFrame21: [
    "textFrame21",
    "leadingText21",
    "typography73",
    "signedByBaseTypographyParagraphMedium61",
    "text147",
    "spacer133",
    "typography74",
    "signedByBaseTypographyParagraphMedium62",
    "text148",
    "spacer134",
    "typography75",
    "signedByBaseTypographyParagraphMedium63",
    "spacer135"
  ],
  leadingText21: [
    "leadingText21",
    "typography73",
    "signedByBaseTypographyParagraphMedium61",
    "text147",
    "spacer133",
    "typography74",
    "signedByBaseTypographyParagraphMedium62",
    "text148",
    "spacer134"
  ],
  typography73: [
    "typography73",
    "signedByBaseTypographyParagraphMedium61",
    "text147",
    "spacer133"
  ],
  signedByBaseTypographyParagraphMedium61: [
    "signedByBaseTypographyParagraphMedium61"
  ],
  text147: ["text147"],
  spacer133: ["spacer133"],
  typography74: [
    "typography74",
    "signedByBaseTypographyParagraphMedium62",
    "text148",
    "spacer134"
  ],
  signedByBaseTypographyParagraphMedium62: [
    "signedByBaseTypographyParagraphMedium62"
  ],
  text148: ["text148"],
  spacer134: ["spacer134"],
  typography75: [
    "typography75",
    "signedByBaseTypographyParagraphMedium63",
    "spacer135"
  ],
  signedByBaseTypographyParagraphMedium63: [
    "signedByBaseTypographyParagraphMedium63"
  ],
  spacer135: ["spacer135"],
  trailingEnhancer21: ["trailingEnhancer21", "heart55"],
  heart55: ["heart55"],
  menuItem28: [
    "menuItem28",
    "signedByBaseMenuItemOptionMediumStandardEnabled22",
    "menuItemControlMediumCheckboxUnchecked22",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked22",
    "icon22",
    "leadingEnhancer22",
    "heart56",
    "textFrame22",
    "leadingText22",
    "typography76",
    "signedByBaseTypographyParagraphMedium64",
    "text149",
    "spacer136",
    "typography77",
    "signedByBaseTypographyParagraphMedium65",
    "text150",
    "spacer137",
    "typography78",
    "signedByBaseTypographyParagraphMedium66",
    "spacer138",
    "trailingEnhancer22",
    "checkmarkSmall6"
  ],
  signedByBaseMenuItemOptionMediumStandardEnabled22: [
    "signedByBaseMenuItemOptionMediumStandardEnabled22"
  ],
  menuItemControlMediumCheckboxUnchecked22: [
    "menuItemControlMediumCheckboxUnchecked22",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked22",
    "icon22"
  ],
  signedByBaseMenuItemControlMediumCheckboxUnchecked22: [
    "signedByBaseMenuItemControlMediumCheckboxUnchecked22"
  ],
  icon22: ["icon22"],
  leadingEnhancer22: ["leadingEnhancer22", "heart56"],
  heart56: ["heart56"],
  textFrame22: [
    "textFrame22",
    "leadingText22",
    "typography76",
    "signedByBaseTypographyParagraphMedium64",
    "text149",
    "spacer136",
    "typography77",
    "signedByBaseTypographyParagraphMedium65",
    "text150",
    "spacer137",
    "typography78",
    "signedByBaseTypographyParagraphMedium66",
    "spacer138"
  ],
  leadingText22: [
    "leadingText22",
    "typography76",
    "signedByBaseTypographyParagraphMedium64",
    "text149",
    "spacer136",
    "typography77",
    "signedByBaseTypographyParagraphMedium65",
    "text150",
    "spacer137"
  ],
  typography76: [
    "typography76",
    "signedByBaseTypographyParagraphMedium64",
    "text149",
    "spacer136"
  ],
  signedByBaseTypographyParagraphMedium64: [
    "signedByBaseTypographyParagraphMedium64"
  ],
  text149: ["text149"],
  spacer136: ["spacer136"],
  typography77: [
    "typography77",
    "signedByBaseTypographyParagraphMedium65",
    "text150",
    "spacer137"
  ],
  signedByBaseTypographyParagraphMedium65: [
    "signedByBaseTypographyParagraphMedium65"
  ],
  text150: ["text150"],
  spacer137: ["spacer137"],
  typography78: [
    "typography78",
    "signedByBaseTypographyParagraphMedium66",
    "spacer138"
  ],
  signedByBaseTypographyParagraphMedium66: [
    "signedByBaseTypographyParagraphMedium66"
  ],
  spacer138: ["spacer138"],
  trailingEnhancer22: ["trailingEnhancer22", "checkmarkSmall6"],
  checkmarkSmall6: ["checkmarkSmall6"],
  menuItem29: [
    "menuItem29",
    "signedByBaseMenuItemOptionMediumStandardEnabled23",
    "menuItemControlMediumCheckboxUnchecked23",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked23",
    "icon23",
    "leadingEnhancer23",
    "heart57",
    "textFrame23",
    "leadingText23",
    "typography79",
    "signedByBaseTypographyParagraphMedium67",
    "text151",
    "spacer139",
    "typography80",
    "signedByBaseTypographyParagraphMedium68",
    "text152",
    "spacer140",
    "typography81",
    "signedByBaseTypographyParagraphMedium69",
    "spacer141",
    "trailingEnhancer23",
    "heart58"
  ],
  signedByBaseMenuItemOptionMediumStandardEnabled23: [
    "signedByBaseMenuItemOptionMediumStandardEnabled23"
  ],
  menuItemControlMediumCheckboxUnchecked23: [
    "menuItemControlMediumCheckboxUnchecked23",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked23",
    "icon23"
  ],
  signedByBaseMenuItemControlMediumCheckboxUnchecked23: [
    "signedByBaseMenuItemControlMediumCheckboxUnchecked23"
  ],
  icon23: ["icon23"],
  leadingEnhancer23: ["leadingEnhancer23", "heart57"],
  heart57: ["heart57"],
  textFrame23: [
    "textFrame23",
    "leadingText23",
    "typography79",
    "signedByBaseTypographyParagraphMedium67",
    "text151",
    "spacer139",
    "typography80",
    "signedByBaseTypographyParagraphMedium68",
    "text152",
    "spacer140",
    "typography81",
    "signedByBaseTypographyParagraphMedium69",
    "spacer141"
  ],
  leadingText23: [
    "leadingText23",
    "typography79",
    "signedByBaseTypographyParagraphMedium67",
    "text151",
    "spacer139",
    "typography80",
    "signedByBaseTypographyParagraphMedium68",
    "text152",
    "spacer140"
  ],
  typography79: [
    "typography79",
    "signedByBaseTypographyParagraphMedium67",
    "text151",
    "spacer139"
  ],
  signedByBaseTypographyParagraphMedium67: [
    "signedByBaseTypographyParagraphMedium67"
  ],
  text151: ["text151"],
  spacer139: ["spacer139"],
  typography80: [
    "typography80",
    "signedByBaseTypographyParagraphMedium68",
    "text152",
    "spacer140"
  ],
  signedByBaseTypographyParagraphMedium68: [
    "signedByBaseTypographyParagraphMedium68"
  ],
  text152: ["text152"],
  spacer140: ["spacer140"],
  typography81: [
    "typography81",
    "signedByBaseTypographyParagraphMedium69",
    "spacer141"
  ],
  signedByBaseTypographyParagraphMedium69: [
    "signedByBaseTypographyParagraphMedium69"
  ],
  spacer141: ["spacer141"],
  trailingEnhancer23: ["trailingEnhancer23", "heart58"],
  heart58: ["heart58"],
  menuItem30: [
    "menuItem30",
    "signedByBaseMenuItemOptionMediumStandardEnabled24",
    "menuItemControlMediumCheckboxUnchecked24",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked24",
    "icon24",
    "leadingEnhancer24",
    "heart59",
    "textFrame24",
    "leadingText24",
    "typography82",
    "signedByBaseTypographyParagraphMedium70",
    "text153",
    "spacer142",
    "typography83",
    "signedByBaseTypographyParagraphMedium71",
    "text154",
    "spacer143",
    "typography84",
    "signedByBaseTypographyParagraphMedium72",
    "spacer144",
    "trailingEnhancer24",
    "heart60"
  ],
  signedByBaseMenuItemOptionMediumStandardEnabled24: [
    "signedByBaseMenuItemOptionMediumStandardEnabled24"
  ],
  menuItemControlMediumCheckboxUnchecked24: [
    "menuItemControlMediumCheckboxUnchecked24",
    "signedByBaseMenuItemControlMediumCheckboxUnchecked24",
    "icon24"
  ],
  signedByBaseMenuItemControlMediumCheckboxUnchecked24: [
    "signedByBaseMenuItemControlMediumCheckboxUnchecked24"
  ],
  icon24: ["icon24"],
  leadingEnhancer24: ["leadingEnhancer24", "heart59"],
  heart59: ["heart59"],
  textFrame24: [
    "textFrame24",
    "leadingText24",
    "typography82",
    "signedByBaseTypographyParagraphMedium70",
    "text153",
    "spacer142",
    "typography83",
    "signedByBaseTypographyParagraphMedium71",
    "text154",
    "spacer143",
    "typography84",
    "signedByBaseTypographyParagraphMedium72",
    "spacer144"
  ],
  leadingText24: [
    "leadingText24",
    "typography82",
    "signedByBaseTypographyParagraphMedium70",
    "text153",
    "spacer142",
    "typography83",
    "signedByBaseTypographyParagraphMedium71",
    "text154",
    "spacer143"
  ],
  typography82: [
    "typography82",
    "signedByBaseTypographyParagraphMedium70",
    "text153",
    "spacer142"
  ],
  signedByBaseTypographyParagraphMedium70: [
    "signedByBaseTypographyParagraphMedium70"
  ],
  text153: ["text153"],
  spacer142: ["spacer142"],
  typography83: [
    "typography83",
    "signedByBaseTypographyParagraphMedium71",
    "text154",
    "spacer143"
  ],
  signedByBaseTypographyParagraphMedium71: [
    "signedByBaseTypographyParagraphMedium71"
  ],
  text154: ["text154"],
  spacer143: ["spacer143"],
  typography84: [
    "typography84",
    "signedByBaseTypographyParagraphMedium72",
    "spacer144"
  ],
  signedByBaseTypographyParagraphMedium72: [
    "signedByBaseTypographyParagraphMedium72"
  ],
  spacer144: ["spacer144"],
  trailingEnhancer24: ["trailingEnhancer24", "heart60"],
  heart60: ["heart60"],
  scrollBar6: ["scrollBar6"],
  model6: ["model6"],
  buttons6: [
    "buttons6",
    "button21",
    "frame1073713929",
    "frame1073713935",
    "button22",
    "button23",
    "button24"
  ],
  button21: ["button21"],
  frame1073713929: ["frame1073713929"],
  frame1073713935: ["frame1073713935", "button22", "button23", "button24"],
  button22: ["button22"],
  button23: ["button23"],
  button24: ["button24"],
  container: [
    "container",
    "leftMenu",
    "main",
    "header2",
    "header",
    "tabsContainer",
    "mainContainer",
    "tabButtons",
    "tabButton",
    "tabUnderline",
    "filters",
    "buttonFilter",
    "buttonAddAction",
    "buttonAddStaff",
    "buttonAddDoc",
    "tabContainers",
    "_1",
    "runsheet",
    "_2",
    "dispositif",
    "_3",
    "uploadFile",
    "frame1437254034",
    "name16",
    "frame1437254035",
    "files2",
    "upload5",
    "file"
  ],
  leftMenu: ["leftMenu"],
  main: [
    "main",
    "header2",
    "header",
    "tabsContainer",
    "mainContainer",
    "tabButtons",
    "tabButton",
    "tabUnderline",
    "filters",
    "buttonFilter",
    "buttonAddAction",
    "buttonAddStaff",
    "buttonAddDoc",
    "tabContainers",
    "_1",
    "runsheet",
    "_2",
    "dispositif",
    "_3",
    "uploadFile",
    "frame1437254034",
    "name16",
    "frame1437254035",
    "files2",
    "upload5",
    "file"
  ],
  header2: ["header2", "header"],
  header: ["header"],
  tabsContainer: [
    "tabsContainer",
    "mainContainer",
    "tabButtons",
    "tabButton",
    "tabUnderline",
    "filters",
    "buttonFilter",
    "buttonAddAction",
    "buttonAddStaff",
    "buttonAddDoc",
    "tabContainers",
    "_1",
    "runsheet",
    "_2",
    "dispositif",
    "_3",
    "uploadFile",
    "frame1437254034",
    "name16",
    "frame1437254035",
    "files2",
    "upload5",
    "file"
  ],
  mainContainer: [
    "mainContainer",
    "tabButtons",
    "tabButton",
    "tabUnderline",
    "filters",
    "buttonFilter",
    "buttonAddAction",
    "buttonAddStaff",
    "buttonAddDoc",
    "tabContainers",
    "_1",
    "runsheet",
    "_2",
    "dispositif",
    "_3",
    "uploadFile",
    "frame1437254034",
    "name16",
    "frame1437254035",
    "files2",
    "upload5",
    "file"
  ],
  tabButtons: ["tabButtons", "tabButton", "tabUnderline"],
  tabButton: ["tabButton"],
  tabUnderline: ["tabUnderline"],
  filters: [
    "filters",
    "buttonFilter",
    "buttonAddAction",
    "buttonAddStaff",
    "buttonAddDoc"
  ],
  buttonFilter: ["buttonFilter"],
  buttonAddAction: ["buttonAddAction"],
  buttonAddStaff: ["buttonAddStaff"],
  buttonAddDoc: ["buttonAddDoc"],
  tabContainers: [
    "tabContainers",
    "_1",
    "runsheet",
    "_2",
    "dispositif",
    "_3",
    "uploadFile",
    "frame1437254034",
    "name16",
    "frame1437254035",
    "files2",
    "upload5",
    "file"
  ],
  _1: ["_1", "runsheet"],
  runsheet: ["runsheet"],
  _2: ["_2", "dispositif"],
  dispositif: ["dispositif"],
  _3: [
    "_3",
    "uploadFile",
    "frame1437254034",
    "name16",
    "frame1437254035",
    "files2",
    "upload5",
    "file"
  ],
  uploadFile: [
    "uploadFile",
    "frame1437254034",
    "name16",
    "frame1437254035",
    "files2",
    "upload5"
  ],
  frame1437254034: ["frame1437254034", "name16", "frame1437254035"],
  name16: ["name16"],
  frame1437254035: ["frame1437254035"],
  files2: ["files2", "upload5"],
  upload5: ["upload5"],
  file: ["file"],
  bottomMenu: ["bottomMenu"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  (typeof PlasmicDescendants)[T][number];
type NodeDefaultElementType = {
  root: "div";
  createTask: typeof CreateTask;
  createDispo: typeof CreateDispo;
  updateDispo: typeof UpdateDispo;
  updateTask2: typeof UpdateTask;
  deleteDispo: typeof Modal;
  frame1437254026: "div";
  name8: "div";
  frame1437254027: "div";
  delteDispo: typeof FormWrapper;
  content4: "div";
  titre4: typeof TextInput;
  texinput24: typeof SitexTextInput;
  date4: "div";
  label9: "div";
  timePicker10: typeof AntdDatePicker;
  type4: typeof DropDown;
  budget4: typeof TextInput;
  comments4: typeof TextInput;
  input15: "div";
  name9: "div";
  datePickerWeb4: "div";
  inputSelect4: "div";
  signedByBaseFieldGroupSmall4: "div";
  endDateCalendar4: "div";
  inputElementTextField7: "div";
  signedByBaseInputElementTextFieldSmallEnabled4: "div";
  leadingArtworkContainer13: "div";
  leadingArtwork7: "div";
  leadingLabelContainer13: "div";
  leadingLabel13: "div";
  signedByBaseTypographyLabelSmall7: "div";
  text80: "div";
  spacer73: "div";
  inputElementContentText13: "div";
  signedByBaseInputElementContentTextSmallOff4: "div";
  text81: "div";
  trailingLabelEnhancer13: "div";
  trailingLabel13: "div";
  signedByBaseTypographyLabelSmall8: "div";
  text82: "div";
  spacer74: "div";
  trailingArtworkContainer13: "div";
  trailingArtwork13: "div";
  calendar4: "div";
  signedByBaseInputElementSelectXSmallWebSingleDefaultEnabled4: "div";
  leadingArtworkContainer14: "div";
  text83: "div";
  leadingLabelContainer14: "div";
  leadingLabel14: "div";
  signedByBaseTypographyLabelXSmall7: "div";
  text84: "div";
  spacer75: "div";
  inputElementContentText14: "div";
  signedByBaseInputElementContentTextXSmallWebOff4: "div";
  text85: "div";
  trailingLabelEnhancer14: "div";
  trailingLabel14: "div";
  signedByBaseTypographyLabelXSmall8: "div";
  text86: "div";
  spacer76: "div";
  trailingArtworkContainer14: "div";
  trailingArtwork14: "div";
  selectIndicatorContainer7: "div";
  chevronIcon7: "div";
  inputElementHint7: "div";
  heart31: "div";
  hint7: "div";
  signedByBaseTypographyParagraphSmall7: "div";
  text87: "div";
  spacer77: "div";
  inputElementSelect4: "div";
  signedByBaseInputElementSelectMediumSingleDefaultActive4: "div";
  selectFrame4: "div";
  leadingArtworkContainer15: "div";
  leadingArtwork8: "div";
  leadingLabelContainer15: "div";
  leadingLabel15: "div";
  signedByBaseTypographyLabelMedium19: "div";
  text88: "div";
  spacer78: "div";
  inputElementContentText15: "div";
  signedByBaseInputElementContentTextMediumOff7: "div";
  text89: "div";
  trailingLabelEnhancer15: "div";
  trailingLabel15: "div";
  signedByBaseTypographyLabelMedium20: "div";
  text90: "div";
  spacer79: "div";
  trailingArtworkContainer15: "div";
  trailingArtwork15: "div";
  selectIndicatorContainer8: "div";
  chevronIcon8: "div";
  menu4: "div";
  signedByBaseMenuListMedium4: "div";
  menuItem16: "div";
  signedByBaseMenuItemSearchMediumNoneEnabled4: "div";
  searchField4: "div";
  signedByBaseSearchFieldMediumEnabled4: "div";
  inputElementLabel4: "div";
  signedByBaseInputElementLabelMedium4: "div";
  typography43: "div";
  signedByBaseTypographyLabelMedium21: "div";
  text91: "div";
  spacer80: "div";
  characterCountFrame4: "div";
  heart32: "div";
  typography44: "div";
  signedByBaseTypographyLabelMedium22: "div";
  text92: "div";
  spacer81: "div";
  inputElementTextField8: "div";
  signedByBaseInputElementTextFieldMediumEnabled4: "div";
  leadingArtworkContainer16: "div";
  search4: "div";
  leadingLabelContainer16: "div";
  leadingLabel16: "div";
  signedByBaseTypographyLabelMedium23: "div";
  text93: "div";
  spacer82: "div";
  inputElementContentText16: "div";
  signedByBaseInputElementContentTextMediumOff8: "div";
  text94: "div";
  trailingLabelEnhancer16: "div";
  trailingLabel16: "div";
  signedByBaseTypographyLabelMedium24: "div";
  text95: "div";
  spacer83: "div";
  trailingArtworkContainer16: "div";
  trailingArtwork16: "div";
  inputElementHint8: "div";
  heart33: "div";
  hint8: "div";
  signedByBaseTypographyParagraphSmall8: "div";
  text96: "div";
  spacer84: "div";
  menuItem17: "div";
  signedByBaseMenuItemOptionMediumStandardEnabled13: "div";
  menuItemControlMediumCheckboxUnchecked13: "div";
  signedByBaseMenuItemControlMediumCheckboxUnchecked13: "div";
  icon13: "div";
  leadingEnhancer13: "div";
  heart34: "div";
  textFrame13: "div";
  leadingText13: "div";
  typography45: "div";
  signedByBaseTypographyParagraphMedium37: "div";
  text97: "div";
  spacer85: "div";
  typography46: "div";
  signedByBaseTypographyParagraphMedium38: "div";
  text98: "div";
  spacer86: "div";
  typography47: "div";
  signedByBaseTypographyParagraphMedium39: "div";
  spacer87: "div";
  trailingEnhancer13: "div";
  heart35: "div";
  menuItem18: "div";
  signedByBaseMenuItemOptionMediumStandardEnabled14: "div";
  menuItemControlMediumCheckboxUnchecked14: "div";
  signedByBaseMenuItemControlMediumCheckboxUnchecked14: "div";
  icon14: "div";
  leadingEnhancer14: "div";
  heart36: "div";
  textFrame14: "div";
  leadingText14: "div";
  typography48: "div";
  signedByBaseTypographyParagraphMedium40: "div";
  text99: "div";
  spacer88: "div";
  typography49: "div";
  signedByBaseTypographyParagraphMedium41: "div";
  text100: "div";
  spacer89: "div";
  typography50: "div";
  signedByBaseTypographyParagraphMedium42: "div";
  spacer90: "div";
  trailingEnhancer14: "div";
  checkmarkSmall4: "div";
  menuItem19: "div";
  signedByBaseMenuItemOptionMediumStandardEnabled15: "div";
  menuItemControlMediumCheckboxUnchecked15: "div";
  signedByBaseMenuItemControlMediumCheckboxUnchecked15: "div";
  icon15: "div";
  leadingEnhancer15: "div";
  heart37: "div";
  textFrame15: "div";
  leadingText15: "div";
  typography51: "div";
  signedByBaseTypographyParagraphMedium43: "div";
  text101: "div";
  spacer91: "div";
  typography52: "div";
  signedByBaseTypographyParagraphMedium44: "div";
  text102: "div";
  spacer92: "div";
  typography53: "div";
  signedByBaseTypographyParagraphMedium45: "div";
  spacer93: "div";
  trailingEnhancer15: "div";
  heart38: "div";
  menuItem20: "div";
  signedByBaseMenuItemOptionMediumStandardEnabled16: "div";
  menuItemControlMediumCheckboxUnchecked16: "div";
  signedByBaseMenuItemControlMediumCheckboxUnchecked16: "div";
  icon16: "div";
  leadingEnhancer16: "div";
  heart39: "div";
  textFrame16: "div";
  leadingText16: "div";
  typography54: "div";
  signedByBaseTypographyParagraphMedium46: "div";
  text103: "div";
  spacer94: "div";
  typography55: "div";
  signedByBaseTypographyParagraphMedium47: "div";
  text104: "div";
  spacer95: "div";
  typography56: "div";
  signedByBaseTypographyParagraphMedium48: "div";
  spacer96: "div";
  trailingEnhancer16: "div";
  heart40: "div";
  scrollBar4: "div";
  model4: typeof DropDown;
  buttons4: "div";
  button13: typeof Button;
  frame1073713927: "div";
  frame1073713933: "div";
  button14: typeof Button;
  button15: "div";
  button16: "div";
  deleteTaskRunsheet: typeof Modal;
  frame1437254018: "div";
  name5: "div";
  frame1437254021: "div";
  form3: typeof FormWrapper;
  content3: "div";
  titre3: typeof TextInput;
  texinput23: typeof SitexTextInput;
  date3: "div";
  label8: "div";
  timePicker9: typeof AntdDatePicker;
  type3: typeof DropDown;
  budget3: typeof TextInput;
  comments3: typeof TextInput;
  input9: "div";
  name6: "div";
  datePickerWeb3: "div";
  inputSelect3: "div";
  signedByBaseFieldGroupSmall3: "div";
  endDateCalendar3: "div";
  inputElementTextField5: "div";
  signedByBaseInputElementTextFieldSmallEnabled3: "div";
  leadingArtworkContainer9: "div";
  leadingArtwork5: "div";
  leadingLabelContainer9: "div";
  leadingLabel9: "div";
  signedByBaseTypographyLabelSmall5: "div";
  text55: "div";
  spacer49: "div";
  inputElementContentText9: "div";
  signedByBaseInputElementContentTextSmallOff3: "div";
  text56: "div";
  trailingLabelEnhancer9: "div";
  trailingLabel9: "div";
  signedByBaseTypographyLabelSmall6: "div";
  text57: "div";
  spacer50: "div";
  trailingArtworkContainer9: "div";
  trailingArtwork9: "div";
  calendar3: "div";
  signedByBaseInputElementSelectXSmallWebSingleDefaultEnabled3: "div";
  leadingArtworkContainer10: "div";
  text58: "div";
  leadingLabelContainer10: "div";
  leadingLabel10: "div";
  signedByBaseTypographyLabelXSmall5: "div";
  text59: "div";
  spacer51: "div";
  inputElementContentText10: "div";
  signedByBaseInputElementContentTextXSmallWebOff3: "div";
  text60: "div";
  trailingLabelEnhancer10: "div";
  trailingLabel10: "div";
  signedByBaseTypographyLabelXSmall6: "div";
  text61: "div";
  spacer52: "div";
  trailingArtworkContainer10: "div";
  trailingArtwork10: "div";
  selectIndicatorContainer5: "div";
  chevronIcon5: "div";
  inputElementHint5: "div";
  heart21: "div";
  hint5: "div";
  signedByBaseTypographyParagraphSmall5: "div";
  text62: "div";
  spacer53: "div";
  inputElementSelect3: "div";
  signedByBaseInputElementSelectMediumSingleDefaultActive3: "div";
  selectFrame3: "div";
  leadingArtworkContainer11: "div";
  leadingArtwork6: "div";
  leadingLabelContainer11: "div";
  leadingLabel11: "div";
  signedByBaseTypographyLabelMedium13: "div";
  text63: "div";
  spacer54: "div";
  inputElementContentText11: "div";
  signedByBaseInputElementContentTextMediumOff5: "div";
  text64: "div";
  trailingLabelEnhancer11: "div";
  trailingLabel11: "div";
  signedByBaseTypographyLabelMedium14: "div";
  text65: "div";
  spacer55: "div";
  trailingArtworkContainer11: "div";
  trailingArtwork11: "div";
  selectIndicatorContainer6: "div";
  chevronIcon6: "div";
  menu3: "div";
  signedByBaseMenuListMedium3: "div";
  menuItem11: "div";
  signedByBaseMenuItemSearchMediumNoneEnabled3: "div";
  searchField3: "div";
  signedByBaseSearchFieldMediumEnabled3: "div";
  inputElementLabel3: "div";
  signedByBaseInputElementLabelMedium3: "div";
  typography29: "div";
  signedByBaseTypographyLabelMedium15: "div";
  text66: "div";
  spacer56: "div";
  characterCountFrame3: "div";
  heart22: "div";
  typography30: "div";
  signedByBaseTypographyLabelMedium16: "div";
  text67: "div";
  spacer57: "div";
  inputElementTextField6: "div";
  signedByBaseInputElementTextFieldMediumEnabled3: "div";
  leadingArtworkContainer12: "div";
  search3: "div";
  leadingLabelContainer12: "div";
  leadingLabel12: "div";
  signedByBaseTypographyLabelMedium17: "div";
  text68: "div";
  spacer58: "div";
  inputElementContentText12: "div";
  signedByBaseInputElementContentTextMediumOff6: "div";
  text69: "div";
  trailingLabelEnhancer12: "div";
  trailingLabel12: "div";
  signedByBaseTypographyLabelMedium18: "div";
  text70: "div";
  spacer59: "div";
  trailingArtworkContainer12: "div";
  trailingArtwork12: "div";
  inputElementHint6: "div";
  heart23: "div";
  hint6: "div";
  signedByBaseTypographyParagraphSmall6: "div";
  text71: "div";
  spacer60: "div";
  menuItem12: "div";
  signedByBaseMenuItemOptionMediumStandardEnabled9: "div";
  menuItemControlMediumCheckboxUnchecked9: "div";
  signedByBaseMenuItemControlMediumCheckboxUnchecked9: "div";
  icon9: "div";
  leadingEnhancer9: "div";
  heart24: "div";
  textFrame9: "div";
  leadingText9: "div";
  typography31: "div";
  signedByBaseTypographyParagraphMedium25: "div";
  text72: "div";
  spacer61: "div";
  typography32: "div";
  signedByBaseTypographyParagraphMedium26: "div";
  text73: "div";
  spacer62: "div";
  typography33: "div";
  signedByBaseTypographyParagraphMedium27: "div";
  spacer63: "div";
  trailingEnhancer9: "div";
  heart25: "div";
  menuItem13: "div";
  signedByBaseMenuItemOptionMediumStandardEnabled10: "div";
  menuItemControlMediumCheckboxUnchecked10: "div";
  signedByBaseMenuItemControlMediumCheckboxUnchecked10: "div";
  icon10: "div";
  leadingEnhancer10: "div";
  heart26: "div";
  textFrame10: "div";
  leadingText10: "div";
  typography34: "div";
  signedByBaseTypographyParagraphMedium28: "div";
  text74: "div";
  spacer64: "div";
  typography35: "div";
  signedByBaseTypographyParagraphMedium29: "div";
  text75: "div";
  spacer65: "div";
  typography36: "div";
  signedByBaseTypographyParagraphMedium30: "div";
  spacer66: "div";
  trailingEnhancer10: "div";
  checkmarkSmall3: "div";
  menuItem14: "div";
  signedByBaseMenuItemOptionMediumStandardEnabled11: "div";
  menuItemControlMediumCheckboxUnchecked11: "div";
  signedByBaseMenuItemControlMediumCheckboxUnchecked11: "div";
  icon11: "div";
  leadingEnhancer11: "div";
  heart27: "div";
  textFrame11: "div";
  leadingText11: "div";
  typography37: "div";
  signedByBaseTypographyParagraphMedium31: "div";
  text76: "div";
  spacer67: "div";
  typography38: "div";
  signedByBaseTypographyParagraphMedium32: "div";
  text77: "div";
  spacer68: "div";
  typography39: "div";
  signedByBaseTypographyParagraphMedium33: "div";
  spacer69: "div";
  trailingEnhancer11: "div";
  heart28: "div";
  menuItem15: "div";
  signedByBaseMenuItemOptionMediumStandardEnabled12: "div";
  menuItemControlMediumCheckboxUnchecked12: "div";
  signedByBaseMenuItemControlMediumCheckboxUnchecked12: "div";
  icon12: "div";
  leadingEnhancer12: "div";
  heart29: "div";
  textFrame12: "div";
  leadingText12: "div";
  typography40: "div";
  signedByBaseTypographyParagraphMedium34: "div";
  text78: "div";
  spacer70: "div";
  typography41: "div";
  signedByBaseTypographyParagraphMedium35: "div";
  text79: "div";
  spacer71: "div";
  typography42: "div";
  signedByBaseTypographyParagraphMedium36: "div";
  spacer72: "div";
  trailingEnhancer12: "div";
  heart30: "div";
  scrollBar3: "div";
  model3: typeof DropDown;
  buttons3: "div";
  button9: typeof Button;
  frame1073713926: "div";
  frame1073713932: "div";
  button10: typeof Button;
  button11: "div";
  button12: "div";
  duplicateTaskRunsheet2: typeof Modal;
  frame1437254028: "div";
  name10: "div";
  frame1437254029: "div";
  duplicateRs: typeof FormWrapper;
  content5: "div";
  titre5: typeof TextInput;
  texinput25: typeof SitexTextInput;
  date5: "div";
  label10: "div";
  timePicker11: typeof AntdDatePicker;
  type5: typeof DropDown;
  budget5: typeof TextInput;
  comments5: typeof TextInput;
  input16: "div";
  name11: "div";
  datePickerWeb5: "div";
  inputSelect5: "div";
  signedByBaseFieldGroupSmall5: "div";
  endDateCalendar5: "div";
  inputElementTextField9: "div";
  signedByBaseInputElementTextFieldSmallEnabled5: "div";
  leadingArtworkContainer17: "div";
  leadingArtwork9: "div";
  leadingLabelContainer17: "div";
  leadingLabel17: "div";
  signedByBaseTypographyLabelSmall9: "div";
  text105: "div";
  spacer97: "div";
  inputElementContentText17: "div";
  signedByBaseInputElementContentTextSmallOff5: "div";
  text106: "div";
  trailingLabelEnhancer17: "div";
  trailingLabel17: "div";
  signedByBaseTypographyLabelSmall10: "div";
  text107: "div";
  spacer98: "div";
  trailingArtworkContainer17: "div";
  trailingArtwork17: "div";
  calendar5: "div";
  signedByBaseInputElementSelectXSmallWebSingleDefaultEnabled5: "div";
  leadingArtworkContainer18: "div";
  text108: "div";
  leadingLabelContainer18: "div";
  leadingLabel18: "div";
  signedByBaseTypographyLabelXSmall9: "div";
  text109: "div";
  spacer99: "div";
  inputElementContentText18: "div";
  signedByBaseInputElementContentTextXSmallWebOff5: "div";
  text110: "div";
  trailingLabelEnhancer18: "div";
  trailingLabel18: "div";
  signedByBaseTypographyLabelXSmall10: "div";
  text111: "div";
  spacer100: "div";
  trailingArtworkContainer18: "div";
  trailingArtwork18: "div";
  selectIndicatorContainer9: "div";
  chevronIcon9: "div";
  inputElementHint9: "div";
  heart41: "div";
  hint9: "div";
  signedByBaseTypographyParagraphSmall9: "div";
  text112: "div";
  spacer101: "div";
  inputElementSelect5: "div";
  signedByBaseInputElementSelectMediumSingleDefaultActive5: "div";
  selectFrame5: "div";
  leadingArtworkContainer19: "div";
  leadingArtwork10: "div";
  leadingLabelContainer19: "div";
  leadingLabel19: "div";
  signedByBaseTypographyLabelMedium25: "div";
  text113: "div";
  spacer102: "div";
  inputElementContentText19: "div";
  signedByBaseInputElementContentTextMediumOff9: "div";
  text114: "div";
  trailingLabelEnhancer19: "div";
  trailingLabel19: "div";
  signedByBaseTypographyLabelMedium26: "div";
  text115: "div";
  spacer103: "div";
  trailingArtworkContainer19: "div";
  trailingArtwork19: "div";
  selectIndicatorContainer10: "div";
  chevronIcon10: "div";
  menu5: "div";
  signedByBaseMenuListMedium5: "div";
  menuItem21: "div";
  signedByBaseMenuItemSearchMediumNoneEnabled5: "div";
  searchField5: "div";
  signedByBaseSearchFieldMediumEnabled5: "div";
  inputElementLabel5: "div";
  signedByBaseInputElementLabelMedium5: "div";
  typography57: "div";
  signedByBaseTypographyLabelMedium27: "div";
  text116: "div";
  spacer104: "div";
  characterCountFrame5: "div";
  heart42: "div";
  typography58: "div";
  signedByBaseTypographyLabelMedium28: "div";
  text117: "div";
  spacer105: "div";
  inputElementTextField10: "div";
  signedByBaseInputElementTextFieldMediumEnabled5: "div";
  leadingArtworkContainer20: "div";
  search5: "div";
  leadingLabelContainer20: "div";
  leadingLabel20: "div";
  signedByBaseTypographyLabelMedium29: "div";
  text118: "div";
  spacer106: "div";
  inputElementContentText20: "div";
  signedByBaseInputElementContentTextMediumOff10: "div";
  text119: "div";
  trailingLabelEnhancer20: "div";
  trailingLabel20: "div";
  signedByBaseTypographyLabelMedium30: "div";
  text120: "div";
  spacer107: "div";
  trailingArtworkContainer20: "div";
  trailingArtwork20: "div";
  inputElementHint10: "div";
  heart43: "div";
  hint10: "div";
  signedByBaseTypographyParagraphSmall10: "div";
  text121: "div";
  spacer108: "div";
  menuItem22: "div";
  signedByBaseMenuItemOptionMediumStandardEnabled17: "div";
  menuItemControlMediumCheckboxUnchecked17: "div";
  signedByBaseMenuItemControlMediumCheckboxUnchecked17: "div";
  icon17: "div";
  leadingEnhancer17: "div";
  heart44: "div";
  textFrame17: "div";
  leadingText17: "div";
  typography59: "div";
  signedByBaseTypographyParagraphMedium49: "div";
  text122: "div";
  spacer109: "div";
  typography60: "div";
  signedByBaseTypographyParagraphMedium50: "div";
  text123: "div";
  spacer110: "div";
  typography61: "div";
  signedByBaseTypographyParagraphMedium51: "div";
  spacer111: "div";
  trailingEnhancer17: "div";
  heart45: "div";
  menuItem23: "div";
  signedByBaseMenuItemOptionMediumStandardEnabled18: "div";
  menuItemControlMediumCheckboxUnchecked18: "div";
  signedByBaseMenuItemControlMediumCheckboxUnchecked18: "div";
  icon18: "div";
  leadingEnhancer18: "div";
  heart46: "div";
  textFrame18: "div";
  leadingText18: "div";
  typography62: "div";
  signedByBaseTypographyParagraphMedium52: "div";
  text124: "div";
  spacer112: "div";
  typography63: "div";
  signedByBaseTypographyParagraphMedium53: "div";
  text125: "div";
  spacer113: "div";
  typography64: "div";
  signedByBaseTypographyParagraphMedium54: "div";
  spacer114: "div";
  trailingEnhancer18: "div";
  checkmarkSmall5: "div";
  menuItem24: "div";
  signedByBaseMenuItemOptionMediumStandardEnabled19: "div";
  menuItemControlMediumCheckboxUnchecked19: "div";
  signedByBaseMenuItemControlMediumCheckboxUnchecked19: "div";
  icon19: "div";
  leadingEnhancer19: "div";
  heart47: "div";
  textFrame19: "div";
  leadingText19: "div";
  typography65: "div";
  signedByBaseTypographyParagraphMedium55: "div";
  text126: "div";
  spacer115: "div";
  typography66: "div";
  signedByBaseTypographyParagraphMedium56: "div";
  text127: "div";
  spacer116: "div";
  typography67: "div";
  signedByBaseTypographyParagraphMedium57: "div";
  spacer117: "div";
  trailingEnhancer19: "div";
  heart48: "div";
  menuItem25: "div";
  signedByBaseMenuItemOptionMediumStandardEnabled20: "div";
  menuItemControlMediumCheckboxUnchecked20: "div";
  signedByBaseMenuItemControlMediumCheckboxUnchecked20: "div";
  icon20: "div";
  leadingEnhancer20: "div";
  heart49: "div";
  textFrame20: "div";
  leadingText20: "div";
  typography68: "div";
  signedByBaseTypographyParagraphMedium58: "div";
  text128: "div";
  spacer118: "div";
  typography69: "div";
  signedByBaseTypographyParagraphMedium59: "div";
  text129: "div";
  spacer119: "div";
  typography70: "div";
  signedByBaseTypographyParagraphMedium60: "div";
  spacer120: "div";
  trailingEnhancer20: "div";
  heart50: "div";
  scrollBar5: "div";
  model5: typeof DropDown;
  buttons5: "div";
  button17: typeof Button;
  frame1073713928: "div";
  frame1073713934: "div";
  button18: typeof Button;
  button19: "div";
  button20: "div";
  duplicateDispo3: typeof Modal;
  frame1437254030: "div";
  name12: "div";
  frame1437254031: "div";
  duplicateDispo2: typeof FormWrapper;
  content6: "div";
  titre6: typeof TextInput;
  texinput26: typeof SitexTextInput;
  date6: "div";
  label11: "div";
  timePicker12: typeof AntdDatePicker;
  type6: typeof DropDown;
  budget6: typeof TextInput;
  comments6: typeof TextInput;
  input17: "div";
  name13: "div";
  datePickerWeb6: "div";
  inputSelect6: "div";
  signedByBaseFieldGroupSmall6: "div";
  endDateCalendar6: "div";
  inputElementTextField11: "div";
  signedByBaseInputElementTextFieldSmallEnabled6: "div";
  leadingArtworkContainer21: "div";
  leadingArtwork11: "div";
  leadingLabelContainer21: "div";
  leadingLabel21: "div";
  signedByBaseTypographyLabelSmall11: "div";
  text130: "div";
  spacer121: "div";
  inputElementContentText21: "div";
  signedByBaseInputElementContentTextSmallOff6: "div";
  text131: "div";
  trailingLabelEnhancer21: "div";
  trailingLabel21: "div";
  signedByBaseTypographyLabelSmall12: "div";
  text132: "div";
  spacer122: "div";
  trailingArtworkContainer21: "div";
  trailingArtwork21: "div";
  calendar6: "div";
  signedByBaseInputElementSelectXSmallWebSingleDefaultEnabled6: "div";
  leadingArtworkContainer22: "div";
  text133: "div";
  leadingLabelContainer22: "div";
  leadingLabel22: "div";
  signedByBaseTypographyLabelXSmall11: "div";
  text134: "div";
  spacer123: "div";
  inputElementContentText22: "div";
  signedByBaseInputElementContentTextXSmallWebOff6: "div";
  text135: "div";
  trailingLabelEnhancer22: "div";
  trailingLabel22: "div";
  signedByBaseTypographyLabelXSmall12: "div";
  text136: "div";
  spacer124: "div";
  trailingArtworkContainer22: "div";
  trailingArtwork22: "div";
  selectIndicatorContainer11: "div";
  chevronIcon11: "div";
  inputElementHint11: "div";
  heart51: "div";
  hint11: "div";
  signedByBaseTypographyParagraphSmall11: "div";
  text137: "div";
  spacer125: "div";
  inputElementSelect6: "div";
  signedByBaseInputElementSelectMediumSingleDefaultActive6: "div";
  selectFrame6: "div";
  leadingArtworkContainer23: "div";
  leadingArtwork12: "div";
  leadingLabelContainer23: "div";
  leadingLabel23: "div";
  signedByBaseTypographyLabelMedium31: "div";
  text138: "div";
  spacer126: "div";
  inputElementContentText23: "div";
  signedByBaseInputElementContentTextMediumOff11: "div";
  text139: "div";
  trailingLabelEnhancer23: "div";
  trailingLabel23: "div";
  signedByBaseTypographyLabelMedium32: "div";
  text140: "div";
  spacer127: "div";
  trailingArtworkContainer23: "div";
  trailingArtwork23: "div";
  selectIndicatorContainer12: "div";
  chevronIcon12: "div";
  menu6: "div";
  signedByBaseMenuListMedium6: "div";
  menuItem26: "div";
  signedByBaseMenuItemSearchMediumNoneEnabled6: "div";
  searchField6: "div";
  signedByBaseSearchFieldMediumEnabled6: "div";
  inputElementLabel6: "div";
  signedByBaseInputElementLabelMedium6: "div";
  typography71: "div";
  signedByBaseTypographyLabelMedium33: "div";
  text141: "div";
  spacer128: "div";
  characterCountFrame6: "div";
  heart52: "div";
  typography72: "div";
  signedByBaseTypographyLabelMedium34: "div";
  text142: "div";
  spacer129: "div";
  inputElementTextField12: "div";
  signedByBaseInputElementTextFieldMediumEnabled6: "div";
  leadingArtworkContainer24: "div";
  search6: "div";
  leadingLabelContainer24: "div";
  leadingLabel24: "div";
  signedByBaseTypographyLabelMedium35: "div";
  text143: "div";
  spacer130: "div";
  inputElementContentText24: "div";
  signedByBaseInputElementContentTextMediumOff12: "div";
  text144: "div";
  trailingLabelEnhancer24: "div";
  trailingLabel24: "div";
  signedByBaseTypographyLabelMedium36: "div";
  text145: "div";
  spacer131: "div";
  trailingArtworkContainer24: "div";
  trailingArtwork24: "div";
  inputElementHint12: "div";
  heart53: "div";
  hint12: "div";
  signedByBaseTypographyParagraphSmall12: "div";
  text146: "div";
  spacer132: "div";
  menuItem27: "div";
  signedByBaseMenuItemOptionMediumStandardEnabled21: "div";
  menuItemControlMediumCheckboxUnchecked21: "div";
  signedByBaseMenuItemControlMediumCheckboxUnchecked21: "div";
  icon21: "div";
  leadingEnhancer21: "div";
  heart54: "div";
  textFrame21: "div";
  leadingText21: "div";
  typography73: "div";
  signedByBaseTypographyParagraphMedium61: "div";
  text147: "div";
  spacer133: "div";
  typography74: "div";
  signedByBaseTypographyParagraphMedium62: "div";
  text148: "div";
  spacer134: "div";
  typography75: "div";
  signedByBaseTypographyParagraphMedium63: "div";
  spacer135: "div";
  trailingEnhancer21: "div";
  heart55: "div";
  menuItem28: "div";
  signedByBaseMenuItemOptionMediumStandardEnabled22: "div";
  menuItemControlMediumCheckboxUnchecked22: "div";
  signedByBaseMenuItemControlMediumCheckboxUnchecked22: "div";
  icon22: "div";
  leadingEnhancer22: "div";
  heart56: "div";
  textFrame22: "div";
  leadingText22: "div";
  typography76: "div";
  signedByBaseTypographyParagraphMedium64: "div";
  text149: "div";
  spacer136: "div";
  typography77: "div";
  signedByBaseTypographyParagraphMedium65: "div";
  text150: "div";
  spacer137: "div";
  typography78: "div";
  signedByBaseTypographyParagraphMedium66: "div";
  spacer138: "div";
  trailingEnhancer22: "div";
  checkmarkSmall6: "div";
  menuItem29: "div";
  signedByBaseMenuItemOptionMediumStandardEnabled23: "div";
  menuItemControlMediumCheckboxUnchecked23: "div";
  signedByBaseMenuItemControlMediumCheckboxUnchecked23: "div";
  icon23: "div";
  leadingEnhancer23: "div";
  heart57: "div";
  textFrame23: "div";
  leadingText23: "div";
  typography79: "div";
  signedByBaseTypographyParagraphMedium67: "div";
  text151: "div";
  spacer139: "div";
  typography80: "div";
  signedByBaseTypographyParagraphMedium68: "div";
  text152: "div";
  spacer140: "div";
  typography81: "div";
  signedByBaseTypographyParagraphMedium69: "div";
  spacer141: "div";
  trailingEnhancer23: "div";
  heart58: "div";
  menuItem30: "div";
  signedByBaseMenuItemOptionMediumStandardEnabled24: "div";
  menuItemControlMediumCheckboxUnchecked24: "div";
  signedByBaseMenuItemControlMediumCheckboxUnchecked24: "div";
  icon24: "div";
  leadingEnhancer24: "div";
  heart59: "div";
  textFrame24: "div";
  leadingText24: "div";
  typography82: "div";
  signedByBaseTypographyParagraphMedium70: "div";
  text153: "div";
  spacer142: "div";
  typography83: "div";
  signedByBaseTypographyParagraphMedium71: "div";
  text154: "div";
  spacer143: "div";
  typography84: "div";
  signedByBaseTypographyParagraphMedium72: "div";
  spacer144: "div";
  trailingEnhancer24: "div";
  heart60: "div";
  scrollBar6: "div";
  model6: typeof DropDown;
  buttons6: "div";
  button21: typeof Button;
  frame1073713929: "div";
  frame1073713935: "div";
  button22: typeof Button;
  button23: "div";
  button24: "div";
  container: "div";
  leftMenu: typeof LeftMenu;
  main: "div";
  header2: "div";
  header: typeof Header;
  tabsContainer: typeof TabsContainer;
  mainContainer: "div";
  tabButtons: "div";
  tabButton: typeof TabButton;
  tabUnderline: typeof TabUnderline;
  filters: "div";
  buttonFilter: typeof Button;
  buttonAddAction: typeof Button;
  buttonAddStaff: typeof Button;
  buttonAddDoc: typeof Button;
  tabContainers: "div";
  _1: typeof TabContent;
  runsheet: "div";
  _2: typeof TabContent;
  dispositif: "div";
  _3: typeof TabContent;
  uploadFile: typeof Modal;
  frame1437254034: "div";
  name16: "div";
  frame1437254035: "div";
  files2: "div";
  upload5: typeof UploadWrapper;
  file: typeof File;
  bottomMenu: typeof BottomMenu;
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicModele__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicModele__VariantsArgs;
    args?: PlasmicModele__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicModele__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    // Specify args directly as props
    Omit<PlasmicModele__ArgsType, ReservedPropsType> &
    // Specify overrides for each element directly as props
    Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    // Specify props for the root element
    Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: PlasmicDescendants[nodeName],
          internalArgPropNames: PlasmicModele__ArgProps,
          internalVariantPropNames: PlasmicModele__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicModele__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicModele";
  } else {
    func.displayName = `PlasmicModele.${nodeName}`;
  }
  return func;
}

export const PlasmicModele = Object.assign(
  // Top-level PlasmicModele renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    createTask: makeNodeComponent("createTask"),
    createDispo: makeNodeComponent("createDispo"),
    updateDispo: makeNodeComponent("updateDispo"),
    updateTask2: makeNodeComponent("updateTask2"),
    deleteDispo: makeNodeComponent("deleteDispo"),
    frame1437254026: makeNodeComponent("frame1437254026"),
    name8: makeNodeComponent("name8"),
    frame1437254027: makeNodeComponent("frame1437254027"),
    delteDispo: makeNodeComponent("delteDispo"),
    content4: makeNodeComponent("content4"),
    titre4: makeNodeComponent("titre4"),
    texinput24: makeNodeComponent("texinput24"),
    date4: makeNodeComponent("date4"),
    label9: makeNodeComponent("label9"),
    timePicker10: makeNodeComponent("timePicker10"),
    type4: makeNodeComponent("type4"),
    budget4: makeNodeComponent("budget4"),
    comments4: makeNodeComponent("comments4"),
    input15: makeNodeComponent("input15"),
    name9: makeNodeComponent("name9"),
    datePickerWeb4: makeNodeComponent("datePickerWeb4"),
    inputSelect4: makeNodeComponent("inputSelect4"),
    signedByBaseFieldGroupSmall4: makeNodeComponent(
      "signedByBaseFieldGroupSmall4"
    ),
    endDateCalendar4: makeNodeComponent("endDateCalendar4"),
    inputElementTextField7: makeNodeComponent("inputElementTextField7"),
    signedByBaseInputElementTextFieldSmallEnabled4: makeNodeComponent(
      "signedByBaseInputElementTextFieldSmallEnabled4"
    ),
    leadingArtworkContainer13: makeNodeComponent("leadingArtworkContainer13"),
    leadingArtwork7: makeNodeComponent("leadingArtwork7"),
    leadingLabelContainer13: makeNodeComponent("leadingLabelContainer13"),
    leadingLabel13: makeNodeComponent("leadingLabel13"),
    signedByBaseTypographyLabelSmall7: makeNodeComponent(
      "signedByBaseTypographyLabelSmall7"
    ),
    text80: makeNodeComponent("text80"),
    spacer73: makeNodeComponent("spacer73"),
    inputElementContentText13: makeNodeComponent("inputElementContentText13"),
    signedByBaseInputElementContentTextSmallOff4: makeNodeComponent(
      "signedByBaseInputElementContentTextSmallOff4"
    ),
    text81: makeNodeComponent("text81"),
    trailingLabelEnhancer13: makeNodeComponent("trailingLabelEnhancer13"),
    trailingLabel13: makeNodeComponent("trailingLabel13"),
    signedByBaseTypographyLabelSmall8: makeNodeComponent(
      "signedByBaseTypographyLabelSmall8"
    ),
    text82: makeNodeComponent("text82"),
    spacer74: makeNodeComponent("spacer74"),
    trailingArtworkContainer13: makeNodeComponent("trailingArtworkContainer13"),
    trailingArtwork13: makeNodeComponent("trailingArtwork13"),
    calendar4: makeNodeComponent("calendar4"),
    signedByBaseInputElementSelectXSmallWebSingleDefaultEnabled4:
      makeNodeComponent(
        "signedByBaseInputElementSelectXSmallWebSingleDefaultEnabled4"
      ),
    leadingArtworkContainer14: makeNodeComponent("leadingArtworkContainer14"),
    text83: makeNodeComponent("text83"),
    leadingLabelContainer14: makeNodeComponent("leadingLabelContainer14"),
    leadingLabel14: makeNodeComponent("leadingLabel14"),
    signedByBaseTypographyLabelXSmall7: makeNodeComponent(
      "signedByBaseTypographyLabelXSmall7"
    ),
    text84: makeNodeComponent("text84"),
    spacer75: makeNodeComponent("spacer75"),
    inputElementContentText14: makeNodeComponent("inputElementContentText14"),
    signedByBaseInputElementContentTextXSmallWebOff4: makeNodeComponent(
      "signedByBaseInputElementContentTextXSmallWebOff4"
    ),
    text85: makeNodeComponent("text85"),
    trailingLabelEnhancer14: makeNodeComponent("trailingLabelEnhancer14"),
    trailingLabel14: makeNodeComponent("trailingLabel14"),
    signedByBaseTypographyLabelXSmall8: makeNodeComponent(
      "signedByBaseTypographyLabelXSmall8"
    ),
    text86: makeNodeComponent("text86"),
    spacer76: makeNodeComponent("spacer76"),
    trailingArtworkContainer14: makeNodeComponent("trailingArtworkContainer14"),
    trailingArtwork14: makeNodeComponent("trailingArtwork14"),
    selectIndicatorContainer7: makeNodeComponent("selectIndicatorContainer7"),
    chevronIcon7: makeNodeComponent("chevronIcon7"),
    inputElementHint7: makeNodeComponent("inputElementHint7"),
    heart31: makeNodeComponent("heart31"),
    hint7: makeNodeComponent("hint7"),
    signedByBaseTypographyParagraphSmall7: makeNodeComponent(
      "signedByBaseTypographyParagraphSmall7"
    ),
    text87: makeNodeComponent("text87"),
    spacer77: makeNodeComponent("spacer77"),
    inputElementSelect4: makeNodeComponent("inputElementSelect4"),
    signedByBaseInputElementSelectMediumSingleDefaultActive4: makeNodeComponent(
      "signedByBaseInputElementSelectMediumSingleDefaultActive4"
    ),
    selectFrame4: makeNodeComponent("selectFrame4"),
    leadingArtworkContainer15: makeNodeComponent("leadingArtworkContainer15"),
    leadingArtwork8: makeNodeComponent("leadingArtwork8"),
    leadingLabelContainer15: makeNodeComponent("leadingLabelContainer15"),
    leadingLabel15: makeNodeComponent("leadingLabel15"),
    signedByBaseTypographyLabelMedium19: makeNodeComponent(
      "signedByBaseTypographyLabelMedium19"
    ),
    text88: makeNodeComponent("text88"),
    spacer78: makeNodeComponent("spacer78"),
    inputElementContentText15: makeNodeComponent("inputElementContentText15"),
    signedByBaseInputElementContentTextMediumOff7: makeNodeComponent(
      "signedByBaseInputElementContentTextMediumOff7"
    ),
    text89: makeNodeComponent("text89"),
    trailingLabelEnhancer15: makeNodeComponent("trailingLabelEnhancer15"),
    trailingLabel15: makeNodeComponent("trailingLabel15"),
    signedByBaseTypographyLabelMedium20: makeNodeComponent(
      "signedByBaseTypographyLabelMedium20"
    ),
    text90: makeNodeComponent("text90"),
    spacer79: makeNodeComponent("spacer79"),
    trailingArtworkContainer15: makeNodeComponent("trailingArtworkContainer15"),
    trailingArtwork15: makeNodeComponent("trailingArtwork15"),
    selectIndicatorContainer8: makeNodeComponent("selectIndicatorContainer8"),
    chevronIcon8: makeNodeComponent("chevronIcon8"),
    menu4: makeNodeComponent("menu4"),
    signedByBaseMenuListMedium4: makeNodeComponent(
      "signedByBaseMenuListMedium4"
    ),
    menuItem16: makeNodeComponent("menuItem16"),
    signedByBaseMenuItemSearchMediumNoneEnabled4: makeNodeComponent(
      "signedByBaseMenuItemSearchMediumNoneEnabled4"
    ),
    searchField4: makeNodeComponent("searchField4"),
    signedByBaseSearchFieldMediumEnabled4: makeNodeComponent(
      "signedByBaseSearchFieldMediumEnabled4"
    ),
    inputElementLabel4: makeNodeComponent("inputElementLabel4"),
    signedByBaseInputElementLabelMedium4: makeNodeComponent(
      "signedByBaseInputElementLabelMedium4"
    ),
    typography43: makeNodeComponent("typography43"),
    signedByBaseTypographyLabelMedium21: makeNodeComponent(
      "signedByBaseTypographyLabelMedium21"
    ),
    text91: makeNodeComponent("text91"),
    spacer80: makeNodeComponent("spacer80"),
    characterCountFrame4: makeNodeComponent("characterCountFrame4"),
    heart32: makeNodeComponent("heart32"),
    typography44: makeNodeComponent("typography44"),
    signedByBaseTypographyLabelMedium22: makeNodeComponent(
      "signedByBaseTypographyLabelMedium22"
    ),
    text92: makeNodeComponent("text92"),
    spacer81: makeNodeComponent("spacer81"),
    inputElementTextField8: makeNodeComponent("inputElementTextField8"),
    signedByBaseInputElementTextFieldMediumEnabled4: makeNodeComponent(
      "signedByBaseInputElementTextFieldMediumEnabled4"
    ),
    leadingArtworkContainer16: makeNodeComponent("leadingArtworkContainer16"),
    search4: makeNodeComponent("search4"),
    leadingLabelContainer16: makeNodeComponent("leadingLabelContainer16"),
    leadingLabel16: makeNodeComponent("leadingLabel16"),
    signedByBaseTypographyLabelMedium23: makeNodeComponent(
      "signedByBaseTypographyLabelMedium23"
    ),
    text93: makeNodeComponent("text93"),
    spacer82: makeNodeComponent("spacer82"),
    inputElementContentText16: makeNodeComponent("inputElementContentText16"),
    signedByBaseInputElementContentTextMediumOff8: makeNodeComponent(
      "signedByBaseInputElementContentTextMediumOff8"
    ),
    text94: makeNodeComponent("text94"),
    trailingLabelEnhancer16: makeNodeComponent("trailingLabelEnhancer16"),
    trailingLabel16: makeNodeComponent("trailingLabel16"),
    signedByBaseTypographyLabelMedium24: makeNodeComponent(
      "signedByBaseTypographyLabelMedium24"
    ),
    text95: makeNodeComponent("text95"),
    spacer83: makeNodeComponent("spacer83"),
    trailingArtworkContainer16: makeNodeComponent("trailingArtworkContainer16"),
    trailingArtwork16: makeNodeComponent("trailingArtwork16"),
    inputElementHint8: makeNodeComponent("inputElementHint8"),
    heart33: makeNodeComponent("heart33"),
    hint8: makeNodeComponent("hint8"),
    signedByBaseTypographyParagraphSmall8: makeNodeComponent(
      "signedByBaseTypographyParagraphSmall8"
    ),
    text96: makeNodeComponent("text96"),
    spacer84: makeNodeComponent("spacer84"),
    menuItem17: makeNodeComponent("menuItem17"),
    signedByBaseMenuItemOptionMediumStandardEnabled13: makeNodeComponent(
      "signedByBaseMenuItemOptionMediumStandardEnabled13"
    ),
    menuItemControlMediumCheckboxUnchecked13: makeNodeComponent(
      "menuItemControlMediumCheckboxUnchecked13"
    ),
    signedByBaseMenuItemControlMediumCheckboxUnchecked13: makeNodeComponent(
      "signedByBaseMenuItemControlMediumCheckboxUnchecked13"
    ),
    icon13: makeNodeComponent("icon13"),
    leadingEnhancer13: makeNodeComponent("leadingEnhancer13"),
    heart34: makeNodeComponent("heart34"),
    textFrame13: makeNodeComponent("textFrame13"),
    leadingText13: makeNodeComponent("leadingText13"),
    typography45: makeNodeComponent("typography45"),
    signedByBaseTypographyParagraphMedium37: makeNodeComponent(
      "signedByBaseTypographyParagraphMedium37"
    ),
    text97: makeNodeComponent("text97"),
    spacer85: makeNodeComponent("spacer85"),
    typography46: makeNodeComponent("typography46"),
    signedByBaseTypographyParagraphMedium38: makeNodeComponent(
      "signedByBaseTypographyParagraphMedium38"
    ),
    text98: makeNodeComponent("text98"),
    spacer86: makeNodeComponent("spacer86"),
    typography47: makeNodeComponent("typography47"),
    signedByBaseTypographyParagraphMedium39: makeNodeComponent(
      "signedByBaseTypographyParagraphMedium39"
    ),
    spacer87: makeNodeComponent("spacer87"),
    trailingEnhancer13: makeNodeComponent("trailingEnhancer13"),
    heart35: makeNodeComponent("heart35"),
    menuItem18: makeNodeComponent("menuItem18"),
    signedByBaseMenuItemOptionMediumStandardEnabled14: makeNodeComponent(
      "signedByBaseMenuItemOptionMediumStandardEnabled14"
    ),
    menuItemControlMediumCheckboxUnchecked14: makeNodeComponent(
      "menuItemControlMediumCheckboxUnchecked14"
    ),
    signedByBaseMenuItemControlMediumCheckboxUnchecked14: makeNodeComponent(
      "signedByBaseMenuItemControlMediumCheckboxUnchecked14"
    ),
    icon14: makeNodeComponent("icon14"),
    leadingEnhancer14: makeNodeComponent("leadingEnhancer14"),
    heart36: makeNodeComponent("heart36"),
    textFrame14: makeNodeComponent("textFrame14"),
    leadingText14: makeNodeComponent("leadingText14"),
    typography48: makeNodeComponent("typography48"),
    signedByBaseTypographyParagraphMedium40: makeNodeComponent(
      "signedByBaseTypographyParagraphMedium40"
    ),
    text99: makeNodeComponent("text99"),
    spacer88: makeNodeComponent("spacer88"),
    typography49: makeNodeComponent("typography49"),
    signedByBaseTypographyParagraphMedium41: makeNodeComponent(
      "signedByBaseTypographyParagraphMedium41"
    ),
    text100: makeNodeComponent("text100"),
    spacer89: makeNodeComponent("spacer89"),
    typography50: makeNodeComponent("typography50"),
    signedByBaseTypographyParagraphMedium42: makeNodeComponent(
      "signedByBaseTypographyParagraphMedium42"
    ),
    spacer90: makeNodeComponent("spacer90"),
    trailingEnhancer14: makeNodeComponent("trailingEnhancer14"),
    checkmarkSmall4: makeNodeComponent("checkmarkSmall4"),
    menuItem19: makeNodeComponent("menuItem19"),
    signedByBaseMenuItemOptionMediumStandardEnabled15: makeNodeComponent(
      "signedByBaseMenuItemOptionMediumStandardEnabled15"
    ),
    menuItemControlMediumCheckboxUnchecked15: makeNodeComponent(
      "menuItemControlMediumCheckboxUnchecked15"
    ),
    signedByBaseMenuItemControlMediumCheckboxUnchecked15: makeNodeComponent(
      "signedByBaseMenuItemControlMediumCheckboxUnchecked15"
    ),
    icon15: makeNodeComponent("icon15"),
    leadingEnhancer15: makeNodeComponent("leadingEnhancer15"),
    heart37: makeNodeComponent("heart37"),
    textFrame15: makeNodeComponent("textFrame15"),
    leadingText15: makeNodeComponent("leadingText15"),
    typography51: makeNodeComponent("typography51"),
    signedByBaseTypographyParagraphMedium43: makeNodeComponent(
      "signedByBaseTypographyParagraphMedium43"
    ),
    text101: makeNodeComponent("text101"),
    spacer91: makeNodeComponent("spacer91"),
    typography52: makeNodeComponent("typography52"),
    signedByBaseTypographyParagraphMedium44: makeNodeComponent(
      "signedByBaseTypographyParagraphMedium44"
    ),
    text102: makeNodeComponent("text102"),
    spacer92: makeNodeComponent("spacer92"),
    typography53: makeNodeComponent("typography53"),
    signedByBaseTypographyParagraphMedium45: makeNodeComponent(
      "signedByBaseTypographyParagraphMedium45"
    ),
    spacer93: makeNodeComponent("spacer93"),
    trailingEnhancer15: makeNodeComponent("trailingEnhancer15"),
    heart38: makeNodeComponent("heart38"),
    menuItem20: makeNodeComponent("menuItem20"),
    signedByBaseMenuItemOptionMediumStandardEnabled16: makeNodeComponent(
      "signedByBaseMenuItemOptionMediumStandardEnabled16"
    ),
    menuItemControlMediumCheckboxUnchecked16: makeNodeComponent(
      "menuItemControlMediumCheckboxUnchecked16"
    ),
    signedByBaseMenuItemControlMediumCheckboxUnchecked16: makeNodeComponent(
      "signedByBaseMenuItemControlMediumCheckboxUnchecked16"
    ),
    icon16: makeNodeComponent("icon16"),
    leadingEnhancer16: makeNodeComponent("leadingEnhancer16"),
    heart39: makeNodeComponent("heart39"),
    textFrame16: makeNodeComponent("textFrame16"),
    leadingText16: makeNodeComponent("leadingText16"),
    typography54: makeNodeComponent("typography54"),
    signedByBaseTypographyParagraphMedium46: makeNodeComponent(
      "signedByBaseTypographyParagraphMedium46"
    ),
    text103: makeNodeComponent("text103"),
    spacer94: makeNodeComponent("spacer94"),
    typography55: makeNodeComponent("typography55"),
    signedByBaseTypographyParagraphMedium47: makeNodeComponent(
      "signedByBaseTypographyParagraphMedium47"
    ),
    text104: makeNodeComponent("text104"),
    spacer95: makeNodeComponent("spacer95"),
    typography56: makeNodeComponent("typography56"),
    signedByBaseTypographyParagraphMedium48: makeNodeComponent(
      "signedByBaseTypographyParagraphMedium48"
    ),
    spacer96: makeNodeComponent("spacer96"),
    trailingEnhancer16: makeNodeComponent("trailingEnhancer16"),
    heart40: makeNodeComponent("heart40"),
    scrollBar4: makeNodeComponent("scrollBar4"),
    model4: makeNodeComponent("model4"),
    buttons4: makeNodeComponent("buttons4"),
    button13: makeNodeComponent("button13"),
    frame1073713927: makeNodeComponent("frame1073713927"),
    frame1073713933: makeNodeComponent("frame1073713933"),
    button14: makeNodeComponent("button14"),
    button15: makeNodeComponent("button15"),
    button16: makeNodeComponent("button16"),
    deleteTaskRunsheet: makeNodeComponent("deleteTaskRunsheet"),
    frame1437254018: makeNodeComponent("frame1437254018"),
    name5: makeNodeComponent("name5"),
    frame1437254021: makeNodeComponent("frame1437254021"),
    form3: makeNodeComponent("form3"),
    content3: makeNodeComponent("content3"),
    titre3: makeNodeComponent("titre3"),
    texinput23: makeNodeComponent("texinput23"),
    date3: makeNodeComponent("date3"),
    label8: makeNodeComponent("label8"),
    timePicker9: makeNodeComponent("timePicker9"),
    type3: makeNodeComponent("type3"),
    budget3: makeNodeComponent("budget3"),
    comments3: makeNodeComponent("comments3"),
    input9: makeNodeComponent("input9"),
    name6: makeNodeComponent("name6"),
    datePickerWeb3: makeNodeComponent("datePickerWeb3"),
    inputSelect3: makeNodeComponent("inputSelect3"),
    signedByBaseFieldGroupSmall3: makeNodeComponent(
      "signedByBaseFieldGroupSmall3"
    ),
    endDateCalendar3: makeNodeComponent("endDateCalendar3"),
    inputElementTextField5: makeNodeComponent("inputElementTextField5"),
    signedByBaseInputElementTextFieldSmallEnabled3: makeNodeComponent(
      "signedByBaseInputElementTextFieldSmallEnabled3"
    ),
    leadingArtworkContainer9: makeNodeComponent("leadingArtworkContainer9"),
    leadingArtwork5: makeNodeComponent("leadingArtwork5"),
    leadingLabelContainer9: makeNodeComponent("leadingLabelContainer9"),
    leadingLabel9: makeNodeComponent("leadingLabel9"),
    signedByBaseTypographyLabelSmall5: makeNodeComponent(
      "signedByBaseTypographyLabelSmall5"
    ),
    text55: makeNodeComponent("text55"),
    spacer49: makeNodeComponent("spacer49"),
    inputElementContentText9: makeNodeComponent("inputElementContentText9"),
    signedByBaseInputElementContentTextSmallOff3: makeNodeComponent(
      "signedByBaseInputElementContentTextSmallOff3"
    ),
    text56: makeNodeComponent("text56"),
    trailingLabelEnhancer9: makeNodeComponent("trailingLabelEnhancer9"),
    trailingLabel9: makeNodeComponent("trailingLabel9"),
    signedByBaseTypographyLabelSmall6: makeNodeComponent(
      "signedByBaseTypographyLabelSmall6"
    ),
    text57: makeNodeComponent("text57"),
    spacer50: makeNodeComponent("spacer50"),
    trailingArtworkContainer9: makeNodeComponent("trailingArtworkContainer9"),
    trailingArtwork9: makeNodeComponent("trailingArtwork9"),
    calendar3: makeNodeComponent("calendar3"),
    signedByBaseInputElementSelectXSmallWebSingleDefaultEnabled3:
      makeNodeComponent(
        "signedByBaseInputElementSelectXSmallWebSingleDefaultEnabled3"
      ),
    leadingArtworkContainer10: makeNodeComponent("leadingArtworkContainer10"),
    text58: makeNodeComponent("text58"),
    leadingLabelContainer10: makeNodeComponent("leadingLabelContainer10"),
    leadingLabel10: makeNodeComponent("leadingLabel10"),
    signedByBaseTypographyLabelXSmall5: makeNodeComponent(
      "signedByBaseTypographyLabelXSmall5"
    ),
    text59: makeNodeComponent("text59"),
    spacer51: makeNodeComponent("spacer51"),
    inputElementContentText10: makeNodeComponent("inputElementContentText10"),
    signedByBaseInputElementContentTextXSmallWebOff3: makeNodeComponent(
      "signedByBaseInputElementContentTextXSmallWebOff3"
    ),
    text60: makeNodeComponent("text60"),
    trailingLabelEnhancer10: makeNodeComponent("trailingLabelEnhancer10"),
    trailingLabel10: makeNodeComponent("trailingLabel10"),
    signedByBaseTypographyLabelXSmall6: makeNodeComponent(
      "signedByBaseTypographyLabelXSmall6"
    ),
    text61: makeNodeComponent("text61"),
    spacer52: makeNodeComponent("spacer52"),
    trailingArtworkContainer10: makeNodeComponent("trailingArtworkContainer10"),
    trailingArtwork10: makeNodeComponent("trailingArtwork10"),
    selectIndicatorContainer5: makeNodeComponent("selectIndicatorContainer5"),
    chevronIcon5: makeNodeComponent("chevronIcon5"),
    inputElementHint5: makeNodeComponent("inputElementHint5"),
    heart21: makeNodeComponent("heart21"),
    hint5: makeNodeComponent("hint5"),
    signedByBaseTypographyParagraphSmall5: makeNodeComponent(
      "signedByBaseTypographyParagraphSmall5"
    ),
    text62: makeNodeComponent("text62"),
    spacer53: makeNodeComponent("spacer53"),
    inputElementSelect3: makeNodeComponent("inputElementSelect3"),
    signedByBaseInputElementSelectMediumSingleDefaultActive3: makeNodeComponent(
      "signedByBaseInputElementSelectMediumSingleDefaultActive3"
    ),
    selectFrame3: makeNodeComponent("selectFrame3"),
    leadingArtworkContainer11: makeNodeComponent("leadingArtworkContainer11"),
    leadingArtwork6: makeNodeComponent("leadingArtwork6"),
    leadingLabelContainer11: makeNodeComponent("leadingLabelContainer11"),
    leadingLabel11: makeNodeComponent("leadingLabel11"),
    signedByBaseTypographyLabelMedium13: makeNodeComponent(
      "signedByBaseTypographyLabelMedium13"
    ),
    text63: makeNodeComponent("text63"),
    spacer54: makeNodeComponent("spacer54"),
    inputElementContentText11: makeNodeComponent("inputElementContentText11"),
    signedByBaseInputElementContentTextMediumOff5: makeNodeComponent(
      "signedByBaseInputElementContentTextMediumOff5"
    ),
    text64: makeNodeComponent("text64"),
    trailingLabelEnhancer11: makeNodeComponent("trailingLabelEnhancer11"),
    trailingLabel11: makeNodeComponent("trailingLabel11"),
    signedByBaseTypographyLabelMedium14: makeNodeComponent(
      "signedByBaseTypographyLabelMedium14"
    ),
    text65: makeNodeComponent("text65"),
    spacer55: makeNodeComponent("spacer55"),
    trailingArtworkContainer11: makeNodeComponent("trailingArtworkContainer11"),
    trailingArtwork11: makeNodeComponent("trailingArtwork11"),
    selectIndicatorContainer6: makeNodeComponent("selectIndicatorContainer6"),
    chevronIcon6: makeNodeComponent("chevronIcon6"),
    menu3: makeNodeComponent("menu3"),
    signedByBaseMenuListMedium3: makeNodeComponent(
      "signedByBaseMenuListMedium3"
    ),
    menuItem11: makeNodeComponent("menuItem11"),
    signedByBaseMenuItemSearchMediumNoneEnabled3: makeNodeComponent(
      "signedByBaseMenuItemSearchMediumNoneEnabled3"
    ),
    searchField3: makeNodeComponent("searchField3"),
    signedByBaseSearchFieldMediumEnabled3: makeNodeComponent(
      "signedByBaseSearchFieldMediumEnabled3"
    ),
    inputElementLabel3: makeNodeComponent("inputElementLabel3"),
    signedByBaseInputElementLabelMedium3: makeNodeComponent(
      "signedByBaseInputElementLabelMedium3"
    ),
    typography29: makeNodeComponent("typography29"),
    signedByBaseTypographyLabelMedium15: makeNodeComponent(
      "signedByBaseTypographyLabelMedium15"
    ),
    text66: makeNodeComponent("text66"),
    spacer56: makeNodeComponent("spacer56"),
    characterCountFrame3: makeNodeComponent("characterCountFrame3"),
    heart22: makeNodeComponent("heart22"),
    typography30: makeNodeComponent("typography30"),
    signedByBaseTypographyLabelMedium16: makeNodeComponent(
      "signedByBaseTypographyLabelMedium16"
    ),
    text67: makeNodeComponent("text67"),
    spacer57: makeNodeComponent("spacer57"),
    inputElementTextField6: makeNodeComponent("inputElementTextField6"),
    signedByBaseInputElementTextFieldMediumEnabled3: makeNodeComponent(
      "signedByBaseInputElementTextFieldMediumEnabled3"
    ),
    leadingArtworkContainer12: makeNodeComponent("leadingArtworkContainer12"),
    search3: makeNodeComponent("search3"),
    leadingLabelContainer12: makeNodeComponent("leadingLabelContainer12"),
    leadingLabel12: makeNodeComponent("leadingLabel12"),
    signedByBaseTypographyLabelMedium17: makeNodeComponent(
      "signedByBaseTypographyLabelMedium17"
    ),
    text68: makeNodeComponent("text68"),
    spacer58: makeNodeComponent("spacer58"),
    inputElementContentText12: makeNodeComponent("inputElementContentText12"),
    signedByBaseInputElementContentTextMediumOff6: makeNodeComponent(
      "signedByBaseInputElementContentTextMediumOff6"
    ),
    text69: makeNodeComponent("text69"),
    trailingLabelEnhancer12: makeNodeComponent("trailingLabelEnhancer12"),
    trailingLabel12: makeNodeComponent("trailingLabel12"),
    signedByBaseTypographyLabelMedium18: makeNodeComponent(
      "signedByBaseTypographyLabelMedium18"
    ),
    text70: makeNodeComponent("text70"),
    spacer59: makeNodeComponent("spacer59"),
    trailingArtworkContainer12: makeNodeComponent("trailingArtworkContainer12"),
    trailingArtwork12: makeNodeComponent("trailingArtwork12"),
    inputElementHint6: makeNodeComponent("inputElementHint6"),
    heart23: makeNodeComponent("heart23"),
    hint6: makeNodeComponent("hint6"),
    signedByBaseTypographyParagraphSmall6: makeNodeComponent(
      "signedByBaseTypographyParagraphSmall6"
    ),
    text71: makeNodeComponent("text71"),
    spacer60: makeNodeComponent("spacer60"),
    menuItem12: makeNodeComponent("menuItem12"),
    signedByBaseMenuItemOptionMediumStandardEnabled9: makeNodeComponent(
      "signedByBaseMenuItemOptionMediumStandardEnabled9"
    ),
    menuItemControlMediumCheckboxUnchecked9: makeNodeComponent(
      "menuItemControlMediumCheckboxUnchecked9"
    ),
    signedByBaseMenuItemControlMediumCheckboxUnchecked9: makeNodeComponent(
      "signedByBaseMenuItemControlMediumCheckboxUnchecked9"
    ),
    icon9: makeNodeComponent("icon9"),
    leadingEnhancer9: makeNodeComponent("leadingEnhancer9"),
    heart24: makeNodeComponent("heart24"),
    textFrame9: makeNodeComponent("textFrame9"),
    leadingText9: makeNodeComponent("leadingText9"),
    typography31: makeNodeComponent("typography31"),
    signedByBaseTypographyParagraphMedium25: makeNodeComponent(
      "signedByBaseTypographyParagraphMedium25"
    ),
    text72: makeNodeComponent("text72"),
    spacer61: makeNodeComponent("spacer61"),
    typography32: makeNodeComponent("typography32"),
    signedByBaseTypographyParagraphMedium26: makeNodeComponent(
      "signedByBaseTypographyParagraphMedium26"
    ),
    text73: makeNodeComponent("text73"),
    spacer62: makeNodeComponent("spacer62"),
    typography33: makeNodeComponent("typography33"),
    signedByBaseTypographyParagraphMedium27: makeNodeComponent(
      "signedByBaseTypographyParagraphMedium27"
    ),
    spacer63: makeNodeComponent("spacer63"),
    trailingEnhancer9: makeNodeComponent("trailingEnhancer9"),
    heart25: makeNodeComponent("heart25"),
    menuItem13: makeNodeComponent("menuItem13"),
    signedByBaseMenuItemOptionMediumStandardEnabled10: makeNodeComponent(
      "signedByBaseMenuItemOptionMediumStandardEnabled10"
    ),
    menuItemControlMediumCheckboxUnchecked10: makeNodeComponent(
      "menuItemControlMediumCheckboxUnchecked10"
    ),
    signedByBaseMenuItemControlMediumCheckboxUnchecked10: makeNodeComponent(
      "signedByBaseMenuItemControlMediumCheckboxUnchecked10"
    ),
    icon10: makeNodeComponent("icon10"),
    leadingEnhancer10: makeNodeComponent("leadingEnhancer10"),
    heart26: makeNodeComponent("heart26"),
    textFrame10: makeNodeComponent("textFrame10"),
    leadingText10: makeNodeComponent("leadingText10"),
    typography34: makeNodeComponent("typography34"),
    signedByBaseTypographyParagraphMedium28: makeNodeComponent(
      "signedByBaseTypographyParagraphMedium28"
    ),
    text74: makeNodeComponent("text74"),
    spacer64: makeNodeComponent("spacer64"),
    typography35: makeNodeComponent("typography35"),
    signedByBaseTypographyParagraphMedium29: makeNodeComponent(
      "signedByBaseTypographyParagraphMedium29"
    ),
    text75: makeNodeComponent("text75"),
    spacer65: makeNodeComponent("spacer65"),
    typography36: makeNodeComponent("typography36"),
    signedByBaseTypographyParagraphMedium30: makeNodeComponent(
      "signedByBaseTypographyParagraphMedium30"
    ),
    spacer66: makeNodeComponent("spacer66"),
    trailingEnhancer10: makeNodeComponent("trailingEnhancer10"),
    checkmarkSmall3: makeNodeComponent("checkmarkSmall3"),
    menuItem14: makeNodeComponent("menuItem14"),
    signedByBaseMenuItemOptionMediumStandardEnabled11: makeNodeComponent(
      "signedByBaseMenuItemOptionMediumStandardEnabled11"
    ),
    menuItemControlMediumCheckboxUnchecked11: makeNodeComponent(
      "menuItemControlMediumCheckboxUnchecked11"
    ),
    signedByBaseMenuItemControlMediumCheckboxUnchecked11: makeNodeComponent(
      "signedByBaseMenuItemControlMediumCheckboxUnchecked11"
    ),
    icon11: makeNodeComponent("icon11"),
    leadingEnhancer11: makeNodeComponent("leadingEnhancer11"),
    heart27: makeNodeComponent("heart27"),
    textFrame11: makeNodeComponent("textFrame11"),
    leadingText11: makeNodeComponent("leadingText11"),
    typography37: makeNodeComponent("typography37"),
    signedByBaseTypographyParagraphMedium31: makeNodeComponent(
      "signedByBaseTypographyParagraphMedium31"
    ),
    text76: makeNodeComponent("text76"),
    spacer67: makeNodeComponent("spacer67"),
    typography38: makeNodeComponent("typography38"),
    signedByBaseTypographyParagraphMedium32: makeNodeComponent(
      "signedByBaseTypographyParagraphMedium32"
    ),
    text77: makeNodeComponent("text77"),
    spacer68: makeNodeComponent("spacer68"),
    typography39: makeNodeComponent("typography39"),
    signedByBaseTypographyParagraphMedium33: makeNodeComponent(
      "signedByBaseTypographyParagraphMedium33"
    ),
    spacer69: makeNodeComponent("spacer69"),
    trailingEnhancer11: makeNodeComponent("trailingEnhancer11"),
    heart28: makeNodeComponent("heart28"),
    menuItem15: makeNodeComponent("menuItem15"),
    signedByBaseMenuItemOptionMediumStandardEnabled12: makeNodeComponent(
      "signedByBaseMenuItemOptionMediumStandardEnabled12"
    ),
    menuItemControlMediumCheckboxUnchecked12: makeNodeComponent(
      "menuItemControlMediumCheckboxUnchecked12"
    ),
    signedByBaseMenuItemControlMediumCheckboxUnchecked12: makeNodeComponent(
      "signedByBaseMenuItemControlMediumCheckboxUnchecked12"
    ),
    icon12: makeNodeComponent("icon12"),
    leadingEnhancer12: makeNodeComponent("leadingEnhancer12"),
    heart29: makeNodeComponent("heart29"),
    textFrame12: makeNodeComponent("textFrame12"),
    leadingText12: makeNodeComponent("leadingText12"),
    typography40: makeNodeComponent("typography40"),
    signedByBaseTypographyParagraphMedium34: makeNodeComponent(
      "signedByBaseTypographyParagraphMedium34"
    ),
    text78: makeNodeComponent("text78"),
    spacer70: makeNodeComponent("spacer70"),
    typography41: makeNodeComponent("typography41"),
    signedByBaseTypographyParagraphMedium35: makeNodeComponent(
      "signedByBaseTypographyParagraphMedium35"
    ),
    text79: makeNodeComponent("text79"),
    spacer71: makeNodeComponent("spacer71"),
    typography42: makeNodeComponent("typography42"),
    signedByBaseTypographyParagraphMedium36: makeNodeComponent(
      "signedByBaseTypographyParagraphMedium36"
    ),
    spacer72: makeNodeComponent("spacer72"),
    trailingEnhancer12: makeNodeComponent("trailingEnhancer12"),
    heart30: makeNodeComponent("heart30"),
    scrollBar3: makeNodeComponent("scrollBar3"),
    model3: makeNodeComponent("model3"),
    buttons3: makeNodeComponent("buttons3"),
    button9: makeNodeComponent("button9"),
    frame1073713926: makeNodeComponent("frame1073713926"),
    frame1073713932: makeNodeComponent("frame1073713932"),
    button10: makeNodeComponent("button10"),
    button11: makeNodeComponent("button11"),
    button12: makeNodeComponent("button12"),
    duplicateTaskRunsheet2: makeNodeComponent("duplicateTaskRunsheet2"),
    frame1437254028: makeNodeComponent("frame1437254028"),
    name10: makeNodeComponent("name10"),
    frame1437254029: makeNodeComponent("frame1437254029"),
    duplicateRs: makeNodeComponent("duplicateRs"),
    content5: makeNodeComponent("content5"),
    titre5: makeNodeComponent("titre5"),
    texinput25: makeNodeComponent("texinput25"),
    date5: makeNodeComponent("date5"),
    label10: makeNodeComponent("label10"),
    timePicker11: makeNodeComponent("timePicker11"),
    type5: makeNodeComponent("type5"),
    budget5: makeNodeComponent("budget5"),
    comments5: makeNodeComponent("comments5"),
    input16: makeNodeComponent("input16"),
    name11: makeNodeComponent("name11"),
    datePickerWeb5: makeNodeComponent("datePickerWeb5"),
    inputSelect5: makeNodeComponent("inputSelect5"),
    signedByBaseFieldGroupSmall5: makeNodeComponent(
      "signedByBaseFieldGroupSmall5"
    ),
    endDateCalendar5: makeNodeComponent("endDateCalendar5"),
    inputElementTextField9: makeNodeComponent("inputElementTextField9"),
    signedByBaseInputElementTextFieldSmallEnabled5: makeNodeComponent(
      "signedByBaseInputElementTextFieldSmallEnabled5"
    ),
    leadingArtworkContainer17: makeNodeComponent("leadingArtworkContainer17"),
    leadingArtwork9: makeNodeComponent("leadingArtwork9"),
    leadingLabelContainer17: makeNodeComponent("leadingLabelContainer17"),
    leadingLabel17: makeNodeComponent("leadingLabel17"),
    signedByBaseTypographyLabelSmall9: makeNodeComponent(
      "signedByBaseTypographyLabelSmall9"
    ),
    text105: makeNodeComponent("text105"),
    spacer97: makeNodeComponent("spacer97"),
    inputElementContentText17: makeNodeComponent("inputElementContentText17"),
    signedByBaseInputElementContentTextSmallOff5: makeNodeComponent(
      "signedByBaseInputElementContentTextSmallOff5"
    ),
    text106: makeNodeComponent("text106"),
    trailingLabelEnhancer17: makeNodeComponent("trailingLabelEnhancer17"),
    trailingLabel17: makeNodeComponent("trailingLabel17"),
    signedByBaseTypographyLabelSmall10: makeNodeComponent(
      "signedByBaseTypographyLabelSmall10"
    ),
    text107: makeNodeComponent("text107"),
    spacer98: makeNodeComponent("spacer98"),
    trailingArtworkContainer17: makeNodeComponent("trailingArtworkContainer17"),
    trailingArtwork17: makeNodeComponent("trailingArtwork17"),
    calendar5: makeNodeComponent("calendar5"),
    signedByBaseInputElementSelectXSmallWebSingleDefaultEnabled5:
      makeNodeComponent(
        "signedByBaseInputElementSelectXSmallWebSingleDefaultEnabled5"
      ),
    leadingArtworkContainer18: makeNodeComponent("leadingArtworkContainer18"),
    text108: makeNodeComponent("text108"),
    leadingLabelContainer18: makeNodeComponent("leadingLabelContainer18"),
    leadingLabel18: makeNodeComponent("leadingLabel18"),
    signedByBaseTypographyLabelXSmall9: makeNodeComponent(
      "signedByBaseTypographyLabelXSmall9"
    ),
    text109: makeNodeComponent("text109"),
    spacer99: makeNodeComponent("spacer99"),
    inputElementContentText18: makeNodeComponent("inputElementContentText18"),
    signedByBaseInputElementContentTextXSmallWebOff5: makeNodeComponent(
      "signedByBaseInputElementContentTextXSmallWebOff5"
    ),
    text110: makeNodeComponent("text110"),
    trailingLabelEnhancer18: makeNodeComponent("trailingLabelEnhancer18"),
    trailingLabel18: makeNodeComponent("trailingLabel18"),
    signedByBaseTypographyLabelXSmall10: makeNodeComponent(
      "signedByBaseTypographyLabelXSmall10"
    ),
    text111: makeNodeComponent("text111"),
    spacer100: makeNodeComponent("spacer100"),
    trailingArtworkContainer18: makeNodeComponent("trailingArtworkContainer18"),
    trailingArtwork18: makeNodeComponent("trailingArtwork18"),
    selectIndicatorContainer9: makeNodeComponent("selectIndicatorContainer9"),
    chevronIcon9: makeNodeComponent("chevronIcon9"),
    inputElementHint9: makeNodeComponent("inputElementHint9"),
    heart41: makeNodeComponent("heart41"),
    hint9: makeNodeComponent("hint9"),
    signedByBaseTypographyParagraphSmall9: makeNodeComponent(
      "signedByBaseTypographyParagraphSmall9"
    ),
    text112: makeNodeComponent("text112"),
    spacer101: makeNodeComponent("spacer101"),
    inputElementSelect5: makeNodeComponent("inputElementSelect5"),
    signedByBaseInputElementSelectMediumSingleDefaultActive5: makeNodeComponent(
      "signedByBaseInputElementSelectMediumSingleDefaultActive5"
    ),
    selectFrame5: makeNodeComponent("selectFrame5"),
    leadingArtworkContainer19: makeNodeComponent("leadingArtworkContainer19"),
    leadingArtwork10: makeNodeComponent("leadingArtwork10"),
    leadingLabelContainer19: makeNodeComponent("leadingLabelContainer19"),
    leadingLabel19: makeNodeComponent("leadingLabel19"),
    signedByBaseTypographyLabelMedium25: makeNodeComponent(
      "signedByBaseTypographyLabelMedium25"
    ),
    text113: makeNodeComponent("text113"),
    spacer102: makeNodeComponent("spacer102"),
    inputElementContentText19: makeNodeComponent("inputElementContentText19"),
    signedByBaseInputElementContentTextMediumOff9: makeNodeComponent(
      "signedByBaseInputElementContentTextMediumOff9"
    ),
    text114: makeNodeComponent("text114"),
    trailingLabelEnhancer19: makeNodeComponent("trailingLabelEnhancer19"),
    trailingLabel19: makeNodeComponent("trailingLabel19"),
    signedByBaseTypographyLabelMedium26: makeNodeComponent(
      "signedByBaseTypographyLabelMedium26"
    ),
    text115: makeNodeComponent("text115"),
    spacer103: makeNodeComponent("spacer103"),
    trailingArtworkContainer19: makeNodeComponent("trailingArtworkContainer19"),
    trailingArtwork19: makeNodeComponent("trailingArtwork19"),
    selectIndicatorContainer10: makeNodeComponent("selectIndicatorContainer10"),
    chevronIcon10: makeNodeComponent("chevronIcon10"),
    menu5: makeNodeComponent("menu5"),
    signedByBaseMenuListMedium5: makeNodeComponent(
      "signedByBaseMenuListMedium5"
    ),
    menuItem21: makeNodeComponent("menuItem21"),
    signedByBaseMenuItemSearchMediumNoneEnabled5: makeNodeComponent(
      "signedByBaseMenuItemSearchMediumNoneEnabled5"
    ),
    searchField5: makeNodeComponent("searchField5"),
    signedByBaseSearchFieldMediumEnabled5: makeNodeComponent(
      "signedByBaseSearchFieldMediumEnabled5"
    ),
    inputElementLabel5: makeNodeComponent("inputElementLabel5"),
    signedByBaseInputElementLabelMedium5: makeNodeComponent(
      "signedByBaseInputElementLabelMedium5"
    ),
    typography57: makeNodeComponent("typography57"),
    signedByBaseTypographyLabelMedium27: makeNodeComponent(
      "signedByBaseTypographyLabelMedium27"
    ),
    text116: makeNodeComponent("text116"),
    spacer104: makeNodeComponent("spacer104"),
    characterCountFrame5: makeNodeComponent("characterCountFrame5"),
    heart42: makeNodeComponent("heart42"),
    typography58: makeNodeComponent("typography58"),
    signedByBaseTypographyLabelMedium28: makeNodeComponent(
      "signedByBaseTypographyLabelMedium28"
    ),
    text117: makeNodeComponent("text117"),
    spacer105: makeNodeComponent("spacer105"),
    inputElementTextField10: makeNodeComponent("inputElementTextField10"),
    signedByBaseInputElementTextFieldMediumEnabled5: makeNodeComponent(
      "signedByBaseInputElementTextFieldMediumEnabled5"
    ),
    leadingArtworkContainer20: makeNodeComponent("leadingArtworkContainer20"),
    search5: makeNodeComponent("search5"),
    leadingLabelContainer20: makeNodeComponent("leadingLabelContainer20"),
    leadingLabel20: makeNodeComponent("leadingLabel20"),
    signedByBaseTypographyLabelMedium29: makeNodeComponent(
      "signedByBaseTypographyLabelMedium29"
    ),
    text118: makeNodeComponent("text118"),
    spacer106: makeNodeComponent("spacer106"),
    inputElementContentText20: makeNodeComponent("inputElementContentText20"),
    signedByBaseInputElementContentTextMediumOff10: makeNodeComponent(
      "signedByBaseInputElementContentTextMediumOff10"
    ),
    text119: makeNodeComponent("text119"),
    trailingLabelEnhancer20: makeNodeComponent("trailingLabelEnhancer20"),
    trailingLabel20: makeNodeComponent("trailingLabel20"),
    signedByBaseTypographyLabelMedium30: makeNodeComponent(
      "signedByBaseTypographyLabelMedium30"
    ),
    text120: makeNodeComponent("text120"),
    spacer107: makeNodeComponent("spacer107"),
    trailingArtworkContainer20: makeNodeComponent("trailingArtworkContainer20"),
    trailingArtwork20: makeNodeComponent("trailingArtwork20"),
    inputElementHint10: makeNodeComponent("inputElementHint10"),
    heart43: makeNodeComponent("heart43"),
    hint10: makeNodeComponent("hint10"),
    signedByBaseTypographyParagraphSmall10: makeNodeComponent(
      "signedByBaseTypographyParagraphSmall10"
    ),
    text121: makeNodeComponent("text121"),
    spacer108: makeNodeComponent("spacer108"),
    menuItem22: makeNodeComponent("menuItem22"),
    signedByBaseMenuItemOptionMediumStandardEnabled17: makeNodeComponent(
      "signedByBaseMenuItemOptionMediumStandardEnabled17"
    ),
    menuItemControlMediumCheckboxUnchecked17: makeNodeComponent(
      "menuItemControlMediumCheckboxUnchecked17"
    ),
    signedByBaseMenuItemControlMediumCheckboxUnchecked17: makeNodeComponent(
      "signedByBaseMenuItemControlMediumCheckboxUnchecked17"
    ),
    icon17: makeNodeComponent("icon17"),
    leadingEnhancer17: makeNodeComponent("leadingEnhancer17"),
    heart44: makeNodeComponent("heart44"),
    textFrame17: makeNodeComponent("textFrame17"),
    leadingText17: makeNodeComponent("leadingText17"),
    typography59: makeNodeComponent("typography59"),
    signedByBaseTypographyParagraphMedium49: makeNodeComponent(
      "signedByBaseTypographyParagraphMedium49"
    ),
    text122: makeNodeComponent("text122"),
    spacer109: makeNodeComponent("spacer109"),
    typography60: makeNodeComponent("typography60"),
    signedByBaseTypographyParagraphMedium50: makeNodeComponent(
      "signedByBaseTypographyParagraphMedium50"
    ),
    text123: makeNodeComponent("text123"),
    spacer110: makeNodeComponent("spacer110"),
    typography61: makeNodeComponent("typography61"),
    signedByBaseTypographyParagraphMedium51: makeNodeComponent(
      "signedByBaseTypographyParagraphMedium51"
    ),
    spacer111: makeNodeComponent("spacer111"),
    trailingEnhancer17: makeNodeComponent("trailingEnhancer17"),
    heart45: makeNodeComponent("heart45"),
    menuItem23: makeNodeComponent("menuItem23"),
    signedByBaseMenuItemOptionMediumStandardEnabled18: makeNodeComponent(
      "signedByBaseMenuItemOptionMediumStandardEnabled18"
    ),
    menuItemControlMediumCheckboxUnchecked18: makeNodeComponent(
      "menuItemControlMediumCheckboxUnchecked18"
    ),
    signedByBaseMenuItemControlMediumCheckboxUnchecked18: makeNodeComponent(
      "signedByBaseMenuItemControlMediumCheckboxUnchecked18"
    ),
    icon18: makeNodeComponent("icon18"),
    leadingEnhancer18: makeNodeComponent("leadingEnhancer18"),
    heart46: makeNodeComponent("heart46"),
    textFrame18: makeNodeComponent("textFrame18"),
    leadingText18: makeNodeComponent("leadingText18"),
    typography62: makeNodeComponent("typography62"),
    signedByBaseTypographyParagraphMedium52: makeNodeComponent(
      "signedByBaseTypographyParagraphMedium52"
    ),
    text124: makeNodeComponent("text124"),
    spacer112: makeNodeComponent("spacer112"),
    typography63: makeNodeComponent("typography63"),
    signedByBaseTypographyParagraphMedium53: makeNodeComponent(
      "signedByBaseTypographyParagraphMedium53"
    ),
    text125: makeNodeComponent("text125"),
    spacer113: makeNodeComponent("spacer113"),
    typography64: makeNodeComponent("typography64"),
    signedByBaseTypographyParagraphMedium54: makeNodeComponent(
      "signedByBaseTypographyParagraphMedium54"
    ),
    spacer114: makeNodeComponent("spacer114"),
    trailingEnhancer18: makeNodeComponent("trailingEnhancer18"),
    checkmarkSmall5: makeNodeComponent("checkmarkSmall5"),
    menuItem24: makeNodeComponent("menuItem24"),
    signedByBaseMenuItemOptionMediumStandardEnabled19: makeNodeComponent(
      "signedByBaseMenuItemOptionMediumStandardEnabled19"
    ),
    menuItemControlMediumCheckboxUnchecked19: makeNodeComponent(
      "menuItemControlMediumCheckboxUnchecked19"
    ),
    signedByBaseMenuItemControlMediumCheckboxUnchecked19: makeNodeComponent(
      "signedByBaseMenuItemControlMediumCheckboxUnchecked19"
    ),
    icon19: makeNodeComponent("icon19"),
    leadingEnhancer19: makeNodeComponent("leadingEnhancer19"),
    heart47: makeNodeComponent("heart47"),
    textFrame19: makeNodeComponent("textFrame19"),
    leadingText19: makeNodeComponent("leadingText19"),
    typography65: makeNodeComponent("typography65"),
    signedByBaseTypographyParagraphMedium55: makeNodeComponent(
      "signedByBaseTypographyParagraphMedium55"
    ),
    text126: makeNodeComponent("text126"),
    spacer115: makeNodeComponent("spacer115"),
    typography66: makeNodeComponent("typography66"),
    signedByBaseTypographyParagraphMedium56: makeNodeComponent(
      "signedByBaseTypographyParagraphMedium56"
    ),
    text127: makeNodeComponent("text127"),
    spacer116: makeNodeComponent("spacer116"),
    typography67: makeNodeComponent("typography67"),
    signedByBaseTypographyParagraphMedium57: makeNodeComponent(
      "signedByBaseTypographyParagraphMedium57"
    ),
    spacer117: makeNodeComponent("spacer117"),
    trailingEnhancer19: makeNodeComponent("trailingEnhancer19"),
    heart48: makeNodeComponent("heart48"),
    menuItem25: makeNodeComponent("menuItem25"),
    signedByBaseMenuItemOptionMediumStandardEnabled20: makeNodeComponent(
      "signedByBaseMenuItemOptionMediumStandardEnabled20"
    ),
    menuItemControlMediumCheckboxUnchecked20: makeNodeComponent(
      "menuItemControlMediumCheckboxUnchecked20"
    ),
    signedByBaseMenuItemControlMediumCheckboxUnchecked20: makeNodeComponent(
      "signedByBaseMenuItemControlMediumCheckboxUnchecked20"
    ),
    icon20: makeNodeComponent("icon20"),
    leadingEnhancer20: makeNodeComponent("leadingEnhancer20"),
    heart49: makeNodeComponent("heart49"),
    textFrame20: makeNodeComponent("textFrame20"),
    leadingText20: makeNodeComponent("leadingText20"),
    typography68: makeNodeComponent("typography68"),
    signedByBaseTypographyParagraphMedium58: makeNodeComponent(
      "signedByBaseTypographyParagraphMedium58"
    ),
    text128: makeNodeComponent("text128"),
    spacer118: makeNodeComponent("spacer118"),
    typography69: makeNodeComponent("typography69"),
    signedByBaseTypographyParagraphMedium59: makeNodeComponent(
      "signedByBaseTypographyParagraphMedium59"
    ),
    text129: makeNodeComponent("text129"),
    spacer119: makeNodeComponent("spacer119"),
    typography70: makeNodeComponent("typography70"),
    signedByBaseTypographyParagraphMedium60: makeNodeComponent(
      "signedByBaseTypographyParagraphMedium60"
    ),
    spacer120: makeNodeComponent("spacer120"),
    trailingEnhancer20: makeNodeComponent("trailingEnhancer20"),
    heart50: makeNodeComponent("heart50"),
    scrollBar5: makeNodeComponent("scrollBar5"),
    model5: makeNodeComponent("model5"),
    buttons5: makeNodeComponent("buttons5"),
    button17: makeNodeComponent("button17"),
    frame1073713928: makeNodeComponent("frame1073713928"),
    frame1073713934: makeNodeComponent("frame1073713934"),
    button18: makeNodeComponent("button18"),
    button19: makeNodeComponent("button19"),
    button20: makeNodeComponent("button20"),
    duplicateDispo3: makeNodeComponent("duplicateDispo3"),
    frame1437254030: makeNodeComponent("frame1437254030"),
    name12: makeNodeComponent("name12"),
    frame1437254031: makeNodeComponent("frame1437254031"),
    duplicateDispo2: makeNodeComponent("duplicateDispo2"),
    content6: makeNodeComponent("content6"),
    titre6: makeNodeComponent("titre6"),
    texinput26: makeNodeComponent("texinput26"),
    date6: makeNodeComponent("date6"),
    label11: makeNodeComponent("label11"),
    timePicker12: makeNodeComponent("timePicker12"),
    type6: makeNodeComponent("type6"),
    budget6: makeNodeComponent("budget6"),
    comments6: makeNodeComponent("comments6"),
    input17: makeNodeComponent("input17"),
    name13: makeNodeComponent("name13"),
    datePickerWeb6: makeNodeComponent("datePickerWeb6"),
    inputSelect6: makeNodeComponent("inputSelect6"),
    signedByBaseFieldGroupSmall6: makeNodeComponent(
      "signedByBaseFieldGroupSmall6"
    ),
    endDateCalendar6: makeNodeComponent("endDateCalendar6"),
    inputElementTextField11: makeNodeComponent("inputElementTextField11"),
    signedByBaseInputElementTextFieldSmallEnabled6: makeNodeComponent(
      "signedByBaseInputElementTextFieldSmallEnabled6"
    ),
    leadingArtworkContainer21: makeNodeComponent("leadingArtworkContainer21"),
    leadingArtwork11: makeNodeComponent("leadingArtwork11"),
    leadingLabelContainer21: makeNodeComponent("leadingLabelContainer21"),
    leadingLabel21: makeNodeComponent("leadingLabel21"),
    signedByBaseTypographyLabelSmall11: makeNodeComponent(
      "signedByBaseTypographyLabelSmall11"
    ),
    text130: makeNodeComponent("text130"),
    spacer121: makeNodeComponent("spacer121"),
    inputElementContentText21: makeNodeComponent("inputElementContentText21"),
    signedByBaseInputElementContentTextSmallOff6: makeNodeComponent(
      "signedByBaseInputElementContentTextSmallOff6"
    ),
    text131: makeNodeComponent("text131"),
    trailingLabelEnhancer21: makeNodeComponent("trailingLabelEnhancer21"),
    trailingLabel21: makeNodeComponent("trailingLabel21"),
    signedByBaseTypographyLabelSmall12: makeNodeComponent(
      "signedByBaseTypographyLabelSmall12"
    ),
    text132: makeNodeComponent("text132"),
    spacer122: makeNodeComponent("spacer122"),
    trailingArtworkContainer21: makeNodeComponent("trailingArtworkContainer21"),
    trailingArtwork21: makeNodeComponent("trailingArtwork21"),
    calendar6: makeNodeComponent("calendar6"),
    signedByBaseInputElementSelectXSmallWebSingleDefaultEnabled6:
      makeNodeComponent(
        "signedByBaseInputElementSelectXSmallWebSingleDefaultEnabled6"
      ),
    leadingArtworkContainer22: makeNodeComponent("leadingArtworkContainer22"),
    text133: makeNodeComponent("text133"),
    leadingLabelContainer22: makeNodeComponent("leadingLabelContainer22"),
    leadingLabel22: makeNodeComponent("leadingLabel22"),
    signedByBaseTypographyLabelXSmall11: makeNodeComponent(
      "signedByBaseTypographyLabelXSmall11"
    ),
    text134: makeNodeComponent("text134"),
    spacer123: makeNodeComponent("spacer123"),
    inputElementContentText22: makeNodeComponent("inputElementContentText22"),
    signedByBaseInputElementContentTextXSmallWebOff6: makeNodeComponent(
      "signedByBaseInputElementContentTextXSmallWebOff6"
    ),
    text135: makeNodeComponent("text135"),
    trailingLabelEnhancer22: makeNodeComponent("trailingLabelEnhancer22"),
    trailingLabel22: makeNodeComponent("trailingLabel22"),
    signedByBaseTypographyLabelXSmall12: makeNodeComponent(
      "signedByBaseTypographyLabelXSmall12"
    ),
    text136: makeNodeComponent("text136"),
    spacer124: makeNodeComponent("spacer124"),
    trailingArtworkContainer22: makeNodeComponent("trailingArtworkContainer22"),
    trailingArtwork22: makeNodeComponent("trailingArtwork22"),
    selectIndicatorContainer11: makeNodeComponent("selectIndicatorContainer11"),
    chevronIcon11: makeNodeComponent("chevronIcon11"),
    inputElementHint11: makeNodeComponent("inputElementHint11"),
    heart51: makeNodeComponent("heart51"),
    hint11: makeNodeComponent("hint11"),
    signedByBaseTypographyParagraphSmall11: makeNodeComponent(
      "signedByBaseTypographyParagraphSmall11"
    ),
    text137: makeNodeComponent("text137"),
    spacer125: makeNodeComponent("spacer125"),
    inputElementSelect6: makeNodeComponent("inputElementSelect6"),
    signedByBaseInputElementSelectMediumSingleDefaultActive6: makeNodeComponent(
      "signedByBaseInputElementSelectMediumSingleDefaultActive6"
    ),
    selectFrame6: makeNodeComponent("selectFrame6"),
    leadingArtworkContainer23: makeNodeComponent("leadingArtworkContainer23"),
    leadingArtwork12: makeNodeComponent("leadingArtwork12"),
    leadingLabelContainer23: makeNodeComponent("leadingLabelContainer23"),
    leadingLabel23: makeNodeComponent("leadingLabel23"),
    signedByBaseTypographyLabelMedium31: makeNodeComponent(
      "signedByBaseTypographyLabelMedium31"
    ),
    text138: makeNodeComponent("text138"),
    spacer126: makeNodeComponent("spacer126"),
    inputElementContentText23: makeNodeComponent("inputElementContentText23"),
    signedByBaseInputElementContentTextMediumOff11: makeNodeComponent(
      "signedByBaseInputElementContentTextMediumOff11"
    ),
    text139: makeNodeComponent("text139"),
    trailingLabelEnhancer23: makeNodeComponent("trailingLabelEnhancer23"),
    trailingLabel23: makeNodeComponent("trailingLabel23"),
    signedByBaseTypographyLabelMedium32: makeNodeComponent(
      "signedByBaseTypographyLabelMedium32"
    ),
    text140: makeNodeComponent("text140"),
    spacer127: makeNodeComponent("spacer127"),
    trailingArtworkContainer23: makeNodeComponent("trailingArtworkContainer23"),
    trailingArtwork23: makeNodeComponent("trailingArtwork23"),
    selectIndicatorContainer12: makeNodeComponent("selectIndicatorContainer12"),
    chevronIcon12: makeNodeComponent("chevronIcon12"),
    menu6: makeNodeComponent("menu6"),
    signedByBaseMenuListMedium6: makeNodeComponent(
      "signedByBaseMenuListMedium6"
    ),
    menuItem26: makeNodeComponent("menuItem26"),
    signedByBaseMenuItemSearchMediumNoneEnabled6: makeNodeComponent(
      "signedByBaseMenuItemSearchMediumNoneEnabled6"
    ),
    searchField6: makeNodeComponent("searchField6"),
    signedByBaseSearchFieldMediumEnabled6: makeNodeComponent(
      "signedByBaseSearchFieldMediumEnabled6"
    ),
    inputElementLabel6: makeNodeComponent("inputElementLabel6"),
    signedByBaseInputElementLabelMedium6: makeNodeComponent(
      "signedByBaseInputElementLabelMedium6"
    ),
    typography71: makeNodeComponent("typography71"),
    signedByBaseTypographyLabelMedium33: makeNodeComponent(
      "signedByBaseTypographyLabelMedium33"
    ),
    text141: makeNodeComponent("text141"),
    spacer128: makeNodeComponent("spacer128"),
    characterCountFrame6: makeNodeComponent("characterCountFrame6"),
    heart52: makeNodeComponent("heart52"),
    typography72: makeNodeComponent("typography72"),
    signedByBaseTypographyLabelMedium34: makeNodeComponent(
      "signedByBaseTypographyLabelMedium34"
    ),
    text142: makeNodeComponent("text142"),
    spacer129: makeNodeComponent("spacer129"),
    inputElementTextField12: makeNodeComponent("inputElementTextField12"),
    signedByBaseInputElementTextFieldMediumEnabled6: makeNodeComponent(
      "signedByBaseInputElementTextFieldMediumEnabled6"
    ),
    leadingArtworkContainer24: makeNodeComponent("leadingArtworkContainer24"),
    search6: makeNodeComponent("search6"),
    leadingLabelContainer24: makeNodeComponent("leadingLabelContainer24"),
    leadingLabel24: makeNodeComponent("leadingLabel24"),
    signedByBaseTypographyLabelMedium35: makeNodeComponent(
      "signedByBaseTypographyLabelMedium35"
    ),
    text143: makeNodeComponent("text143"),
    spacer130: makeNodeComponent("spacer130"),
    inputElementContentText24: makeNodeComponent("inputElementContentText24"),
    signedByBaseInputElementContentTextMediumOff12: makeNodeComponent(
      "signedByBaseInputElementContentTextMediumOff12"
    ),
    text144: makeNodeComponent("text144"),
    trailingLabelEnhancer24: makeNodeComponent("trailingLabelEnhancer24"),
    trailingLabel24: makeNodeComponent("trailingLabel24"),
    signedByBaseTypographyLabelMedium36: makeNodeComponent(
      "signedByBaseTypographyLabelMedium36"
    ),
    text145: makeNodeComponent("text145"),
    spacer131: makeNodeComponent("spacer131"),
    trailingArtworkContainer24: makeNodeComponent("trailingArtworkContainer24"),
    trailingArtwork24: makeNodeComponent("trailingArtwork24"),
    inputElementHint12: makeNodeComponent("inputElementHint12"),
    heart53: makeNodeComponent("heart53"),
    hint12: makeNodeComponent("hint12"),
    signedByBaseTypographyParagraphSmall12: makeNodeComponent(
      "signedByBaseTypographyParagraphSmall12"
    ),
    text146: makeNodeComponent("text146"),
    spacer132: makeNodeComponent("spacer132"),
    menuItem27: makeNodeComponent("menuItem27"),
    signedByBaseMenuItemOptionMediumStandardEnabled21: makeNodeComponent(
      "signedByBaseMenuItemOptionMediumStandardEnabled21"
    ),
    menuItemControlMediumCheckboxUnchecked21: makeNodeComponent(
      "menuItemControlMediumCheckboxUnchecked21"
    ),
    signedByBaseMenuItemControlMediumCheckboxUnchecked21: makeNodeComponent(
      "signedByBaseMenuItemControlMediumCheckboxUnchecked21"
    ),
    icon21: makeNodeComponent("icon21"),
    leadingEnhancer21: makeNodeComponent("leadingEnhancer21"),
    heart54: makeNodeComponent("heart54"),
    textFrame21: makeNodeComponent("textFrame21"),
    leadingText21: makeNodeComponent("leadingText21"),
    typography73: makeNodeComponent("typography73"),
    signedByBaseTypographyParagraphMedium61: makeNodeComponent(
      "signedByBaseTypographyParagraphMedium61"
    ),
    text147: makeNodeComponent("text147"),
    spacer133: makeNodeComponent("spacer133"),
    typography74: makeNodeComponent("typography74"),
    signedByBaseTypographyParagraphMedium62: makeNodeComponent(
      "signedByBaseTypographyParagraphMedium62"
    ),
    text148: makeNodeComponent("text148"),
    spacer134: makeNodeComponent("spacer134"),
    typography75: makeNodeComponent("typography75"),
    signedByBaseTypographyParagraphMedium63: makeNodeComponent(
      "signedByBaseTypographyParagraphMedium63"
    ),
    spacer135: makeNodeComponent("spacer135"),
    trailingEnhancer21: makeNodeComponent("trailingEnhancer21"),
    heart55: makeNodeComponent("heart55"),
    menuItem28: makeNodeComponent("menuItem28"),
    signedByBaseMenuItemOptionMediumStandardEnabled22: makeNodeComponent(
      "signedByBaseMenuItemOptionMediumStandardEnabled22"
    ),
    menuItemControlMediumCheckboxUnchecked22: makeNodeComponent(
      "menuItemControlMediumCheckboxUnchecked22"
    ),
    signedByBaseMenuItemControlMediumCheckboxUnchecked22: makeNodeComponent(
      "signedByBaseMenuItemControlMediumCheckboxUnchecked22"
    ),
    icon22: makeNodeComponent("icon22"),
    leadingEnhancer22: makeNodeComponent("leadingEnhancer22"),
    heart56: makeNodeComponent("heart56"),
    textFrame22: makeNodeComponent("textFrame22"),
    leadingText22: makeNodeComponent("leadingText22"),
    typography76: makeNodeComponent("typography76"),
    signedByBaseTypographyParagraphMedium64: makeNodeComponent(
      "signedByBaseTypographyParagraphMedium64"
    ),
    text149: makeNodeComponent("text149"),
    spacer136: makeNodeComponent("spacer136"),
    typography77: makeNodeComponent("typography77"),
    signedByBaseTypographyParagraphMedium65: makeNodeComponent(
      "signedByBaseTypographyParagraphMedium65"
    ),
    text150: makeNodeComponent("text150"),
    spacer137: makeNodeComponent("spacer137"),
    typography78: makeNodeComponent("typography78"),
    signedByBaseTypographyParagraphMedium66: makeNodeComponent(
      "signedByBaseTypographyParagraphMedium66"
    ),
    spacer138: makeNodeComponent("spacer138"),
    trailingEnhancer22: makeNodeComponent("trailingEnhancer22"),
    checkmarkSmall6: makeNodeComponent("checkmarkSmall6"),
    menuItem29: makeNodeComponent("menuItem29"),
    signedByBaseMenuItemOptionMediumStandardEnabled23: makeNodeComponent(
      "signedByBaseMenuItemOptionMediumStandardEnabled23"
    ),
    menuItemControlMediumCheckboxUnchecked23: makeNodeComponent(
      "menuItemControlMediumCheckboxUnchecked23"
    ),
    signedByBaseMenuItemControlMediumCheckboxUnchecked23: makeNodeComponent(
      "signedByBaseMenuItemControlMediumCheckboxUnchecked23"
    ),
    icon23: makeNodeComponent("icon23"),
    leadingEnhancer23: makeNodeComponent("leadingEnhancer23"),
    heart57: makeNodeComponent("heart57"),
    textFrame23: makeNodeComponent("textFrame23"),
    leadingText23: makeNodeComponent("leadingText23"),
    typography79: makeNodeComponent("typography79"),
    signedByBaseTypographyParagraphMedium67: makeNodeComponent(
      "signedByBaseTypographyParagraphMedium67"
    ),
    text151: makeNodeComponent("text151"),
    spacer139: makeNodeComponent("spacer139"),
    typography80: makeNodeComponent("typography80"),
    signedByBaseTypographyParagraphMedium68: makeNodeComponent(
      "signedByBaseTypographyParagraphMedium68"
    ),
    text152: makeNodeComponent("text152"),
    spacer140: makeNodeComponent("spacer140"),
    typography81: makeNodeComponent("typography81"),
    signedByBaseTypographyParagraphMedium69: makeNodeComponent(
      "signedByBaseTypographyParagraphMedium69"
    ),
    spacer141: makeNodeComponent("spacer141"),
    trailingEnhancer23: makeNodeComponent("trailingEnhancer23"),
    heart58: makeNodeComponent("heart58"),
    menuItem30: makeNodeComponent("menuItem30"),
    signedByBaseMenuItemOptionMediumStandardEnabled24: makeNodeComponent(
      "signedByBaseMenuItemOptionMediumStandardEnabled24"
    ),
    menuItemControlMediumCheckboxUnchecked24: makeNodeComponent(
      "menuItemControlMediumCheckboxUnchecked24"
    ),
    signedByBaseMenuItemControlMediumCheckboxUnchecked24: makeNodeComponent(
      "signedByBaseMenuItemControlMediumCheckboxUnchecked24"
    ),
    icon24: makeNodeComponent("icon24"),
    leadingEnhancer24: makeNodeComponent("leadingEnhancer24"),
    heart59: makeNodeComponent("heart59"),
    textFrame24: makeNodeComponent("textFrame24"),
    leadingText24: makeNodeComponent("leadingText24"),
    typography82: makeNodeComponent("typography82"),
    signedByBaseTypographyParagraphMedium70: makeNodeComponent(
      "signedByBaseTypographyParagraphMedium70"
    ),
    text153: makeNodeComponent("text153"),
    spacer142: makeNodeComponent("spacer142"),
    typography83: makeNodeComponent("typography83"),
    signedByBaseTypographyParagraphMedium71: makeNodeComponent(
      "signedByBaseTypographyParagraphMedium71"
    ),
    text154: makeNodeComponent("text154"),
    spacer143: makeNodeComponent("spacer143"),
    typography84: makeNodeComponent("typography84"),
    signedByBaseTypographyParagraphMedium72: makeNodeComponent(
      "signedByBaseTypographyParagraphMedium72"
    ),
    spacer144: makeNodeComponent("spacer144"),
    trailingEnhancer24: makeNodeComponent("trailingEnhancer24"),
    heart60: makeNodeComponent("heart60"),
    scrollBar6: makeNodeComponent("scrollBar6"),
    model6: makeNodeComponent("model6"),
    buttons6: makeNodeComponent("buttons6"),
    button21: makeNodeComponent("button21"),
    frame1073713929: makeNodeComponent("frame1073713929"),
    frame1073713935: makeNodeComponent("frame1073713935"),
    button22: makeNodeComponent("button22"),
    button23: makeNodeComponent("button23"),
    button24: makeNodeComponent("button24"),
    container: makeNodeComponent("container"),
    leftMenu: makeNodeComponent("leftMenu"),
    main: makeNodeComponent("main"),
    header2: makeNodeComponent("header2"),
    header: makeNodeComponent("header"),
    tabsContainer: makeNodeComponent("tabsContainer"),
    mainContainer: makeNodeComponent("mainContainer"),
    tabButtons: makeNodeComponent("tabButtons"),
    tabButton: makeNodeComponent("tabButton"),
    tabUnderline: makeNodeComponent("tabUnderline"),
    filters: makeNodeComponent("filters"),
    buttonFilter: makeNodeComponent("buttonFilter"),
    buttonAddAction: makeNodeComponent("buttonAddAction"),
    buttonAddStaff: makeNodeComponent("buttonAddStaff"),
    buttonAddDoc: makeNodeComponent("buttonAddDoc"),
    tabContainers: makeNodeComponent("tabContainers"),
    _1: makeNodeComponent("_1"),
    runsheet: makeNodeComponent("runsheet"),
    _2: makeNodeComponent("_2"),
    dispositif: makeNodeComponent("dispositif"),
    _3: makeNodeComponent("_3"),
    uploadFile: makeNodeComponent("uploadFile"),
    frame1437254034: makeNodeComponent("frame1437254034"),
    name16: makeNodeComponent("name16"),
    frame1437254035: makeNodeComponent("frame1437254035"),
    files2: makeNodeComponent("files2"),
    upload5: makeNodeComponent("upload5"),
    file: makeNodeComponent("file"),
    bottomMenu: makeNodeComponent("bottomMenu"),

    // Metadata about props expected for PlasmicModele
    internalVariantProps: PlasmicModele__VariantProps,
    internalArgProps: PlasmicModele__ArgProps,

    // Page metadata
    pageMetadata: {
      title: "Runsheet",
      description: "",
      ogImageSrc: "",
      canonical: ""
    }
  }
);

export default PlasmicModele;
/* prettier-ignore-end */
